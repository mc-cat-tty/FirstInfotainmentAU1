
STM32F469I-DISCO-REV-AU1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000275fc  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000334c  080277bc  080277bc  000377bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 0000066c  0802ab08  0802ab08  0003ab08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0802b174  0802b174  002871f8  2**0
                  CONTENTS
  5 .ARM          00000008  0802b174  0802b174  0003b174  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0802b17c  0802b17c  002871f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0802b17c  0802b17c  0003b17c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0802b194  0802b194  0003b194  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000148  20000000  0802b19c  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000f8d0  20000148  0802b2e4  00040148  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000fa18  0802b2e4  0004fa18  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  002871f8  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 001f6274  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 0004090c  901f6274  901f6274  00246274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000678  90236b80  90236b80  00286b80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00077946  00000000  00000000  00287228  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   00155d4e  00000000  00000000  002feb6e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00020c98  00000000  00000000  004548bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003f28  00000000  00000000  00475558  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0013ee02  00000000  00000000  00479480  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 0000a668  00000000  00000000  005b8288  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    00043ff4  00000000  00000000  005c28f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003e2d4  00000000  00000000  006068e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  00644bb8  2**0
                  CONTENTS, READONLY
 25 .debug_frame  0000afe0  00000000  00000000  00644c88  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000148 	.word	0x20000148
 80001dc:	00000000 	.word	0x00000000
 80001e0:	080277a4 	.word	0x080277a4

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	2000014c 	.word	0x2000014c
 80001fc:	080277a4 	.word	0x080277a4

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_dmul>:
 80002a0:	b570      	push	{r4, r5, r6, lr}
 80002a2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80002a6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80002aa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80002ae:	bf1d      	ittte	ne
 80002b0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80002b4:	ea94 0f0c 	teqne	r4, ip
 80002b8:	ea95 0f0c 	teqne	r5, ip
 80002bc:	f000 f8de 	bleq	800047c <__aeabi_dmul+0x1dc>
 80002c0:	442c      	add	r4, r5
 80002c2:	ea81 0603 	eor.w	r6, r1, r3
 80002c6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80002ca:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80002ce:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80002d2:	bf18      	it	ne
 80002d4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80002d8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80002dc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80002e0:	d038      	beq.n	8000354 <__aeabi_dmul+0xb4>
 80002e2:	fba0 ce02 	umull	ip, lr, r0, r2
 80002e6:	f04f 0500 	mov.w	r5, #0
 80002ea:	fbe1 e502 	umlal	lr, r5, r1, r2
 80002ee:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80002f2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80002f6:	f04f 0600 	mov.w	r6, #0
 80002fa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80002fe:	f09c 0f00 	teq	ip, #0
 8000302:	bf18      	it	ne
 8000304:	f04e 0e01 	orrne.w	lr, lr, #1
 8000308:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800030c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000310:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000314:	d204      	bcs.n	8000320 <__aeabi_dmul+0x80>
 8000316:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800031a:	416d      	adcs	r5, r5
 800031c:	eb46 0606 	adc.w	r6, r6, r6
 8000320:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000324:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000328:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800032c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000330:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000334:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000338:	bf88      	it	hi
 800033a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800033e:	d81e      	bhi.n	800037e <__aeabi_dmul+0xde>
 8000340:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000344:	bf08      	it	eq
 8000346:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800034a:	f150 0000 	adcs.w	r0, r0, #0
 800034e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000352:	bd70      	pop	{r4, r5, r6, pc}
 8000354:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000358:	ea46 0101 	orr.w	r1, r6, r1
 800035c:	ea40 0002 	orr.w	r0, r0, r2
 8000360:	ea81 0103 	eor.w	r1, r1, r3
 8000364:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000368:	bfc2      	ittt	gt
 800036a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800036e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000372:	bd70      	popgt	{r4, r5, r6, pc}
 8000374:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000378:	f04f 0e00 	mov.w	lr, #0
 800037c:	3c01      	subs	r4, #1
 800037e:	f300 80ab 	bgt.w	80004d8 <__aeabi_dmul+0x238>
 8000382:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000386:	bfde      	ittt	le
 8000388:	2000      	movle	r0, #0
 800038a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800038e:	bd70      	pople	{r4, r5, r6, pc}
 8000390:	f1c4 0400 	rsb	r4, r4, #0
 8000394:	3c20      	subs	r4, #32
 8000396:	da35      	bge.n	8000404 <__aeabi_dmul+0x164>
 8000398:	340c      	adds	r4, #12
 800039a:	dc1b      	bgt.n	80003d4 <__aeabi_dmul+0x134>
 800039c:	f104 0414 	add.w	r4, r4, #20
 80003a0:	f1c4 0520 	rsb	r5, r4, #32
 80003a4:	fa00 f305 	lsl.w	r3, r0, r5
 80003a8:	fa20 f004 	lsr.w	r0, r0, r4
 80003ac:	fa01 f205 	lsl.w	r2, r1, r5
 80003b0:	ea40 0002 	orr.w	r0, r0, r2
 80003b4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80003b8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80003bc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003c0:	fa21 f604 	lsr.w	r6, r1, r4
 80003c4:	eb42 0106 	adc.w	r1, r2, r6
 80003c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003cc:	bf08      	it	eq
 80003ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003d2:	bd70      	pop	{r4, r5, r6, pc}
 80003d4:	f1c4 040c 	rsb	r4, r4, #12
 80003d8:	f1c4 0520 	rsb	r5, r4, #32
 80003dc:	fa00 f304 	lsl.w	r3, r0, r4
 80003e0:	fa20 f005 	lsr.w	r0, r0, r5
 80003e4:	fa01 f204 	lsl.w	r2, r1, r4
 80003e8:	ea40 0002 	orr.w	r0, r0, r2
 80003ec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80003f0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003f4:	f141 0100 	adc.w	r1, r1, #0
 80003f8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003fc:	bf08      	it	eq
 80003fe:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f1c4 0520 	rsb	r5, r4, #32
 8000408:	fa00 f205 	lsl.w	r2, r0, r5
 800040c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000410:	fa20 f304 	lsr.w	r3, r0, r4
 8000414:	fa01 f205 	lsl.w	r2, r1, r5
 8000418:	ea43 0302 	orr.w	r3, r3, r2
 800041c:	fa21 f004 	lsr.w	r0, r1, r4
 8000420:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000424:	fa21 f204 	lsr.w	r2, r1, r4
 8000428:	ea20 0002 	bic.w	r0, r0, r2
 800042c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000430:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000434:	bf08      	it	eq
 8000436:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800043a:	bd70      	pop	{r4, r5, r6, pc}
 800043c:	f094 0f00 	teq	r4, #0
 8000440:	d10f      	bne.n	8000462 <__aeabi_dmul+0x1c2>
 8000442:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000446:	0040      	lsls	r0, r0, #1
 8000448:	eb41 0101 	adc.w	r1, r1, r1
 800044c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000450:	bf08      	it	eq
 8000452:	3c01      	subeq	r4, #1
 8000454:	d0f7      	beq.n	8000446 <__aeabi_dmul+0x1a6>
 8000456:	ea41 0106 	orr.w	r1, r1, r6
 800045a:	f095 0f00 	teq	r5, #0
 800045e:	bf18      	it	ne
 8000460:	4770      	bxne	lr
 8000462:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000466:	0052      	lsls	r2, r2, #1
 8000468:	eb43 0303 	adc.w	r3, r3, r3
 800046c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000470:	bf08      	it	eq
 8000472:	3d01      	subeq	r5, #1
 8000474:	d0f7      	beq.n	8000466 <__aeabi_dmul+0x1c6>
 8000476:	ea43 0306 	orr.w	r3, r3, r6
 800047a:	4770      	bx	lr
 800047c:	ea94 0f0c 	teq	r4, ip
 8000480:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000484:	bf18      	it	ne
 8000486:	ea95 0f0c 	teqne	r5, ip
 800048a:	d00c      	beq.n	80004a6 <__aeabi_dmul+0x206>
 800048c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000490:	bf18      	it	ne
 8000492:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000496:	d1d1      	bne.n	800043c <__aeabi_dmul+0x19c>
 8000498:	ea81 0103 	eor.w	r1, r1, r3
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	f04f 0000 	mov.w	r0, #0
 80004a4:	bd70      	pop	{r4, r5, r6, pc}
 80004a6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80004aa:	bf06      	itte	eq
 80004ac:	4610      	moveq	r0, r2
 80004ae:	4619      	moveq	r1, r3
 80004b0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80004b4:	d019      	beq.n	80004ea <__aeabi_dmul+0x24a>
 80004b6:	ea94 0f0c 	teq	r4, ip
 80004ba:	d102      	bne.n	80004c2 <__aeabi_dmul+0x222>
 80004bc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80004c0:	d113      	bne.n	80004ea <__aeabi_dmul+0x24a>
 80004c2:	ea95 0f0c 	teq	r5, ip
 80004c6:	d105      	bne.n	80004d4 <__aeabi_dmul+0x234>
 80004c8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80004cc:	bf1c      	itt	ne
 80004ce:	4610      	movne	r0, r2
 80004d0:	4619      	movne	r1, r3
 80004d2:	d10a      	bne.n	80004ea <__aeabi_dmul+0x24a>
 80004d4:	ea81 0103 	eor.w	r1, r1, r3
 80004d8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004dc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd70      	pop	{r4, r5, r6, pc}
 80004ea:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80004ee:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80004f2:	bd70      	pop	{r4, r5, r6, pc}

080004f4 <__aeabi_drsub>:
 80004f4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80004f8:	e002      	b.n	8000500 <__adddf3>
 80004fa:	bf00      	nop

080004fc <__aeabi_dsub>:
 80004fc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000500 <__adddf3>:
 8000500:	b530      	push	{r4, r5, lr}
 8000502:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000506:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800050a:	ea94 0f05 	teq	r4, r5
 800050e:	bf08      	it	eq
 8000510:	ea90 0f02 	teqeq	r0, r2
 8000514:	bf1f      	itttt	ne
 8000516:	ea54 0c00 	orrsne.w	ip, r4, r0
 800051a:	ea55 0c02 	orrsne.w	ip, r5, r2
 800051e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000522:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000526:	f000 80e2 	beq.w	80006ee <__adddf3+0x1ee>
 800052a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800052e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000532:	bfb8      	it	lt
 8000534:	426d      	neglt	r5, r5
 8000536:	dd0c      	ble.n	8000552 <__adddf3+0x52>
 8000538:	442c      	add	r4, r5
 800053a:	ea80 0202 	eor.w	r2, r0, r2
 800053e:	ea81 0303 	eor.w	r3, r1, r3
 8000542:	ea82 0000 	eor.w	r0, r2, r0
 8000546:	ea83 0101 	eor.w	r1, r3, r1
 800054a:	ea80 0202 	eor.w	r2, r0, r2
 800054e:	ea81 0303 	eor.w	r3, r1, r3
 8000552:	2d36      	cmp	r5, #54	; 0x36
 8000554:	bf88      	it	hi
 8000556:	bd30      	pophi	{r4, r5, pc}
 8000558:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800055c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000560:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000564:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000568:	d002      	beq.n	8000570 <__adddf3+0x70>
 800056a:	4240      	negs	r0, r0
 800056c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000570:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000574:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000578:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800057c:	d002      	beq.n	8000584 <__adddf3+0x84>
 800057e:	4252      	negs	r2, r2
 8000580:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000584:	ea94 0f05 	teq	r4, r5
 8000588:	f000 80a7 	beq.w	80006da <__adddf3+0x1da>
 800058c:	f1a4 0401 	sub.w	r4, r4, #1
 8000590:	f1d5 0e20 	rsbs	lr, r5, #32
 8000594:	db0d      	blt.n	80005b2 <__adddf3+0xb2>
 8000596:	fa02 fc0e 	lsl.w	ip, r2, lr
 800059a:	fa22 f205 	lsr.w	r2, r2, r5
 800059e:	1880      	adds	r0, r0, r2
 80005a0:	f141 0100 	adc.w	r1, r1, #0
 80005a4:	fa03 f20e 	lsl.w	r2, r3, lr
 80005a8:	1880      	adds	r0, r0, r2
 80005aa:	fa43 f305 	asr.w	r3, r3, r5
 80005ae:	4159      	adcs	r1, r3
 80005b0:	e00e      	b.n	80005d0 <__adddf3+0xd0>
 80005b2:	f1a5 0520 	sub.w	r5, r5, #32
 80005b6:	f10e 0e20 	add.w	lr, lr, #32
 80005ba:	2a01      	cmp	r2, #1
 80005bc:	fa03 fc0e 	lsl.w	ip, r3, lr
 80005c0:	bf28      	it	cs
 80005c2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80005c6:	fa43 f305 	asr.w	r3, r3, r5
 80005ca:	18c0      	adds	r0, r0, r3
 80005cc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80005d0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005d4:	d507      	bpl.n	80005e6 <__adddf3+0xe6>
 80005d6:	f04f 0e00 	mov.w	lr, #0
 80005da:	f1dc 0c00 	rsbs	ip, ip, #0
 80005de:	eb7e 0000 	sbcs.w	r0, lr, r0
 80005e2:	eb6e 0101 	sbc.w	r1, lr, r1
 80005e6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80005ea:	d31b      	bcc.n	8000624 <__adddf3+0x124>
 80005ec:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80005f0:	d30c      	bcc.n	800060c <__adddf3+0x10c>
 80005f2:	0849      	lsrs	r1, r1, #1
 80005f4:	ea5f 0030 	movs.w	r0, r0, rrx
 80005f8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80005fc:	f104 0401 	add.w	r4, r4, #1
 8000600:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000604:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000608:	f080 809a 	bcs.w	8000740 <__adddf3+0x240>
 800060c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000610:	bf08      	it	eq
 8000612:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000616:	f150 0000 	adcs.w	r0, r0, #0
 800061a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800061e:	ea41 0105 	orr.w	r1, r1, r5
 8000622:	bd30      	pop	{r4, r5, pc}
 8000624:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000628:	4140      	adcs	r0, r0
 800062a:	eb41 0101 	adc.w	r1, r1, r1
 800062e:	3c01      	subs	r4, #1
 8000630:	bf28      	it	cs
 8000632:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000636:	d2e9      	bcs.n	800060c <__adddf3+0x10c>
 8000638:	f091 0f00 	teq	r1, #0
 800063c:	bf04      	itt	eq
 800063e:	4601      	moveq	r1, r0
 8000640:	2000      	moveq	r0, #0
 8000642:	fab1 f381 	clz	r3, r1
 8000646:	bf08      	it	eq
 8000648:	3320      	addeq	r3, #32
 800064a:	f1a3 030b 	sub.w	r3, r3, #11
 800064e:	f1b3 0220 	subs.w	r2, r3, #32
 8000652:	da0c      	bge.n	800066e <__adddf3+0x16e>
 8000654:	320c      	adds	r2, #12
 8000656:	dd08      	ble.n	800066a <__adddf3+0x16a>
 8000658:	f102 0c14 	add.w	ip, r2, #20
 800065c:	f1c2 020c 	rsb	r2, r2, #12
 8000660:	fa01 f00c 	lsl.w	r0, r1, ip
 8000664:	fa21 f102 	lsr.w	r1, r1, r2
 8000668:	e00c      	b.n	8000684 <__adddf3+0x184>
 800066a:	f102 0214 	add.w	r2, r2, #20
 800066e:	bfd8      	it	le
 8000670:	f1c2 0c20 	rsble	ip, r2, #32
 8000674:	fa01 f102 	lsl.w	r1, r1, r2
 8000678:	fa20 fc0c 	lsr.w	ip, r0, ip
 800067c:	bfdc      	itt	le
 800067e:	ea41 010c 	orrle.w	r1, r1, ip
 8000682:	4090      	lslle	r0, r2
 8000684:	1ae4      	subs	r4, r4, r3
 8000686:	bfa2      	ittt	ge
 8000688:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800068c:	4329      	orrge	r1, r5
 800068e:	bd30      	popge	{r4, r5, pc}
 8000690:	ea6f 0404 	mvn.w	r4, r4
 8000694:	3c1f      	subs	r4, #31
 8000696:	da1c      	bge.n	80006d2 <__adddf3+0x1d2>
 8000698:	340c      	adds	r4, #12
 800069a:	dc0e      	bgt.n	80006ba <__adddf3+0x1ba>
 800069c:	f104 0414 	add.w	r4, r4, #20
 80006a0:	f1c4 0220 	rsb	r2, r4, #32
 80006a4:	fa20 f004 	lsr.w	r0, r0, r4
 80006a8:	fa01 f302 	lsl.w	r3, r1, r2
 80006ac:	ea40 0003 	orr.w	r0, r0, r3
 80006b0:	fa21 f304 	lsr.w	r3, r1, r4
 80006b4:	ea45 0103 	orr.w	r1, r5, r3
 80006b8:	bd30      	pop	{r4, r5, pc}
 80006ba:	f1c4 040c 	rsb	r4, r4, #12
 80006be:	f1c4 0220 	rsb	r2, r4, #32
 80006c2:	fa20 f002 	lsr.w	r0, r0, r2
 80006c6:	fa01 f304 	lsl.w	r3, r1, r4
 80006ca:	ea40 0003 	orr.w	r0, r0, r3
 80006ce:	4629      	mov	r1, r5
 80006d0:	bd30      	pop	{r4, r5, pc}
 80006d2:	fa21 f004 	lsr.w	r0, r1, r4
 80006d6:	4629      	mov	r1, r5
 80006d8:	bd30      	pop	{r4, r5, pc}
 80006da:	f094 0f00 	teq	r4, #0
 80006de:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80006e2:	bf06      	itte	eq
 80006e4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80006e8:	3401      	addeq	r4, #1
 80006ea:	3d01      	subne	r5, #1
 80006ec:	e74e      	b.n	800058c <__adddf3+0x8c>
 80006ee:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80006f2:	bf18      	it	ne
 80006f4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80006f8:	d029      	beq.n	800074e <__adddf3+0x24e>
 80006fa:	ea94 0f05 	teq	r4, r5
 80006fe:	bf08      	it	eq
 8000700:	ea90 0f02 	teqeq	r0, r2
 8000704:	d005      	beq.n	8000712 <__adddf3+0x212>
 8000706:	ea54 0c00 	orrs.w	ip, r4, r0
 800070a:	bf04      	itt	eq
 800070c:	4619      	moveq	r1, r3
 800070e:	4610      	moveq	r0, r2
 8000710:	bd30      	pop	{r4, r5, pc}
 8000712:	ea91 0f03 	teq	r1, r3
 8000716:	bf1e      	ittt	ne
 8000718:	2100      	movne	r1, #0
 800071a:	2000      	movne	r0, #0
 800071c:	bd30      	popne	{r4, r5, pc}
 800071e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000722:	d105      	bne.n	8000730 <__adddf3+0x230>
 8000724:	0040      	lsls	r0, r0, #1
 8000726:	4149      	adcs	r1, r1
 8000728:	bf28      	it	cs
 800072a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800072e:	bd30      	pop	{r4, r5, pc}
 8000730:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000734:	bf3c      	itt	cc
 8000736:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800073a:	bd30      	popcc	{r4, r5, pc}
 800073c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000740:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000744:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000748:	f04f 0000 	mov.w	r0, #0
 800074c:	bd30      	pop	{r4, r5, pc}
 800074e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000752:	bf1a      	itte	ne
 8000754:	4619      	movne	r1, r3
 8000756:	4610      	movne	r0, r2
 8000758:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800075c:	bf1c      	itt	ne
 800075e:	460b      	movne	r3, r1
 8000760:	4602      	movne	r2, r0
 8000762:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000766:	bf06      	itte	eq
 8000768:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800076c:	ea91 0f03 	teqeq	r1, r3
 8000770:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000774:	bd30      	pop	{r4, r5, pc}
 8000776:	bf00      	nop

08000778 <__aeabi_ui2d>:
 8000778:	f090 0f00 	teq	r0, #0
 800077c:	bf04      	itt	eq
 800077e:	2100      	moveq	r1, #0
 8000780:	4770      	bxeq	lr
 8000782:	b530      	push	{r4, r5, lr}
 8000784:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000788:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800078c:	f04f 0500 	mov.w	r5, #0
 8000790:	f04f 0100 	mov.w	r1, #0
 8000794:	e750      	b.n	8000638 <__adddf3+0x138>
 8000796:	bf00      	nop

08000798 <__aeabi_i2d>:
 8000798:	f090 0f00 	teq	r0, #0
 800079c:	bf04      	itt	eq
 800079e:	2100      	moveq	r1, #0
 80007a0:	4770      	bxeq	lr
 80007a2:	b530      	push	{r4, r5, lr}
 80007a4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80007a8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80007ac:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80007b0:	bf48      	it	mi
 80007b2:	4240      	negmi	r0, r0
 80007b4:	f04f 0100 	mov.w	r1, #0
 80007b8:	e73e      	b.n	8000638 <__adddf3+0x138>
 80007ba:	bf00      	nop

080007bc <__aeabi_f2d>:
 80007bc:	0042      	lsls	r2, r0, #1
 80007be:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80007c2:	ea4f 0131 	mov.w	r1, r1, rrx
 80007c6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80007ca:	bf1f      	itttt	ne
 80007cc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80007d0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80007d4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80007d8:	4770      	bxne	lr
 80007da:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80007de:	bf08      	it	eq
 80007e0:	4770      	bxeq	lr
 80007e2:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80007e6:	bf04      	itt	eq
 80007e8:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80007ec:	4770      	bxeq	lr
 80007ee:	b530      	push	{r4, r5, lr}
 80007f0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80007f4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80007fc:	e71c      	b.n	8000638 <__adddf3+0x138>
 80007fe:	bf00      	nop

08000800 <__aeabi_ul2d>:
 8000800:	ea50 0201 	orrs.w	r2, r0, r1
 8000804:	bf08      	it	eq
 8000806:	4770      	bxeq	lr
 8000808:	b530      	push	{r4, r5, lr}
 800080a:	f04f 0500 	mov.w	r5, #0
 800080e:	e00a      	b.n	8000826 <__aeabi_l2d+0x16>

08000810 <__aeabi_l2d>:
 8000810:	ea50 0201 	orrs.w	r2, r0, r1
 8000814:	bf08      	it	eq
 8000816:	4770      	bxeq	lr
 8000818:	b530      	push	{r4, r5, lr}
 800081a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800081e:	d502      	bpl.n	8000826 <__aeabi_l2d+0x16>
 8000820:	4240      	negs	r0, r0
 8000822:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000826:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800082a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800082e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000832:	f43f aed8 	beq.w	80005e6 <__adddf3+0xe6>
 8000836:	f04f 0203 	mov.w	r2, #3
 800083a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800083e:	bf18      	it	ne
 8000840:	3203      	addne	r2, #3
 8000842:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000846:	bf18      	it	ne
 8000848:	3203      	addne	r2, #3
 800084a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800084e:	f1c2 0320 	rsb	r3, r2, #32
 8000852:	fa00 fc03 	lsl.w	ip, r0, r3
 8000856:	fa20 f002 	lsr.w	r0, r0, r2
 800085a:	fa01 fe03 	lsl.w	lr, r1, r3
 800085e:	ea40 000e 	orr.w	r0, r0, lr
 8000862:	fa21 f102 	lsr.w	r1, r1, r2
 8000866:	4414      	add	r4, r2
 8000868:	e6bd      	b.n	80005e6 <__adddf3+0xe6>
 800086a:	bf00      	nop

0800086c <__gedf2>:
 800086c:	f04f 3cff 	mov.w	ip, #4294967295
 8000870:	e006      	b.n	8000880 <__cmpdf2+0x4>
 8000872:	bf00      	nop

08000874 <__ledf2>:
 8000874:	f04f 0c01 	mov.w	ip, #1
 8000878:	e002      	b.n	8000880 <__cmpdf2+0x4>
 800087a:	bf00      	nop

0800087c <__cmpdf2>:
 800087c:	f04f 0c01 	mov.w	ip, #1
 8000880:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000884:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000888:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800088c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000890:	bf18      	it	ne
 8000892:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000896:	d01b      	beq.n	80008d0 <__cmpdf2+0x54>
 8000898:	b001      	add	sp, #4
 800089a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800089e:	bf0c      	ite	eq
 80008a0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80008a4:	ea91 0f03 	teqne	r1, r3
 80008a8:	bf02      	ittt	eq
 80008aa:	ea90 0f02 	teqeq	r0, r2
 80008ae:	2000      	moveq	r0, #0
 80008b0:	4770      	bxeq	lr
 80008b2:	f110 0f00 	cmn.w	r0, #0
 80008b6:	ea91 0f03 	teq	r1, r3
 80008ba:	bf58      	it	pl
 80008bc:	4299      	cmppl	r1, r3
 80008be:	bf08      	it	eq
 80008c0:	4290      	cmpeq	r0, r2
 80008c2:	bf2c      	ite	cs
 80008c4:	17d8      	asrcs	r0, r3, #31
 80008c6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80008ca:	f040 0001 	orr.w	r0, r0, #1
 80008ce:	4770      	bx	lr
 80008d0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80008d4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80008d8:	d102      	bne.n	80008e0 <__cmpdf2+0x64>
 80008da:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80008de:	d107      	bne.n	80008f0 <__cmpdf2+0x74>
 80008e0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80008e4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80008e8:	d1d6      	bne.n	8000898 <__cmpdf2+0x1c>
 80008ea:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80008ee:	d0d3      	beq.n	8000898 <__cmpdf2+0x1c>
 80008f0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80008f4:	4770      	bx	lr
 80008f6:	bf00      	nop

080008f8 <__aeabi_cdrcmple>:
 80008f8:	4684      	mov	ip, r0
 80008fa:	4610      	mov	r0, r2
 80008fc:	4662      	mov	r2, ip
 80008fe:	468c      	mov	ip, r1
 8000900:	4619      	mov	r1, r3
 8000902:	4663      	mov	r3, ip
 8000904:	e000      	b.n	8000908 <__aeabi_cdcmpeq>
 8000906:	bf00      	nop

08000908 <__aeabi_cdcmpeq>:
 8000908:	b501      	push	{r0, lr}
 800090a:	f7ff ffb7 	bl	800087c <__cmpdf2>
 800090e:	2800      	cmp	r0, #0
 8000910:	bf48      	it	mi
 8000912:	f110 0f00 	cmnmi.w	r0, #0
 8000916:	bd01      	pop	{r0, pc}

08000918 <__aeabi_dcmpeq>:
 8000918:	f84d ed08 	str.w	lr, [sp, #-8]!
 800091c:	f7ff fff4 	bl	8000908 <__aeabi_cdcmpeq>
 8000920:	bf0c      	ite	eq
 8000922:	2001      	moveq	r0, #1
 8000924:	2000      	movne	r0, #0
 8000926:	f85d fb08 	ldr.w	pc, [sp], #8
 800092a:	bf00      	nop

0800092c <__aeabi_dcmplt>:
 800092c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000930:	f7ff ffea 	bl	8000908 <__aeabi_cdcmpeq>
 8000934:	bf34      	ite	cc
 8000936:	2001      	movcc	r0, #1
 8000938:	2000      	movcs	r0, #0
 800093a:	f85d fb08 	ldr.w	pc, [sp], #8
 800093e:	bf00      	nop

08000940 <__aeabi_dcmple>:
 8000940:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000944:	f7ff ffe0 	bl	8000908 <__aeabi_cdcmpeq>
 8000948:	bf94      	ite	ls
 800094a:	2001      	movls	r0, #1
 800094c:	2000      	movhi	r0, #0
 800094e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000952:	bf00      	nop

08000954 <__aeabi_dcmpge>:
 8000954:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000958:	f7ff ffce 	bl	80008f8 <__aeabi_cdrcmple>
 800095c:	bf94      	ite	ls
 800095e:	2001      	movls	r0, #1
 8000960:	2000      	movhi	r0, #0
 8000962:	f85d fb08 	ldr.w	pc, [sp], #8
 8000966:	bf00      	nop

08000968 <__aeabi_dcmpgt>:
 8000968:	f84d ed08 	str.w	lr, [sp, #-8]!
 800096c:	f7ff ffc4 	bl	80008f8 <__aeabi_cdrcmple>
 8000970:	bf34      	ite	cc
 8000972:	2001      	movcc	r0, #1
 8000974:	2000      	movcs	r0, #0
 8000976:	f85d fb08 	ldr.w	pc, [sp], #8
 800097a:	bf00      	nop

0800097c <__aeabi_d2iz>:
 800097c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000980:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000984:	d215      	bcs.n	80009b2 <__aeabi_d2iz+0x36>
 8000986:	d511      	bpl.n	80009ac <__aeabi_d2iz+0x30>
 8000988:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 800098c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000990:	d912      	bls.n	80009b8 <__aeabi_d2iz+0x3c>
 8000992:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000996:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800099a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800099e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80009a2:	fa23 f002 	lsr.w	r0, r3, r2
 80009a6:	bf18      	it	ne
 80009a8:	4240      	negne	r0, r0
 80009aa:	4770      	bx	lr
 80009ac:	f04f 0000 	mov.w	r0, #0
 80009b0:	4770      	bx	lr
 80009b2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 80009b6:	d105      	bne.n	80009c4 <__aeabi_d2iz+0x48>
 80009b8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 80009bc:	bf08      	it	eq
 80009be:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80009c2:	4770      	bx	lr
 80009c4:	f04f 0000 	mov.w	r0, #0
 80009c8:	4770      	bx	lr
 80009ca:	bf00      	nop

080009cc <__aeabi_uldivmod>:
 80009cc:	b953      	cbnz	r3, 80009e4 <__aeabi_uldivmod+0x18>
 80009ce:	b94a      	cbnz	r2, 80009e4 <__aeabi_uldivmod+0x18>
 80009d0:	2900      	cmp	r1, #0
 80009d2:	bf08      	it	eq
 80009d4:	2800      	cmpeq	r0, #0
 80009d6:	bf1c      	itt	ne
 80009d8:	f04f 31ff 	movne.w	r1, #4294967295
 80009dc:	f04f 30ff 	movne.w	r0, #4294967295
 80009e0:	f000 b974 	b.w	8000ccc <__aeabi_idiv0>
 80009e4:	f1ad 0c08 	sub.w	ip, sp, #8
 80009e8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009ec:	f000 f806 	bl	80009fc <__udivmoddi4>
 80009f0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009f8:	b004      	add	sp, #16
 80009fa:	4770      	bx	lr

080009fc <__udivmoddi4>:
 80009fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000a00:	9d08      	ldr	r5, [sp, #32]
 8000a02:	4604      	mov	r4, r0
 8000a04:	468e      	mov	lr, r1
 8000a06:	2b00      	cmp	r3, #0
 8000a08:	d14d      	bne.n	8000aa6 <__udivmoddi4+0xaa>
 8000a0a:	428a      	cmp	r2, r1
 8000a0c:	4694      	mov	ip, r2
 8000a0e:	d969      	bls.n	8000ae4 <__udivmoddi4+0xe8>
 8000a10:	fab2 f282 	clz	r2, r2
 8000a14:	b152      	cbz	r2, 8000a2c <__udivmoddi4+0x30>
 8000a16:	fa01 f302 	lsl.w	r3, r1, r2
 8000a1a:	f1c2 0120 	rsb	r1, r2, #32
 8000a1e:	fa20 f101 	lsr.w	r1, r0, r1
 8000a22:	fa0c fc02 	lsl.w	ip, ip, r2
 8000a26:	ea41 0e03 	orr.w	lr, r1, r3
 8000a2a:	4094      	lsls	r4, r2
 8000a2c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000a30:	0c21      	lsrs	r1, r4, #16
 8000a32:	fbbe f6f8 	udiv	r6, lr, r8
 8000a36:	fa1f f78c 	uxth.w	r7, ip
 8000a3a:	fb08 e316 	mls	r3, r8, r6, lr
 8000a3e:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000a42:	fb06 f107 	mul.w	r1, r6, r7
 8000a46:	4299      	cmp	r1, r3
 8000a48:	d90a      	bls.n	8000a60 <__udivmoddi4+0x64>
 8000a4a:	eb1c 0303 	adds.w	r3, ip, r3
 8000a4e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000a52:	f080 811f 	bcs.w	8000c94 <__udivmoddi4+0x298>
 8000a56:	4299      	cmp	r1, r3
 8000a58:	f240 811c 	bls.w	8000c94 <__udivmoddi4+0x298>
 8000a5c:	3e02      	subs	r6, #2
 8000a5e:	4463      	add	r3, ip
 8000a60:	1a5b      	subs	r3, r3, r1
 8000a62:	b2a4      	uxth	r4, r4
 8000a64:	fbb3 f0f8 	udiv	r0, r3, r8
 8000a68:	fb08 3310 	mls	r3, r8, r0, r3
 8000a6c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000a70:	fb00 f707 	mul.w	r7, r0, r7
 8000a74:	42a7      	cmp	r7, r4
 8000a76:	d90a      	bls.n	8000a8e <__udivmoddi4+0x92>
 8000a78:	eb1c 0404 	adds.w	r4, ip, r4
 8000a7c:	f100 33ff 	add.w	r3, r0, #4294967295
 8000a80:	f080 810a 	bcs.w	8000c98 <__udivmoddi4+0x29c>
 8000a84:	42a7      	cmp	r7, r4
 8000a86:	f240 8107 	bls.w	8000c98 <__udivmoddi4+0x29c>
 8000a8a:	4464      	add	r4, ip
 8000a8c:	3802      	subs	r0, #2
 8000a8e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000a92:	1be4      	subs	r4, r4, r7
 8000a94:	2600      	movs	r6, #0
 8000a96:	b11d      	cbz	r5, 8000aa0 <__udivmoddi4+0xa4>
 8000a98:	40d4      	lsrs	r4, r2
 8000a9a:	2300      	movs	r3, #0
 8000a9c:	e9c5 4300 	strd	r4, r3, [r5]
 8000aa0:	4631      	mov	r1, r6
 8000aa2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aa6:	428b      	cmp	r3, r1
 8000aa8:	d909      	bls.n	8000abe <__udivmoddi4+0xc2>
 8000aaa:	2d00      	cmp	r5, #0
 8000aac:	f000 80ef 	beq.w	8000c8e <__udivmoddi4+0x292>
 8000ab0:	2600      	movs	r6, #0
 8000ab2:	e9c5 0100 	strd	r0, r1, [r5]
 8000ab6:	4630      	mov	r0, r6
 8000ab8:	4631      	mov	r1, r6
 8000aba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000abe:	fab3 f683 	clz	r6, r3
 8000ac2:	2e00      	cmp	r6, #0
 8000ac4:	d14a      	bne.n	8000b5c <__udivmoddi4+0x160>
 8000ac6:	428b      	cmp	r3, r1
 8000ac8:	d302      	bcc.n	8000ad0 <__udivmoddi4+0xd4>
 8000aca:	4282      	cmp	r2, r0
 8000acc:	f200 80f9 	bhi.w	8000cc2 <__udivmoddi4+0x2c6>
 8000ad0:	1a84      	subs	r4, r0, r2
 8000ad2:	eb61 0303 	sbc.w	r3, r1, r3
 8000ad6:	2001      	movs	r0, #1
 8000ad8:	469e      	mov	lr, r3
 8000ada:	2d00      	cmp	r5, #0
 8000adc:	d0e0      	beq.n	8000aa0 <__udivmoddi4+0xa4>
 8000ade:	e9c5 4e00 	strd	r4, lr, [r5]
 8000ae2:	e7dd      	b.n	8000aa0 <__udivmoddi4+0xa4>
 8000ae4:	b902      	cbnz	r2, 8000ae8 <__udivmoddi4+0xec>
 8000ae6:	deff      	udf	#255	; 0xff
 8000ae8:	fab2 f282 	clz	r2, r2
 8000aec:	2a00      	cmp	r2, #0
 8000aee:	f040 8092 	bne.w	8000c16 <__udivmoddi4+0x21a>
 8000af2:	eba1 010c 	sub.w	r1, r1, ip
 8000af6:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000afa:	fa1f fe8c 	uxth.w	lr, ip
 8000afe:	2601      	movs	r6, #1
 8000b00:	0c20      	lsrs	r0, r4, #16
 8000b02:	fbb1 f3f7 	udiv	r3, r1, r7
 8000b06:	fb07 1113 	mls	r1, r7, r3, r1
 8000b0a:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000b0e:	fb0e f003 	mul.w	r0, lr, r3
 8000b12:	4288      	cmp	r0, r1
 8000b14:	d908      	bls.n	8000b28 <__udivmoddi4+0x12c>
 8000b16:	eb1c 0101 	adds.w	r1, ip, r1
 8000b1a:	f103 38ff 	add.w	r8, r3, #4294967295
 8000b1e:	d202      	bcs.n	8000b26 <__udivmoddi4+0x12a>
 8000b20:	4288      	cmp	r0, r1
 8000b22:	f200 80cb 	bhi.w	8000cbc <__udivmoddi4+0x2c0>
 8000b26:	4643      	mov	r3, r8
 8000b28:	1a09      	subs	r1, r1, r0
 8000b2a:	b2a4      	uxth	r4, r4
 8000b2c:	fbb1 f0f7 	udiv	r0, r1, r7
 8000b30:	fb07 1110 	mls	r1, r7, r0, r1
 8000b34:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000b38:	fb0e fe00 	mul.w	lr, lr, r0
 8000b3c:	45a6      	cmp	lr, r4
 8000b3e:	d908      	bls.n	8000b52 <__udivmoddi4+0x156>
 8000b40:	eb1c 0404 	adds.w	r4, ip, r4
 8000b44:	f100 31ff 	add.w	r1, r0, #4294967295
 8000b48:	d202      	bcs.n	8000b50 <__udivmoddi4+0x154>
 8000b4a:	45a6      	cmp	lr, r4
 8000b4c:	f200 80bb 	bhi.w	8000cc6 <__udivmoddi4+0x2ca>
 8000b50:	4608      	mov	r0, r1
 8000b52:	eba4 040e 	sub.w	r4, r4, lr
 8000b56:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000b5a:	e79c      	b.n	8000a96 <__udivmoddi4+0x9a>
 8000b5c:	f1c6 0720 	rsb	r7, r6, #32
 8000b60:	40b3      	lsls	r3, r6
 8000b62:	fa22 fc07 	lsr.w	ip, r2, r7
 8000b66:	ea4c 0c03 	orr.w	ip, ip, r3
 8000b6a:	fa20 f407 	lsr.w	r4, r0, r7
 8000b6e:	fa01 f306 	lsl.w	r3, r1, r6
 8000b72:	431c      	orrs	r4, r3
 8000b74:	40f9      	lsrs	r1, r7
 8000b76:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000b7a:	fa00 f306 	lsl.w	r3, r0, r6
 8000b7e:	fbb1 f8f9 	udiv	r8, r1, r9
 8000b82:	0c20      	lsrs	r0, r4, #16
 8000b84:	fa1f fe8c 	uxth.w	lr, ip
 8000b88:	fb09 1118 	mls	r1, r9, r8, r1
 8000b8c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000b90:	fb08 f00e 	mul.w	r0, r8, lr
 8000b94:	4288      	cmp	r0, r1
 8000b96:	fa02 f206 	lsl.w	r2, r2, r6
 8000b9a:	d90b      	bls.n	8000bb4 <__udivmoddi4+0x1b8>
 8000b9c:	eb1c 0101 	adds.w	r1, ip, r1
 8000ba0:	f108 3aff 	add.w	sl, r8, #4294967295
 8000ba4:	f080 8088 	bcs.w	8000cb8 <__udivmoddi4+0x2bc>
 8000ba8:	4288      	cmp	r0, r1
 8000baa:	f240 8085 	bls.w	8000cb8 <__udivmoddi4+0x2bc>
 8000bae:	f1a8 0802 	sub.w	r8, r8, #2
 8000bb2:	4461      	add	r1, ip
 8000bb4:	1a09      	subs	r1, r1, r0
 8000bb6:	b2a4      	uxth	r4, r4
 8000bb8:	fbb1 f0f9 	udiv	r0, r1, r9
 8000bbc:	fb09 1110 	mls	r1, r9, r0, r1
 8000bc0:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000bc4:	fb00 fe0e 	mul.w	lr, r0, lr
 8000bc8:	458e      	cmp	lr, r1
 8000bca:	d908      	bls.n	8000bde <__udivmoddi4+0x1e2>
 8000bcc:	eb1c 0101 	adds.w	r1, ip, r1
 8000bd0:	f100 34ff 	add.w	r4, r0, #4294967295
 8000bd4:	d26c      	bcs.n	8000cb0 <__udivmoddi4+0x2b4>
 8000bd6:	458e      	cmp	lr, r1
 8000bd8:	d96a      	bls.n	8000cb0 <__udivmoddi4+0x2b4>
 8000bda:	3802      	subs	r0, #2
 8000bdc:	4461      	add	r1, ip
 8000bde:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000be2:	fba0 9402 	umull	r9, r4, r0, r2
 8000be6:	eba1 010e 	sub.w	r1, r1, lr
 8000bea:	42a1      	cmp	r1, r4
 8000bec:	46c8      	mov	r8, r9
 8000bee:	46a6      	mov	lr, r4
 8000bf0:	d356      	bcc.n	8000ca0 <__udivmoddi4+0x2a4>
 8000bf2:	d053      	beq.n	8000c9c <__udivmoddi4+0x2a0>
 8000bf4:	b15d      	cbz	r5, 8000c0e <__udivmoddi4+0x212>
 8000bf6:	ebb3 0208 	subs.w	r2, r3, r8
 8000bfa:	eb61 010e 	sbc.w	r1, r1, lr
 8000bfe:	fa01 f707 	lsl.w	r7, r1, r7
 8000c02:	fa22 f306 	lsr.w	r3, r2, r6
 8000c06:	40f1      	lsrs	r1, r6
 8000c08:	431f      	orrs	r7, r3
 8000c0a:	e9c5 7100 	strd	r7, r1, [r5]
 8000c0e:	2600      	movs	r6, #0
 8000c10:	4631      	mov	r1, r6
 8000c12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c16:	f1c2 0320 	rsb	r3, r2, #32
 8000c1a:	40d8      	lsrs	r0, r3
 8000c1c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c20:	fa21 f303 	lsr.w	r3, r1, r3
 8000c24:	4091      	lsls	r1, r2
 8000c26:	4301      	orrs	r1, r0
 8000c28:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c2c:	fa1f fe8c 	uxth.w	lr, ip
 8000c30:	fbb3 f0f7 	udiv	r0, r3, r7
 8000c34:	fb07 3610 	mls	r6, r7, r0, r3
 8000c38:	0c0b      	lsrs	r3, r1, #16
 8000c3a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000c3e:	fb00 f60e 	mul.w	r6, r0, lr
 8000c42:	429e      	cmp	r6, r3
 8000c44:	fa04 f402 	lsl.w	r4, r4, r2
 8000c48:	d908      	bls.n	8000c5c <__udivmoddi4+0x260>
 8000c4a:	eb1c 0303 	adds.w	r3, ip, r3
 8000c4e:	f100 38ff 	add.w	r8, r0, #4294967295
 8000c52:	d22f      	bcs.n	8000cb4 <__udivmoddi4+0x2b8>
 8000c54:	429e      	cmp	r6, r3
 8000c56:	d92d      	bls.n	8000cb4 <__udivmoddi4+0x2b8>
 8000c58:	3802      	subs	r0, #2
 8000c5a:	4463      	add	r3, ip
 8000c5c:	1b9b      	subs	r3, r3, r6
 8000c5e:	b289      	uxth	r1, r1
 8000c60:	fbb3 f6f7 	udiv	r6, r3, r7
 8000c64:	fb07 3316 	mls	r3, r7, r6, r3
 8000c68:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000c6c:	fb06 f30e 	mul.w	r3, r6, lr
 8000c70:	428b      	cmp	r3, r1
 8000c72:	d908      	bls.n	8000c86 <__udivmoddi4+0x28a>
 8000c74:	eb1c 0101 	adds.w	r1, ip, r1
 8000c78:	f106 38ff 	add.w	r8, r6, #4294967295
 8000c7c:	d216      	bcs.n	8000cac <__udivmoddi4+0x2b0>
 8000c7e:	428b      	cmp	r3, r1
 8000c80:	d914      	bls.n	8000cac <__udivmoddi4+0x2b0>
 8000c82:	3e02      	subs	r6, #2
 8000c84:	4461      	add	r1, ip
 8000c86:	1ac9      	subs	r1, r1, r3
 8000c88:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000c8c:	e738      	b.n	8000b00 <__udivmoddi4+0x104>
 8000c8e:	462e      	mov	r6, r5
 8000c90:	4628      	mov	r0, r5
 8000c92:	e705      	b.n	8000aa0 <__udivmoddi4+0xa4>
 8000c94:	4606      	mov	r6, r0
 8000c96:	e6e3      	b.n	8000a60 <__udivmoddi4+0x64>
 8000c98:	4618      	mov	r0, r3
 8000c9a:	e6f8      	b.n	8000a8e <__udivmoddi4+0x92>
 8000c9c:	454b      	cmp	r3, r9
 8000c9e:	d2a9      	bcs.n	8000bf4 <__udivmoddi4+0x1f8>
 8000ca0:	ebb9 0802 	subs.w	r8, r9, r2
 8000ca4:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000ca8:	3801      	subs	r0, #1
 8000caa:	e7a3      	b.n	8000bf4 <__udivmoddi4+0x1f8>
 8000cac:	4646      	mov	r6, r8
 8000cae:	e7ea      	b.n	8000c86 <__udivmoddi4+0x28a>
 8000cb0:	4620      	mov	r0, r4
 8000cb2:	e794      	b.n	8000bde <__udivmoddi4+0x1e2>
 8000cb4:	4640      	mov	r0, r8
 8000cb6:	e7d1      	b.n	8000c5c <__udivmoddi4+0x260>
 8000cb8:	46d0      	mov	r8, sl
 8000cba:	e77b      	b.n	8000bb4 <__udivmoddi4+0x1b8>
 8000cbc:	3b02      	subs	r3, #2
 8000cbe:	4461      	add	r1, ip
 8000cc0:	e732      	b.n	8000b28 <__udivmoddi4+0x12c>
 8000cc2:	4630      	mov	r0, r6
 8000cc4:	e709      	b.n	8000ada <__udivmoddi4+0xde>
 8000cc6:	4464      	add	r4, ip
 8000cc8:	3802      	subs	r0, #2
 8000cca:	e742      	b.n	8000b52 <__udivmoddi4+0x156>

08000ccc <__aeabi_idiv0>:
 8000ccc:	4770      	bx	lr
 8000cce:	bf00      	nop

08000cd0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000cd0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000d08 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000cd4:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000cd6:	e003      	b.n	8000ce0 <LoopCopyDataInit>

08000cd8 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000cd8:	4b0c      	ldr	r3, [pc, #48]	; (8000d0c <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000cda:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000cdc:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000cde:	3104      	adds	r1, #4

08000ce0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000ce0:	480b      	ldr	r0, [pc, #44]	; (8000d10 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000ce2:	4b0c      	ldr	r3, [pc, #48]	; (8000d14 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ce4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000ce6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000ce8:	d3f6      	bcc.n	8000cd8 <CopyDataInit>
  ldr  r2, =_sbss
 8000cea:	4a0b      	ldr	r2, [pc, #44]	; (8000d18 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000cec:	e002      	b.n	8000cf4 <LoopFillZerobss>

08000cee <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000cee:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000cf0:	f842 3b04 	str.w	r3, [r2], #4

08000cf4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000cf4:	4b09      	ldr	r3, [pc, #36]	; (8000d1c <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000cf6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000cf8:	d3f9      	bcc.n	8000cee <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000cfa:	f009 f893 	bl	8009e24 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000cfe:	f025 fcd7 	bl	80266b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000d02:	f001 f857 	bl	8001db4 <main>
  bx  lr    
 8000d06:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8000d08:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8000d0c:	0802b19c 	.word	0x0802b19c
  ldr  r0, =_sdata
 8000d10:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000d14:	20000148 	.word	0x20000148
  ldr  r2, =_sbss
 8000d18:	20000148 	.word	0x20000148
  ldr  r3, = _ebss
 8000d1c:	2000fa18 	.word	0x2000fa18

08000d20 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000d20:	e7fe      	b.n	8000d20 <ADC_IRQHandler>

08000d22 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000d22:	4770      	bx	lr

08000d24 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000d24:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8000d26:	f000 febb 	bl	8001aa0 <touchgfx_components_init>
  touchgfx_init();
}
 8000d2a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8000d2e:	f000 be43 	b.w	80019b8 <touchgfx_init>

08000d32 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000d32:	f000 beb7 	b.w	8001aa4 <touchgfx_taskEntry>

08000d36 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 8000d36:	2100      	movs	r1, #0
 8000d38:	4608      	mov	r0, r1
 8000d3a:	f008 bbdb 	b.w	80094f4 <BSP_PB_Init>

08000d3e <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000d3e:	2000      	movs	r0, #0
 8000d40:	f008 bc12 	b.w	8009568 <BSP_PB_GetState>

08000d44 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000d44:	6840      	ldr	r0, [r0, #4]
    }
 8000d46:	4770      	bx	lr

08000d48 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000d48:	6041      	str	r1, [r0, #4]
    }
 8000d4a:	4770      	bx	lr

08000d4c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000d4c:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000d50:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 8000d54:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000d58:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000d5c:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000d60:	6813      	ldr	r3, [r2, #0]
 8000d62:	f043 0301 	orr.w	r3, r3, #1
 8000d66:	6013      	str	r3, [r2, #0]
}
 8000d68:	4770      	bx	lr

08000d6a <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000d6a:	1a51      	subs	r1, r2, r1
 8000d6c:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000d70:	fbb1 f0f3 	udiv	r0, r1, r3
 8000d74:	4770      	bx	lr
	...

08000d78 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000d78:	4b01      	ldr	r3, [pc, #4]	; (8000d80 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000d7a:	6858      	ldr	r0, [r3, #4]
}
 8000d7c:	4770      	bx	lr
 8000d7e:	bf00      	nop
 8000d80:	e0001000 	.word	0xe0001000

08000d84 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000d84:	4770      	bx	lr

08000d86 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000d86:	b510      	push	{r4, lr}
 8000d88:	210c      	movs	r1, #12
 8000d8a:	4604      	mov	r4, r0
 8000d8c:	f025 fc18 	bl	80265c0 <_ZdlPvj>
 8000d90:	4620      	mov	r0, r4
 8000d92:	bd10      	pop	{r4, pc}

08000d94 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000d94:	6803      	ldr	r3, [r0, #0]
{
 8000d96:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000d98:	691b      	ldr	r3, [r3, #16]
{
 8000d9a:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000d9c:	b131      	cbz	r1, 8000dac <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000d9e:	4798      	blx	r3
 8000da0:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 8000da2:	6863      	ldr	r3, [r4, #4]
 8000da4:	1a9b      	subs	r3, r3, r2
 8000da6:	4418      	add	r0, r3
 8000da8:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000daa:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000dac:	4798      	blx	r3
 8000dae:	60a0      	str	r0, [r4, #8]
}
 8000db0:	e7fb      	b.n	8000daa <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

08000db2 <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 8000db2:	4770      	bx	lr

08000db4 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000db4:	4770      	bx	lr
	...

08000db8 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000db8:	b508      	push	{r3, lr}
    Buttons::init();
 8000dba:	f7ff ffbc 	bl	8000d36 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000dbe:	4b02      	ldr	r3, [pc, #8]	; (8000dc8 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000dc0:	2200      	movs	r2, #0
 8000dc2:	601a      	str	r2, [r3, #0]
}
 8000dc4:	bd08      	pop	{r3, pc}
 8000dc6:	bf00      	nop
 8000dc8:	20000164 	.word	0x20000164

08000dcc <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000dcc:	b570      	push	{r4, r5, r6, lr}
 8000dce:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000dd0:	f7ff ffb5 	bl	8000d3e <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000dd4:	4a0b      	ldr	r2, [pc, #44]	; (8000e04 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000dd6:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000dd8:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000dda:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000ddc:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 8000dde:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8000de0:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 8000de4:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 8000de6:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 8000de8:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8000dea:	d00a      	beq.n	8000e02 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8000dec:	f016 0001 	ands.w	r0, r6, #1
 8000df0:	d007      	beq.n	8000e02 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8000df2:	f011 0001 	ands.w	r0, r1, #1
 8000df6:	d004      	beq.n	8000e02 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 8000df8:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 8000dfa:	bf5a      	itte	pl
 8000dfc:	2001      	movpl	r0, #1
 8000dfe:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 8000e00:	2000      	movmi	r0, #0
}
 8000e02:	bd70      	pop	{r4, r5, r6, pc}
 8000e04:	20000164 	.word	0x20000164

08000e08 <_ZN8touchgfx10KeySamplerD0Ev>:
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	2104      	movs	r1, #4
 8000e0c:	4604      	mov	r4, r0
 8000e0e:	f025 fbd7 	bl	80265c0 <_ZdlPvj>
 8000e12:	4620      	mov	r0, r4
 8000e14:	bd10      	pop	{r4, pc}

08000e16 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000e16:	4770      	bx	lr

08000e18 <_ZN20STM32TouchControllerD0Ev>:
 8000e18:	b510      	push	{r4, lr}
 8000e1a:	2104      	movs	r1, #4
 8000e1c:	4604      	mov	r4, r0
 8000e1e:	f025 fbcf 	bl	80265c0 <_ZdlPvj>
 8000e22:	4620      	mov	r0, r4
 8000e24:	bd10      	pop	{r4, pc}
	...

08000e28 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 8000e28:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 8000e2a:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8000e2e:	f44f 7048 	mov.w	r0, #800	; 0x320
 8000e32:	f008 ff49 	bl	8009cc8 <BSP_TS_Init>
 8000e36:	4b07      	ldr	r3, [pc, #28]	; (8000e54 <_ZN20STM32TouchController4initEv+0x2c>)
 8000e38:	b910      	cbnz	r0, 8000e40 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000e3a:	2201      	movs	r2, #1
 8000e3c:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000e3e:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000e40:	781b      	ldrb	r3, [r3, #0]
 8000e42:	2b00      	cmp	r3, #0
 8000e44:	d1fb      	bne.n	8000e3e <_ZN20STM32TouchController4initEv+0x16>
 8000e46:	4b04      	ldr	r3, [pc, #16]	; (8000e58 <_ZN20STM32TouchController4initEv+0x30>)
 8000e48:	4a04      	ldr	r2, [pc, #16]	; (8000e5c <_ZN20STM32TouchController4initEv+0x34>)
 8000e4a:	4805      	ldr	r0, [pc, #20]	; (8000e60 <_ZN20STM32TouchController4initEv+0x38>)
 8000e4c:	2127      	movs	r1, #39	; 0x27
 8000e4e:	f025 fbe5 	bl	802661c <__assert_func>
 8000e52:	bf00      	nop
 8000e54:	20000168 	.word	0x20000168
 8000e58:	080278ec 	.word	0x080278ec
 8000e5c:	080278ff 	.word	0x080278ff
 8000e60:	08027929 	.word	0x08027929

08000e64 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000e64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000e66:	4b0b      	ldr	r3, [pc, #44]	; (8000e94 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000e68:	781c      	ldrb	r4, [r3, #0]
{
 8000e6a:	460e      	mov	r6, r1
 8000e6c:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000e6e:	b15c      	cbz	r4, 8000e88 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000e70:	a801      	add	r0, sp, #4
 8000e72:	f008 ff61 	bl	8009d38 <BSP_TS_GetState>
        if (state.touchDetected)
 8000e76:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000e7a:	b143      	cbz	r3, 8000e8e <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000e7c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000e80:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 8000e82:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000e86:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000e88:	4620      	mov	r0, r4
 8000e8a:	b004      	add	sp, #16
 8000e8c:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000e8e:	461c      	mov	r4, r3
 8000e90:	e7fa      	b.n	8000e88 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 8000e92:	bf00      	nop
 8000e94:	20000168 	.word	0x20000168

08000e98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000e98:	2803      	cmp	r0, #3
 8000e9a:	d823      	bhi.n	8000ee4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
 8000e9c:	e8df f000 	tbb	[pc, r0]
 8000ea0:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000ea4:	4b10      	ldr	r3, [pc, #64]	; (8000ee8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000ea6:	681a      	ldr	r2, [r3, #0]
 8000ea8:	fab2 f282 	clz	r2, r2
 8000eac:	0952      	lsrs	r2, r2, #5
 8000eae:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000eb0:	480e      	ldr	r0, [pc, #56]	; (8000eec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000eb2:	f009 bfdb 	b.w	800ae6c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000eb6:	4b0c      	ldr	r3, [pc, #48]	; (8000ee8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000eb8:	685a      	ldr	r2, [r3, #4]
 8000eba:	fab2 f282 	clz	r2, r2
 8000ebe:	0952      	lsrs	r2, r2, #5
 8000ec0:	2140      	movs	r1, #64	; 0x40
 8000ec2:	e7f5      	b.n	8000eb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000ec4:	4b08      	ldr	r3, [pc, #32]	; (8000ee8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000ec6:	689a      	ldr	r2, [r3, #8]
 8000ec8:	fab2 f282 	clz	r2, r2
 8000ecc:	0952      	lsrs	r2, r2, #5
 8000ece:	2102      	movs	r1, #2
 8000ed0:	e7ee      	b.n	8000eb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000ed2:	4b05      	ldr	r3, [pc, #20]	; (8000ee8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000ed4:	4806      	ldr	r0, [pc, #24]	; (8000ef0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 8000ed6:	68da      	ldr	r2, [r3, #12]
 8000ed8:	fab2 f282 	clz	r2, r2
 8000edc:	0952      	lsrs	r2, r2, #5
 8000ede:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000ee2:	e7e6      	b.n	8000eb2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8000ee4:	4770      	bx	lr
 8000ee6:	bf00      	nop
 8000ee8:	2000016c 	.word	0x2000016c
 8000eec:	40020000 	.word	0x40020000
 8000ef0:	40021800 	.word	0x40021800

08000ef4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000ef4:	2803      	cmp	r0, #3
 8000ef6:	d823      	bhi.n	8000f40 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
 8000ef8:	e8df f000 	tbb	[pc, r0]
 8000efc:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000f00:	4b10      	ldr	r3, [pc, #64]	; (8000f44 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000f02:	681a      	ldr	r2, [r3, #0]
 8000f04:	3a00      	subs	r2, #0
 8000f06:	bf18      	it	ne
 8000f08:	2201      	movne	r2, #1
 8000f0a:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000f0c:	480e      	ldr	r0, [pc, #56]	; (8000f48 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000f0e:	f009 bfad 	b.w	800ae6c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000f12:	4b0c      	ldr	r3, [pc, #48]	; (8000f44 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000f14:	685a      	ldr	r2, [r3, #4]
 8000f16:	3a00      	subs	r2, #0
 8000f18:	bf18      	it	ne
 8000f1a:	2201      	movne	r2, #1
 8000f1c:	2140      	movs	r1, #64	; 0x40
 8000f1e:	e7f5      	b.n	8000f0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000f20:	4b08      	ldr	r3, [pc, #32]	; (8000f44 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000f22:	689a      	ldr	r2, [r3, #8]
 8000f24:	3a00      	subs	r2, #0
 8000f26:	bf18      	it	ne
 8000f28:	2201      	movne	r2, #1
 8000f2a:	2102      	movs	r1, #2
 8000f2c:	e7ee      	b.n	8000f0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000f2e:	4b05      	ldr	r3, [pc, #20]	; (8000f44 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000f30:	4806      	ldr	r0, [pc, #24]	; (8000f4c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 8000f32:	68da      	ldr	r2, [r3, #12]
 8000f34:	3a00      	subs	r2, #0
 8000f36:	bf18      	it	ne
 8000f38:	2201      	movne	r2, #1
 8000f3a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000f3e:	e7e6      	b.n	8000f0e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8000f40:	4770      	bx	lr
 8000f42:	bf00      	nop
 8000f44:	2000016c 	.word	0x2000016c
 8000f48:	40020000 	.word	0x40020000
 8000f4c:	40021800 	.word	0x40021800

08000f50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000f50:	2803      	cmp	r0, #3
 8000f52:	d80f      	bhi.n	8000f74 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
 8000f54:	e8df f000 	tbb	[pc, r0]
 8000f58:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000f5c:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000f5e:	4806      	ldr	r0, [pc, #24]	; (8000f78 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f60:	f009 bf89 	b.w	800ae76 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000f64:	2140      	movs	r1, #64	; 0x40
 8000f66:	e7fa      	b.n	8000f5e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000f68:	2102      	movs	r1, #2
 8000f6a:	e7f8      	b.n	8000f5e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f6c:	4803      	ldr	r0, [pc, #12]	; (8000f7c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
 8000f6e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000f72:	e7f5      	b.n	8000f60 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 8000f74:	4770      	bx	lr
 8000f76:	bf00      	nop
 8000f78:	40020000 	.word	0x40020000
 8000f7c:	40021800 	.word	0x40021800

08000f80 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000f80:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000f82:	2803      	cmp	r0, #3
 8000f84:	d813      	bhi.n	8000fae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 8000f86:	e8df f000 	tbb	[pc, r0]
 8000f8a:	0a02      	.short	0x0a02
 8000f8c:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000f8e:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000f90:	4808      	ldr	r0, [pc, #32]	; (8000fb4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f92:	f009 ff65 	bl	800ae60 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000f96:	1e43      	subs	r3, r0, #1
 8000f98:	4258      	negs	r0, r3
 8000f9a:	4158      	adcs	r0, r3
 8000f9c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000f9e:	2140      	movs	r1, #64	; 0x40
 8000fa0:	e7f6      	b.n	8000f90 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000fa2:	2102      	movs	r1, #2
 8000fa4:	e7f4      	b.n	8000f90 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000fa6:	4804      	ldr	r0, [pc, #16]	; (8000fb8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
 8000fa8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000fac:	e7f1      	b.n	8000f92 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
    switch (id)
 8000fae:	2000      	movs	r0, #0
 8000fb0:	e7f1      	b.n	8000f96 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000fb2:	bf00      	nop
 8000fb4:	40020000 	.word	0x40020000
 8000fb8:	40021800 	.word	0x40021800

08000fbc <_ZN8touchgfx4GPIO4initEv>:
{
 8000fbc:	b570      	push	{r4, r5, r6, lr}
 8000fbe:	4d08      	ldr	r5, [pc, #32]	; (8000fe0 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000fc0:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000fc2:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000fc4:	b2e0      	uxtb	r0, r4
 8000fc6:	f7ff ffdb 	bl	8000f80 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000fca:	b118      	cbz	r0, 8000fd4 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000fcc:	682b      	ldr	r3, [r5, #0]
 8000fce:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000fd0:	bf18      	it	ne
 8000fd2:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000fd4:	3401      	adds	r4, #1
 8000fd6:	2c05      	cmp	r4, #5
 8000fd8:	f105 0504 	add.w	r5, r5, #4
 8000fdc:	d1f2      	bne.n	8000fc4 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000fde:	bd70      	pop	{r4, r5, r6, pc}
 8000fe0:	2000016c 	.word	0x2000016c

08000fe4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000fe4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000fe6:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000fea:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8000fee:	4770      	bx	lr

08000ff0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000ff0:	2000      	movs	r0, #0
 8000ff2:	4770      	bx	lr

08000ff4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000ff4:	4b03      	ldr	r3, [pc, #12]	; (8001004 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000ff6:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000ff8:	3900      	subs	r1, #0
 8000ffa:	bf18      	it	ne
 8000ffc:	2101      	movne	r1, #1
 8000ffe:	7019      	strb	r1, [r3, #0]
    }
 8001000:	4770      	bx	lr
 8001002:	bf00      	nop
 8001004:	2000ef1b 	.word	0x2000ef1b

08001008 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001008:	2000      	movs	r0, #0
 800100a:	4770      	bx	lr

0800100c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800100c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800100e:	b10b      	cbz	r3, 8001014 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001010:	4608      	mov	r0, r1
 8001012:	4718      	bx	r3
        }
    }
 8001014:	4770      	bx	lr

08001016 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001016:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800101a:	4770      	bx	lr

0800101c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800101c:	6840      	ldr	r0, [r0, #4]
 800101e:	6803      	ldr	r3, [r0, #0]
 8001020:	699b      	ldr	r3, [r3, #24]
 8001022:	4718      	bx	r3

08001024 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001024:	4770      	bx	lr

08001026 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001026:	4770      	bx	lr

08001028 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8001028:	4b01      	ldr	r3, [pc, #4]	; (8001030 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800102a:	6818      	ldr	r0, [r3, #0]
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	2000017c 	.word	0x2000017c

08001034 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001034:	4770      	bx	lr
	...

08001038 <_ZN11TouchGFXHAL10initializeEv>:
{
 8001038:	b538      	push	{r3, r4, r5, lr}
 800103a:	4604      	mov	r4, r0
    mcuInstr.init();
 800103c:	4d09      	ldr	r5, [pc, #36]	; (8001064 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 800103e:	f7ff ffbd 	bl	8000fbc <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8001042:	4620      	mov	r0, r4
 8001044:	f000 fdfa 	bl	8001c3c <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8001048:	2300      	movs	r3, #0
 800104a:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 800104e:	4628      	mov	r0, r5
 8001050:	f7ff fe7c 	bl	8000d4c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8001054:	2301      	movs	r3, #1
 8001056:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
        buttonController = btnCtrl;
 800105a:	4b03      	ldr	r3, [pc, #12]	; (8001068 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 800105c:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 800105e:	6163      	str	r3, [r4, #20]
}
 8001060:	bd38      	pop	{r3, r4, r5, pc}
 8001062:	bf00      	nop
 8001064:	20000188 	.word	0x20000188
 8001068:	20000184 	.word	0x20000184

0800106c <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 800106c:	6803      	ldr	r3, [r0, #0]
{
 800106e:	4604      	mov	r4, r0
 8001070:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 8001072:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001076:	4798      	blx	r3
    enableInterrupts();
 8001078:	6823      	ldr	r3, [r4, #0]
 800107a:	4620      	mov	r0, r4
 800107c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800107e:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8001080:	f000 fa2e 	bl	80014e0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001084:	6823      	ldr	r3, [r4, #0]
 8001086:	4620      	mov	r0, r4
 8001088:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800108a:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_NT35510_ID, DSI_DCS_SHORT_PKT_WRITE_P1, NT35510_CMD_DISPON, 0x00);
 800108c:	2100      	movs	r1, #0
 800108e:	4806      	ldr	r0, [pc, #24]	; (80010a8 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 8001090:	9100      	str	r1, [sp, #0]
 8001092:	2329      	movs	r3, #41	; 0x29
 8001094:	2215      	movs	r2, #21
 8001096:	f009 fcd2 	bl	800aa3e <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 800109a:	f000 fa21 	bl	80014e0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800109e:	6823      	ldr	r3, [r4, #0]
 80010a0:	4620      	mov	r0, r4
 80010a2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80010a4:	4798      	blx	r3
    for (;;)
 80010a6:	e7f8      	b.n	800109a <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
 80010a8:	20005b78 	.word	0x20005b78

080010ac <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80010ac:	b510      	push	{r4, lr}
 80010ae:	4604      	mov	r4, r0
        swapFrameBuffers();
 80010b0:	f00f fb80 	bl	80107b4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80010b4:	6823      	ldr	r3, [r4, #0]
 80010b6:	4620      	mov	r0, r4
 80010b8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80010bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80010c0:	4718      	bx	r3

080010c2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80010c2:	f000 bdba 	b.w	8001c3a <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080010c6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80010c6:	f000 bdd0 	b.w	8001c6a <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080010ca <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80010ca:	f000 bdd0 	b.w	8001c6e <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

080010ce <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80010ce:	f000 bda3 	b.w	8001c18 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080010d2 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80010d2:	f000 bda9 	b.w	8001c28 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080010d6 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80010d6:	f000 bdd3 	b.w	8001c80 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

080010dc <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 80010dc:	4b02      	ldr	r3, [pc, #8]	; (80010e8 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 80010de:	2200      	movs	r2, #0
 80010e0:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 80010e2:	f00e be0f 	b.w	800fd04 <_ZN8touchgfx3HAL10beginFrameEv>
 80010e6:	bf00      	nop
 80010e8:	20000014 	.word	0x20000014

080010ec <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 80010ec:	b510      	push	{r4, lr}
 80010ee:	4604      	mov	r4, r0
    HAL::endFrame();
 80010f0:	f00e fe14 	bl	800fd1c <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 80010f4:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 80010f8:	b113      	cbz	r3, 8001100 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 80010fa:	4b02      	ldr	r3, [pc, #8]	; (8001104 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 80010fc:	2201      	movs	r2, #1
 80010fe:	701a      	strb	r2, [r3, #0]
    }
}
 8001100:	bd10      	pop	{r4, pc}
 8001102:	bf00      	nop
 8001104:	20000014 	.word	0x20000014

08001108 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001108:	f00e bdc0 	b.w	800fc8c <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800110c <_ZN11TouchGFXHALD0Ev>:
 800110c:	b510      	push	{r4, lr}
 800110e:	217c      	movs	r1, #124	; 0x7c
 8001110:	4604      	mov	r4, r0
 8001112:	f025 fa55 	bl	80265c0 <_ZdlPvj>
 8001116:	4620      	mov	r0, r4
 8001118:	bd10      	pop	{r4, pc}

0800111a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800111a:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 800111e:	b11b      	cbz	r3, 8001128 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001120:	6840      	ldr	r0, [r0, #4]
 8001122:	6803      	ldr	r3, [r0, #0]
 8001124:	681b      	ldr	r3, [r3, #0]
 8001126:	4718      	bx	r3
    }
 8001128:	4618      	mov	r0, r3
 800112a:	4770      	bx	lr

0800112c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800112c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800112e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001132:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001136:	4b0c      	ldr	r3, [pc, #48]	; (8001168 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001138:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800113a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800113c:	d009      	beq.n	8001152 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800113e:	b93a      	cbnz	r2, 8001150 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001140:	4a0a      	ldr	r2, [pc, #40]	; (800116c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001142:	490b      	ldr	r1, [pc, #44]	; (8001170 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001144:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001146:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001148:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800114a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800114c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800114e:	701a      	strb	r2, [r3, #0]
    }
 8001150:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001152:	2a00      	cmp	r2, #0
 8001154:	d0fc      	beq.n	8001150 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001156:	4a05      	ldr	r2, [pc, #20]	; (800116c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001158:	4905      	ldr	r1, [pc, #20]	; (8001170 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800115a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800115c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800115e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001160:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001162:	2200      	movs	r2, #0
 8001164:	e7f3      	b.n	800114e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001166:	bf00      	nop
 8001168:	2000ef14 	.word	0x2000ef14
 800116c:	2000ef10 	.word	0x2000ef10
 8001170:	2000ef12 	.word	0x2000ef12

08001174 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001174:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001176:	4b09      	ldr	r3, [pc, #36]	; (800119c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001178:	881b      	ldrh	r3, [r3, #0]
 800117a:	428b      	cmp	r3, r1
 800117c:	d803      	bhi.n	8001186 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800117e:	4b08      	ldr	r3, [pc, #32]	; (80011a0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001180:	881b      	ldrh	r3, [r3, #0]
 8001182:	4293      	cmp	r3, r2
 8001184:	d905      	bls.n	8001192 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001186:	4b07      	ldr	r3, [pc, #28]	; (80011a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001188:	4a07      	ldr	r2, [pc, #28]	; (80011a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 800118a:	4808      	ldr	r0, [pc, #32]	; (80011ac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 800118c:	219e      	movs	r1, #158	; 0x9e
 800118e:	f025 fa45 	bl	802661c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001192:	4b07      	ldr	r3, [pc, #28]	; (80011b0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001194:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001196:	4b07      	ldr	r3, [pc, #28]	; (80011b4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001198:	801a      	strh	r2, [r3, #0]
    }
 800119a:	bd08      	pop	{r3, pc}
 800119c:	2000ef10 	.word	0x2000ef10
 80011a0:	2000ef12 	.word	0x2000ef12
 80011a4:	08027994 	.word	0x08027994
 80011a8:	080279f7 	.word	0x080279f7
 80011ac:	08027a3a 	.word	0x08027a3a
 80011b0:	2000ef16 	.word	0x2000ef16
 80011b4:	2000ef18 	.word	0x2000ef18

080011b8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80011b8:	b570      	push	{r4, r5, r6, lr}
 80011ba:	460d      	mov	r5, r1
 80011bc:	4619      	mov	r1, r3
    currFbBase = (uint16_t*)frameBuffer;
 80011be:	4b0b      	ldr	r3, [pc, #44]	; (80011ec <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80011c0:	601d      	str	r5, [r3, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80011c2:	b935      	cbnz	r5, 80011d2 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x1a>
 80011c4:	4b0a      	ldr	r3, [pc, #40]	; (80011f0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80011c6:	4a0b      	ldr	r2, [pc, #44]	; (80011f4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 80011c8:	480b      	ldr	r0, [pc, #44]	; (80011f8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 80011ca:	f240 21d2 	movw	r1, #722	; 0x2d2
 80011ce:	f025 fa25 	bl	802661c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80011d2:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80011d6:	4b09      	ldr	r3, [pc, #36]	; (80011fc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 80011d8:	3a00      	subs	r2, #0
 80011da:	bf18      	it	ne
 80011dc:	2201      	movne	r2, #1
 80011de:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80011e0:	6803      	ldr	r3, [r0, #0]
}
 80011e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80011e6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80011ea:	4718      	bx	r3
 80011ec:	2000017c 	.word	0x2000017c
 80011f0:	08027a7f 	.word	0x08027a7f
 80011f4:	08027ab7 	.word	0x08027ab7
 80011f8:	08027a3a 	.word	0x08027a3a
 80011fc:	2000ef1a 	.word	0x2000ef1a

08001200 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8001200:	2801      	cmp	r0, #1
    {
 8001202:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8001204:	d80a      	bhi.n	800121c <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_NT35510_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8001206:	784b      	ldrb	r3, [r1, #1]
 8001208:	9300      	str	r3, [sp, #0]
 800120a:	780b      	ldrb	r3, [r1, #0]
 800120c:	4808      	ldr	r0, [pc, #32]	; (8001230 <DSI_IO_WriteCmd+0x30>)
 800120e:	2215      	movs	r2, #21
 8001210:	2100      	movs	r1, #0
 8001212:	f009 fc14 	bl	800aa3e <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_NT35510_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8001216:	b003      	add	sp, #12
 8001218:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_NT35510_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 800121c:	9101      	str	r1, [sp, #4]
 800121e:	5c0b      	ldrb	r3, [r1, r0]
 8001220:	9300      	str	r3, [sp, #0]
 8001222:	2239      	movs	r2, #57	; 0x39
 8001224:	4603      	mov	r3, r0
 8001226:	2100      	movs	r1, #0
 8001228:	4801      	ldr	r0, [pc, #4]	; (8001230 <DSI_IO_WriteCmd+0x30>)
 800122a:	f009 fc19 	bl	800aa60 <HAL_DSI_LongWrite>
    }
 800122e:	e7f2      	b.n	8001216 <DSI_IO_WriteCmd+0x16>
 8001230:	20005b78 	.word	0x20005b78

08001234 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8001234:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8001236:	4a0b      	ldr	r2, [pc, #44]	; (8001264 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001238:	4c0b      	ldr	r4, [pc, #44]	; (8001268 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 800123a:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 800123c:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 800123e:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8001240:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001242:	9201      	str	r2, [sp, #4]
 8001244:	2244      	movs	r2, #68	; 0x44
 8001246:	9200      	str	r2, [sp, #0]
 8001248:	2100      	movs	r1, #0
 800124a:	2239      	movs	r2, #57	; 0x39
 800124c:	4620      	mov	r0, r4
 800124e:	f009 fc07 	bl	800aa60 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8001252:	2100      	movs	r1, #0
 8001254:	9100      	str	r1, [sp, #0]
 8001256:	2335      	movs	r3, #53	; 0x35
 8001258:	462a      	mov	r2, r5
 800125a:	4620      	mov	r0, r4
 800125c:	f009 fbef 	bl	800aa3e <HAL_DSI_ShortWrite>
    }
 8001260:	b003      	add	sp, #12
 8001262:	bd30      	pop	{r4, r5, pc}
 8001264:	20000194 	.word	0x20000194
 8001268:	20005b78 	.word	0x20005b78

0800126c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 800126c:	b507      	push	{r0, r1, r2, lr}
 800126e:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8001270:	f7ff ffe0 	bl	8001234 <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001274:	9801      	ldr	r0, [sp, #4]
}
 8001276:	b003      	add	sp, #12
 8001278:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800127c:	f000 bcdc 	b.w	8001c38 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001280 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8001280:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, NT35510_CMD_CASET, pCols[idx]);
 8001282:	4b07      	ldr	r3, [pc, #28]	; (80012a0 <LCD_SetUpdateRegion+0x20>)
 8001284:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8001288:	232a      	movs	r3, #42	; 0x2a
 800128a:	9001      	str	r0, [sp, #4]
 800128c:	9300      	str	r3, [sp, #0]
 800128e:	2239      	movs	r2, #57	; 0x39
 8001290:	2304      	movs	r3, #4
 8001292:	2100      	movs	r1, #0
 8001294:	4803      	ldr	r0, [pc, #12]	; (80012a4 <LCD_SetUpdateRegion+0x24>)
 8001296:	f009 fbe3 	bl	800aa60 <HAL_DSI_LongWrite>
    }
 800129a:	b003      	add	sp, #12
 800129c:	f85d fb04 	ldr.w	pc, [sp], #4
 80012a0:	20000004 	.word	0x20000004
 80012a4:	20005b78 	.word	0x20005b78

080012a8 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, NT35510_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 80012a8:	b570      	push	{r4, r5, r6, lr}
        return instance;
 80012aa:	4d15      	ldr	r5, [pc, #84]	; (8001300 <HAL_DSI_TearingEffectCallback+0x58>)
 80012ac:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 80012ae:	2000      	movs	r0, #0
 80012b0:	f7ff fdf2 	bl	8000e98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80012b4:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 80012b6:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 80012ba:	3301      	adds	r3, #1
 80012bc:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 80012c0:	f000 f902 	bl	80014c8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 80012c4:	4b0f      	ldr	r3, [pc, #60]	; (8001304 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 80012c6:	6828      	ldr	r0, [r5, #0]
 80012c8:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 80012ca:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 80012cc:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 80012d0:	b123      	cbz	r3, 80012dc <HAL_DSI_TearingEffectCallback+0x34>
 80012d2:	4d0d      	ldr	r5, [pc, #52]	; (8001308 <HAL_DSI_TearingEffectCallback+0x60>)
 80012d4:	782b      	ldrb	r3, [r5, #0]
 80012d6:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 80012da:	b123      	cbz	r3, 80012e6 <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80012dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80012e0:	2000      	movs	r0, #0
 80012e2:	f7ff be07 	b.w	8000ef4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 80012e6:	f00f fa65 	bl	80107b4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 80012ea:	4b08      	ldr	r3, [pc, #32]	; (800130c <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 80012ec:	4630      	mov	r0, r6
            updateRegion = 0;
 80012ee:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 80012f0:	f7ff ffc6 	bl	8001280 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 80012f4:	4620      	mov	r0, r4
 80012f6:	f009 fb92 	bl	800aa1e <HAL_DSI_Refresh>
            displayRefreshing = true;
 80012fa:	2301      	movs	r3, #1
 80012fc:	702b      	strb	r3, [r5, #0]
    }
 80012fe:	bd70      	pop	{r4, r5, r6, pc}
 8001300:	2000ef1c 	.word	0x2000ef1c
 8001304:	20000014 	.word	0x20000014
 8001308:	20000196 	.word	0x20000196
 800130c:	20000180 	.word	0x20000180

08001310 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8001310:	4b33      	ldr	r3, [pc, #204]	; (80013e0 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8001312:	681a      	ldr	r2, [r3, #0]
 8001314:	3201      	adds	r2, #1
    {
 8001316:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 8001318:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 800131a:	4b32      	ldr	r3, [pc, #200]	; (80013e4 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 800131c:	4c32      	ldr	r4, [pc, #200]	; (80013e8 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 800131e:	6819      	ldr	r1, [r3, #0]
 8001320:	4b32      	ldr	r3, [pc, #200]	; (80013ec <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 8001322:	2a03      	cmp	r2, #3
    {
 8001324:	4605      	mov	r5, r0
        if (updateRegion < 4)
 8001326:	dc2e      	bgt.n	8001386 <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8001328:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 800132c:	f020 0008 	bic.w	r0, r0, #8
 8001330:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8001334:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8001338:	fb00 1102 	mla	r1, r0, r2, r1
 800133c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8001340:	bf0c      	ite	eq
 8001342:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8001344:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8001346:	3302      	adds	r3, #2
 8001348:	4928      	ldr	r1, [pc, #160]	; (80013ec <HAL_DSI_EndOfRefreshCallback+0xdc>)
 800134a:	041b      	lsls	r3, r3, #16
 800134c:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8001350:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8001352:	4b27      	ldr	r3, [pc, #156]	; (80013f0 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8001354:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8001356:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 800135a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 800135e:	4b25      	ldr	r3, [pc, #148]	; (80013f4 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8001360:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001364:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 8001366:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001368:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 800136a:	f7ff ff89 	bl	8001280 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 800136e:	4a1e      	ldr	r2, [pc, #120]	; (80013e8 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8001370:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8001374:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8001378:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 800137a:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 800137e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8001382:	f009 bb4c 	b.w	800aa1e <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8001386:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 800138a:	f022 0208 	bic.w	r2, r2, #8
 800138e:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8001392:	4a19      	ldr	r2, [pc, #100]	; (80013f8 <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8001394:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8001398:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 800139a:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 800139e:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 80013a0:	4a16      	ldr	r2, [pc, #88]	; (80013fc <HAL_DSI_EndOfRefreshCallback+0xec>)
 80013a2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 80013a6:	4a13      	ldr	r2, [pc, #76]	; (80013f4 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 80013a8:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80013ac:	2201      	movs	r2, #1
 80013ae:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 80013b0:	2000      	movs	r0, #0
 80013b2:	f7ff ff65 	bl	8001280 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 80013b6:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 80013ba:	f043 0308 	orr.w	r3, r3, #8
 80013be:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 80013c2:	2000      	movs	r0, #0
 80013c4:	f7ff fd96 	bl	8000ef4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 80013c8:	4b0d      	ldr	r3, [pc, #52]	; (8001400 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 80013ca:	2200      	movs	r2, #0
 80013cc:	701a      	strb	r2, [r3, #0]
        return instance;
 80013ce:	4b0d      	ldr	r3, [pc, #52]	; (8001404 <HAL_DSI_EndOfRefreshCallback+0xf4>)
 80013d0:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 80013d2:	b120      	cbz	r0, 80013de <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 80013d4:	6803      	ldr	r3, [r0, #0]
    }
 80013d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80013da:	6a1b      	ldr	r3, [r3, #32]
 80013dc:	4718      	bx	r3
 80013de:	bd70      	pop	{r4, r5, r6, pc}
 80013e0:	20000180 	.word	0x20000180
 80013e4:	2000017c 	.word	0x2000017c
 80013e8:	40016c00 	.word	0x40016c00
 80013ec:	40016800 	.word	0x40016800
 80013f0:	00ca01e3 	.word	0x00ca01e3
 80013f4:	06800193 	.word	0x06800193
 80013f8:	00ca01e2 	.word	0x00ca01e2
 80013fc:	00ca0003 	.word	0x00ca0003
 8001400:	20000196 	.word	0x20000196
 8001404:	2000ef1c 	.word	0x2000ef1c

08001408 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001408:	b508      	push	{r3, lr}
        return instance;
 800140a:	4b04      	ldr	r3, [pc, #16]	; (800141c <IdleTaskHook+0x14>)
 800140c:	4601      	mov	r1, r0
 800140e:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8001410:	b101      	cbz	r1, 8001414 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8001412:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8001414:	f00f f9e8 	bl	80107e8 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001418:	2001      	movs	r0, #1
 800141a:	bd08      	pop	{r3, pc}
 800141c:	2000ef1c 	.word	0x2000ef1c

08001420 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8001420:	4b05      	ldr	r3, [pc, #20]	; (8001438 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8001422:	4806      	ldr	r0, [pc, #24]	; (800143c <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8001424:	2200      	movs	r2, #0
 8001426:	605a      	str	r2, [r3, #4]
 8001428:	609a      	str	r2, [r3, #8]
 800142a:	4a05      	ldr	r2, [pc, #20]	; (8001440 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 800142c:	601a      	str	r2, [r3, #0]
 800142e:	4b05      	ldr	r3, [pc, #20]	; (8001444 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8001430:	6003      	str	r3, [r0, #0]
        init();
 8001432:	f7ff bcc1 	b.w	8000db8 <_ZN8touchgfx10KeySampler4initEv>
 8001436:	bf00      	nop
 8001438:	20000188 	.word	0x20000188
 800143c:	20000184 	.word	0x20000184
 8001440:	080278b0 	.word	0x080278b0
 8001444:	080278d8 	.word	0x080278d8

08001448 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001448:	2101      	movs	r1, #1
{
 800144a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800144c:	2200      	movs	r2, #0
 800144e:	4608      	mov	r0, r1
 8001450:	f00b fde9 	bl	800d026 <osSemaphoreNew>
 8001454:	4b0a      	ldr	r3, [pc, #40]	; (8001480 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001456:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001458:	b928      	cbnz	r0, 8001466 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800145a:	4b0a      	ldr	r3, [pc, #40]	; (8001484 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 800145c:	4a0a      	ldr	r2, [pc, #40]	; (8001488 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800145e:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001460:	480a      	ldr	r0, [pc, #40]	; (800148c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001462:	f025 f8db 	bl	802661c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001466:	2200      	movs	r2, #0
 8001468:	2104      	movs	r1, #4
 800146a:	2001      	movs	r0, #1
 800146c:	f00b fe78 	bl	800d160 <osMessageQueueNew>
 8001470:	4b07      	ldr	r3, [pc, #28]	; (8001490 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001472:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001474:	b918      	cbnz	r0, 800147e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001476:	4b07      	ldr	r3, [pc, #28]	; (8001494 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001478:	4a03      	ldr	r2, [pc, #12]	; (8001488 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800147a:	212c      	movs	r1, #44	; 0x2c
 800147c:	e7f0      	b.n	8001460 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800147e:	bd08      	pop	{r3, pc}
 8001480:	2000019c 	.word	0x2000019c
 8001484:	08027be0 	.word	0x08027be0
 8001488:	08027c29 	.word	0x08027c29
 800148c:	08027c58 	.word	0x08027c58
 8001490:	20000198 	.word	0x20000198
 8001494:	08027cab 	.word	0x08027cab

08001498 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001498:	4b02      	ldr	r3, [pc, #8]	; (80014a4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800149a:	f04f 31ff 	mov.w	r1, #4294967295
 800149e:	6818      	ldr	r0, [r3, #0]
 80014a0:	f00b be0b 	b.w	800d0ba <osSemaphoreAcquire>
 80014a4:	2000019c 	.word	0x2000019c

080014a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80014a8:	4b01      	ldr	r3, [pc, #4]	; (80014b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80014aa:	6818      	ldr	r0, [r3, #0]
 80014ac:	f00b be30 	b.w	800d110 <osSemaphoreRelease>
 80014b0:	2000019c 	.word	0x2000019c

080014b4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80014b4:	4b02      	ldr	r3, [pc, #8]	; (80014c0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80014b6:	2100      	movs	r1, #0
 80014b8:	6818      	ldr	r0, [r3, #0]
 80014ba:	f00b bdfe 	b.w	800d0ba <osSemaphoreAcquire>
 80014be:	bf00      	nop
 80014c0:	2000019c 	.word	0x2000019c

080014c4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 80014c4:	f7ff bff0 	b.w	80014a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080014c8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80014c8:	4803      	ldr	r0, [pc, #12]	; (80014d8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80014ca:	4904      	ldr	r1, [pc, #16]	; (80014dc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80014cc:	6800      	ldr	r0, [r0, #0]
 80014ce:	2300      	movs	r3, #0
 80014d0:	461a      	mov	r2, r3
 80014d2:	f00b be80 	b.w	800d1d6 <osMessageQueuePut>
 80014d6:	bf00      	nop
 80014d8:	20000198 	.word	0x20000198
 80014dc:	20000018 	.word	0x20000018

080014e0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80014e0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80014e2:	4c08      	ldr	r4, [pc, #32]	; (8001504 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80014e4:	2300      	movs	r3, #0
 80014e6:	461a      	mov	r2, r3
 80014e8:	a901      	add	r1, sp, #4
 80014ea:	6820      	ldr	r0, [r4, #0]
 80014ec:	f00b fea3 	bl	800d236 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80014f0:	6820      	ldr	r0, [r4, #0]
 80014f2:	f04f 33ff 	mov.w	r3, #4294967295
 80014f6:	2200      	movs	r2, #0
 80014f8:	a901      	add	r1, sp, #4
 80014fa:	f00b fe9c 	bl	800d236 <osMessageQueueGet>
}
 80014fe:	b002      	add	sp, #8
 8001500:	bd10      	pop	{r4, pc}
 8001502:	bf00      	nop
 8001504:	20000198 	.word	0x20000198

08001508 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001508:	6803      	ldr	r3, [r0, #0]
 800150a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800150c:	4718      	bx	r3

0800150e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 800150e:	2001      	movs	r0, #1
 8001510:	4770      	bx	lr

08001512 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8001512:	6803      	ldr	r3, [r0, #0]
 8001514:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001516:	4718      	bx	r3

08001518 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8001518:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800151a:	2300      	movs	r3, #0
 800151c:	9301      	str	r3, [sp, #4]
 800151e:	4b0d      	ldr	r3, [pc, #52]	; (8001554 <_ZN8STM32DMA10initializeEv+0x3c>)
 8001520:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001522:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001526:	631a      	str	r2, [r3, #48]	; 0x30
 8001528:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152a:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 800152e:	9201      	str	r2, [sp, #4]
 8001530:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001532:	691a      	ldr	r2, [r3, #16]
 8001534:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001538:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800153a:	691a      	ldr	r2, [r3, #16]
 800153c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8001540:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001542:	4b05      	ldr	r3, [pc, #20]	; (8001558 <_ZN8STM32DMA10initializeEv+0x40>)
 8001544:	4a05      	ldr	r2, [pc, #20]	; (800155c <_ZN8STM32DMA10initializeEv+0x44>)
 8001546:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001548:	4b05      	ldr	r3, [pc, #20]	; (8001560 <_ZN8STM32DMA10initializeEv+0x48>)
 800154a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800154e:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001550:	b002      	add	sp, #8
 8001552:	4770      	bx	lr
 8001554:	40023800 	.word	0x40023800
 8001558:	20005b38 	.word	0x20005b38
 800155c:	080015a5 	.word	0x080015a5
 8001560:	e000e100 	.word	0xe000e100

08001564 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001564:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8001568:	4770      	bx	lr
	...

0800156c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 800156c:	4b05      	ldr	r3, [pc, #20]	; (8001584 <_ZN8STM32DMAD1Ev+0x18>)
 800156e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001570:	4b05      	ldr	r3, [pc, #20]	; (8001588 <_ZN8STM32DMAD1Ev+0x1c>)
 8001572:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001576:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800157a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800157e:	f3bf 8f6f 	isb	sy
}
 8001582:	4770      	bx	lr
 8001584:	08027e50 	.word	0x08027e50
 8001588:	e000e100 	.word	0xe000e100

0800158c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800158c:	b510      	push	{r4, lr}
 800158e:	4604      	mov	r4, r0
}
 8001590:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8001594:	f7ff ffea 	bl	800156c <_ZN8STM32DMAD1Ev>
 8001598:	4620      	mov	r0, r4
 800159a:	f025 f811 	bl	80265c0 <_ZdlPvj>
 800159e:	4620      	mov	r0, r4
 80015a0:	bd10      	pop	{r4, pc}
	...

080015a4 <DMA2D_XferCpltCallback>:
 80015a4:	4b02      	ldr	r3, [pc, #8]	; (80015b0 <DMA2D_XferCpltCallback+0xc>)
 80015a6:	681b      	ldr	r3, [r3, #0]
 80015a8:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 80015aa:	6803      	ldr	r3, [r0, #0]
 80015ac:	695b      	ldr	r3, [r3, #20]
 80015ae:	4718      	bx	r3
 80015b0:	2000ef1c 	.word	0x2000ef1c

080015b4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80015b4:	b570      	push	{r4, r5, r6, lr}
 80015b6:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 80015b8:	4625      	mov	r5, r4
 80015ba:	4b0a      	ldr	r3, [pc, #40]	; (80015e4 <_ZN8STM32DMAC1Ev+0x30>)
 80015bc:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80015be:	2600      	movs	r6, #0
 80015c0:	6060      	str	r0, [r4, #4]
 80015c2:	7226      	strb	r6, [r4, #8]
 80015c4:	7266      	strb	r6, [r4, #9]
 80015c6:	f845 3b20 	str.w	r3, [r5], #32
 80015ca:	2260      	movs	r2, #96	; 0x60
 80015cc:	4629      	mov	r1, r5
 80015ce:	f00f fa61 	bl	8010a94 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80015d2:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 80015d6:	60ee      	str	r6, [r5, #12]
 80015d8:	3524      	adds	r5, #36	; 0x24
 80015da:	42ab      	cmp	r3, r5
 80015dc:	d1fb      	bne.n	80015d6 <_ZN8STM32DMAC1Ev+0x22>
}
 80015de:	4620      	mov	r0, r4
 80015e0:	bd70      	pop	{r4, r5, r6, pc}
 80015e2:	bf00      	nop
 80015e4:	08027e50 	.word	0x08027e50

080015e8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80015e8:	b508      	push	{r3, lr}
    switch (format)
 80015ea:	290b      	cmp	r1, #11
 80015ec:	d80b      	bhi.n	8001606 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 80015ee:	e8df f001 	tbb	[pc, r1]
 80015f2:	0612      	.short	0x0612
 80015f4:	0a0a0a10 	.word	0x0a0a0a10
 80015f8:	0808080a 	.word	0x0808080a
 80015fc:	0808      	.short	0x0808
 80015fe:	2001      	movs	r0, #1
}
 8001600:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001602:	2005      	movs	r0, #5
        break;
 8001604:	e7fc      	b.n	8001600 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8001606:	4b05      	ldr	r3, [pc, #20]	; (800161c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001608:	4a05      	ldr	r2, [pc, #20]	; (8001620 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 800160a:	4806      	ldr	r0, [pc, #24]	; (8001624 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 800160c:	2165      	movs	r1, #101	; 0x65
 800160e:	f025 f805 	bl	802661c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001612:	2000      	movs	r0, #0
 8001614:	e7f4      	b.n	8001600 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001616:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001618:	e7f2      	b.n	8001600 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 800161a:	bf00      	nop
 800161c:	08027ced 	.word	0x08027ced
 8001620:	08027d08 	.word	0x08027d08
 8001624:	08027d52 	.word	0x08027d52

08001628 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001628:	b508      	push	{r3, lr}
    switch (format)
 800162a:	290a      	cmp	r1, #10
 800162c:	d809      	bhi.n	8001642 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 800162e:	e8df f001 	tbb	[pc, r1]
 8001632:	0610      	.short	0x0610
 8001634:	0808080e 	.word	0x0808080e
 8001638:	06060608 	.word	0x06060608
 800163c:	06          	.byte	0x06
 800163d:	00          	.byte	0x00
 800163e:	2001      	movs	r0, #1
}
 8001640:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001642:	4b05      	ldr	r3, [pc, #20]	; (8001658 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8001644:	4a05      	ldr	r2, [pc, #20]	; (800165c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001646:	4806      	ldr	r0, [pc, #24]	; (8001660 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001648:	2186      	movs	r1, #134	; 0x86
 800164a:	f024 ffe7 	bl	802661c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800164e:	2000      	movs	r0, #0
 8001650:	e7f6      	b.n	8001640 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001652:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001654:	e7f4      	b.n	8001640 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8001656:	bf00      	nop
 8001658:	08027ced 	.word	0x08027ced
 800165c:	08027da3 	.word	0x08027da3
 8001660:	08027d52 	.word	0x08027d52

08001664 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8001664:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001668:	7f4f      	ldrb	r7, [r1, #29]
{
 800166a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800166c:	4639      	mov	r1, r7
{
 800166e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001670:	f7ff ffba 	bl	80015e8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001674:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001678:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800167a:	4641      	mov	r1, r8
 800167c:	4648      	mov	r0, r9
 800167e:	f7ff ffb3 	bl	80015e8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001682:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001684:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001686:	4648      	mov	r0, r9
 8001688:	f7ff ffce 	bl	8001628 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800168c:	8aa1      	ldrh	r1, [r4, #20]
 800168e:	8b62      	ldrh	r2, [r4, #26]
 8001690:	4b42      	ldr	r3, [pc, #264]	; (800179c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001692:	1a52      	subs	r2, r2, r1
 8001694:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001696:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001698:	8b22      	ldrh	r2, [r4, #24]
 800169a:	1a52      	subs	r2, r2, r1
 800169c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800169e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80016a0:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80016a2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80016a6:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80016a8:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80016aa:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80016ac:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80016ae:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 80016b0:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80016b2:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 80016b6:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80016b8:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 80016bc:	d026      	beq.n	800170c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 80016be:	d810      	bhi.n	80016e2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 80016c0:	2920      	cmp	r1, #32
 80016c2:	ea45 0402 	orr.w	r4, r5, r2
 80016c6:	d061      	beq.n	800178c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 80016c8:	2940      	cmp	r1, #64	; 0x40
 80016ca:	d05f      	beq.n	800178c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 80016cc:	2904      	cmp	r1, #4
 80016ce:	d05d      	beq.n	800178c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80016d0:	4b32      	ldr	r3, [pc, #200]	; (800179c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80016d2:	432a      	orrs	r2, r5
 80016d4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 80016d8:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80016da:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 80016dc:	d05a      	beq.n	8001794 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 80016de:	4a30      	ldr	r2, [pc, #192]	; (80017a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 80016e0:	e040      	b.n	8001764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 80016e2:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 80016e6:	d007      	beq.n	80016f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 80016e8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 80016ec:	d1f0      	bne.n	80016d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80016ee:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80016f2:	f042 0209 	orr.w	r2, r2, #9
 80016f6:	e003      	b.n	8001700 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80016f8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80016fc:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001700:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001702:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001704:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001706:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001708:	6158      	str	r0, [r3, #20]
 800170a:	e02a      	b.n	8001762 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 800170c:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800170e:	432a      	orrs	r2, r5
 8001710:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001714:	1d21      	adds	r1, r4, #4
 8001716:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001718:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 800171a:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800171c:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800171e:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001720:	b142      	cbz	r2, 8001734 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8001722:	2a01      	cmp	r2, #1
 8001724:	d021      	beq.n	800176a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8001726:	4b1f      	ldr	r3, [pc, #124]	; (80017a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8001728:	4a1f      	ldr	r2, [pc, #124]	; (80017a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 800172a:	4820      	ldr	r0, [pc, #128]	; (80017ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 800172c:	f44f 7188 	mov.w	r1, #272	; 0x110
 8001730:	f024 ff74 	bl	802661c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001734:	69da      	ldr	r2, [r3, #28]
 8001736:	8861      	ldrh	r1, [r4, #2]
 8001738:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800173c:	3901      	subs	r1, #1
 800173e:	f022 0210 	bic.w	r2, r2, #16
 8001742:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001746:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8001748:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 800174a:	4b14      	ldr	r3, [pc, #80]	; (800179c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800174c:	69da      	ldr	r2, [r3, #28]
 800174e:	f042 0220 	orr.w	r2, r2, #32
 8001752:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001754:	69da      	ldr	r2, [r3, #28]
 8001756:	0692      	lsls	r2, r2, #26
 8001758:	d4fc      	bmi.n	8001754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 800175a:	2210      	movs	r2, #16
 800175c:	609a      	str	r2, [r3, #8]
            if (blend)
 800175e:	2800      	cmp	r0, #0
 8001760:	d0bd      	beq.n	80016de <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001762:	4a13      	ldr	r2, [pc, #76]	; (80017b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001764:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8001766:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800176a:	8862      	ldrh	r2, [r4, #2]
 800176c:	69d9      	ldr	r1, [r3, #28]
 800176e:	1e54      	subs	r4, r2, #1
 8001770:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8001774:	f022 0210 	bic.w	r2, r2, #16
 8001778:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if (blitOp.alpha == 255)
 800177c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001780:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8001784:	bf18      	it	ne
 8001786:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001788:	61da      	str	r2, [r3, #28]
                break;
 800178a:	e7de      	b.n	800174a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800178c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8001790:	61dc      	str	r4, [r3, #28]
 8001792:	e7b8      	b.n	8001706 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001794:	f240 2201 	movw	r2, #513	; 0x201
 8001798:	e7e4      	b.n	8001764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 800179a:	bf00      	nop
 800179c:	4002b000 	.word	0x4002b000
 80017a0:	00010201 	.word	0x00010201
 80017a4:	08027dee 	.word	0x08027dee
 80017a8:	08027e08 	.word	0x08027e08
 80017ac:	08027d52 	.word	0x08027d52
 80017b0:	00020201 	.word	0x00020201

080017b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80017b4:	b570      	push	{r4, r5, r6, lr}
 80017b6:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80017b8:	7f89      	ldrb	r1, [r1, #30]
 80017ba:	f7ff ff35 	bl	8001628 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80017be:	8aa6      	ldrh	r6, [r4, #20]
 80017c0:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80017c2:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80017c4:	4b15      	ldr	r3, [pc, #84]	; (800181c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80017c6:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80017c8:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80017ca:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80017ce:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80017d0:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80017d2:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80017d4:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 80017d6:	6826      	ldr	r6, [r4, #0]
 80017d8:	68e1      	ldr	r1, [r4, #12]
 80017da:	2e08      	cmp	r6, #8
 80017dc:	d10d      	bne.n	80017fa <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80017de:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80017e0:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80017e2:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 80017e4:	7f20      	ldrb	r0, [r4, #28]
 80017e6:	4a0e      	ldr	r2, [pc, #56]	; (8001820 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 80017e8:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80017ec:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 80017ee:	4a0d      	ldr	r2, [pc, #52]	; (8001824 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80017f0:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80017f2:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80017f4:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80017f6:	601a      	str	r2, [r3, #0]
    }
}
 80017f8:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 80017fa:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 80017fc:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 80017fe:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001800:	0948      	lsrs	r0, r1, #5
 8001802:	0a0a      	lsrs	r2, r1, #8
 8001804:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8001808:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 800180c:	4302      	orrs	r2, r0
 800180e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001812:	430a      	orrs	r2, r1
 8001814:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001816:	4a04      	ldr	r2, [pc, #16]	; (8001828 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001818:	e7ed      	b.n	80017f6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 800181a:	bf00      	nop
 800181c:	4002b000 	.word	0x4002b000
 8001820:	00010009 	.word	0x00010009
 8001824:	00020201 	.word	0x00020201
 8001828:	00030201 	.word	0x00030201

0800182c <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800182c:	4b03      	ldr	r3, [pc, #12]	; (800183c <_ZN8touchgfx5paint8tearDownEv+0x10>)
 800182e:	681a      	ldr	r2, [r3, #0]
 8001830:	07d2      	lsls	r2, r2, #31
 8001832:	d4fc      	bmi.n	800182e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001834:	2223      	movs	r2, #35	; 0x23
 8001836:	609a      	str	r2, [r3, #8]
}
 8001838:	4770      	bx	lr
 800183a:	bf00      	nop
 800183c:	4002b000 	.word	0x4002b000

08001840 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8001840:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001842:	4c0f      	ldr	r4, [pc, #60]	; (8001880 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8001844:	6825      	ldr	r5, [r4, #0]
 8001846:	07ed      	lsls	r5, r5, #31
 8001848:	d4fc      	bmi.n	8001844 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800184a:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800184c:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800184e:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001850:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001854:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8001856:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001858:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800185a:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800185c:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
 800185e:	d00a      	beq.n	8001876 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001860:	4908      	ldr	r1, [pc, #32]	; (8001884 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001862:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001864:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8001868:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 800186a:	4b07      	ldr	r3, [pc, #28]	; (8001888 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 800186c:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 800186e:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8001870:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8001872:	6023      	str	r3, [r4, #0]
    }
}
 8001874:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001876:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8001878:	9b03      	ldr	r3, [sp, #12]
 800187a:	63a3      	str	r3, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 800187c:	4b03      	ldr	r3, [pc, #12]	; (800188c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 800187e:	e7f8      	b.n	8001872 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8001880:	4002b000 	.word	0x4002b000
 8001884:	00010009 	.word	0x00010009
 8001888:	00020001 	.word	0x00020001
 800188c:	00030001 	.word	0x00030001

08001890 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001890:	2001      	movs	r0, #1
 8001892:	4770      	bx	lr

08001894 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001894:	2040      	movs	r0, #64	; 0x40
 8001896:	4770      	bx	lr

08001898 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001898:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 800189c:	3008      	adds	r0, #8
 800189e:	4770      	bx	lr

080018a0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80018a0:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 80018a4:	3008      	adds	r0, #8
 80018a6:	4770      	bx	lr

080018a8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80018a8:	2001      	movs	r0, #1
 80018aa:	4770      	bx	lr

080018ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80018ac:	f244 7098 	movw	r0, #18328	; 0x4798
 80018b0:	4770      	bx	lr

080018b2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80018b2:	f244 7398 	movw	r3, #18328	; 0x4798
 80018b6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80018ba:	3008      	adds	r0, #8
 80018bc:	4770      	bx	lr

080018be <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80018be:	f244 7398 	movw	r3, #18328	; 0x4798
 80018c2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80018c6:	3008      	adds	r0, #8
 80018c8:	4770      	bx	lr

080018ca <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80018ca:	2001      	movs	r0, #1
 80018cc:	4770      	bx	lr

080018ce <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80018ce:	2010      	movs	r0, #16
 80018d0:	4770      	bx	lr

080018d2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80018d2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80018d6:	3008      	adds	r0, #8
 80018d8:	4770      	bx	lr

080018da <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80018da:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80018de:	3008      	adds	r0, #8
 80018e0:	4770      	bx	lr

080018e2 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartupScreenNoTransition();
 80018e2:	4608      	mov	r0, r1
 80018e4:	f002 bf16 	b.w	8004714 <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv>

080018e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80018e8:	b510      	push	{r4, lr}
 80018ea:	4b03      	ldr	r3, [pc, #12]	; (80018f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 80018ec:	6003      	str	r3, [r0, #0]
 80018ee:	4604      	mov	r4, r0
 80018f0:	f00d fc53 	bl	800f19a <_ZN8touchgfx17AbstractPartitionD1Ev>
 80018f4:	4620      	mov	r0, r4
 80018f6:	bd10      	pop	{r4, pc}
 80018f8:	08027f08 	.word	0x08027f08

080018fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 80018fc:	b510      	push	{r4, lr}
 80018fe:	4604      	mov	r4, r0
 8001900:	f7ff fff2 	bl	80018e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001904:	4620      	mov	r0, r4
 8001906:	2148      	movs	r1, #72	; 0x48
 8001908:	f024 fe5a 	bl	80265c0 <_ZdlPvj>
 800190c:	4620      	mov	r0, r4
 800190e:	bd10      	pop	{r4, pc}

08001910 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001910:	b510      	push	{r4, lr}
 8001912:	4b03      	ldr	r3, [pc, #12]	; (8001920 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001914:	6003      	str	r3, [r0, #0]
 8001916:	4604      	mov	r4, r0
 8001918:	f00d fc3f 	bl	800f19a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800191c:	4620      	mov	r0, r4
 800191e:	bd10      	pop	{r4, pc}
 8001920:	08027ed4 	.word	0x08027ed4

08001924 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001924:	b510      	push	{r4, lr}
 8001926:	4604      	mov	r4, r0
 8001928:	f7ff fff2 	bl	8001910 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800192c:	4620      	mov	r0, r4
 800192e:	f244 71a0 	movw	r1, #18336	; 0x47a0
 8001932:	f024 fe45 	bl	80265c0 <_ZdlPvj>
 8001936:	4620      	mov	r0, r4
 8001938:	bd10      	pop	{r4, pc}
	...

0800193c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800193c:	b510      	push	{r4, lr}
 800193e:	4b03      	ldr	r3, [pc, #12]	; (800194c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001940:	6003      	str	r3, [r0, #0]
 8001942:	4604      	mov	r4, r0
 8001944:	f00d fc29 	bl	800f19a <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001948:	4620      	mov	r0, r4
 800194a:	bd10      	pop	{r4, pc}
 800194c:	08027ea0 	.word	0x08027ea0

08001950 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001950:	b510      	push	{r4, lr}
 8001952:	4604      	mov	r4, r0
 8001954:	f7ff fff2 	bl	800193c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001958:	4620      	mov	r0, r4
 800195a:	2118      	movs	r1, #24
 800195c:	f024 fe30 	bl	80265c0 <_ZdlPvj>
 8001960:	4620      	mov	r0, r4
 8001962:	bd10      	pop	{r4, pc}

08001964 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001964:	b510      	push	{r4, lr}
 8001966:	4b09      	ldr	r3, [pc, #36]	; (800198c <_ZN12FrontendHeapD1Ev+0x28>)
 8001968:	6003      	str	r3, [r0, #0]
 800196a:	4604      	mov	r4, r0
 800196c:	f500 408f 	add.w	r0, r0, #18304	; 0x4780
 8001970:	304c      	adds	r0, #76	; 0x4c
 8001972:	f7ff ffb9 	bl	80018e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001976:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800197a:	f7ff ffc9 	bl	8001910 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800197e:	f104 0014 	add.w	r0, r4, #20
 8001982:	f7ff ffdb 	bl	800193c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001986:	4620      	mov	r0, r4
 8001988:	bd10      	pop	{r4, pc}
 800198a:	bf00      	nop
 800198c:	08027f3c 	.word	0x08027f3c

08001990 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001990:	b508      	push	{r3, lr}
 8001992:	4802      	ldr	r0, [pc, #8]	; (800199c <__tcf_0+0xc>)
 8001994:	f7ff ffe6 	bl	8001964 <_ZN12FrontendHeapD1Ev>
 8001998:	bd08      	pop	{r3, pc}
 800199a:	bf00      	nop
 800199c:	200001a4 	.word	0x200001a4

080019a0 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80019a0:	b510      	push	{r4, lr}
 80019a2:	4604      	mov	r4, r0
 80019a4:	f7ff ffde 	bl	8001964 <_ZN12FrontendHeapD1Ev>
 80019a8:	4620      	mov	r0, r4
 80019aa:	f644 21d4 	movw	r1, #19156	; 0x4ad4
 80019ae:	f024 fe07 	bl	80265c0 <_ZdlPvj>
 80019b2:	4620      	mov	r0, r4
 80019b4:	bd10      	pop	{r4, pc}
	...

080019b8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80019b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80019bc:	f001 f886 	bl	8002acc <_ZN14BitmapDatabase11getInstanceEv>
 80019c0:	4605      	mov	r5, r0
 80019c2:	f001 f887 	bl	8002ad4 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80019c6:	2400      	movs	r4, #0
 80019c8:	4601      	mov	r1, r0
 80019ca:	4623      	mov	r3, r4
 80019cc:	4628      	mov	r0, r5
 80019ce:	4622      	mov	r2, r4
 80019d0:	9400      	str	r4, [sp, #0]
 80019d2:	f016 fe5f 	bl	8018694 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80019d6:	4b26      	ldr	r3, [pc, #152]	; (8001a70 <touchgfx_init+0xb8>)
 80019d8:	4a26      	ldr	r2, [pc, #152]	; (8001a74 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 80019da:	4d27      	ldr	r5, [pc, #156]	; (8001a78 <touchgfx_init+0xc0>)
 80019dc:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80019de:	4620      	mov	r0, r4
 80019e0:	f006 fb78 	bl	80080d4 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80019e4:	4825      	ldr	r0, [pc, #148]	; (8001a7c <touchgfx_init+0xc4>)
 80019e6:	f016 fdbd 	bl	8018564 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80019ea:	782b      	ldrb	r3, [r5, #0]
 80019ec:	f3bf 8f5b 	dmb	ish
 80019f0:	07db      	lsls	r3, r3, #31
 80019f2:	d436      	bmi.n	8001a62 <touchgfx_init+0xaa>
 80019f4:	4628      	mov	r0, r5
 80019f6:	f024 fde5 	bl	80265c4 <__cxa_guard_acquire>
 80019fa:	b390      	cbz	r0, 8001a62 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80019fc:	4c20      	ldr	r4, [pc, #128]	; (8001a80 <touchgfx_init+0xc8>)
 80019fe:	4f21      	ldr	r7, [pc, #132]	; (8001a84 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001a00:	4b21      	ldr	r3, [pc, #132]	; (8001a88 <touchgfx_init+0xd0>)
 8001a02:	6023      	str	r3, [r4, #0]
 8001a04:	f507 76d6 	add.w	r6, r7, #428	; 0x1ac
 8001a08:	f104 0014 	add.w	r0, r4, #20
 8001a0c:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001a10:	6060      	str	r0, [r4, #4]
 8001a12:	f8c4 8008 	str.w	r8, [r4, #8]
 8001a16:	60e7      	str	r7, [r4, #12]
 8001a18:	6126      	str	r6, [r4, #16]
 8001a1a:	f00d fbbf 	bl	800f19c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001a1e:	4b1b      	ldr	r3, [pc, #108]	; (8001a8c <touchgfx_init+0xd4>)
 8001a20:	6163      	str	r3, [r4, #20]
 8001a22:	4640      	mov	r0, r8
 8001a24:	f00d fbba 	bl	800f19c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001a28:	4b19      	ldr	r3, [pc, #100]	; (8001a90 <touchgfx_init+0xd8>)
 8001a2a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001a2c:	4638      	mov	r0, r7
 8001a2e:	f00d fbb5 	bl	800f19c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001a32:	f504 4380 	add.w	r3, r4, #16384	; 0x4000
 8001a36:	4a17      	ldr	r2, [pc, #92]	; (8001a94 <touchgfx_init+0xdc>)
 8001a38:	f8c3 27cc 	str.w	r2, [r3, #1996]	; 0x7cc
 8001a3c:	f603 0014 	addw	r0, r3, #2068	; 0x814
 8001a40:	f007 fa0c 	bl	8008e5c <_ZN5ModelC1Ev>
 8001a44:	4622      	mov	r2, r4
 8001a46:	f107 0148 	add.w	r1, r7, #72	; 0x48
 8001a4a:	4630      	mov	r0, r6
 8001a4c:	f006 fe48 	bl	80086e0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001a50:	4630      	mov	r0, r6
 8001a52:	f002 fe5f 	bl	8004714 <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv>
        static FrontendHeap instance;
 8001a56:	4810      	ldr	r0, [pc, #64]	; (8001a98 <touchgfx_init+0xe0>)
 8001a58:	f024 fdfe 	bl	8026658 <atexit>
 8001a5c:	4628      	mov	r0, r5
 8001a5e:	f024 fdbd 	bl	80265dc <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001a62:	480e      	ldr	r0, [pc, #56]	; (8001a9c <touchgfx_init+0xe4>)
}
 8001a64:	b002      	add	sp, #8
 8001a66:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001a6a:	f7ff bae5 	b.w	8001038 <_ZN11TouchGFXHAL10initializeEv>
 8001a6e:	bf00      	nop
 8001a70:	2000ef80 	.word	0x2000ef80
 8001a74:	20005a98 	.word	0x20005a98
 8001a78:	200001a0 	.word	0x200001a0
 8001a7c:	2000001c 	.word	0x2000001c
 8001a80:	200001a4 	.word	0x200001a4
 8001a84:	20004970 	.word	0x20004970
 8001a88:	08027f3c 	.word	0x08027f3c
 8001a8c:	08027ea0 	.word	0x08027ea0
 8001a90:	08027ed4 	.word	0x08027ed4
 8001a94:	08027f08 	.word	0x08027f08
 8001a98:	08001991 	.word	0x08001991
 8001a9c:	20005a1c 	.word	0x20005a1c

08001aa0 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001aa0:	4770      	bx	lr
	...

08001aa4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001aa4:	4801      	ldr	r0, [pc, #4]	; (8001aac <touchgfx_taskEntry+0x8>)
 8001aa6:	f7ff bae1 	b.w	800106c <_ZN11TouchGFXHAL9taskEntryEv>
 8001aaa:	bf00      	nop
 8001aac:	20005a1c 	.word	0x20005a1c

08001ab0 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001ab0:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001ab2:	4e22      	ldr	r6, [pc, #136]	; (8001b3c <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001ab4:	4c22      	ldr	r4, [pc, #136]	; (8001b40 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8001ab6:	4d23      	ldr	r5, [pc, #140]	; (8001b44 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001ab8:	4b23      	ldr	r3, [pc, #140]	; (8001b48 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001aba:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001abc:	4630      	mov	r0, r6
 8001abe:	f7ff fd79 	bl	80015b4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001ac2:	4628      	mov	r0, r5
 8001ac4:	f01b f8b2 	bl	801cc2c <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8001ac8:	4b20      	ldr	r3, [pc, #128]	; (8001b4c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001aca:	4821      	ldr	r0, [pc, #132]	; (8001b50 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          lastRenderMethod(HARDWARE)
 8001acc:	60dc      	str	r4, [r3, #12]
 8001ace:	2200      	movs	r2, #0
 8001ad0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001ad4:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 8001ad8:	491e      	ldr	r1, [pc, #120]	; (8001b54 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001ada:	861a      	strh	r2, [r3, #48]	; 0x30
 8001adc:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
 8001ae0:	491d      	ldr	r1, [pc, #116]	; (8001b58 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001ae2:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8001ae4:	491d      	ldr	r1, [pc, #116]	; (8001b5c <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8001ae6:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8001aea:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001aec:	f44f 7150 	mov.w	r1, #832	; 0x340
 8001af0:	8001      	strh	r1, [r0, #0]
 8001af2:	481b      	ldr	r0, [pc, #108]	; (8001b60 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 8001af4:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001af6:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001af8:	481a      	ldr	r0, [pc, #104]	; (8001b64 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 8001afa:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001afe:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 8001b02:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001b06:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001b0a:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001b0e:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001b12:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001b16:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001b1a:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001b1e:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
 8001b22:	675a      	str	r2, [r3, #116]	; 0x74
 8001b24:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001b28:	8001      	strh	r1, [r0, #0]
 8001b2a:	480f      	ldr	r0, [pc, #60]	; (8001b68 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001b2c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001b30:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001b32:	490e      	ldr	r1, [pc, #56]	; (8001b6c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001b34:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001b36:	4a0e      	ldr	r2, [pc, #56]	; (8001b70 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001b38:	601a      	str	r2, [r3, #0]
}
 8001b3a:	bd70      	pop	{r4, r5, r6, pc}
 8001b3c:	20004c7c 	.word	0x20004c7c
 8001b40:	20004c78 	.word	0x20004c78
 8001b44:	20005a9c 	.word	0x20005a9c
 8001b48:	08027984 	.word	0x08027984
 8001b4c:	20005a1c 	.word	0x20005a1c
 8001b50:	2000ef10 	.word	0x2000ef10
 8001b54:	01000001 	.word	0x01000001
 8001b58:	01010000 	.word	0x01010000
 8001b5c:	2000ef1c 	.word	0x2000ef1c
 8001b60:	2000ef16 	.word	0x2000ef16
 8001b64:	2000ef12 	.word	0x2000ef12
 8001b68:	2000ef18 	.word	0x2000ef18
 8001b6c:	2000ef14 	.word	0x2000ef14
 8001b70:	08027b10 	.word	0x08027b10

08001b74 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001b74:	4801      	ldr	r0, [pc, #4]	; (8001b7c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001b76:	f7ff bcf9 	b.w	800156c <_ZN8STM32DMAD1Ev>
 8001b7a:	bf00      	nop
 8001b7c:	20004c7c 	.word	0x20004c7c

08001b80 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001b80:	2000      	movs	r0, #0
 8001b82:	4770      	bx	lr

08001b84 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001b84:	8081      	strh	r1, [r0, #4]
    }
 8001b86:	4770      	bx	lr

08001b88 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001b88:	80c1      	strh	r1, [r0, #6]
    }
 8001b8a:	4770      	bx	lr

08001b8c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001b8c:	8101      	strh	r1, [r0, #8]
    }
 8001b8e:	4770      	bx	lr

08001b90 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001b90:	8141      	strh	r1, [r0, #10]
    }
 8001b92:	4770      	bx	lr

08001b94 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001b94:	4770      	bx	lr

08001b96 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001b96:	4770      	bx	lr

08001b98 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001b98:	4770      	bx	lr

08001b9a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001b9a:	4770      	bx	lr

08001b9c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001b9c:	4770      	bx	lr

08001b9e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001b9e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001ba0:	88c4      	ldrh	r4, [r0, #6]
 8001ba2:	6803      	ldr	r3, [r0, #0]
 8001ba4:	1b12      	subs	r2, r2, r4
 8001ba6:	8884      	ldrh	r4, [r0, #4]
 8001ba8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001baa:	1b09      	subs	r1, r1, r4
 8001bac:	b212      	sxth	r2, r2
    }
 8001bae:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001bb2:	b209      	sxth	r1, r1
 8001bb4:	4718      	bx	r3

08001bb6 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001bb6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001bba:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001bbc:	f04f 33ff 	mov.w	r3, #4294967295
 8001bc0:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001bc2:	6813      	ldr	r3, [r2, #0]
 8001bc4:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001bc6:	6010      	str	r0, [r2, #0]
    }
 8001bc8:	4770      	bx	lr

08001bca <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001bca:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001bce:	b11a      	cbz	r2, 8001bd8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001bd0:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001bd4:	b102      	cbz	r2, 8001bd8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001bd6:	6018      	str	r0, [r3, #0]
        }
    }
 8001bd8:	4770      	bx	lr

08001bda <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001bda:	2000      	movs	r0, #0
 8001bdc:	4770      	bx	lr

08001bde <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001bde:	888b      	ldrh	r3, [r1, #4]
 8001be0:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001be2:	2001      	movs	r0, #1
 8001be4:	4770      	bx	lr

08001be6 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001be6:	4770      	bx	lr

08001be8 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001be8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8001bec:	4770      	bx	lr

08001bee <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8001bee:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8001bf2:	4770      	bx	lr

08001bf4 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001bf4:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001bf6:	2200      	movs	r2, #0
        return rect.width;
 8001bf8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8001bfc:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8001c00:	8002      	strh	r2, [r0, #0]
 8001c02:	8042      	strh	r2, [r0, #2]
 8001c04:	8084      	strh	r4, [r0, #4]
 8001c06:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001c08:	bd10      	pop	{r4, pc}

08001c0a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8001c0a:	2200      	movs	r2, #0
 8001c0c:	8002      	strh	r2, [r0, #0]
 8001c0e:	8042      	strh	r2, [r0, #2]
 8001c10:	8082      	strh	r2, [r0, #4]
 8001c12:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001c14:	4770      	bx	lr
	...

08001c18 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001c18:	4b02      	ldr	r3, [pc, #8]	; (8001c24 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8001c1a:	2290      	movs	r2, #144	; 0x90
 8001c1c:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 8001c20:	4770      	bx	lr
 8001c22:	bf00      	nop
 8001c24:	e000e100 	.word	0xe000e100

08001c28 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c28:	4b02      	ldr	r3, [pc, #8]	; (8001c34 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8001c2a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001c2e:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001c30:	4770      	bx	lr
 8001c32:	bf00      	nop
 8001c34:	e000e100 	.word	0xe000e100

08001c38 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 8001c38:	4770      	bx	lr

08001c3a <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 8001c3a:	4770      	bx	lr

08001c3c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001c3c:	b570      	push	{r4, r5, r6, lr}
 8001c3e:	4604      	mov	r4, r0
    HAL::initialize();
 8001c40:	f00e f879 	bl	800fd36 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001c44:	6823      	ldr	r3, [r4, #0]
 8001c46:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001c48:	f013 f926 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
 8001c4c:	4601      	mov	r1, r0
 8001c4e:	4620      	mov	r0, r4
 8001c50:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 8001c52:	6823      	ldr	r3, [r4, #0]
 8001c54:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001c58:	2300      	movs	r3, #0
 8001c5a:	4620      	mov	r0, r4
 8001c5c:	46ac      	mov	ip, r5
 8001c5e:	461a      	mov	r2, r3
}
 8001c60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 8001c64:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8001c68:	4760      	bx	ip

08001c6a <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001c6a:	f00e b815 	b.w	800fc98 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001c6e <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001c6e:	f00e b976 	b.w	800ff5e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001c72 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001c72:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001c76:	b112      	cbz	r2, 8001c7e <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001c78:	6803      	ldr	r3, [r0, #0]
 8001c7a:	695b      	ldr	r3, [r3, #20]
 8001c7c:	4718      	bx	r3
    }
 8001c7e:	4770      	bx	lr

08001c80 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c80:	4b04      	ldr	r3, [pc, #16]	; (8001c94 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8001c82:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001c86:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001c8a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001c8e:	f3bf 8f6f 	isb	sy
}
 8001c92:	4770      	bx	lr
 8001c94:	e000e100 	.word	0xe000e100

08001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001c98:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001c9a:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001c9c:	4e12      	ldr	r6, [pc, #72]	; (8001ce8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001c9e:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001ca0:	4b12      	ldr	r3, [pc, #72]	; (8001cec <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001ca2:	6003      	str	r3, [r0, #0]
 8001ca4:	6833      	ldr	r3, [r6, #0]
 8001ca6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8001caa:	4605      	mov	r5, r0
 8001cac:	b10a      	cbz	r2, 8001cb2 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001cae:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001cb0:	b900      	cbnz	r0, 8001cb4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001cb2:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001cb4:	6803      	ldr	r3, [r0, #0]
 8001cb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001cb8:	4798      	blx	r3
        return auxiliaryLCD;
 8001cba:	6833      	ldr	r3, [r6, #0]
 8001cbc:	fab0 f480 	clz	r4, r0
 8001cc0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001cc2:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001cc4:	b130      	cbz	r0, 8001cd4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001cc6:	6803      	ldr	r3, [r0, #0]
 8001cc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001cca:	4798      	blx	r3
 8001ccc:	2800      	cmp	r0, #0
 8001cce:	bf08      	it	eq
 8001cd0:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001cd4:	b92c      	cbnz	r4, 8001ce2 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001cd6:	4b06      	ldr	r3, [pc, #24]	; (8001cf0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001cd8:	4a06      	ldr	r2, [pc, #24]	; (8001cf4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001cda:	4807      	ldr	r0, [pc, #28]	; (8001cf8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001cdc:	212c      	movs	r1, #44	; 0x2c
 8001cde:	f024 fc9d 	bl	802661c <__assert_func>
    }
 8001ce2:	4628      	mov	r0, r5
 8001ce4:	bd70      	pop	{r4, r5, r6, pc}
 8001ce6:	bf00      	nop
 8001ce8:	2000ef1c 	.word	0x2000ef1c
 8001cec:	0802804c 	.word	0x0802804c
 8001cf0:	08027f48 	.word	0x08027f48
 8001cf4:	08027fa6 	.word	0x08027fa6
 8001cf8:	08027fdf 	.word	0x08027fdf

08001cfc <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001cfc:	4901      	ldr	r1, [pc, #4]	; (8001d04 <vApplicationIdleHook+0x8>)
 8001cfe:	2000      	movs	r0, #0
 8001d00:	f00c bdd0 	b.w	800e8a4 <vTaskSetApplicationTaskTag>
 8001d04:	08001409 	.word	0x08001409

08001d08 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001d08:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001d0a:	2064      	movs	r0, #100	; 0x64
 8001d0c:	f00b f97f 	bl	800d00e <osDelay>
  for(;;)
 8001d10:	e7fb      	b.n	8001d0a <StartDefaultTask+0x2>
	...

08001d14 <SystemClock_Config>:
{
 8001d14:	b530      	push	{r4, r5, lr}
 8001d16:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001d18:	2210      	movs	r2, #16
 8001d1a:	2100      	movs	r1, #0
 8001d1c:	a809      	add	r0, sp, #36	; 0x24
 8001d1e:	f024 fd09 	bl	8026734 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001d22:	2214      	movs	r2, #20
 8001d24:	2100      	movs	r1, #0
 8001d26:	a802      	add	r0, sp, #8
 8001d28:	f024 fd04 	bl	8026734 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001d2c:	2400      	movs	r4, #0
 8001d2e:	4b1f      	ldr	r3, [pc, #124]	; (8001dac <SystemClock_Config+0x98>)
 8001d30:	9400      	str	r4, [sp, #0]
 8001d32:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001d34:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001d38:	641a      	str	r2, [r3, #64]	; 0x40
 8001d3a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d3c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d40:	9300      	str	r3, [sp, #0]
 8001d42:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001d44:	4b1a      	ldr	r3, [pc, #104]	; (8001db0 <SystemClock_Config+0x9c>)
 8001d46:	9401      	str	r4, [sp, #4]
 8001d48:	681a      	ldr	r2, [r3, #0]
 8001d4a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001d4e:	601a      	str	r2, [r3, #0]
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001d56:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001d58:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001d5a:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001d5c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001d60:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001d64:	2502      	movs	r5, #2
 8001d66:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001d6a:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001d6c:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001d70:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001d74:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001d78:	2004      	movs	r0, #4
 8001d7a:	2306      	movs	r3, #6
 8001d7c:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001d80:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001d82:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001d84:	f00a fc20 	bl	800c5c8 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001d88:	f009 fe74 	bl	800ba74 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001d8c:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001d8e:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001d92:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001d94:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001d98:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001d9c:	2105      	movs	r1, #5
 8001d9e:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001da0:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001da4:	f00a f9e4 	bl	800c170 <HAL_RCC_ClockConfig>
}
 8001da8:	b015      	add	sp, #84	; 0x54
 8001daa:	bd30      	pop	{r4, r5, pc}
 8001dac:	40023800 	.word	0x40023800
 8001db0:	40007000 	.word	0x40007000

08001db4 <main>:
{
 8001db4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001db8:	b0bb      	sub	sp, #236	; 0xec
  HAL_Init();
 8001dba:	f008 f841 	bl	8009e40 <HAL_Init>
  SystemClock_Config();
 8001dbe:	f7ff ffa9 	bl	8001d14 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dc2:	2214      	movs	r2, #20
 8001dc4:	2100      	movs	r1, #0
 8001dc6:	a82d      	add	r0, sp, #180	; 0xb4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001dc8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dca:	f024 fcb3 	bl	8026734 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001dce:	4bc3      	ldr	r3, [pc, #780]	; (80020dc <main+0x328>)
 8001dd0:	9403      	str	r4, [sp, #12]
 8001dd2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001dd4:	48c2      	ldr	r0, [pc, #776]	; (80020e0 <main+0x32c>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001dd6:	f042 0210 	orr.w	r2, r2, #16
 8001dda:	631a      	str	r2, [r3, #48]	; 0x30
 8001ddc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dde:	f002 0210 	and.w	r2, r2, #16
 8001de2:	9203      	str	r2, [sp, #12]
 8001de4:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001de6:	9404      	str	r4, [sp, #16]
 8001de8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dea:	f042 0202 	orr.w	r2, r2, #2
 8001dee:	631a      	str	r2, [r3, #48]	; 0x30
 8001df0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001df2:	f002 0202 	and.w	r2, r2, #2
 8001df6:	9204      	str	r2, [sp, #16]
 8001df8:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001dfa:	9405      	str	r4, [sp, #20]
 8001dfc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dfe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001e02:	631a      	str	r2, [r3, #48]	; 0x30
 8001e04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e06:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001e0a:	9205      	str	r2, [sp, #20]
 8001e0c:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e0e:	9406      	str	r4, [sp, #24]
 8001e10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e12:	f042 0208 	orr.w	r2, r2, #8
 8001e16:	631a      	str	r2, [r3, #48]	; 0x30
 8001e18:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e1a:	f002 0208 	and.w	r2, r2, #8
 8001e1e:	9206      	str	r2, [sp, #24]
 8001e20:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001e22:	9407      	str	r4, [sp, #28]
 8001e24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e26:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001e2a:	631a      	str	r2, [r3, #48]	; 0x30
 8001e2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e2e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001e32:	9207      	str	r2, [sp, #28]
 8001e34:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e36:	9408      	str	r4, [sp, #32]
 8001e38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e3a:	f042 0204 	orr.w	r2, r2, #4
 8001e3e:	631a      	str	r2, [r3, #48]	; 0x30
 8001e40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e42:	f002 0204 	and.w	r2, r2, #4
 8001e46:	9208      	str	r2, [sp, #32]
 8001e48:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e4a:	9409      	str	r4, [sp, #36]	; 0x24
 8001e4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e4e:	f042 0220 	orr.w	r2, r2, #32
 8001e52:	631a      	str	r2, [r3, #48]	; 0x30
 8001e54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e56:	f002 0220 	and.w	r2, r2, #32
 8001e5a:	9209      	str	r2, [sp, #36]	; 0x24
 8001e5c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001e5e:	940a      	str	r4, [sp, #40]	; 0x28
 8001e60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e62:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001e66:	631a      	str	r2, [r3, #48]	; 0x30
 8001e68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e6a:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001e6e:	920a      	str	r2, [sp, #40]	; 0x28
 8001e70:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001e72:	940b      	str	r4, [sp, #44]	; 0x2c
 8001e74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e76:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001e7a:	631a      	str	r2, [r3, #48]	; 0x30
 8001e7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e7e:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001e82:	920b      	str	r2, [sp, #44]	; 0x2c
 8001e84:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e86:	940c      	str	r4, [sp, #48]	; 0x30
 8001e88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e8a:	f042 0201 	orr.w	r2, r2, #1
 8001e8e:	631a      	str	r2, [r3, #48]	; 0x30
 8001e90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e92:	f002 0201 	and.w	r2, r2, #1
 8001e96:	920c      	str	r2, [sp, #48]	; 0x30
 8001e98:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001e9a:	940d      	str	r4, [sp, #52]	; 0x34
 8001e9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e9e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001ea2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ea4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ea6:	f403 7300 	and.w	r3, r3, #512	; 0x200
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001eaa:	4622      	mov	r2, r4
 8001eac:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001eb0:	930d      	str	r3, [sp, #52]	; 0x34
 8001eb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001eb4:	f008 ffda 	bl	800ae6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LAP_COUNTER_TRIGGER_GPIO_Port, LAP_COUNTER_TRIGGER_Pin, GPIO_PIN_SET);
 8001eb8:	488a      	ldr	r0, [pc, #552]	; (80020e4 <main+0x330>)
 8001eba:	2201      	movs	r2, #1
 8001ebc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001ec0:	f008 ffd4 	bl	800ae6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001ec4:	4888      	ldr	r0, [pc, #544]	; (80020e8 <main+0x334>)
 8001ec6:	2201      	movs	r2, #1
 8001ec8:	2108      	movs	r1, #8
 8001eca:	f008 ffcf 	bl	800ae6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 8001ece:	4887      	ldr	r0, [pc, #540]	; (80020ec <main+0x338>)
 8001ed0:	4622      	mov	r2, r4
 8001ed2:	2146      	movs	r1, #70	; 0x46
 8001ed4:	f008 ffca 	bl	800ae6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DASHBOARD_NEUTRAL_LED_GPIO_Port, DASHBOARD_NEUTRAL_LED_Pin, GPIO_PIN_RESET);
 8001ed8:	4882      	ldr	r0, [pc, #520]	; (80020e4 <main+0x330>)
 8001eda:	4622      	mov	r2, r4
 8001edc:	2110      	movs	r1, #16
 8001ede:	f008 ffc5 	bl	800ae6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7|MCP2515_CS_Pin, GPIO_PIN_RESET);
 8001ee2:	4622      	mov	r2, r4
 8001ee4:	4882      	ldr	r0, [pc, #520]	; (80020f0 <main+0x33c>)
 8001ee6:	21c0      	movs	r1, #192	; 0xc0
 8001ee8:	f008 ffc0 	bl	800ae6c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = STEERING_RIGHT_RED_BUTTON_Pin;
 8001eec:	f44f 5a00 	mov.w	sl, #8192	; 0x2000
  HAL_GPIO_Init(STEERING_RIGHT_RED_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001ef0:	487b      	ldr	r0, [pc, #492]	; (80020e0 <main+0x32c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ef2:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(STEERING_RIGHT_RED_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001ef4:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001ef6:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ef8:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001efc:	e9cd a42d 	strd	sl, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(STEERING_RIGHT_RED_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001f00:	f008 fe26 	bl	800ab50 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f04:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001f08:	4875      	ldr	r0, [pc, #468]	; (80020e0 <main+0x32c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f0a:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001f0e:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f10:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001f14:	2511      	movs	r5, #17
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f16:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001f18:	f008 fe1a 	bl	800ab50 <HAL_GPIO_Init>
  HAL_GPIO_Init(LAP_COUNTER_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001f1c:	4871      	ldr	r0, [pc, #452]	; (80020e4 <main+0x330>)
  GPIO_InitStruct.Pin = LAP_COUNTER_TRIGGER_Pin;
 8001f1e:	f8cd a0b4 	str.w	sl, [sp, #180]	; 0xb4
  HAL_GPIO_Init(LAP_COUNTER_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001f22:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f24:	e9cd 542e 	strd	r5, r4, [sp, #184]	; 0xb8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f28:	9430      	str	r4, [sp, #192]	; 0xc0
  HAL_GPIO_Init(LAP_COUNTER_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001f2a:	f008 fe11 	bl	800ab50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001f2e:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001f30:	486d      	ldr	r0, [pc, #436]	; (80020e8 <main+0x334>)
 8001f32:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001f34:	e9cd 352d 	strd	r3, r5, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f38:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001f3c:	f008 fe08 	bl	800ab50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 8001f40:	2346      	movs	r3, #70	; 0x46
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f42:	486a      	ldr	r0, [pc, #424]	; (80020ec <main+0x338>)
  hdma2d.Instance = DMA2D;
 8001f44:	4d6b      	ldr	r5, [pc, #428]	; (80020f4 <main+0x340>)
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f46:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f48:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f4c:	e9cd 482f 	strd	r4, r8, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f50:	f008 fdfe 	bl	800ab50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = STEERING_LEFT_RED_BUTTON_Pin|STEERING_RIGHT_PADDLE_BUTTON_Pin;
 8001f54:	2390      	movs	r3, #144	; 0x90
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f56:	4865      	ldr	r0, [pc, #404]	; (80020ec <main+0x338>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f58:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f5a:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001f5c:	e9cd 342d 	strd	r3, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f60:	f008 fdf6 	bl	800ab50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DASHBOARD_NEUTRAL_LED_Pin;
 8001f64:	2310      	movs	r3, #16
  HAL_GPIO_Init(DASHBOARD_NEUTRAL_LED_GPIO_Port, &GPIO_InitStruct);
 8001f66:	485f      	ldr	r0, [pc, #380]	; (80020e4 <main+0x330>)
 8001f68:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001f6a:	f04f 0980 	mov.w	r9, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f6e:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f72:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(DASHBOARD_NEUTRAL_LED_GPIO_Port, &GPIO_InitStruct);
 8001f76:	f008 fdeb 	bl	800ab50 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001f7a:	485d      	ldr	r0, [pc, #372]	; (80020f0 <main+0x33c>)
 8001f7c:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f7e:	e9cd 962d 	strd	r9, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f82:	e9cd 482f 	strd	r4, r8, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001f86:	f008 fde3 	bl	800ab50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = STEERING_GREEN_BUTTON_Pin;
 8001f8a:	2320      	movs	r3, #32
  HAL_GPIO_Init(STEERING_GREEN_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001f8c:	4855      	ldr	r0, [pc, #340]	; (80020e4 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f8e:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(STEERING_GREEN_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001f90:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001f92:	e9cd 342d 	strd	r3, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(STEERING_GREEN_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001f96:	f008 fddb 	bl	800ab50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCP2515_CS_Pin;
 8001f9a:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(MCP2515_CS_GPIO_Port, &GPIO_InitStruct);
 8001f9c:	4854      	ldr	r0, [pc, #336]	; (80020f0 <main+0x33c>)
 8001f9e:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pin = STEERING_LEFT_PADDLE_BUTTON_Pin;
 8001fa0:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001fa2:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001fa6:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCP2515_CS_GPIO_Port, &GPIO_InitStruct);
 8001faa:	f008 fdd1 	bl	800ab50 <HAL_GPIO_Init>
  HAL_GPIO_Init(STEERING_LEFT_PADDLE_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001fae:	a92d      	add	r1, sp, #180	; 0xb4
 8001fb0:	4851      	ldr	r0, [pc, #324]	; (80020f8 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fb2:	942f      	str	r4, [sp, #188]	; 0xbc
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001fb4:	e9cd 742d 	strd	r7, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(STEERING_LEFT_PADDLE_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001fb8:	f008 fdca 	bl	800ab50 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001fbc:	484f      	ldr	r0, [pc, #316]	; (80020fc <main+0x348>)
 8001fbe:	4b50      	ldr	r3, [pc, #320]	; (8002100 <main+0x34c>)
 8001fc0:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001fc2:	f007 ffe3 	bl	8009f8c <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001fc6:	4b4f      	ldr	r3, [pc, #316]	; (8002104 <main+0x350>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001fc8:	e9c5 440a 	strd	r4, r4, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001fcc:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001fd0:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001fd2:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001fd6:	e9c5 4402 	strd	r4, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001fda:	f008 f8eb 	bl	800a1b4 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001fde:	4631      	mov	r1, r6
 8001fe0:	4628      	mov	r0, r5
 8001fe2:	f008 f99f 	bl	800a324 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001fe6:	4649      	mov	r1, r9
 8001fe8:	4622      	mov	r2, r4
 8001fea:	4841      	ldr	r0, [pc, #260]	; (80020f0 <main+0x33c>)
  hdsi.Instance = DSI;
 8001fec:	4d46      	ldr	r5, [pc, #280]	; (8002108 <main+0x354>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001fee:	f008 ff3d 	bl	800ae6c <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8001ff2:	2014      	movs	r0, #20
 8001ff4:	f007 ff50 	bl	8009e98 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001ff8:	4649      	mov	r1, r9
 8001ffa:	4632      	mov	r2, r6
 8001ffc:	483c      	ldr	r0, [pc, #240]	; (80020f0 <main+0x33c>)
 8001ffe:	f008 ff35 	bl	800ae6c <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8002002:	200a      	movs	r0, #10
 8002004:	f007 ff48 	bl	8009e98 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8002008:	2224      	movs	r2, #36	; 0x24
 800200a:	4621      	mov	r1, r4
 800200c:	a817      	add	r0, sp, #92	; 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 800200e:	9410      	str	r4, [sp, #64]	; 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8002010:	f024 fb90 	bl	8026734 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8002014:	2218      	movs	r2, #24
 8002016:	4621      	mov	r1, r4
 8002018:	a811      	add	r0, sp, #68	; 0x44
 800201a:	f024 fb8b 	bl	8026734 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 800201e:	2234      	movs	r2, #52	; 0x34
 8002020:	4621      	mov	r1, r4
 8002022:	a82d      	add	r0, sp, #180	; 0xb4
 8002024:	f024 fb86 	bl	8026734 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 8002028:	222c      	movs	r2, #44	; 0x2c
 800202a:	4621      	mov	r1, r4
 800202c:	eb0d 0009 	add.w	r0, sp, r9
 8002030:	f024 fb80 	bl	8026734 <memset>
  hdsi.Instance = DSI;
 8002034:	4b35      	ldr	r3, [pc, #212]	; (800210c <main+0x358>)
  hdsi.Init.TXEscapeCkdiv = 4;
 8002036:	2204      	movs	r2, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8002038:	e9c5 3400 	strd	r3, r4, [r5]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800203c:	a90e      	add	r1, sp, #56	; 0x38
  PLLInit.PLLNDIV = 125;
 800203e:	237d      	movs	r3, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8002040:	4628      	mov	r0, r5
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8002042:	e9c5 2602 	strd	r2, r6, [r5, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8002046:	e9cd 370e 	strd	r3, r7, [sp, #56]	; 0x38
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800204a:	f008 fa33 	bl	800a4b4 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 800204e:	a917      	add	r1, sp, #92	; 0x5c
 8002050:	4628      	mov	r0, r5
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 8002052:	e9cd 6417 	strd	r6, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 8002056:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 800205a:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 800205e:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 8002062:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8002064:	f008 fc52 	bl	800a90c <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8002068:	221c      	movs	r2, #28
 800206a:	2321      	movs	r3, #33	; 0x21
 800206c:	e9cd 2311 	strd	r2, r3, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 8002070:	210f      	movs	r1, #15
 8002072:	2319      	movs	r3, #25
 8002074:	e9cd 1313 	strd	r1, r3, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8002078:	4628      	mov	r0, r5
 800207a:	a911      	add	r1, sp, #68	; 0x44
  PhyTimings.StopWaitTime = 0;
 800207c:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8002080:	f008 fc07 	bl	800a892 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8002084:	2204      	movs	r2, #4
 8002086:	4611      	mov	r1, r2
 8002088:	4628      	mov	r0, r5
 800208a:	f008 fbf1 	bl	800a870 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 800208e:	f242 7110 	movw	r1, #10000	; 0x2710
 8002092:	4628      	mov	r0, r5
 8002094:	f008 fd45 	bl	800ab22 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8002098:	4621      	mov	r1, r4
 800209a:	4628      	mov	r0, r5
 800209c:	f008 f9a7 	bl	800a3ee <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 80020a0:	f44f 7080 	mov.w	r0, #256	; 0x100
 80020a4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80020a8:	e9cd 032d 	strd	r0, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 80020ac:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 80020b0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80020b4:	e9cd b32f 	strd	fp, r3, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadOneP = DSI_LP_GSR1P_ENABLE;
 80020b8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 80020bc:	e9cd 3a31 	strd	r3, sl, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 80020c0:	f44f 4a80 	mov.w	sl, #16384	; 0x4000
 80020c4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 80020c8:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 80020cc:	e9cd a333 	strd	sl, r3, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 80020d0:	f44f 2380 	mov.w	r3, #262144	; 0x40000
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 80020d4:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 80020d8:	e01a      	b.n	8002110 <main+0x35c>
 80020da:	bf00      	nop
 80020dc:	40023800 	.word	0x40023800
 80020e0:	40021800 	.word	0x40021800
 80020e4:	40020800 	.word	0x40020800
 80020e8:	40022800 	.word	0x40022800
 80020ec:	40020000 	.word	0x40020000
 80020f0:	40021c00 	.word	0x40021c00
 80020f4:	20005b38 	.word	0x20005b38
 80020f8:	40020400 	.word	0x40020400
 80020fc:	20005b30 	.word	0x20005b30
 8002100:	40023000 	.word	0x40023000
 8002104:	4002b000 	.word	0x4002b000
 8002108:	20005b78 	.word	0x20005b78
 800210c:	40016c00 	.word	0x40016c00
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8002110:	e9cd c335 	strd	ip, r3, [sp, #212]	; 0xd4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8002114:	a92d      	add	r1, sp, #180	; 0xb4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8002116:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 800211a:	4628      	mov	r0, r5
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 800211c:	e9cd e337 	strd	lr, r3, [sp, #220]	; 0xdc
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8002120:	9739      	str	r7, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8002122:	f008 fb71 	bl	800a808 <HAL_DSI_ConfigCommand>
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8002126:	22c8      	movs	r2, #200	; 0xc8
 8002128:	2310      	movs	r3, #16
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 800212a:	eb0d 0109 	add.w	r1, sp, r9
 800212e:	4628      	mov	r0, r5
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8002130:	e9cd 2322 	strd	r2, r3, [sp, #136]	; 0x88
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 8002134:	e9cd 9428 	strd	r9, r4, [sp, #160]	; 0xa0
  CmdCfg.ColorCoding = DSI_RGB565;
 8002138:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_HIGH;
 800213c:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8002140:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8002144:	962a      	str	r6, [sp, #168]	; 0xa8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8002146:	f008 faed 	bl	800a724 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 800214a:	4621      	mov	r1, r4
 800214c:	4628      	mov	r0, r5
 800214e:	f008 fad8 	bl	800a702 <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8002152:	4877      	ldr	r0, [pc, #476]	; (8002330 <main+0x57c>)
 8002154:	4977      	ldr	r1, [pc, #476]	; (8002334 <main+0x580>)
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8002156:	6084      	str	r4, [r0, #8]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_32;
 8002158:	2204      	movs	r2, #4
 800215a:	2320      	movs	r3, #32
 800215c:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8002160:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8002164:	2340      	movs	r3, #64	; 0x40
 8002166:	f44f 71c0 	mov.w	r1, #384	; 0x180
 800216a:	e9c0 3105 	strd	r3, r1, [r0, #20]
  SdramTiming.ExitSelfRefreshDelay = 7;
 800216e:	2107      	movs	r1, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8002170:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  SdramTiming.SelfRefreshTime = 4;
 8002174:	e9cd 122e 	strd	r1, r2, [sp, #184]	; 0xb8
  SdramTiming.WriteRecoveryTime = 3;
 8002178:	e9cd 1830 	strd	r1, r8, [sp, #192]	; 0xc0
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800217c:	a92d      	add	r1, sp, #180	; 0xb4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 800217e:	e9c0 3a09 	strd	r3, sl, [r0, #36]	; 0x24
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8002182:	e9c0 4407 	strd	r4, r4, [r0, #28]
  SdramTiming.RCDDelay = 2;
 8002186:	e9cd 7732 	strd	r7, r7, [sp, #200]	; 0xc8
  SdramTiming.LoadToActiveDelay = 2;
 800218a:	972d      	str	r7, [sp, #180]	; 0xb4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800218c:	f00a fbd6 	bl	800c93c <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 8002190:	f007 fd84 	bl	8009c9c <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 8002194:	f007 fd34 	bl	8009c00 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8002198:	2234      	movs	r2, #52	; 0x34
 800219a:	4621      	mov	r1, r4
 800219c:	eb0d 0009 	add.w	r0, sp, r9
 80021a0:	f024 fac8 	bl	8026734 <memset>
  hltdc.Instance = LTDC;
 80021a4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8002368 <main+0x5b4>
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 80021a8:	4963      	ldr	r1, [pc, #396]	; (8002338 <main+0x584>)
  hltdc.Init.Backcolor.Blue = 0;
 80021aa:	f8a8 4034 	strh.w	r4, [r8, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 80021ae:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80021b2:	e9c8 1200 	strd	r1, r2, [r8]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AH;
 80021b6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80021ba:	e9c8 2402 	strd	r2, r4, [r8, #8]
  hltdc.Init.AccumulatedActiveH = 482;
 80021be:	20ca      	movs	r0, #202	; 0xca
 80021c0:	f44f 72f1 	mov.w	r2, #482	; 0x1e2
  hltdc.Init.TotalHeigh = 483;
 80021c4:	f04f 0ccb 	mov.w	ip, #203	; 0xcb
  hltdc.Init.AccumulatedActiveH = 482;
 80021c8:	e9c8 0209 	strd	r0, r2, [r8, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80021cc:	f240 12e3 	movw	r2, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80021d0:	4640      	mov	r0, r8
  hltdc.Init.TotalHeigh = 483;
 80021d2:	e9c8 c20b 	strd	ip, r2, [r8, #44]	; 0x2c
  hltdc.Init.HorizontalSync = 1;
 80021d6:	e9c8 4604 	strd	r4, r6, [r8, #16]
  hltdc.Init.AccumulatedHBP = 2;
 80021da:	e9c8 6706 	strd	r6, r7, [r8, #24]
  hltdc.Init.AccumulatedVBP = 2;
 80021de:	f8c8 7020 	str.w	r7, [r8, #32]
  hltdc.Init.Backcolor.Red = 0;
 80021e2:	f888 4036 	strb.w	r4, [r8, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80021e6:	f009 fb0f 	bl	800b808 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80021ea:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.FBStartAdress = 0xC0000000;
 80021ec:	f04f 0e05 	mov.w	lr, #5
  pLayerCfg.WindowX1 = 200;
 80021f0:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 80021f2:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 80021f6:	e9cd 1425 	strd	r1, r4, [sp, #148]	; 0x94
  pLayerCfg.FBStartAdress = 0xC0000000;
 80021fa:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80021fe:	e9cd e128 	strd	lr, r1, [sp, #160]	; 0xa0
  pLayerCfg.ImageHeight = 480;
 8002202:	e9cd 322a 	strd	r3, r2, [sp, #168]	; 0xa8
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002206:	eb0d 0109 	add.w	r1, sp, r9
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800220a:	e9cd 2723 	strd	r2, r7, [sp, #140]	; 0x8c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800220e:	4640      	mov	r0, r8
 8002210:	4622      	mov	r2, r4
  pLayerCfg.WindowY0 = 0;
 8002212:	e9cd 3421 	strd	r3, r4, [sp, #132]	; 0x84
  pLayerCfg.WindowX0 = 0;
 8002216:	9420      	str	r4, [sp, #128]	; 0x80
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8002218:	f8cd b09c 	str.w	fp, [sp, #156]	; 0x9c
  pLayerCfg.Backcolor.Blue = 0;
 800221c:	f8ad 40b0 	strh.w	r4, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 8002220:	f88d 40b2 	strb.w	r4, [sp, #178]	; 0xb2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002224:	f009 fbbc 	bl	800b9a0 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8002228:	f8d8 2000 	ldr.w	r2, [r8]
  hi2c1.Init.ClockSpeed = 400000;
 800222c:	f8df 913c 	ldr.w	r9, [pc, #316]	; 800236c <main+0x5b8>
  __HAL_LTDC_DISABLE(&hltdc);
 8002230:	6993      	ldr	r3, [r2, #24]
 8002232:	f023 0301 	bic.w	r3, r3, #1
 8002236:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8002238:	4628      	mov	r0, r5
 800223a:	f008 fbcd 	bl	800a9d8 <HAL_DSI_Start>
  NT35510_Init(NT35510_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 800223e:	4631      	mov	r1, r6
 8002240:	4638      	mov	r0, r7
 8002242:	f006 ff81 	bl	8009148 <NT35510_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, NT35510_CMD_DISPOFF, 0x00);
 8002246:	2328      	movs	r3, #40	; 0x28
 8002248:	2215      	movs	r2, #21
 800224a:	4621      	mov	r1, r4
 800224c:	4628      	mov	r0, r5
 800224e:	9400      	str	r4, [sp, #0]
 8002250:	f008 fbf5 	bl	800aa3e <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8002254:	a92d      	add	r1, sp, #180	; 0xb4
 8002256:	4628      	mov	r0, r5
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 8002258:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 800225c:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8002260:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8002264:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 8002268:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 800226c:	9437      	str	r4, [sp, #220]	; 0xdc
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 800226e:	f008 facb 	bl	800a808 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8002272:	f44f 7148 	mov.w	r1, #800	; 0x320
 8002276:	4622      	mov	r2, r4
 8002278:	4640      	mov	r0, r8
 800227a:	f009 fbbf 	bl	800b9fc <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 800227e:	f8d8 2000 	ldr.w	r2, [r8]
  hqspi.Instance = QUADSPI;
 8002282:	482e      	ldr	r0, [pc, #184]	; (800233c <main+0x588>)
  __HAL_LTDC_ENABLE(&hltdc);
 8002284:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 8002286:	4d2e      	ldr	r5, [pc, #184]	; (8002340 <main+0x58c>)
  hqspi.Init.FifoThreshold = 1;
 8002288:	6086      	str	r6, [r0, #8]
  __HAL_LTDC_ENABLE(&hltdc);
 800228a:	4333      	orrs	r3, r6
 800228c:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 800228e:	4b2d      	ldr	r3, [pc, #180]	; (8002344 <main+0x590>)
  hqspi.Init.FlashSize = 27;
 8002290:	f04f 0810 	mov.w	r8, #16
  hqspi.Init.ClockPrescaler = 1;
 8002294:	e9c0 3600 	strd	r3, r6, [r0]
  hqspi.Init.FlashSize = 27;
 8002298:	231b      	movs	r3, #27
 800229a:	e9c0 8303 	strd	r8, r3, [r0, #12]
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 800229e:	e9c0 b405 	strd	fp, r4, [r0, #20]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 80022a2:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80022a6:	f009 fcf3 	bl	800bc90 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 80022aa:	f007 fb6f 	bl	800998c <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 80022ae:	f007 faa3 	bl	80097f8 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 80022b2:	f007 fa19 	bl	80096e8 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 80022b6:	4b24      	ldr	r3, [pc, #144]	; (8002348 <main+0x594>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80022b8:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80022ba:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 80022bc:	e9c5 9300 	strd	r9, r3, [r5]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80022c0:	e9c5 a404 	strd	sl, r4, [r5, #16]
  hi2c1.Init.OwnAddress1 = 0;
 80022c4:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80022c8:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80022cc:	f008 ffb8 	bl	800b240 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 80022d0:	4628      	mov	r0, r5
 80022d2:	f009 f85d 	bl	800b390 <HAL_I2C_DeInit>
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80022d6:	f8df a098 	ldr.w	sl, [pc, #152]	; 8002370 <main+0x5bc>
  hspi2.Instance = SPI2;
 80022da:	481c      	ldr	r0, [pc, #112]	; (800234c <main+0x598>)
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80022dc:	f44f 7382 	mov.w	r3, #260	; 0x104
 80022e0:	e9c0 a300 	strd	sl, r3, [r0]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 80022e4:	f44f 7300 	mov.w	r3, #512	; 0x200
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80022e8:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hspi2.Init.CRCPolynomial = 10;
 80022ec:	230a      	movs	r3, #10
 80022ee:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 80022f0:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 80022f4:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 80022f8:	e9c0 4408 	strd	r4, r4, [r0, #32]
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80022fc:	6284      	str	r4, [r0, #40]	; 0x28
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 80022fe:	f00a fb81 	bl	800ca04 <HAL_SPI_Init>
  MX_TouchGFX_Init();
 8002302:	f7fe fd0f 	bl	8000d24 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8002306:	f7fe fd0c 	bl	8000d22 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 800230a:	f00a fe0b 	bl	800cf24 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800230e:	4a10      	ldr	r2, [pc, #64]	; (8002350 <main+0x59c>)
 8002310:	4810      	ldr	r0, [pc, #64]	; (8002354 <main+0x5a0>)
 8002312:	4621      	mov	r1, r4
 8002314:	f00a fe32 	bl	800cf7c <osThreadNew>
 8002318:	4b0f      	ldr	r3, [pc, #60]	; (8002358 <main+0x5a4>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800231a:	4a10      	ldr	r2, [pc, #64]	; (800235c <main+0x5a8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800231c:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800231e:	4621      	mov	r1, r4
 8002320:	480f      	ldr	r0, [pc, #60]	; (8002360 <main+0x5ac>)
 8002322:	f00a fe2b 	bl	800cf7c <osThreadNew>
 8002326:	4b0f      	ldr	r3, [pc, #60]	; (8002364 <main+0x5b0>)
 8002328:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800232a:	f00a fe0d 	bl	800cf48 <osKernelStart>
  while (1)
 800232e:	e7fe      	b.n	800232e <main+0x57a>
 8002330:	20005cdc 	.word	0x20005cdc
 8002334:	a0000140 	.word	0xa0000140
 8002338:	40016800 	.word	0x40016800
 800233c:	20005c90 	.word	0x20005c90
 8002340:	20005b94 	.word	0x20005b94
 8002344:	a0001000 	.word	0xa0001000
 8002348:	00061a80 	.word	0x00061a80
 800234c:	20005d10 	.word	0x20005d10
 8002350:	080280a4 	.word	0x080280a4
 8002354:	08001d09 	.word	0x08001d09
 8002358:	20005b28 	.word	0x20005b28
 800235c:	08028080 	.word	0x08028080
 8002360:	08000d33 	.word	0x08000d33
 8002364:	20005b20 	.word	0x20005b20
 8002368:	20005be8 	.word	0x20005be8
 800236c:	40005400 	.word	0x40005400
 8002370:	40003800 	.word	0x40003800

08002374 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8002374:	6802      	ldr	r2, [r0, #0]
 8002376:	4b03      	ldr	r3, [pc, #12]	; (8002384 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002378:	429a      	cmp	r2, r3
 800237a:	d101      	bne.n	8002380 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 800237c:	f007 bd7a 	b.w	8009e74 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002380:	4770      	bx	lr
 8002382:	bf00      	nop
 8002384:	40001000 	.word	0x40001000

08002388 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002388:	4770      	bx	lr
	...

0800238c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800238c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800238e:	4b0e      	ldr	r3, [pc, #56]	; (80023c8 <HAL_MspInit+0x3c>)
 8002390:	2200      	movs	r2, #0
 8002392:	9200      	str	r2, [sp, #0]
 8002394:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002396:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800239a:	6459      	str	r1, [r3, #68]	; 0x44
 800239c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800239e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80023a2:	9100      	str	r1, [sp, #0]
 80023a4:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80023a6:	9201      	str	r2, [sp, #4]
 80023a8:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80023aa:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80023ae:	6419      	str	r1, [r3, #64]	; 0x40
 80023b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023b2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80023b6:	9301      	str	r3, [sp, #4]
 80023b8:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80023ba:	210f      	movs	r1, #15
 80023bc:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80023c0:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80023c2:	f007 bd8f 	b.w	8009ee4 <HAL_NVIC_SetPriority>
 80023c6:	bf00      	nop
 80023c8:	40023800 	.word	0x40023800

080023cc <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80023cc:	6802      	ldr	r2, [r0, #0]
 80023ce:	4b09      	ldr	r3, [pc, #36]	; (80023f4 <HAL_CRC_MspInit+0x28>)
 80023d0:	429a      	cmp	r2, r3
{
 80023d2:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80023d4:	d10b      	bne.n	80023ee <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80023d6:	2300      	movs	r3, #0
 80023d8:	9301      	str	r3, [sp, #4]
 80023da:	4b07      	ldr	r3, [pc, #28]	; (80023f8 <HAL_CRC_MspInit+0x2c>)
 80023dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023de:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80023e2:	631a      	str	r2, [r3, #48]	; 0x30
 80023e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023e6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80023ea:	9301      	str	r3, [sp, #4]
 80023ec:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80023ee:	b002      	add	sp, #8
 80023f0:	4770      	bx	lr
 80023f2:	bf00      	nop
 80023f4:	40023000 	.word	0x40023000
 80023f8:	40023800 	.word	0x40023800

080023fc <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80023fc:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80023fe:	4b0f      	ldr	r3, [pc, #60]	; (800243c <HAL_DMA2D_MspInit+0x40>)
 8002400:	6802      	ldr	r2, [r0, #0]
 8002402:	429a      	cmp	r2, r3
 8002404:	d116      	bne.n	8002434 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002406:	2200      	movs	r2, #0
 8002408:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 800240c:	9201      	str	r2, [sp, #4]
 800240e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002410:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8002414:	6319      	str	r1, [r3, #48]	; 0x30
 8002416:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002418:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800241c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800241e:	2105      	movs	r1, #5
 8002420:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002422:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002424:	f007 fd5e 	bl	8009ee4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002428:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 800242a:	b003      	add	sp, #12
 800242c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002430:	f007 bd8a 	b.w	8009f48 <HAL_NVIC_EnableIRQ>
}
 8002434:	b003      	add	sp, #12
 8002436:	f85d fb04 	ldr.w	pc, [sp], #4
 800243a:	bf00      	nop
 800243c:	4002b000 	.word	0x4002b000

08002440 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8002440:	b510      	push	{r4, lr}
 8002442:	4604      	mov	r4, r0
 8002444:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002446:	2214      	movs	r2, #20
 8002448:	2100      	movs	r1, #0
 800244a:	a803      	add	r0, sp, #12
 800244c:	f024 f972 	bl	8026734 <memset>
  if(hdsi->Instance==DSI)
 8002450:	6822      	ldr	r2, [r4, #0]
 8002452:	4b17      	ldr	r3, [pc, #92]	; (80024b0 <HAL_DSI_MspInit+0x70>)
 8002454:	429a      	cmp	r2, r3
 8002456:	d128      	bne.n	80024aa <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8002458:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 800245c:	2400      	movs	r4, #0
 800245e:	9401      	str	r4, [sp, #4]
 8002460:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8002462:	4814      	ldr	r0, [pc, #80]	; (80024b4 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8002464:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8002468:	645a      	str	r2, [r3, #68]	; 0x44
 800246a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800246c:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8002470:	9201      	str	r2, [sp, #4]
 8002472:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8002474:	9402      	str	r4, [sp, #8]
 8002476:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002478:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800247c:	631a      	str	r2, [r3, #48]	; 0x30
 800247e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002480:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002484:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002486:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8002488:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800248a:	2302      	movs	r3, #2
 800248c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8002490:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8002492:	230d      	movs	r3, #13
 8002494:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8002496:	f008 fb5b 	bl	800ab50 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 800249a:	205c      	movs	r0, #92	; 0x5c
 800249c:	4622      	mov	r2, r4
 800249e:	2105      	movs	r1, #5
 80024a0:	f007 fd20 	bl	8009ee4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 80024a4:	205c      	movs	r0, #92	; 0x5c
 80024a6:	f007 fd4f 	bl	8009f48 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 80024aa:	b008      	add	sp, #32
 80024ac:	bd10      	pop	{r4, pc}
 80024ae:	bf00      	nop
 80024b0:	40016c00 	.word	0x40016c00
 80024b4:	40022400 	.word	0x40022400

080024b8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80024b8:	b530      	push	{r4, r5, lr}
 80024ba:	4604      	mov	r4, r0
 80024bc:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024be:	2214      	movs	r2, #20
 80024c0:	2100      	movs	r1, #0
 80024c2:	a803      	add	r0, sp, #12
 80024c4:	f024 f936 	bl	8026734 <memset>
  if(hi2c->Instance==I2C1)
 80024c8:	6822      	ldr	r2, [r4, #0]
 80024ca:	4b1a      	ldr	r3, [pc, #104]	; (8002534 <HAL_I2C_MspInit+0x7c>)
 80024cc:	429a      	cmp	r2, r3
 80024ce:	d12f      	bne.n	8002530 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80024d0:	4c19      	ldr	r4, [pc, #100]	; (8002538 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024d2:	481a      	ldr	r0, [pc, #104]	; (800253c <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80024d4:	2500      	movs	r5, #0
 80024d6:	9501      	str	r5, [sp, #4]
 80024d8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80024da:	f043 0302 	orr.w	r3, r3, #2
 80024de:	6323      	str	r3, [r4, #48]	; 0x30
 80024e0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80024e2:	f003 0302 	and.w	r3, r3, #2
 80024e6:	9301      	str	r3, [sp, #4]
 80024e8:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80024ea:	f44f 7240 	mov.w	r2, #768	; 0x300
 80024ee:	2312      	movs	r3, #18
 80024f0:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80024f4:	2101      	movs	r1, #1
 80024f6:	2303      	movs	r3, #3
 80024f8:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80024fc:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024fe:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002500:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002502:	f008 fb25 	bl	800ab50 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002506:	9502      	str	r5, [sp, #8]
 8002508:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800250a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800250e:	6423      	str	r3, [r4, #64]	; 0x40
 8002510:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002512:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002516:	9302      	str	r3, [sp, #8]
 8002518:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 800251a:	6a23      	ldr	r3, [r4, #32]
 800251c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002520:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8002522:	6a23      	ldr	r3, [r4, #32]
 8002524:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8002528:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 800252a:	2064      	movs	r0, #100	; 0x64
 800252c:	f007 fcb4 	bl	8009e98 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8002530:	b009      	add	sp, #36	; 0x24
 8002532:	bd30      	pop	{r4, r5, pc}
 8002534:	40005400 	.word	0x40005400
 8002538:	40023800 	.word	0x40023800
 800253c:	40020400 	.word	0x40020400

08002540 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8002540:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8002542:	6802      	ldr	r2, [r0, #0]
 8002544:	4b0a      	ldr	r3, [pc, #40]	; (8002570 <HAL_I2C_MspDeInit+0x30>)
 8002546:	429a      	cmp	r2, r3
 8002548:	d110      	bne.n	800256c <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 800254a:	4a0a      	ldr	r2, [pc, #40]	; (8002574 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 800254c:	480a      	ldr	r0, [pc, #40]	; (8002578 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 800254e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8002550:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8002554:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8002556:	f44f 7180 	mov.w	r1, #256	; 0x100
 800255a:	f008 fbdf 	bl	800ad1c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 800255e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8002562:	4805      	ldr	r0, [pc, #20]	; (8002578 <HAL_I2C_MspDeInit+0x38>)
 8002564:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002568:	f008 bbd8 	b.w	800ad1c <HAL_GPIO_DeInit>
}
 800256c:	bd08      	pop	{r3, pc}
 800256e:	bf00      	nop
 8002570:	40005400 	.word	0x40005400
 8002574:	40023800 	.word	0x40023800
 8002578:	40020400 	.word	0x40020400

0800257c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 800257c:	b510      	push	{r4, lr}
 800257e:	4604      	mov	r4, r0
 8002580:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002582:	223c      	movs	r2, #60	; 0x3c
 8002584:	2100      	movs	r1, #0
 8002586:	a801      	add	r0, sp, #4
 8002588:	f024 f8d4 	bl	8026734 <memset>
  if(hltdc->Instance==LTDC)
 800258c:	6822      	ldr	r2, [r4, #0]
 800258e:	4b12      	ldr	r3, [pc, #72]	; (80025d8 <HAL_LTDC_MspInit+0x5c>)
 8002590:	429a      	cmp	r2, r3
 8002592:	d11f      	bne.n	80025d4 <HAL_LTDC_MspInit+0x58>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002594:	2308      	movs	r3, #8
 8002596:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8002598:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800259c:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800259e:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 80025a0:	2306      	movs	r3, #6
 80025a2:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80025a4:	f009 feae 	bl	800c304 <HAL_RCCEx_PeriphCLKConfig>
 80025a8:	b108      	cbz	r0, 80025ae <HAL_LTDC_MspInit+0x32>
    {
      Error_Handler();
 80025aa:	f7ff feed 	bl	8002388 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80025ae:	4b0b      	ldr	r3, [pc, #44]	; (80025dc <HAL_LTDC_MspInit+0x60>)
 80025b0:	2200      	movs	r2, #0
 80025b2:	9200      	str	r2, [sp, #0]
 80025b4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80025b6:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 80025ba:	6459      	str	r1, [r3, #68]	; 0x44
 80025bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80025be:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80025c2:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80025c4:	2058      	movs	r0, #88	; 0x58
 80025c6:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 80025c8:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80025ca:	f007 fc8b 	bl	8009ee4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80025ce:	2058      	movs	r0, #88	; 0x58
 80025d0:	f007 fcba 	bl	8009f48 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80025d4:	b010      	add	sp, #64	; 0x40
 80025d6:	bd10      	pop	{r4, pc}
 80025d8:	40016800 	.word	0x40016800
 80025dc:	40023800 	.word	0x40023800

080025e0 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 80025e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80025e2:	4604      	mov	r4, r0
 80025e4:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80025e6:	2214      	movs	r2, #20
 80025e8:	2100      	movs	r1, #0
 80025ea:	a803      	add	r0, sp, #12
 80025ec:	f024 f8a2 	bl	8026734 <memset>
  if(hqspi->Instance==QUADSPI)
 80025f0:	6822      	ldr	r2, [r4, #0]
 80025f2:	4b24      	ldr	r3, [pc, #144]	; (8002684 <HAL_QSPI_MspInit+0xa4>)
 80025f4:	429a      	cmp	r2, r3
 80025f6:	d142      	bne.n	800267e <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 80025f8:	4b23      	ldr	r3, [pc, #140]	; (8002688 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025fa:	4824      	ldr	r0, [pc, #144]	; (800268c <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 80025fc:	2400      	movs	r4, #0
 80025fe:	9400      	str	r4, [sp, #0]
 8002600:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002602:	f042 0202 	orr.w	r2, r2, #2
 8002606:	639a      	str	r2, [r3, #56]	; 0x38
 8002608:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800260a:	f002 0202 	and.w	r2, r2, #2
 800260e:	9200      	str	r2, [sp, #0]
 8002610:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002612:	9401      	str	r4, [sp, #4]
 8002614:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002616:	f042 0202 	orr.w	r2, r2, #2
 800261a:	631a      	str	r2, [r3, #48]	; 0x30
 800261c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800261e:	f002 0202 	and.w	r2, r2, #2
 8002622:	9201      	str	r2, [sp, #4]
 8002624:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002626:	9402      	str	r4, [sp, #8]
 8002628:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800262a:	f042 0220 	orr.w	r2, r2, #32
 800262e:	631a      	str	r2, [r3, #48]	; 0x30
 8002630:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002632:	f003 0320 	and.w	r3, r3, #32
 8002636:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002638:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 800263a:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800263c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 800263e:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002640:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002642:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002644:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8002648:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800264c:	f008 fa80 	bl	800ab50 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8002650:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002654:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002658:	480d      	ldr	r0, [pc, #52]	; (8002690 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 800265a:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800265c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 800265e:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002660:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002664:	f008 fa74 	bl	800ab50 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8002668:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800266c:	4808      	ldr	r0, [pc, #32]	; (8002690 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 800266e:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002670:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002672:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002676:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800267a:	f008 fa69 	bl	800ab50 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 800267e:	b009      	add	sp, #36	; 0x24
 8002680:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002682:	bf00      	nop
 8002684:	a0001000 	.word	0xa0001000
 8002688:	40023800 	.word	0x40023800
 800268c:	40020400 	.word	0x40020400
 8002690:	40021400 	.word	0x40021400

08002694 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8002694:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8002696:	6802      	ldr	r2, [r0, #0]
 8002698:	4b09      	ldr	r3, [pc, #36]	; (80026c0 <HAL_QSPI_MspDeInit+0x2c>)
 800269a:	429a      	cmp	r2, r3
 800269c:	d10f      	bne.n	80026be <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 800269e:	4a09      	ldr	r2, [pc, #36]	; (80026c4 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 80026a0:	4809      	ldr	r0, [pc, #36]	; (80026c8 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 80026a2:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80026a4:	f023 0302 	bic.w	r3, r3, #2
 80026a8:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 80026aa:	2140      	movs	r1, #64	; 0x40
 80026ac:	f008 fb36 	bl	800ad1c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 80026b0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 80026b4:	4805      	ldr	r0, [pc, #20]	; (80026cc <HAL_QSPI_MspDeInit+0x38>)
 80026b6:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 80026ba:	f008 bb2f 	b.w	800ad1c <HAL_GPIO_DeInit>
}
 80026be:	bd08      	pop	{r3, pc}
 80026c0:	a0001000 	.word	0xa0001000
 80026c4:	40023800 	.word	0x40023800
 80026c8:	40020400 	.word	0x40020400
 80026cc:	40021400 	.word	0x40021400

080026d0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80026d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80026d2:	4604      	mov	r4, r0
 80026d4:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80026d6:	2214      	movs	r2, #20
 80026d8:	2100      	movs	r1, #0
 80026da:	a803      	add	r0, sp, #12
 80026dc:	f024 f82a 	bl	8026734 <memset>
  if(hspi->Instance==SPI2)
 80026e0:	6822      	ldr	r2, [r4, #0]
 80026e2:	4b1e      	ldr	r3, [pc, #120]	; (800275c <HAL_SPI_MspInit+0x8c>)
 80026e4:	429a      	cmp	r2, r3
 80026e6:	d137      	bne.n	8002758 <HAL_SPI_MspInit+0x88>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 80026e8:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 80026ec:	2400      	movs	r4, #0
 80026ee:	9400      	str	r4, [sp, #0]
 80026f0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    GPIO_InitStruct.Pin = GPIO_PIN_3;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026f2:	481b      	ldr	r0, [pc, #108]	; (8002760 <HAL_SPI_MspInit+0x90>)
    __HAL_RCC_SPI2_CLK_ENABLE();
 80026f4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80026f8:	641a      	str	r2, [r3, #64]	; 0x40
 80026fa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80026fc:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8002700:	9200      	str	r2, [sp, #0]
 8002702:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002704:	9401      	str	r4, [sp, #4]
 8002706:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002708:	f042 0208 	orr.w	r2, r2, #8
 800270c:	631a      	str	r2, [r3, #48]	; 0x30
 800270e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002710:	f002 0208 	and.w	r2, r2, #8
 8002714:	9201      	str	r2, [sp, #4]
 8002716:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002718:	9402      	str	r4, [sp, #8]
 800271a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800271c:	f042 0202 	orr.w	r2, r2, #2
 8002720:	631a      	str	r2, [r3, #48]	; 0x30
 8002722:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002724:	f003 0302 	and.w	r3, r3, #2
 8002728:	9302      	str	r3, [sp, #8]
 800272a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800272c:	2702      	movs	r7, #2
 800272e:	2308      	movs	r3, #8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002730:	2603      	movs	r6, #3
 8002732:	2505      	movs	r5, #5
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002734:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002736:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 800273a:	e9cd 6506 	strd	r6, r5, [sp, #24]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800273e:	f008 fa07 	bl	800ab50 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8002742:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002746:	4807      	ldr	r0, [pc, #28]	; (8002764 <HAL_SPI_MspInit+0x94>)
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002748:	9507      	str	r5, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800274a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800274c:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002750:	e9cd 4605 	strd	r4, r6, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002754:	f008 f9fc 	bl	800ab50 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 8002758:	b009      	add	sp, #36	; 0x24
 800275a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800275c:	40003800 	.word	0x40003800
 8002760:	40020c00 	.word	0x40020c00
 8002764:	40020400 	.word	0x40020400

08002768 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002768:	b5f0      	push	{r4, r5, r6, r7, lr}
 800276a:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800276c:	2300      	movs	r3, #0
 800276e:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002770:	4b30      	ldr	r3, [pc, #192]	; (8002834 <HAL_SDRAM_MspInit+0xcc>)
 8002772:	681c      	ldr	r4, [r3, #0]
 8002774:	2c00      	cmp	r4, #0
 8002776:	d15a      	bne.n	800282e <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 8002778:	2201      	movs	r2, #1
 800277a:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 800277c:	4b2e      	ldr	r3, [pc, #184]	; (8002838 <HAL_SDRAM_MspInit+0xd0>)
 800277e:	9400      	str	r4, [sp, #0]
 8002780:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002782:	482e      	ldr	r0, [pc, #184]	; (800283c <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002784:	f042 0201 	orr.w	r2, r2, #1
 8002788:	639a      	str	r2, [r3, #56]	; 0x38
 800278a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800278c:	f003 0301 	and.w	r3, r3, #1
 8002790:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002792:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002794:	2603      	movs	r6, #3
 8002796:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002798:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800279a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800279c:	f64f 7383 	movw	r3, #65411	; 0xff83
 80027a0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027a4:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80027a8:	f008 f9d2 	bl	800ab50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 80027ac:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80027b0:	4823      	ldr	r0, [pc, #140]	; (8002840 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027b2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80027b4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027b6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80027ba:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80027be:	f008 f9c7 	bl	800ab50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 80027c2:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80027c6:	481f      	ldr	r0, [pc, #124]	; (8002844 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027c8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80027ca:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027cc:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80027d0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80027d4:	f008 f9bc 	bl	800ab50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 80027d8:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 80027dc:	481a      	ldr	r0, [pc, #104]	; (8002848 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027de:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 80027e0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027e2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80027e6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 80027ea:	f008 f9b1 	bl	800ab50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80027ee:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80027f2:	4816      	ldr	r0, [pc, #88]	; (800284c <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027f4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80027f6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027f8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80027fc:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002800:	f008 f9a6 	bl	800ab50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8002804:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002808:	4811      	ldr	r0, [pc, #68]	; (8002850 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800280a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800280c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800280e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002812:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002816:	f008 f99b 	bl	800ab50 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 800281a:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800281c:	480d      	ldr	r0, [pc, #52]	; (8002854 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800281e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002820:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002822:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002826:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800282a:	f008 f991 	bl	800ab50 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800282e:	b007      	add	sp, #28
 8002830:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002832:	bf00      	nop
 8002834:	20005d70 	.word	0x20005d70
 8002838:	40023800 	.word	0x40023800
 800283c:	40021000 	.word	0x40021000
 8002840:	40021800 	.word	0x40021800
 8002844:	40020c00 	.word	0x40020c00
 8002848:	40022000 	.word	0x40022000
 800284c:	40021400 	.word	0x40021400
 8002850:	40021c00 	.word	0x40021c00
 8002854:	40020800 	.word	0x40020800

08002858 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8002858:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 800285a:	4b17      	ldr	r3, [pc, #92]	; (80028b8 <HAL_SDRAM_MspDeInit+0x60>)
 800285c:	681a      	ldr	r2, [r3, #0]
 800285e:	bb52      	cbnz	r2, 80028b6 <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8002860:	2201      	movs	r2, #1
 8002862:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8002864:	4a15      	ldr	r2, [pc, #84]	; (80028bc <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8002866:	4816      	ldr	r0, [pc, #88]	; (80028c0 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8002868:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800286a:	f023 0301 	bic.w	r3, r3, #1
 800286e:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8002870:	f64f 7183 	movw	r1, #65411	; 0xff83
 8002874:	f008 fa52 	bl	800ad1c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8002878:	4812      	ldr	r0, [pc, #72]	; (80028c4 <HAL_SDRAM_MspDeInit+0x6c>)
 800287a:	f248 1133 	movw	r1, #33075	; 0x8133
 800287e:	f008 fa4d 	bl	800ad1c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8002882:	4811      	ldr	r0, [pc, #68]	; (80028c8 <HAL_SDRAM_MspDeInit+0x70>)
 8002884:	f24c 7103 	movw	r1, #50947	; 0xc703
 8002888:	f008 fa48 	bl	800ad1c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 800288c:	480f      	ldr	r0, [pc, #60]	; (80028cc <HAL_SDRAM_MspDeInit+0x74>)
 800288e:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8002892:	f008 fa43 	bl	800ad1c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002896:	480e      	ldr	r0, [pc, #56]	; (80028d0 <HAL_SDRAM_MspDeInit+0x78>)
 8002898:	f64f 013f 	movw	r1, #63551	; 0xf83f
 800289c:	f008 fa3e 	bl	800ad1c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 80028a0:	480c      	ldr	r0, [pc, #48]	; (80028d4 <HAL_SDRAM_MspDeInit+0x7c>)
 80028a2:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 80028a6:	f008 fa39 	bl	800ad1c <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 80028aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 80028ae:	480a      	ldr	r0, [pc, #40]	; (80028d8 <HAL_SDRAM_MspDeInit+0x80>)
 80028b0:	210d      	movs	r1, #13
 80028b2:	f008 ba33 	b.w	800ad1c <HAL_GPIO_DeInit>
}
 80028b6:	bd08      	pop	{r3, pc}
 80028b8:	20005d6c 	.word	0x20005d6c
 80028bc:	40023800 	.word	0x40023800
 80028c0:	40021000 	.word	0x40021000
 80028c4:	40021800 	.word	0x40021800
 80028c8:	40020c00 	.word	0x40020c00
 80028cc:	40022000 	.word	0x40022000
 80028d0:	40021400 	.word	0x40021400
 80028d4:	40021c00 	.word	0x40021c00
 80028d8:	40020800 	.word	0x40020800

080028dc <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80028dc:	b570      	push	{r4, r5, r6, lr}
 80028de:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80028e0:	2300      	movs	r3, #0
 80028e2:	9302      	str	r3, [sp, #8]
 80028e4:	4b20      	ldr	r3, [pc, #128]	; (8002968 <HAL_InitTick+0x8c>)
 80028e6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80028e8:	f042 0210 	orr.w	r2, r2, #16
 80028ec:	641a      	str	r2, [r3, #64]	; 0x40
 80028ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028f0:	f003 0310 	and.w	r3, r3, #16
 80028f4:	9302      	str	r3, [sp, #8]
{
 80028f6:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028f8:	a901      	add	r1, sp, #4
 80028fa:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80028fc:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028fe:	f009 fce3 	bl	800c2c8 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002902:	9b06      	ldr	r3, [sp, #24]
 8002904:	bb4b      	cbnz	r3, 800295a <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002906:	f009 fccf 	bl	800c2a8 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800290a:	4e18      	ldr	r6, [pc, #96]	; (800296c <HAL_InitTick+0x90>)
 800290c:	4b18      	ldr	r3, [pc, #96]	; (8002970 <HAL_InitTick+0x94>)
 800290e:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002910:	f240 33e7 	movw	r3, #999	; 0x3e7
 8002914:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002916:	4b17      	ldr	r3, [pc, #92]	; (8002974 <HAL_InitTick+0x98>)
 8002918:	fbb0 f3f3 	udiv	r3, r0, r3
 800291c:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 800291e:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002920:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8002922:	2300      	movs	r3, #0
 8002924:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002926:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002928:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 800292a:	f00a fa0f 	bl	800cd4c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 800292e:	4604      	mov	r4, r0
 8002930:	b980      	cbnz	r0, 8002954 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002932:	4630      	mov	r0, r6
 8002934:	f00a f8c4 	bl	800cac0 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002938:	4604      	mov	r4, r0
 800293a:	b958      	cbnz	r0, 8002954 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800293c:	2036      	movs	r0, #54	; 0x36
 800293e:	f007 fb03 	bl	8009f48 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002942:	2d0f      	cmp	r5, #15
 8002944:	d80d      	bhi.n	8002962 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002946:	4622      	mov	r2, r4
 8002948:	4629      	mov	r1, r5
 800294a:	2036      	movs	r0, #54	; 0x36
 800294c:	f007 faca 	bl	8009ee4 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002950:	4b09      	ldr	r3, [pc, #36]	; (8002978 <HAL_InitTick+0x9c>)
 8002952:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8002954:	4620      	mov	r0, r4
 8002956:	b008      	add	sp, #32
 8002958:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800295a:	f009 fca5 	bl	800c2a8 <HAL_RCC_GetPCLK1Freq>
 800295e:	0040      	lsls	r0, r0, #1
 8002960:	e7d3      	b.n	800290a <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8002962:	2401      	movs	r4, #1
 8002964:	e7f6      	b.n	8002954 <HAL_InitTick+0x78>
 8002966:	bf00      	nop
 8002968:	40023800 	.word	0x40023800
 800296c:	20005d74 	.word	0x20005d74
 8002970:	40001000 	.word	0x40001000
 8002974:	000f4240 	.word	0x000f4240
 8002978:	20000058 	.word	0x20000058

0800297c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800297c:	4770      	bx	lr

0800297e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800297e:	e7fe      	b.n	800297e <HardFault_Handler>

08002980 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002980:	e7fe      	b.n	8002980 <MemManage_Handler>

08002982 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002982:	e7fe      	b.n	8002982 <BusFault_Handler>

08002984 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002984:	e7fe      	b.n	8002984 <UsageFault_Handler>

08002986 <DebugMon_Handler>:
 8002986:	4770      	bx	lr

08002988 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002988:	4801      	ldr	r0, [pc, #4]	; (8002990 <TIM6_DAC_IRQHandler+0x8>)
 800298a:	f00a b8d7 	b.w	800cb3c <HAL_TIM_IRQHandler>
 800298e:	bf00      	nop
 8002990:	20005d74 	.word	0x20005d74

08002994 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002994:	4801      	ldr	r0, [pc, #4]	; (800299c <LTDC_IRQHandler+0x8>)
 8002996:	f008 bfa6 	b.w	800b8e6 <HAL_LTDC_IRQHandler>
 800299a:	bf00      	nop
 800299c:	20005be8 	.word	0x20005be8

080029a0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80029a0:	4801      	ldr	r0, [pc, #4]	; (80029a8 <DMA2D_IRQHandler+0x8>)
 80029a2:	f007 bc35 	b.w	800a210 <HAL_DMA2D_IRQHandler>
 80029a6:	bf00      	nop
 80029a8:	20005b38 	.word	0x20005b38

080029ac <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 80029ac:	4801      	ldr	r0, [pc, #4]	; (80029b4 <DSI_IRQHandler+0x8>)
 80029ae:	f007 be36 	b.w	800a61e <HAL_DSI_IRQHandler>
 80029b2:	bf00      	nop
 80029b4:	20005b78 	.word	0x20005b78

080029b8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80029b8:	2001      	movs	r0, #1
 80029ba:	4770      	bx	lr

080029bc <_kill>:

int _kill(int pid, int sig)
{
 80029bc:	b508      	push	{r3, lr}
	errno = EINVAL;
 80029be:	f023 fe5f 	bl	8026680 <__errno>
 80029c2:	2316      	movs	r3, #22
 80029c4:	6003      	str	r3, [r0, #0]
	return -1;
}
 80029c6:	f04f 30ff 	mov.w	r0, #4294967295
 80029ca:	bd08      	pop	{r3, pc}

080029cc <_exit>:

void _exit (int status)
{
 80029cc:	b508      	push	{r3, lr}
	errno = EINVAL;
 80029ce:	f023 fe57 	bl	8026680 <__errno>
 80029d2:	2316      	movs	r3, #22
 80029d4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80029d6:	e7fe      	b.n	80029d6 <_exit+0xa>

080029d8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80029d8:	b570      	push	{r4, r5, r6, lr}
 80029da:	460d      	mov	r5, r1
 80029dc:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029de:	460e      	mov	r6, r1
 80029e0:	1b73      	subs	r3, r6, r5
 80029e2:	429c      	cmp	r4, r3
 80029e4:	dc01      	bgt.n	80029ea <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 80029e6:	4620      	mov	r0, r4
 80029e8:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 80029ea:	f3af 8000 	nop.w
 80029ee:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029f2:	e7f5      	b.n	80029e0 <_read+0x8>

080029f4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80029f4:	b570      	push	{r4, r5, r6, lr}
 80029f6:	460d      	mov	r5, r1
 80029f8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029fa:	460e      	mov	r6, r1
 80029fc:	1b73      	subs	r3, r6, r5
 80029fe:	429c      	cmp	r4, r3
 8002a00:	dc01      	bgt.n	8002a06 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002a02:	4620      	mov	r0, r4
 8002a04:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002a06:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002a0a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002a0e:	e7f5      	b.n	80029fc <_write+0x8>

08002a10 <_close>:

int _close(int file)
{
	return -1;
}
 8002a10:	f04f 30ff 	mov.w	r0, #4294967295
 8002a14:	4770      	bx	lr

08002a16 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002a16:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002a1a:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002a1c:	2000      	movs	r0, #0
 8002a1e:	4770      	bx	lr

08002a20 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002a20:	2001      	movs	r0, #1
 8002a22:	4770      	bx	lr

08002a24 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002a24:	2000      	movs	r0, #0
 8002a26:	4770      	bx	lr

08002a28 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002a28:	4a0a      	ldr	r2, [pc, #40]	; (8002a54 <_sbrk+0x2c>)
 8002a2a:	6811      	ldr	r1, [r2, #0]
{
 8002a2c:	b508      	push	{r3, lr}
 8002a2e:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002a30:	b909      	cbnz	r1, 8002a36 <_sbrk+0xe>
		heap_end = &end;
 8002a32:	4909      	ldr	r1, [pc, #36]	; (8002a58 <_sbrk+0x30>)
 8002a34:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002a36:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002a38:	4669      	mov	r1, sp
 8002a3a:	4403      	add	r3, r0
 8002a3c:	428b      	cmp	r3, r1
 8002a3e:	d906      	bls.n	8002a4e <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002a40:	f023 fe1e 	bl	8026680 <__errno>
 8002a44:	230c      	movs	r3, #12
 8002a46:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002a48:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002a4c:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002a4e:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002a50:	e7fc      	b.n	8002a4c <_sbrk+0x24>
 8002a52:	bf00      	nop
 8002a54:	20005dbc 	.word	0x20005dbc
 8002a58:	2000fa18 	.word	0x2000fa18

08002a5c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId PRIMARYDRIVERINFO = 7;   // verdana_180_4bpp
    static const touchgfx::FontId SECONDARYDRIVERINFO = 8; // verdana_57_4bpp
    static const uint16_t NUMBER_OF_FONTS = 9;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002a5c:	4770      	bx	lr

08002a5e <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002a5e:	b508      	push	{r3, lr}
    switch (typography)
 8002a60:	2909      	cmp	r1, #9
 8002a62:	d82a      	bhi.n	8002aba <_ZN23ApplicationFontProvider7getFontEt+0x5c>
 8002a64:	e8df f001 	tbb	[pc, r1]
 8002a68:	0d090519 	.word	0x0d090519
 8002a6c:	1d191511 	.word	0x1d191511
 8002a70:	2521      	.short	0x2521
    case Typography::LARGE:
        // verdana_30_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002a72:	f005 fb7b 	bl	800816c <_ZN17TypedTextDatabase8getFontsEv>
 8002a76:	6840      	ldr	r0, [r0, #4]
        // verdana_57_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[8]);
    default:
        return 0;
    }
}
 8002a78:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002a7a:	f005 fb77 	bl	800816c <_ZN17TypedTextDatabase8getFontsEv>
 8002a7e:	6880      	ldr	r0, [r0, #8]
 8002a80:	e7fa      	b.n	8002a78 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002a82:	f005 fb73 	bl	800816c <_ZN17TypedTextDatabase8getFontsEv>
 8002a86:	68c0      	ldr	r0, [r0, #12]
 8002a88:	e7f6      	b.n	8002a78 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 8002a8a:	f005 fb6f 	bl	800816c <_ZN17TypedTextDatabase8getFontsEv>
 8002a8e:	6900      	ldr	r0, [r0, #16]
 8002a90:	e7f2      	b.n	8002a78 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
 8002a92:	f005 fb6b 	bl	800816c <_ZN17TypedTextDatabase8getFontsEv>
 8002a96:	6940      	ldr	r0, [r0, #20]
 8002a98:	e7ee      	b.n	8002a78 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002a9a:	f005 fb67 	bl	800816c <_ZN17TypedTextDatabase8getFontsEv>
 8002a9e:	6800      	ldr	r0, [r0, #0]
 8002aa0:	e7ea      	b.n	8002a78 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
 8002aa2:	f005 fb63 	bl	800816c <_ZN17TypedTextDatabase8getFontsEv>
 8002aa6:	6980      	ldr	r0, [r0, #24]
 8002aa8:	e7e6      	b.n	8002a78 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[7]);
 8002aaa:	f005 fb5f 	bl	800816c <_ZN17TypedTextDatabase8getFontsEv>
 8002aae:	69c0      	ldr	r0, [r0, #28]
 8002ab0:	e7e2      	b.n	8002a78 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[8]);
 8002ab2:	f005 fb5b 	bl	800816c <_ZN17TypedTextDatabase8getFontsEv>
 8002ab6:	6a00      	ldr	r0, [r0, #32]
 8002ab8:	e7de      	b.n	8002a78 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
    switch (typography)
 8002aba:	2000      	movs	r0, #0
 8002abc:	e7dc      	b.n	8002a78 <_ZN23ApplicationFontProvider7getFontEt+0x1a>

08002abe <_ZN23ApplicationFontProviderD0Ev>:
 8002abe:	b510      	push	{r4, lr}
 8002ac0:	2104      	movs	r1, #4
 8002ac2:	4604      	mov	r4, r0
 8002ac4:	f023 fd7c 	bl	80265c0 <_ZdlPvj>
 8002ac8:	4620      	mov	r0, r4
 8002aca:	bd10      	pop	{r4, pc}

08002acc <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002acc:	4800      	ldr	r0, [pc, #0]	; (8002ad0 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002ace:	4770      	bx	lr
 8002ad0:	080280dc 	.word	0x080280dc

08002ad4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002ad4:	201b      	movs	r0, #27
 8002ad6:	4770      	bx	lr

08002ad8 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002ad8:	b513      	push	{r0, r1, r4, lr}
 8002ada:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002adc:	b151      	cbz	r1, 8002af4 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002ade:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002ae0:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002ae2:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002ae6:	aa01      	add	r2, sp, #4
 8002ae8:	689c      	ldr	r4, [r3, #8]
 8002aea:	f10d 0303 	add.w	r3, sp, #3
 8002aee:	47a0      	blx	r4
        return glyph;
    }
 8002af0:	b002      	add	sp, #8
 8002af2:	bd10      	pop	{r4, pc}
            return 0;
 8002af4:	4608      	mov	r0, r1
 8002af6:	e7fb      	b.n	8002af0 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002af8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002af8:	89c0      	ldrh	r0, [r0, #14]
 8002afa:	4770      	bx	lr

08002afc <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002afc:	8a00      	ldrh	r0, [r0, #16]
 8002afe:	4770      	bx	lr

08002b00 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002b00:	88c0      	ldrh	r0, [r0, #6]
 8002b02:	4770      	bx	lr

08002b04 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002b04:	8880      	ldrh	r0, [r0, #4]
 8002b06:	4770      	bx	lr

08002b08 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002b08:	7a80      	ldrb	r0, [r0, #10]
    }
 8002b0a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002b0e:	4770      	bx	lr

08002b10 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002b10:	7a80      	ldrb	r0, [r0, #10]
    }
 8002b12:	09c0      	lsrs	r0, r0, #7
 8002b14:	4770      	bx	lr

08002b16 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002b16:	4770      	bx	lr

08002b18 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002b18:	4770      	bx	lr

08002b1a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002b1a:	4770      	bx	lr

08002b1c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002b1c:	4770      	bx	lr

08002b1e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002b1e:	4770      	bx	lr

08002b20 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002b20:	4770      	bx	lr

08002b22 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002b22:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002b24:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002b26:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002b28:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002b2a:	466d      	mov	r5, sp
 8002b2c:	4601      	mov	r1, r0
 8002b2e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002b32:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002b34:	4628      	mov	r0, r5
 8002b36:	4798      	blx	r3
 8002b38:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002b3c:	343c      	adds	r4, #60	; 0x3c
 8002b3e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002b42:	b005      	add	sp, #20
 8002b44:	bd30      	pop	{r4, r5, pc}

08002b46 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002b46:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002b48:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002b4a:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002b4c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002b4e:	466d      	mov	r5, sp
 8002b50:	4601      	mov	r1, r0
 8002b52:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002b56:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002b58:	4628      	mov	r0, r5
 8002b5a:	4798      	blx	r3
 8002b5c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002b60:	343c      	adds	r4, #60	; 0x3c
 8002b62:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002b66:	b005      	add	sp, #20
 8002b68:	bd30      	pop	{r4, r5, pc}

08002b6a <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002b6a:	2200      	movs	r2, #0
 8002b6c:	8002      	strh	r2, [r0, #0]
 8002b6e:	8042      	strh	r2, [r0, #2]
 8002b70:	8082      	strh	r2, [r0, #4]
 8002b72:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002b74:	4770      	bx	lr

08002b76 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002b76:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002b7a:	4770      	bx	lr

08002b7c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002b7c:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002b7e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002b80:	4604      	mov	r4, r0
        setX(x);
 8002b82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002b84:	4615      	mov	r5, r2
        setX(x);
 8002b86:	4798      	blx	r3
        setBaselineY(baselineY);
 8002b88:	6823      	ldr	r3, [r4, #0]
 8002b8a:	4629      	mov	r1, r5
 8002b8c:	4620      	mov	r0, r4
 8002b8e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002b90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002b94:	4718      	bx	r3

08002b96 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002b96:	2000      	movs	r0, #0
 8002b98:	4770      	bx	lr

08002b9a <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002b9a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002b9c:	4770      	bx	lr

08002b9e <_ZN25CompetitionScreenViewBaseD1Ev>:
}

CompetitionScreenViewBase::~CompetitionScreenViewBase()
{

}
 8002b9e:	4770      	bx	lr

08002ba0 <_ZN25CompetitionScreenViewBase11setupScreenEv>:

void CompetitionScreenViewBase::setupScreen()
{

}
 8002ba0:	4770      	bx	lr

08002ba2 <_ZN8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ba2:	4770      	bx	lr

08002ba4 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002ba4:	4770      	bx	lr

08002ba6 <_ZN8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002ba6:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002ba8:	68c2      	ldr	r2, [r0, #12]
 8002baa:	6844      	ldr	r4, [r0, #4]
 8002bac:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002bae:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002bb0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002bb4:	07d2      	lsls	r2, r2, #31
 8002bb6:	bf48      	it	mi
 8002bb8:	5962      	ldrmi	r2, [r4, r5]
 8002bba:	689b      	ldr	r3, [r3, #8]
    }
 8002bbc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002bbe:	bf48      	it	mi
 8002bc0:	58d3      	ldrmi	r3, [r2, r3]
 8002bc2:	4718      	bx	r3

08002bc4 <_ZNK8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002bc4:	6843      	ldr	r3, [r0, #4]
 8002bc6:	b12b      	cbz	r3, 8002bd4 <_ZNK8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002bc8:	6883      	ldr	r3, [r0, #8]
 8002bca:	b92b      	cbnz	r3, 8002bd8 <_ZNK8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002bcc:	68c0      	ldr	r0, [r0, #12]
 8002bce:	f000 0001 	and.w	r0, r0, #1
 8002bd2:	4770      	bx	lr
 8002bd4:	4618      	mov	r0, r3
 8002bd6:	4770      	bx	lr
 8002bd8:	2001      	movs	r0, #1
    }
 8002bda:	4770      	bx	lr

08002bdc <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002bdc:	b510      	push	{r4, lr}
    }
 8002bde:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002be0:	4604      	mov	r4, r0
    }
 8002be2:	f023 fced 	bl	80265c0 <_ZdlPvj>
 8002be6:	4620      	mov	r0, r4
 8002be8:	bd10      	pop	{r4, pc}

08002bea <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002bea:	b510      	push	{r4, lr}
 8002bec:	214c      	movs	r1, #76	; 0x4c
 8002bee:	4604      	mov	r4, r0
 8002bf0:	f023 fce6 	bl	80265c0 <_ZdlPvj>
 8002bf4:	4620      	mov	r0, r4
 8002bf6:	bd10      	pop	{r4, pc}

08002bf8 <_ZN8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002bf8:	b510      	push	{r4, lr}
 8002bfa:	2110      	movs	r1, #16
 8002bfc:	4604      	mov	r4, r0
 8002bfe:	f023 fcdf 	bl	80265c0 <_ZdlPvj>
 8002c02:	4620      	mov	r0, r4
 8002c04:	bd10      	pop	{r4, pc}

08002c06 <_ZN25CompetitionScreenViewBaseD0Ev>:
CompetitionScreenViewBase::~CompetitionScreenViewBase()
 8002c06:	b510      	push	{r4, lr}
}
 8002c08:	f44f 71a8 	mov.w	r1, #336	; 0x150
CompetitionScreenViewBase::~CompetitionScreenViewBase()
 8002c0c:	4604      	mov	r4, r0
}
 8002c0e:	f023 fcd7 	bl	80265c0 <_ZdlPvj>
 8002c12:	4620      	mov	r0, r4
 8002c14:	bd10      	pop	{r4, pc}

08002c16 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002c16:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002c18:	f7ff f82b 	bl	8001c72 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002c1c:	bd08      	pop	{r3, pc}
	...

08002c20 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002c20:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002c22:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002c24:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c26:	4b12      	ldr	r3, [pc, #72]	; (8002c70 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002c28:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002c2a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002c2c:	b28d      	uxth	r5, r1
 8002c2e:	b92b      	cbnz	r3, 8002c3c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002c30:	4b10      	ldr	r3, [pc, #64]	; (8002c74 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002c32:	4a11      	ldr	r2, [pc, #68]	; (8002c78 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002c34:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002c36:	4811      	ldr	r0, [pc, #68]	; (8002c7c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002c38:	f023 fcf0 	bl	802661c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002c3c:	4910      	ldr	r1, [pc, #64]	; (8002c80 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002c3e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002c40:	8809      	ldrh	r1, [r1, #0]
 8002c42:	4291      	cmp	r1, r2
 8002c44:	d803      	bhi.n	8002c4e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002c46:	4b0f      	ldr	r3, [pc, #60]	; (8002c84 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002c48:	4a0b      	ldr	r2, [pc, #44]	; (8002c78 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002c4a:	216d      	movs	r1, #109	; 0x6d
 8002c4c:	e7f3      	b.n	8002c36 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002c4e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002c52:	4b0d      	ldr	r3, [pc, #52]	; (8002c88 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002c54:	681b      	ldr	r3, [r3, #0]
 8002c56:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002c5a:	6803      	ldr	r3, [r0, #0]
 8002c5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c5e:	4798      	blx	r3
 8002c60:	1a28      	subs	r0, r5, r0
 8002c62:	b201      	sxth	r1, r0
 8002c64:	4633      	mov	r3, r6
 8002c66:	4620      	mov	r0, r4
    }
 8002c68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002c6c:	4718      	bx	r3
 8002c6e:	bf00      	nop
 8002c70:	2000ef74 	.word	0x2000ef74
 8002c74:	080282f8 	.word	0x080282f8
 8002c78:	0802833a 	.word	0x0802833a
 8002c7c:	08028375 	.word	0x08028375
 8002c80:	2000ef78 	.word	0x2000ef78
 8002c84:	080283bc 	.word	0x080283bc
 8002c88:	2000ef7c 	.word	0x2000ef7c

08002c8c <_ZN25CompetitionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CompetitionScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002c8c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btnNextPage)
 8002c8e:	f100 03a0 	add.w	r3, r0, #160	; 0xa0
 8002c92:	4299      	cmp	r1, r3
{
 8002c94:	4604      	mov	r4, r0
 8002c96:	460d      	mov	r5, r1
    if (&src == &btnNextPage)
 8002c98:	d103      	bne.n	8002ca2 <_ZN25CompetitionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CompetitionScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002c9a:	f012 f8fd 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //fromCompetitionViewToDriverView
        //When btnNextPage clicked change screen to DriverScreen
        //Go to DriverScreen with screen transition towards East
        application().gotoDriverScreenScreenSlideTransitionEast();
 8002c9e:	f001 fdc9 	bl	8004834 <_ZN23FrontendApplicationBase41gotoDriverScreenScreenSlideTransitionEastEv>
    }
    if (&src == &btnPrevPage)
 8002ca2:	346c      	adds	r4, #108	; 0x6c
 8002ca4:	42a5      	cmp	r5, r4
 8002ca6:	d105      	bne.n	8002cb4 <_ZN25CompetitionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
 8002ca8:	f012 f8f6 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
        //fromCompetitionScreenToMissionSelect
        //When btnPrevPage clicked change screen to MissionSelect
        //Go to MissionSelect with screen transition towards West
        application().gotoMissionSelectScreenSlideTransitionWest();
    }
}
 8002cac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMissionSelectScreenSlideTransitionWest();
 8002cb0:	f001 bd80 	b.w	80047b4 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionWestEv>
}
 8002cb4:	bd38      	pop	{r3, r4, r5, pc}

08002cb6 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002cb6:	2200      	movs	r2, #0
 8002cb8:	f04f 31ff 	mov.w	r1, #4294967295
 8002cbc:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002cc0:	6082      	str	r2, [r0, #8]
    }
 8002cc2:	4770      	bx	lr

08002cc4 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002cc4:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002cc6:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002cc8:	4604      	mov	r4, r0
        setX(x);
 8002cca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002ccc:	4615      	mov	r5, r2
        setX(x);
 8002cce:	4798      	blx	r3
        setY(y);
 8002cd0:	6823      	ldr	r3, [r4, #0]
 8002cd2:	4629      	mov	r1, r5
 8002cd4:	4620      	mov	r0, r4
 8002cd6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002cd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002cdc:	4718      	bx	r3

08002cde <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002cde:	b570      	push	{r4, r5, r6, lr}
 8002ce0:	4604      	mov	r4, r0
 8002ce2:	461d      	mov	r5, r3
 8002ce4:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002ce8:	f7ff ffec 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002cec:	6823      	ldr	r3, [r4, #0]
 8002cee:	4629      	mov	r1, r5
 8002cf0:	4620      	mov	r0, r4
 8002cf2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cf4:	4798      	blx	r3
        setHeight(height);
 8002cf6:	6823      	ldr	r3, [r4, #0]
 8002cf8:	4631      	mov	r1, r6
 8002cfa:	4620      	mov	r0, r4
 8002cfc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002cfe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002d02:	4718      	bx	r3

08002d04 <_ZN8touchgfx6WidgetC1Ev>:
 8002d04:	2200      	movs	r2, #0
 8002d06:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002d0a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002d0e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002d12:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002d16:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002d1a:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002d1c:	4a01      	ldr	r2, [pc, #4]	; (8002d24 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002d1e:	6002      	str	r2, [r0, #0]
 8002d20:	4770      	bx	lr
 8002d22:	bf00      	nop
 8002d24:	08028440 	.word	0x08028440

08002d28 <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 8002d28:	b510      	push	{r4, lr}
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8002d2a:	2226      	movs	r2, #38	; 0x26
 8002d2c:	4604      	mov	r4, r0
 8002d2e:	2100      	movs	r1, #0
 8002d30:	f023 fd00 	bl	8026734 <memset>
 8002d34:	4620      	mov	r0, r4
 8002d36:	f7ff ffe5 	bl	8002d04 <_ZN8touchgfx6WidgetC1Ev>
 8002d3a:	2300      	movs	r3, #0
 8002d3c:	62a3      	str	r3, [r4, #40]	; 0x28
 8002d3e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8002d42:	2301      	movs	r3, #1
 8002d44:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
        : AbstractButton(), up(), down(), alpha(255)
 8002d48:	4b04      	ldr	r3, [pc, #16]	; (8002d5c <_ZN8touchgfx6ButtonC1Ev+0x34>)
 8002d4a:	6023      	str	r3, [r4, #0]
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002d4c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d50:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8002d52:	8623      	strh	r3, [r4, #48]	; 0x30
 8002d54:	f884 3032 	strb.w	r3, [r4, #50]	; 0x32
    {
    }
 8002d58:	4620      	mov	r0, r4
 8002d5a:	bd10      	pop	{r4, pc}
 8002d5c:	0802a3f0 	.word	0x0802a3f0

08002d60 <_ZN25CompetitionScreenViewBaseC1Ev>:
CompetitionScreenViewBase::CompetitionScreenViewBase() :
 8002d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d64:	4604      	mov	r4, r0
 8002d66:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &CompetitionScreenViewBase::buttonCallbackHandler)
 8002d68:	4627      	mov	r7, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002d6a:	2500      	movs	r5, #0
 8002d6c:	f013 fd14 	bl	8016798 <_ZN8touchgfx6ScreenC1Ev>
 8002d70:	4b69      	ldr	r3, [pc, #420]	; (8002f18 <_ZN25CompetitionScreenViewBaseC1Ev+0x1b8>)
 8002d72:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002d74:	f847 3b40 	str.w	r3, [r7], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002d78:	4629      	mov	r1, r5
 8002d7a:	2226      	movs	r2, #38	; 0x26
 8002d7c:	4638      	mov	r0, r7
 8002d7e:	f023 fcd9 	bl	8026734 <memset>
 8002d82:	4638      	mov	r0, r7
 8002d84:	f7ff ffbe 	bl	8002d04 <_ZN8touchgfx6WidgetC1Ev>
 8002d88:	4b64      	ldr	r3, [pc, #400]	; (8002f1c <_ZN25CompetitionScreenViewBaseC1Ev+0x1bc>)
 8002d8a:	6423      	str	r3, [r4, #64]	; 0x40
 8002d8c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8002d90:	23ff      	movs	r3, #255	; 0xff
 8002d92:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8002d96:	f104 09a0 	add.w	r9, r4, #160	; 0xa0
        : color(col)
 8002d9a:	66a5      	str	r5, [r4, #104]	; 0x68
 8002d9c:	4650      	mov	r0, sl
 8002d9e:	f7ff ffc3 	bl	8002d28 <_ZN8touchgfx6ButtonC1Ev>
 8002da2:	f104 06d4 	add.w	r6, r4, #212	; 0xd4
 8002da6:	4648      	mov	r0, r9
 8002da8:	f7ff ffbe 	bl	8002d28 <_ZN8touchgfx6ButtonC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002dac:	4629      	mov	r1, r5
 8002dae:	2226      	movs	r2, #38	; 0x26
 8002db0:	4630      	mov	r0, r6
 8002db2:	f023 fcbf 	bl	8026734 <memset>
 8002db6:	4630      	mov	r0, r6
 8002db8:	f7ff ffa4 	bl	8002d04 <_ZN8touchgfx6WidgetC1Ev>
        : typedTextId(id)
 8002dbc:	4b58      	ldr	r3, [pc, #352]	; (8002f20 <_ZN25CompetitionScreenViewBaseC1Ev+0x1c0>)
 8002dbe:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 8002dc2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002dc6:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8002dca:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8002dce:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        : TextAreaWithWildcardBase(), wc1(0)
 8002dd2:	4b54      	ldr	r3, [pc, #336]	; (8002f24 <_ZN25CompetitionScreenViewBaseC1Ev+0x1c4>)
 8002dd4:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        : pobject(pObject), pmemfun(pmemfun_1)
 8002dd8:	4b53      	ldr	r3, [pc, #332]	; (8002f28 <_ZN25CompetitionScreenViewBaseC1Ev+0x1c8>)
 8002dda:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8002dde:	e9c4 3450 	strd	r3, r4, [r4, #320]	; 0x140
 8002de2:	4b52      	ldr	r3, [pc, #328]	; (8002f2c <_ZN25CompetitionScreenViewBaseC1Ev+0x1cc>)
 8002de4:	f8a4 510c 	strh.w	r5, [r4, #268]	; 0x10c
 8002de8:	e9c4 3552 	strd	r3, r5, [r4, #328]	; 0x148
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002dec:	f04f 3bff 	mov.w	fp, #4294967295
    __background.setPosition(0, 0, 800, 480);
 8002df0:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002df4:	462a      	mov	r2, r5
 8002df6:	4629      	mov	r1, r5
 8002df8:	4638      	mov	r0, r7
              text(0)
 8002dfa:	e9c4 b545 	strd	fp, r5, [r4, #276]	; 0x114
 8002dfe:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
 8002e02:	f8c4 511c 	str.w	r5, [r4, #284]	; 0x11c
 8002e06:	9300      	str	r3, [sp, #0]
 8002e08:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002e0c:	f7ff ff67 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002e10:	f104 0804 	add.w	r8, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002e14:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002e18:	66a3      	str	r3, [r4, #104]	; 0x68
 8002e1a:	4639      	mov	r1, r7
 8002e1c:	4640      	mov	r0, r8
 8002e1e:	f00c fc9f 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnPrevPage.setXY(17, 415);
 8002e22:	f240 129f 	movw	r2, #415	; 0x19f
 8002e26:	2111      	movs	r1, #17
 8002e28:	4650      	mov	r0, sl
 8002e2a:	f7ff ff4b 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    btnPrevPage.setAction(buttonCallback);
 8002e2e:	f504 77a0 	add.w	r7, r4, #320	; 0x140
 8002e32:	230c      	movs	r3, #12
    btnPrevPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_PREV_ID), touchgfx::Bitmap(BITMAP_BTN_PREV_ID));
 8002e34:	aa08      	add	r2, sp, #32
 8002e36:	a907      	add	r1, sp, #28
 8002e38:	4650      	mov	r0, sl
 8002e3a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002e3e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002e42:	f00f f95b 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002e46:	4651      	mov	r1, sl
 8002e48:	4640      	mov	r0, r8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002e4a:	f8c4 7094 	str.w	r7, [r4, #148]	; 0x94
 8002e4e:	f00c fc87 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnNextPage.setXY(735, 415);
 8002e52:	f240 129f 	movw	r2, #415	; 0x19f
 8002e56:	f240 21df 	movw	r1, #735	; 0x2df
 8002e5a:	4648      	mov	r0, r9
 8002e5c:	f7ff ff32 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 8002e60:	230b      	movs	r3, #11
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
 8002e62:	aa08      	add	r2, sp, #32
 8002e64:	a907      	add	r1, sp, #28
 8002e66:	4648      	mov	r0, r9
 8002e68:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002e6c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002e70:	f00f f944 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002e74:	4649      	mov	r1, r9
 8002e76:	4640      	mov	r0, r8
 8002e78:	f8c4 70c8 	str.w	r7, [r4, #200]	; 0xc8
 8002e7c:	f00c fc70 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtMission.setPosition(0, 158, 800, 165);
 8002e80:	23a5      	movs	r3, #165	; 0xa5
 8002e82:	229e      	movs	r2, #158	; 0x9e
 8002e84:	4629      	mov	r1, r5
 8002e86:	9300      	str	r3, [sp, #0]
 8002e88:	4630      	mov	r0, r6
 8002e8a:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002e8e:	f7ff ff26 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8002e92:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
        linespace = space;
 8002e96:	f8a4 5108 	strh.w	r5, [r4, #264]	; 0x108
        boundingArea = calculateBoundingArea();
 8002e9a:	ad02      	add	r5, sp, #8
 8002e9c:	4628      	mov	r0, r5
 8002e9e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002ea2:	f8c4 b104 	str.w	fp, [r4, #260]	; 0x104
        boundingArea = calculateBoundingArea();
 8002ea6:	4631      	mov	r1, r6
 8002ea8:	4798      	blx	r3
 8002eaa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002eae:	f504 7388 	add.w	r3, r4, #272	; 0x110
 8002eb2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002eb6:	4b1e      	ldr	r3, [pc, #120]	; (8002f30 <_ZN25CompetitionScreenViewBaseC1Ev+0x1d0>)
 8002eb8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtMissionBuffer, TXTMISSION_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_FAAC).getText());
 8002eba:	f504 7590 	add.w	r5, r4, #288	; 0x120
 8002ebe:	b92b      	cbnz	r3, 8002ecc <_ZN25CompetitionScreenViewBaseC1Ev+0x16c>
 8002ec0:	4b1c      	ldr	r3, [pc, #112]	; (8002f34 <_ZN25CompetitionScreenViewBaseC1Ev+0x1d4>)
 8002ec2:	4a1d      	ldr	r2, [pc, #116]	; (8002f38 <_ZN25CompetitionScreenViewBaseC1Ev+0x1d8>)
 8002ec4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002ec6:	481d      	ldr	r0, [pc, #116]	; (8002f3c <_ZN25CompetitionScreenViewBaseC1Ev+0x1dc>)
 8002ec8:	f023 fba8 	bl	802661c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002ecc:	4b1c      	ldr	r3, [pc, #112]	; (8002f40 <_ZN25CompetitionScreenViewBaseC1Ev+0x1e0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002ece:	881b      	ldrh	r3, [r3, #0]
 8002ed0:	2b40      	cmp	r3, #64	; 0x40
 8002ed2:	d803      	bhi.n	8002edc <_ZN25CompetitionScreenViewBaseC1Ev+0x17c>
 8002ed4:	4b1b      	ldr	r3, [pc, #108]	; (8002f44 <_ZN25CompetitionScreenViewBaseC1Ev+0x1e4>)
 8002ed6:	4a18      	ldr	r2, [pc, #96]	; (8002f38 <_ZN25CompetitionScreenViewBaseC1Ev+0x1d8>)
 8002ed8:	2161      	movs	r1, #97	; 0x61
 8002eda:	e7f4      	b.n	8002ec6 <_ZN25CompetitionScreenViewBaseC1Ev+0x166>
        return texts->getText(typedTextId);
 8002edc:	4b1a      	ldr	r3, [pc, #104]	; (8002f48 <_ZN25CompetitionScreenViewBaseC1Ev+0x1e8>)
 8002ede:	2140      	movs	r1, #64	; 0x40
 8002ee0:	6818      	ldr	r0, [r3, #0]
 8002ee2:	f005 f933 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8002ee6:	4a19      	ldr	r2, [pc, #100]	; (8002f4c <_ZN25CompetitionScreenViewBaseC1Ev+0x1ec>)
 8002ee8:	4603      	mov	r3, r0
 8002eea:	210f      	movs	r1, #15
 8002eec:	4628      	mov	r0, r5
 8002eee:	f015 f943 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8002ef2:	4b0b      	ldr	r3, [pc, #44]	; (8002f20 <_ZN25CompetitionScreenViewBaseC1Ev+0x1c0>)
 8002ef4:	9308      	str	r3, [sp, #32]
    txtMission.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1ZY1));
 8002ef6:	a908      	add	r1, sp, #32
 8002ef8:	2341      	movs	r3, #65	; 0x41
 8002efa:	4630      	mov	r0, r6
        wc1 = value;
 8002efc:	f8c4 511c 	str.w	r5, [r4, #284]	; 0x11c
 8002f00:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002f04:	f00f f89c 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002f08:	4640      	mov	r0, r8
 8002f0a:	4631      	mov	r1, r6
 8002f0c:	f00c fc28 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002f10:	4620      	mov	r0, r4
 8002f12:	b00b      	add	sp, #44	; 0x2c
 8002f14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f18:	08028560 	.word	0x08028560
 8002f1c:	0802a388 	.word	0x0802a388
 8002f20:	080284a8 	.word	0x080284a8
 8002f24:	080284b8 	.word	0x080284b8
 8002f28:	08028548 	.word	0x08028548
 8002f2c:	08002c8d 	.word	0x08002c8d
 8002f30:	2000ef74 	.word	0x2000ef74
 8002f34:	080282f8 	.word	0x080282f8
 8002f38:	080283fa 	.word	0x080283fa
 8002f3c:	08028375 	.word	0x08028375
 8002f40:	2000ef78 	.word	0x2000ef78
 8002f44:	080283bc 	.word	0x080283bc
 8002f48:	2000ef80 	.word	0x2000ef80
 8002f4c:	08028432 	.word	0x08028432

08002f50 <_ZN20DriverScreenViewBaseD1Ev>:
}

DriverScreenViewBase::~DriverScreenViewBase()
{

}
 8002f50:	4770      	bx	lr

08002f52 <_ZN20DriverScreenViewBase11setupScreenEv>:

void DriverScreenViewBase::setupScreen()
{

}
 8002f52:	4770      	bx	lr

08002f54 <_ZN8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f54:	4770      	bx	lr

08002f56 <_ZN8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002f56:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f58:	68c2      	ldr	r2, [r0, #12]
 8002f5a:	6844      	ldr	r4, [r0, #4]
 8002f5c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002f5e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002f60:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002f64:	07d2      	lsls	r2, r2, #31
 8002f66:	bf48      	it	mi
 8002f68:	5962      	ldrmi	r2, [r4, r5]
 8002f6a:	689b      	ldr	r3, [r3, #8]
    }
 8002f6c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f6e:	bf48      	it	mi
 8002f70:	58d3      	ldrmi	r3, [r2, r3]
 8002f72:	4718      	bx	r3

08002f74 <_ZNK8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002f74:	6843      	ldr	r3, [r0, #4]
 8002f76:	b12b      	cbz	r3, 8002f84 <_ZNK8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002f78:	6883      	ldr	r3, [r0, #8]
 8002f7a:	b92b      	cbnz	r3, 8002f88 <_ZNK8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002f7c:	68c0      	ldr	r0, [r0, #12]
 8002f7e:	f000 0001 	and.w	r0, r0, #1
 8002f82:	4770      	bx	lr
 8002f84:	4618      	mov	r0, r3
 8002f86:	4770      	bx	lr
 8002f88:	2001      	movs	r0, #1
    }
 8002f8a:	4770      	bx	lr

08002f8c <_ZN8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f8c:	b510      	push	{r4, lr}
 8002f8e:	2110      	movs	r1, #16
 8002f90:	4604      	mov	r4, r0
 8002f92:	f023 fb15 	bl	80265c0 <_ZdlPvj>
 8002f96:	4620      	mov	r0, r4
 8002f98:	bd10      	pop	{r4, pc}

08002f9a <_ZN20DriverScreenViewBaseD0Ev>:
DriverScreenViewBase::~DriverScreenViewBase()
 8002f9a:	b510      	push	{r4, lr}
}
 8002f9c:	f640 411c 	movw	r1, #3100	; 0xc1c
DriverScreenViewBase::~DriverScreenViewBase()
 8002fa0:	4604      	mov	r4, r0
}
 8002fa2:	f023 fb0d 	bl	80265c0 <_ZdlPvj>
 8002fa6:	4620      	mov	r0, r4
 8002fa8:	bd10      	pop	{r4, pc}

08002faa <_ZN20DriverScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void DriverScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002faa:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btnNextPage)
 8002fac:	f100 03e8 	add.w	r3, r0, #232	; 0xe8
 8002fb0:	4299      	cmp	r1, r3
{
 8002fb2:	4604      	mov	r4, r0
 8002fb4:	460d      	mov	r5, r1
    if (&src == &btnNextPage)
 8002fb6:	d103      	bne.n	8002fc0 <_ZN20DriverScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~DriverScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002fb8:	f011 ff6e 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //fromDriverScreenToMainInfotaiment
        //When btnNextPage clicked change screen to MainInfotaiment
        //Go to MainInfotaiment with screen transition towards East
        application().gotoMainInfotaimentScreenSlideTransitionEast();
 8002fbc:	f001 fbda 	bl	8004774 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionEastEv>
    }
    if (&src == &btnPrevPage)
 8002fc0:	34b4      	adds	r4, #180	; 0xb4
 8002fc2:	42a5      	cmp	r5, r4
 8002fc4:	d105      	bne.n	8002fd2 <_ZN20DriverScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
 8002fc6:	f011 ff67 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
        //fromDriverScreenToCompetitionScreen
        //When btnPrevPage clicked change screen to CompetitionScreen
        //Go to CompetitionScreen with screen transition towards West
        application().gotoCompetitionScreenScreenSlideTransitionWest();
    }
}
 8002fca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCompetitionScreenScreenSlideTransitionWest();
 8002fce:	f001 bc11 	b.w	80047f4 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionWestEv>
}
 8002fd2:	bd38      	pop	{r3, r4, r5, pc}

08002fd4 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002fd4:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002fd6:	2226      	movs	r2, #38	; 0x26
    Box()
 8002fd8:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002fda:	2100      	movs	r1, #0
 8002fdc:	f023 fbaa 	bl	8026734 <memset>
 8002fe0:	4620      	mov	r0, r4
 8002fe2:	f7ff fe8f 	bl	8002d04 <_ZN8touchgfx6WidgetC1Ev>
 8002fe6:	4b04      	ldr	r3, [pc, #16]	; (8002ff8 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002fe8:	6023      	str	r3, [r4, #0]
 8002fea:	23ff      	movs	r3, #255	; 0xff
 8002fec:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002ff0:	2300      	movs	r3, #0
 8002ff2:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002ff4:	4620      	mov	r0, r4
 8002ff6:	bd10      	pop	{r4, pc}
 8002ff8:	0802a388 	.word	0x0802a388

08002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002ffc:	2200      	movs	r2, #0
 8002ffe:	f04f 31ff 	mov.w	r1, #4294967295
 8003002:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8003006:	6082      	str	r2, [r0, #8]
        {
        }
 8003008:	4770      	bx	lr
	...

0800300c <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 800300c:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800300e:	2100      	movs	r1, #0
    TextArea()
 8003010:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003012:	2226      	movs	r2, #38	; 0x26
 8003014:	f023 fb8e 	bl	8026734 <memset>
 8003018:	4620      	mov	r0, r4
 800301a:	f7ff fe73 	bl	8002d04 <_ZN8touchgfx6WidgetC1Ev>
 800301e:	4b09      	ldr	r3, [pc, #36]	; (8003044 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8003020:	6023      	str	r3, [r4, #0]
 8003022:	4b09      	ldr	r3, [pc, #36]	; (8003048 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003024:	62a3      	str	r3, [r4, #40]	; 0x28
 8003026:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800302a:	85a3      	strh	r3, [r4, #44]	; 0x2c
 800302c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8003030:	2300      	movs	r3, #0
 8003032:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8003036:	8723      	strh	r3, [r4, #56]	; 0x38
 8003038:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 800303c:	f7ff ffde 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8003040:	4620      	mov	r0, r4
 8003042:	bd10      	pop	{r4, pc}
 8003044:	0802a2f8 	.word	0x0802a2f8
 8003048:	080284a8 	.word	0x080284a8

0800304c <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800304c:	b510      	push	{r4, lr}
 800304e:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8003050:	f7ff ffc0 	bl	8002fd4 <_ZN8touchgfx3BoxC1Ev>
 8003054:	4b03      	ldr	r3, [pc, #12]	; (8003064 <_ZN8touchgfx13BoxWithBorderC1Ev+0x18>)
 8003056:	6023      	str	r3, [r4, #0]
        : color(col)
 8003058:	2300      	movs	r3, #0
 800305a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800305c:	8623      	strh	r3, [r4, #48]	; 0x30
    {
    }
 800305e:	4620      	mov	r0, r4
 8003060:	bd10      	pop	{r4, pc}
 8003062:	bf00      	nop
 8003064:	0802a464 	.word	0x0802a464

08003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003068:	b510      	push	{r4, lr}
 800306a:	4604      	mov	r4, r0
        : TextArea()
 800306c:	f7ff ffce 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003070:	4b02      	ldr	r3, [pc, #8]	; (800307c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8003072:	6023      	str	r3, [r4, #0]
 8003074:	2300      	movs	r3, #0
 8003076:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003078:	4620      	mov	r0, r4
 800307a:	bd10      	pop	{r4, pc}
 800307c:	080284b8 	.word	0x080284b8

08003080 <_ZN20DriverScreenViewBaseC1Ev>:
DriverScreenViewBase::DriverScreenViewBase() :
 8003080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003084:	ed2d 8b10 	vpush	{d8-d15}
 8003088:	4683      	mov	fp, r0
 800308a:	b0a5      	sub	sp, #148	; 0x94
    buttonCallback(this, &DriverScreenViewBase::buttonCallbackHandler)
 800308c:	465c      	mov	r4, fp
 800308e:	f04f 0800 	mov.w	r8, #0
 8003092:	f013 fb81 	bl	8016798 <_ZN8touchgfx6ScreenC1Ev>
 8003096:	4be7      	ldr	r3, [pc, #924]	; (8003434 <_ZN20DriverScreenViewBaseC1Ev+0x3b4>)
 8003098:	f8cb 803c 	str.w	r8, [fp, #60]	; 0x3c
 800309c:	f844 3b40 	str.w	r3, [r4], #64
 80030a0:	f10b 066c 	add.w	r6, fp, #108	; 0x6c
 80030a4:	4620      	mov	r0, r4
 80030a6:	f7ff ff95 	bl	8002fd4 <_ZN8touchgfx3BoxC1Ev>
 80030aa:	4630      	mov	r0, r6
 80030ac:	f7ff ffae 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80030b0:	f10b 03b4 	add.w	r3, fp, #180	; 0xb4
 80030b4:	f10b 07e8 	add.w	r7, fp, #232	; 0xe8
 80030b8:	4618      	mov	r0, r3
 80030ba:	ee0e 3a90 	vmov	s29, r3
 80030be:	f7ff fe33 	bl	8002d28 <_ZN8touchgfx6ButtonC1Ev>
 80030c2:	4638      	mov	r0, r7
 80030c4:	f7ff fe30 	bl	8002d28 <_ZN8touchgfx6ButtonC1Ev>
 80030c8:	f50b 738e 	add.w	r3, fp, #284	; 0x11c
 80030cc:	4618      	mov	r0, r3
 80030ce:	930c      	str	r3, [sp, #48]	; 0x30
 80030d0:	f7ff ffbc 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 80030d4:	f50b 73a8 	add.w	r3, fp, #336	; 0x150
 80030d8:	4618      	mov	r0, r3
 80030da:	930d      	str	r3, [sp, #52]	; 0x34
 80030dc:	f7ff ffb6 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 80030e0:	f50b 73c2 	add.w	r3, fp, #388	; 0x184
 80030e4:	4618      	mov	r0, r3
 80030e6:	930e      	str	r3, [sp, #56]	; 0x38
 80030e8:	f7ff ffb0 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 80030ec:	f50b 73dc 	add.w	r3, fp, #440	; 0x1b8
 80030f0:	4618      	mov	r0, r3
 80030f2:	930f      	str	r3, [sp, #60]	; 0x3c
 80030f4:	f7ff ffaa 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 80030f8:	f50b 73f6 	add.w	r3, fp, #492	; 0x1ec
 80030fc:	4618      	mov	r0, r3
 80030fe:	9310      	str	r3, [sp, #64]	; 0x40
 8003100:	f7ff ffa4 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003104:	f50b 7308 	add.w	r3, fp, #544	; 0x220
 8003108:	4618      	mov	r0, r3
 800310a:	9311      	str	r3, [sp, #68]	; 0x44
 800310c:	f7ff ff9e 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003110:	f50b 7315 	add.w	r3, fp, #596	; 0x254
 8003114:	4618      	mov	r0, r3
 8003116:	9312      	str	r3, [sp, #72]	; 0x48
 8003118:	f7ff ff98 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800311c:	f50b 7322 	add.w	r3, fp, #648	; 0x288
 8003120:	4618      	mov	r0, r3
 8003122:	9313      	str	r3, [sp, #76]	; 0x4c
 8003124:	f7ff ff92 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003128:	f50b 732f 	add.w	r3, fp, #700	; 0x2bc
 800312c:	4618      	mov	r0, r3
 800312e:	9314      	str	r3, [sp, #80]	; 0x50
 8003130:	f7ff ff8c 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003134:	f50b 733c 	add.w	r3, fp, #752	; 0x2f0
 8003138:	4618      	mov	r0, r3
 800313a:	9315      	str	r3, [sp, #84]	; 0x54
 800313c:	f7ff ff86 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003140:	f50b 7349 	add.w	r3, fp, #804	; 0x324
 8003144:	4618      	mov	r0, r3
 8003146:	9316      	str	r3, [sp, #88]	; 0x58
 8003148:	f7ff ff80 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800314c:	f50b 7356 	add.w	r3, fp, #856	; 0x358
 8003150:	4618      	mov	r0, r3
 8003152:	9317      	str	r3, [sp, #92]	; 0x5c
 8003154:	f7ff ff7a 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003158:	f50b 7363 	add.w	r3, fp, #908	; 0x38c
 800315c:	4618      	mov	r0, r3
 800315e:	9318      	str	r3, [sp, #96]	; 0x60
 8003160:	f7ff ff74 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003164:	f50b 7370 	add.w	r3, fp, #960	; 0x3c0
 8003168:	4618      	mov	r0, r3
 800316a:	9319      	str	r3, [sp, #100]	; 0x64
 800316c:	f7ff ff6e 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003170:	f50b 737d 	add.w	r3, fp, #1012	; 0x3f4
 8003174:	4618      	mov	r0, r3
 8003176:	931a      	str	r3, [sp, #104]	; 0x68
 8003178:	f7ff ff68 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800317c:	f50b 6385 	add.w	r3, fp, #1064	; 0x428
 8003180:	4618      	mov	r0, r3
 8003182:	931b      	str	r3, [sp, #108]	; 0x6c
 8003184:	f7ff ff62 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003188:	f20b 435c 	addw	r3, fp, #1116	; 0x45c
 800318c:	4618      	mov	r0, r3
 800318e:	ee08 3a10 	vmov	s16, r3
 8003192:	f7ff ff69 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003196:	f50b 6395 	add.w	r3, fp, #1192	; 0x4a8
 800319a:	4618      	mov	r0, r3
 800319c:	ee0f 3a10 	vmov	s30, r3
 80031a0:	f7ff ff62 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80031a4:	f20b 43f4 	addw	r3, fp, #1268	; 0x4f4
 80031a8:	4618      	mov	r0, r3
 80031aa:	ee0f 3a90 	vmov	s31, r3
 80031ae:	f7ff ff5b 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80031b2:	f50b 63a8 	add.w	r3, fp, #1344	; 0x540
 80031b6:	4618      	mov	r0, r3
 80031b8:	ee08 3a90 	vmov	s17, r3
 80031bc:	f7ff ff26 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80031c0:	f50b 63b1 	add.w	r3, fp, #1416	; 0x588
 80031c4:	4618      	mov	r0, r3
 80031c6:	ee09 3a10 	vmov	s18, r3
 80031ca:	f7ff ff1f 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80031ce:	f50b 63ba 	add.w	r3, fp, #1488	; 0x5d0
 80031d2:	4618      	mov	r0, r3
 80031d4:	ee09 3a90 	vmov	s19, r3
 80031d8:	f7ff ff18 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80031dc:	f50b 63c3 	add.w	r3, fp, #1560	; 0x618
 80031e0:	4618      	mov	r0, r3
 80031e2:	ee0a 3a10 	vmov	s20, r3
 80031e6:	f7ff ff11 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80031ea:	f50b 63cc 	add.w	r3, fp, #1632	; 0x660
 80031ee:	4618      	mov	r0, r3
 80031f0:	ee0a 3a90 	vmov	s21, r3
 80031f4:	f7ff ff0a 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80031f8:	f50b 63d5 	add.w	r3, fp, #1704	; 0x6a8
 80031fc:	4618      	mov	r0, r3
 80031fe:	ee0b 3a10 	vmov	s22, r3
 8003202:	f7ff ff03 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8003206:	f50b 63de 	add.w	r3, fp, #1776	; 0x6f0
 800320a:	4618      	mov	r0, r3
 800320c:	ee0b 3a90 	vmov	s23, r3
 8003210:	f7ff fefc 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8003214:	f50b 63e7 	add.w	r3, fp, #1848	; 0x738
 8003218:	4618      	mov	r0, r3
 800321a:	ee0c 3a10 	vmov	s24, r3
 800321e:	f7ff fef5 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8003222:	f50b 63f0 	add.w	r3, fp, #1920	; 0x780
 8003226:	4618      	mov	r0, r3
 8003228:	ee0c 3a90 	vmov	s25, r3
 800322c:	f7ff feee 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8003230:	f50b 63f9 	add.w	r3, fp, #1992	; 0x7c8
 8003234:	4618      	mov	r0, r3
 8003236:	ee0d 3a10 	vmov	s26, r3
 800323a:	f7ff fee7 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800323e:	f50b 6301 	add.w	r3, fp, #2064	; 0x810
 8003242:	4618      	mov	r0, r3
 8003244:	ee0d 3a90 	vmov	s27, r3
 8003248:	f7ff fee0 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800324c:	f60b 0358 	addw	r3, fp, #2136	; 0x858
 8003250:	4618      	mov	r0, r3
 8003252:	ee0e 3a10 	vmov	s28, r3
 8003256:	f7ff fed9 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800325a:	f50b 630a 	add.w	r3, fp, #2208	; 0x8a0
 800325e:	4618      	mov	r0, r3
 8003260:	9302      	str	r3, [sp, #8]
 8003262:	f7ff ff01 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003266:	f60b 03ec 	addw	r3, fp, #2284	; 0x8ec
 800326a:	4618      	mov	r0, r3
 800326c:	9303      	str	r3, [sp, #12]
 800326e:	f7ff fefb 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003272:	f60b 1338 	addw	r3, fp, #2360	; 0x938
 8003276:	4618      	mov	r0, r3
 8003278:	9304      	str	r3, [sp, #16]
 800327a:	f7ff fef5 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800327e:	f60b 1384 	addw	r3, fp, #2436	; 0x984
 8003282:	4618      	mov	r0, r3
 8003284:	9305      	str	r3, [sp, #20]
 8003286:	f7ff feef 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800328a:	f50b 631d 	add.w	r3, fp, #2512	; 0x9d0
 800328e:	4618      	mov	r0, r3
 8003290:	9306      	str	r3, [sp, #24]
 8003292:	f7ff fee9 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003296:	f60b 231c 	addw	r3, fp, #2588	; 0xa1c
 800329a:	4618      	mov	r0, r3
 800329c:	9307      	str	r3, [sp, #28]
 800329e:	f7ff fee3 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032a2:	f60b 2368 	addw	r3, fp, #2664	; 0xa68
 80032a6:	4618      	mov	r0, r3
 80032a8:	9308      	str	r3, [sp, #32]
 80032aa:	f7ff fedd 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032ae:	f60b 23b4 	addw	r3, fp, #2740	; 0xab4
 80032b2:	4618      	mov	r0, r3
 80032b4:	9309      	str	r3, [sp, #36]	; 0x24
 80032b6:	f7ff fed7 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032ba:	f50b 6330 	add.w	r3, fp, #2816	; 0xb00
 80032be:	4618      	mov	r0, r3
 80032c0:	930a      	str	r3, [sp, #40]	; 0x28
 80032c2:	f7ff fed1 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032c6:	f60b 334c 	addw	r3, fp, #2892	; 0xb4c
 80032ca:	4618      	mov	r0, r3
 80032cc:	930b      	str	r3, [sp, #44]	; 0x2c
 80032ce:	f7ff fecb 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80032d2:	4b59      	ldr	r3, [pc, #356]	; (8003438 <_ZN20DriverScreenViewBaseC1Ev+0x3b8>)
 80032d4:	f8cb 3c0c 	str.w	r3, [fp, #3084]	; 0xc0c
 80032d8:	4b58      	ldr	r3, [pc, #352]	; (800343c <_ZN20DriverScreenViewBaseC1Ev+0x3bc>)
 80032da:	f8cb 3c14 	str.w	r3, [fp, #3092]	; 0xc14
    __background.setPosition(0, 0, 800, 480);
 80032de:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80032e2:	4642      	mov	r2, r8
 80032e4:	4620      	mov	r0, r4
 80032e6:	9300      	str	r3, [sp, #0]
 80032e8:	4641      	mov	r1, r8
 80032ea:	f44f 7348 	mov.w	r3, #800	; 0x320
 80032ee:	f8cb bc10 	str.w	fp, [fp, #3088]	; 0xc10
 80032f2:	f8cb 8c18 	str.w	r8, [fp, #3096]	; 0xc18
 80032f6:	f10b 0904 	add.w	r9, fp, #4
 80032fa:	f7ff fcf0 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80032fe:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003302:	4621      	mov	r1, r4
 8003304:	f8cb 3068 	str.w	r3, [fp, #104]	; 0x68
 8003308:	4648      	mov	r0, r9
 800330a:	f00c fa29 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTmot_1.setPosition(531, 384, 133, 73);
 800330e:	2349      	movs	r3, #73	; 0x49
        color = newColor;
 8003310:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8003314:	ac1c      	add	r4, sp, #112	; 0x70
 8003316:	f44f 72c0 	mov.w	r2, #384	; 0x180
 800331a:	4630      	mov	r0, r6
 800331c:	9300      	str	r3, [sp, #0]
 800331e:	f240 2113 	movw	r1, #531	; 0x213
 8003322:	2385      	movs	r3, #133	; 0x85
 8003324:	f7ff fcdb 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003328:	4631      	mov	r1, r6
 800332a:	4620      	mov	r0, r4
        color = newColor;
 800332c:	f8cb a09c 	str.w	sl, [fp, #156]	; 0x9c
        linespace = space;
 8003330:	f8ab 80a0 	strh.w	r8, [fp, #160]	; 0xa0
        boundingArea = calculateBoundingArea();
 8003334:	f00e fbea 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003338:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800333c:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8003340:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtTmot_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCFN));
 8003344:	ad21      	add	r5, sp, #132	; 0x84
 8003346:	4b3e      	ldr	r3, [pc, #248]	; (8003440 <_ZN20DriverScreenViewBaseC1Ev+0x3c0>)
 8003348:	9321      	str	r3, [sp, #132]	; 0x84
 800334a:	4630      	mov	r0, r6
 800334c:	2313      	movs	r3, #19
 800334e:	4629      	mov	r1, r5
 8003350:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003354:	f00e fe74 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003358:	4631      	mov	r1, r6
 800335a:	4648      	mov	r0, r9
 800335c:	f00c fa00 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnPrevPage.setXY(17, 415);
 8003360:	ee1e 0a90 	vmov	r0, s29
 8003364:	f240 129f 	movw	r2, #415	; 0x19f
 8003368:	2111      	movs	r1, #17
 800336a:	f7ff fcab 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    btnPrevPage.setAction(buttonCallback);
 800336e:	f60b 460c 	addw	r6, fp, #3084	; 0xc0c
 8003372:	230c      	movs	r3, #12
    btnPrevPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_PREV_ID), touchgfx::Bitmap(BITMAP_BTN_PREV_ID));
 8003374:	462a      	mov	r2, r5
 8003376:	ee1e 0a90 	vmov	r0, s29
 800337a:	a920      	add	r1, sp, #128	; 0x80
 800337c:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003380:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 8003384:	f00e feba 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003388:	ee1e 1a90 	vmov	r1, s29
 800338c:	f8cb 60dc 	str.w	r6, [fp, #220]	; 0xdc
 8003390:	4648      	mov	r0, r9
 8003392:	f00c f9e5 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnNextPage.setXY(735, 415);
 8003396:	4638      	mov	r0, r7
 8003398:	f240 129f 	movw	r2, #415	; 0x19f
 800339c:	f240 21df 	movw	r1, #735	; 0x2df
 80033a0:	f7ff fc90 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 80033a4:	230b      	movs	r3, #11
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
 80033a6:	462a      	mov	r2, r5
 80033a8:	4638      	mov	r0, r7
 80033aa:	a920      	add	r1, sp, #128	; 0x80
 80033ac:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 80033b0:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 80033b4:	f00e fea2 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80033b8:	4639      	mov	r1, r7
 80033ba:	f8cb 6110 	str.w	r6, [fp, #272]	; 0x110
 80033be:	4648      	mov	r0, r9
    boxRpm.setPosition(1, 0, 266, 120);
 80033c0:	2678      	movs	r6, #120	; 0x78
 80033c2:	f00c f9cd 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80033c6:	4642      	mov	r2, r8
 80033c8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80033ca:	9600      	str	r6, [sp, #0]
 80033cc:	f44f 7385 	mov.w	r3, #266	; 0x10a
 80033d0:	2101      	movs	r1, #1
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 80033d2:	2702      	movs	r7, #2
 80033d4:	f7ff fc83 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 80033d8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80033dc:	e9cb 3a51 	strd	r3, sl, [fp, #324]	; 0x144
 80033e0:	990c      	ldr	r1, [sp, #48]	; 0x30
        borderSize = size;
 80033e2:	f8ab 714c 	strh.w	r7, [fp, #332]	; 0x14c
 80033e6:	4648      	mov	r0, r9
 80033e8:	f00c f9ba 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxLC.setPosition(531, 360, 133, 120);
 80033ec:	f44f 72b4 	mov.w	r2, #360	; 0x168
 80033f0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80033f2:	9600      	str	r6, [sp, #0]
 80033f4:	2385      	movs	r3, #133	; 0x85
 80033f6:	f240 2113 	movw	r1, #531	; 0x213
 80033fa:	f7ff fc70 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 80033fe:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003402:	e9cb 3a5e 	strd	r3, sl, [fp, #376]	; 0x178
 8003406:	990d      	ldr	r1, [sp, #52]	; 0x34
        borderSize = size;
 8003408:	f8ab 7180 	strh.w	r7, [fp, #384]	; 0x180
 800340c:	4648      	mov	r0, r9
 800340e:	f00c f9a7 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTmot.setPosition(134, 120, 133, 120);
 8003412:	4632      	mov	r2, r6
 8003414:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003416:	9600      	str	r6, [sp, #0]
 8003418:	2385      	movs	r3, #133	; 0x85
 800341a:	2186      	movs	r1, #134	; 0x86
 800341c:	f7ff fc5f 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003420:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003424:	e9cb 3a6b 	strd	r3, sl, [fp, #428]	; 0x1ac
 8003428:	990e      	ldr	r1, [sp, #56]	; 0x38
        borderSize = size;
 800342a:	f8ab 71b4 	strh.w	r7, [fp, #436]	; 0x1b4
 800342e:	4648      	mov	r0, r9
 8003430:	e008      	b.n	8003444 <_ZN20DriverScreenViewBaseC1Ev+0x3c4>
 8003432:	bf00      	nop
 8003434:	080285ac 	.word	0x080285ac
 8003438:	08028594 	.word	0x08028594
 800343c:	08002fab 	.word	0x08002fab
 8003440:	080284a8 	.word	0x080284a8
 8003444:	f00c f98c 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxCLT.setPosition(1, 240, 133, 120);
 8003448:	22f0      	movs	r2, #240	; 0xf0
 800344a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800344c:	9600      	str	r6, [sp, #0]
 800344e:	2385      	movs	r3, #133	; 0x85
 8003450:	2101      	movs	r1, #1
 8003452:	f7ff fc44 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003456:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 800345a:	e9cb 3a78 	strd	r3, sl, [fp, #480]	; 0x1e0
 800345e:	990f      	ldr	r1, [sp, #60]	; 0x3c
        borderSize = size;
 8003460:	f8ab 71e8 	strh.w	r7, [fp, #488]	; 0x1e8
 8003464:	4648      	mov	r0, r9
 8003466:	f00c f97b 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxToil.setPosition(134, 240, 133, 120);
 800346a:	22f0      	movs	r2, #240	; 0xf0
 800346c:	9810      	ldr	r0, [sp, #64]	; 0x40
 800346e:	9600      	str	r6, [sp, #0]
 8003470:	2385      	movs	r3, #133	; 0x85
 8003472:	2186      	movs	r1, #134	; 0x86
 8003474:	f7ff fc33 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003478:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 800347c:	e9cb 3a85 	strd	r3, sl, [fp, #532]	; 0x214
 8003480:	9910      	ldr	r1, [sp, #64]	; 0x40
        borderSize = size;
 8003482:	f8ab 721c 	strh.w	r7, [fp, #540]	; 0x21c
 8003486:	4648      	mov	r0, r9
 8003488:	f00c f96a 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxRES.setPosition(1, 120, 133, 120);
 800348c:	4632      	mov	r2, r6
 800348e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003490:	9600      	str	r6, [sp, #0]
 8003492:	2385      	movs	r3, #133	; 0x85
 8003494:	2101      	movs	r1, #1
 8003496:	f7ff fc22 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800349a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 800349e:	e9cb 3a92 	strd	r3, sl, [fp, #584]	; 0x248
 80034a2:	9911      	ldr	r1, [sp, #68]	; 0x44
        borderSize = size;
 80034a4:	f8ab 7250 	strh.w	r7, [fp, #592]	; 0x250
 80034a8:	4648      	mov	r0, r9
 80034aa:	f00c f959 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTorin.setPosition(134, 360, 133, 120);
 80034ae:	f44f 72b4 	mov.w	r2, #360	; 0x168
 80034b2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80034b4:	9600      	str	r6, [sp, #0]
 80034b6:	2385      	movs	r3, #133	; 0x85
 80034b8:	2186      	movs	r1, #134	; 0x86
 80034ba:	f7ff fc10 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 80034be:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80034c2:	e9cb 3a9f 	strd	r3, sl, [fp, #636]	; 0x27c
 80034c6:	9912      	ldr	r1, [sp, #72]	; 0x48
        borderSize = size;
 80034c8:	f8ab 7284 	strh.w	r7, [fp, #644]	; 0x284
 80034cc:	4648      	mov	r0, r9
 80034ce:	f00c f947 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBat24.setPosition(398, 360, 133, 120);
 80034d2:	f44f 72b4 	mov.w	r2, #360	; 0x168
 80034d6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80034d8:	9600      	str	r6, [sp, #0]
 80034da:	2385      	movs	r3, #133	; 0x85
 80034dc:	f44f 71c7 	mov.w	r1, #398	; 0x18e
 80034e0:	f7ff fbfd 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 80034e4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80034e8:	e9cb 3aac 	strd	r3, sl, [fp, #688]	; 0x2b0
 80034ec:	9913      	ldr	r1, [sp, #76]	; 0x4c
        borderSize = size;
 80034ee:	f8ab 72b8 	strh.w	r7, [fp, #696]	; 0x2b8
 80034f2:	4648      	mov	r0, r9
 80034f4:	f00c f934 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBat12.setPosition(267, 360, 131, 120);
 80034f8:	f44f 72b4 	mov.w	r2, #360	; 0x168
 80034fc:	9814      	ldr	r0, [sp, #80]	; 0x50
 80034fe:	9600      	str	r6, [sp, #0]
 8003500:	2383      	movs	r3, #131	; 0x83
 8003502:	f240 110b 	movw	r1, #267	; 0x10b
 8003506:	f7ff fbea 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800350a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 800350e:	e9cb 3ab9 	strd	r3, sl, [fp, #740]	; 0x2e4
 8003512:	9914      	ldr	r1, [sp, #80]	; 0x50
        borderSize = size;
 8003514:	f8ab 72ec 	strh.w	r7, [fp, #748]	; 0x2ec
 8003518:	4648      	mov	r0, r9
 800351a:	f00c f921 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPoil.setPosition(531, 120, 133, 120);
 800351e:	4632      	mov	r2, r6
 8003520:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003522:	9600      	str	r6, [sp, #0]
 8003524:	2385      	movs	r3, #133	; 0x85
 8003526:	f240 2113 	movw	r1, #531	; 0x213
 800352a:	f7ff fbd8 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800352e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003532:	e9cb 3ac6 	strd	r3, sl, [fp, #792]	; 0x318
 8003536:	9915      	ldr	r1, [sp, #84]	; 0x54
        borderSize = size;
 8003538:	f8ab 7320 	strh.w	r7, [fp, #800]	; 0x320
 800353c:	4648      	mov	r0, r9
 800353e:	f00c f90f 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPfuel.setPosition(531, 240, 133, 120);
 8003542:	22f0      	movs	r2, #240	; 0xf0
 8003544:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003546:	9600      	str	r6, [sp, #0]
 8003548:	2385      	movs	r3, #133	; 0x85
 800354a:	f240 2113 	movw	r1, #531	; 0x213
 800354e:	f7ff fbc6 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003552:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003556:	e9cb 3ad3 	strd	r3, sl, [fp, #844]	; 0x34c
 800355a:	9916      	ldr	r1, [sp, #88]	; 0x58
        borderSize = size;
 800355c:	f8ab 7354 	strh.w	r7, [fp, #852]	; 0x354
 8003560:	4648      	mov	r0, r9
 8003562:	f00c f8fd 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTPS.setPosition(663, 120, 137, 120);
 8003566:	4632      	mov	r2, r6
 8003568:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800356a:	9600      	str	r6, [sp, #0]
 800356c:	2389      	movs	r3, #137	; 0x89
 800356e:	f240 2197 	movw	r1, #663	; 0x297
 8003572:	f7ff fbb4 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003576:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 800357a:	e9cb 3ae0 	strd	r3, sl, [fp, #896]	; 0x380
 800357e:	9917      	ldr	r1, [sp, #92]	; 0x5c
        borderSize = size;
 8003580:	f8ab 7388 	strh.w	r7, [fp, #904]	; 0x388
 8003584:	4648      	mov	r0, r9
 8003586:	f00c f8eb 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPbrake.setPosition(664, 240, 136, 120);
 800358a:	22f0      	movs	r2, #240	; 0xf0
 800358c:	9818      	ldr	r0, [sp, #96]	; 0x60
 800358e:	9600      	str	r6, [sp, #0]
 8003590:	2388      	movs	r3, #136	; 0x88
 8003592:	f44f 7126 	mov.w	r1, #664	; 0x298
 8003596:	f7ff fba2 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800359a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 800359e:	e9cb 3aed 	strd	r3, sl, [fp, #948]	; 0x3b4
 80035a2:	9918      	ldr	r1, [sp, #96]	; 0x60
        borderSize = size;
 80035a4:	f8ab 73bc 	strh.w	r7, [fp, #956]	; 0x3bc
 80035a8:	4648      	mov	r0, r9
 80035aa:	f00c f8d9 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxLap.setPosition(267, 0, 265, 120);
 80035ae:	4642      	mov	r2, r8
 80035b0:	9819      	ldr	r0, [sp, #100]	; 0x64
 80035b2:	9600      	str	r6, [sp, #0]
 80035b4:	f240 1309 	movw	r3, #265	; 0x109
 80035b8:	f240 110b 	movw	r1, #267	; 0x10b
 80035bc:	f7ff fb8f 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 80035c0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80035c4:	e9cb 3afa 	strd	r3, sl, [fp, #1000]	; 0x3e8
 80035c8:	9919      	ldr	r1, [sp, #100]	; 0x64
        borderSize = size;
 80035ca:	f8ab 73f0 	strh.w	r7, [fp, #1008]	; 0x3f0
 80035ce:	4648      	mov	r0, r9
 80035d0:	f00c f8c6 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxSpeed.setPosition(531, 0, 269, 120);
 80035d4:	4642      	mov	r2, r8
 80035d6:	981a      	ldr	r0, [sp, #104]	; 0x68
 80035d8:	9600      	str	r6, [sp, #0]
 80035da:	f240 130d 	movw	r3, #269	; 0x10d
 80035de:	f240 2113 	movw	r1, #531	; 0x213
 80035e2:	f7ff fb7c 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 80035e6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80035ea:	991a      	ldr	r1, [sp, #104]	; 0x68
 80035ec:	f8cb 341c 	str.w	r3, [fp, #1052]	; 0x41c
 80035f0:	4648      	mov	r0, r9
        borderColor = colorBorder;
 80035f2:	f8cb a420 	str.w	sl, [fp, #1056]	; 0x420
        borderSize = size;
 80035f6:	f8ab 7424 	strh.w	r7, [fp, #1060]	; 0x424
 80035fa:	f00c f8b1 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxGear.setPosition(267, 120, 265, 240);
 80035fe:	23f0      	movs	r3, #240	; 0xf0
 8003600:	4632      	mov	r2, r6
 8003602:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003604:	9300      	str	r3, [sp, #0]
 8003606:	f240 110b 	movw	r1, #267	; 0x10b
 800360a:	f240 1309 	movw	r3, #265	; 0x109
 800360e:	f7ff fb66 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003612:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003616:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8003618:	f8cb 3450 	str.w	r3, [fp, #1104]	; 0x450
 800361c:	4648      	mov	r0, r9
        borderColor = colorBorder;
 800361e:	f8cb a454 	str.w	sl, [fp, #1108]	; 0x454
        borderSize = size;
 8003622:	f8ab 7458 	strh.w	r7, [fp, #1112]	; 0x458
 8003626:	f00c f89b 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtGear.setPosition(267, 120, 265, 240);
 800362a:	23f0      	movs	r3, #240	; 0xf0
 800362c:	4632      	mov	r2, r6
 800362e:	ee18 0a10 	vmov	r0, s16
 8003632:	9300      	str	r3, [sp, #0]
 8003634:	f240 110b 	movw	r1, #267	; 0x10b
 8003638:	f240 1309 	movw	r3, #265	; 0x109
 800363c:	f7ff fb4f 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003640:	f8db 345c 	ldr.w	r3, [fp, #1116]	; 0x45c
        color = newColor;
 8003644:	f8cb a48c 	str.w	sl, [fp, #1164]	; 0x48c
        boundingArea = calculateBoundingArea();
 8003648:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800364c:	f8ab 8490 	strh.w	r8, [fp, #1168]	; 0x490
        boundingArea = calculateBoundingArea();
 8003650:	ee18 1a10 	vmov	r1, s16
 8003654:	4620      	mov	r0, r4
 8003656:	4798      	blx	r3
 8003658:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800365c:	f50b 6393 	add.w	r3, fp, #1176	; 0x498
 8003660:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003664:	4b09      	ldr	r3, [pc, #36]	; (800368c <_ZN20DriverScreenViewBaseC1Ev+0x60c>)
 8003666:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_BNQX).getText());
 8003668:	f60b 3698 	addw	r6, fp, #2968	; 0xb98
 800366c:	b92b      	cbnz	r3, 800367a <_ZN20DriverScreenViewBaseC1Ev+0x5fa>
 800366e:	4b08      	ldr	r3, [pc, #32]	; (8003690 <_ZN20DriverScreenViewBaseC1Ev+0x610>)
 8003670:	4a08      	ldr	r2, [pc, #32]	; (8003694 <_ZN20DriverScreenViewBaseC1Ev+0x614>)
 8003672:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003674:	4808      	ldr	r0, [pc, #32]	; (8003698 <_ZN20DriverScreenViewBaseC1Ev+0x618>)
 8003676:	f022 ffd1 	bl	802661c <__assert_func>
 800367a:	4b08      	ldr	r3, [pc, #32]	; (800369c <_ZN20DriverScreenViewBaseC1Ev+0x61c>)
 800367c:	881b      	ldrh	r3, [r3, #0]
 800367e:	2b3d      	cmp	r3, #61	; 0x3d
 8003680:	d810      	bhi.n	80036a4 <_ZN20DriverScreenViewBaseC1Ev+0x624>
 8003682:	4b07      	ldr	r3, [pc, #28]	; (80036a0 <_ZN20DriverScreenViewBaseC1Ev+0x620>)
 8003684:	4a03      	ldr	r2, [pc, #12]	; (8003694 <_ZN20DriverScreenViewBaseC1Ev+0x614>)
 8003686:	2161      	movs	r1, #97	; 0x61
 8003688:	e7f4      	b.n	8003674 <_ZN20DriverScreenViewBaseC1Ev+0x5f4>
 800368a:	bf00      	nop
 800368c:	2000ef74 	.word	0x2000ef74
 8003690:	080282f8 	.word	0x080282f8
 8003694:	080283fa 	.word	0x080283fa
 8003698:	08028375 	.word	0x08028375
 800369c:	2000ef78 	.word	0x2000ef78
 80036a0:	080283bc 	.word	0x080283bc
        return texts->getText(typedTextId);
 80036a4:	4be7      	ldr	r3, [pc, #924]	; (8003a44 <_ZN20DriverScreenViewBaseC1Ev+0x9c4>)
 80036a6:	213d      	movs	r1, #61	; 0x3d
 80036a8:	6818      	ldr	r0, [r3, #0]
 80036aa:	f004 fd4f 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 80036ae:	4ae6      	ldr	r2, [pc, #920]	; (8003a48 <_ZN20DriverScreenViewBaseC1Ev+0x9c8>)
 80036b0:	4603      	mov	r3, r0
 80036b2:	4639      	mov	r1, r7
 80036b4:	4630      	mov	r0, r6
 80036b6:	f014 fd5f 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80036ba:	4fe4      	ldr	r7, [pc, #912]	; (8003a4c <_ZN20DriverScreenViewBaseC1Ev+0x9cc>)
        wc1 = value;
 80036bc:	f8cb 64a4 	str.w	r6, [fp, #1188]	; 0x4a4
 80036c0:	233e      	movs	r3, #62	; 0x3e
    txtGear.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0O7B));
 80036c2:	ee18 0a10 	vmov	r0, s16
 80036c6:	4629      	mov	r1, r5
 80036c8:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80036cc:	9721      	str	r7, [sp, #132]	; 0x84
 80036ce:	f00e fcb7 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80036d2:	ee18 1a10 	vmov	r1, s16
 80036d6:	4648      	mov	r0, r9
 80036d8:	f00c f842 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRpm.setPosition(1, 24, 266, 72);
 80036dc:	2348      	movs	r3, #72	; 0x48
 80036de:	2218      	movs	r2, #24
 80036e0:	2101      	movs	r1, #1
 80036e2:	ee1f 0a10 	vmov	r0, s30
 80036e6:	9300      	str	r3, [sp, #0]
 80036e8:	f44f 7385 	mov.w	r3, #266	; 0x10a
 80036ec:	f7ff faf7 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80036f0:	f8cb a4d8 	str.w	sl, [fp, #1240]	; 0x4d8
        linespace = space;
 80036f4:	f8ab 84dc 	strh.w	r8, [fp, #1244]	; 0x4dc
        return TextArea::BoundingArea();
 80036f8:	4628      	mov	r0, r5
 80036fa:	f7ff fc7f 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80036fe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003702:	f20b 43e4 	addw	r3, fp, #1252	; 0x4e4
 8003706:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800370a:	4ad1      	ldr	r2, [pc, #836]	; (8003a50 <_ZN20DriverScreenViewBaseC1Ev+0x9d0>)
 800370c:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2FOI).getText());
 800370e:	f60b 369c 	addw	r6, fp, #2972	; 0xb9c
 8003712:	2b00      	cmp	r3, #0
 8003714:	d0ab      	beq.n	800366e <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003716:	4acf      	ldr	r2, [pc, #828]	; (8003a54 <_ZN20DriverScreenViewBaseC1Ev+0x9d4>)
 8003718:	8813      	ldrh	r3, [r2, #0]
 800371a:	2b34      	cmp	r3, #52	; 0x34
 800371c:	d9b1      	bls.n	8003682 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 800371e:	4bc9      	ldr	r3, [pc, #804]	; (8003a44 <_ZN20DriverScreenViewBaseC1Ev+0x9c4>)
 8003720:	2134      	movs	r1, #52	; 0x34
 8003722:	6818      	ldr	r0, [r3, #0]
 8003724:	f004 fd12 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8003728:	4ac7      	ldr	r2, [pc, #796]	; (8003a48 <_ZN20DriverScreenViewBaseC1Ev+0x9c8>)
 800372a:	4603      	mov	r3, r0
 800372c:	2106      	movs	r1, #6
 800372e:	4630      	mov	r0, r6
 8003730:	f014 fd22 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003734:	2336      	movs	r3, #54	; 0x36
    txtRpm.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YH8M));
 8003736:	ee1f 0a10 	vmov	r0, s30
        wc1 = value;
 800373a:	f8cb 64f0 	str.w	r6, [fp, #1264]	; 0x4f0
 800373e:	4629      	mov	r1, r5
 8003740:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003744:	9721      	str	r7, [sp, #132]	; 0x84
 8003746:	f00e fc7b 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800374a:	ee1f 1a10 	vmov	r1, s30
 800374e:	4648      	mov	r0, r9
 8003750:	f00c f806 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTmot.setPosition(134, 167, 133, 73);
 8003754:	2049      	movs	r0, #73	; 0x49
 8003756:	2385      	movs	r3, #133	; 0x85
 8003758:	22a7      	movs	r2, #167	; 0xa7
 800375a:	2186      	movs	r1, #134	; 0x86
 800375c:	9000      	str	r0, [sp, #0]
 800375e:	ee1f 0a90 	vmov	r0, s31
 8003762:	f7ff fabc 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003766:	f8cb a524 	str.w	sl, [fp, #1316]	; 0x524
        linespace = space;
 800376a:	f8ab 8528 	strh.w	r8, [fp, #1320]	; 0x528
        return TextArea::BoundingArea();
 800376e:	4628      	mov	r0, r5
 8003770:	f7ff fc44 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003774:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003778:	f50b 63a6 	add.w	r3, fp, #1328	; 0x530
 800377c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003780:	49b3      	ldr	r1, [pc, #716]	; (8003a50 <_ZN20DriverScreenViewBaseC1Ev+0x9d0>)
 8003782:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtTmotBuffer, TXTTMOT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HO5R).getText());
 8003784:	f60b 36a8 	addw	r6, fp, #2984	; 0xba8
 8003788:	2b00      	cmp	r3, #0
 800378a:	f43f af70 	beq.w	800366e <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800378e:	4ab1      	ldr	r2, [pc, #708]	; (8003a54 <_ZN20DriverScreenViewBaseC1Ev+0x9d4>)
 8003790:	8813      	ldrh	r3, [r2, #0]
 8003792:	2b2f      	cmp	r3, #47	; 0x2f
 8003794:	f67f af75 	bls.w	8003682 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003798:	4baa      	ldr	r3, [pc, #680]	; (8003a44 <_ZN20DriverScreenViewBaseC1Ev+0x9c4>)
 800379a:	212f      	movs	r1, #47	; 0x2f
 800379c:	6818      	ldr	r0, [r3, #0]
 800379e:	f004 fcd5 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 80037a2:	4aa9      	ldr	r2, [pc, #676]	; (8003a48 <_ZN20DriverScreenViewBaseC1Ev+0x9c8>)
 80037a4:	4603      	mov	r3, r0
 80037a6:	2104      	movs	r1, #4
 80037a8:	4630      	mov	r0, r6
 80037aa:	f014 fce5 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80037ae:	2330      	movs	r3, #48	; 0x30
    txtTmot.setTypedText(touchgfx::TypedText(T___SINGLEUSE_73JB));
 80037b0:	ee1f 0a90 	vmov	r0, s31
        wc1 = value;
 80037b4:	f8cb 653c 	str.w	r6, [fp, #1340]	; 0x53c
 80037b8:	4629      	mov	r1, r5
 80037ba:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80037be:	9721      	str	r7, [sp, #132]	; 0x84
 80037c0:	f00e fc3e 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80037c4:	ee1f 1a90 	vmov	r1, s31
 80037c8:	4648      	mov	r0, r9
 80037ca:	f00b ffc9 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelLC.setPosition(531, 384, 133, 73);
 80037ce:	2049      	movs	r0, #73	; 0x49
 80037d0:	2385      	movs	r3, #133	; 0x85
 80037d2:	f44f 72c0 	mov.w	r2, #384	; 0x180
 80037d6:	9000      	str	r0, [sp, #0]
 80037d8:	f240 2113 	movw	r1, #531	; 0x213
 80037dc:	ee18 0a90 	vmov	r0, s17
 80037e0:	f7ff fa7d 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 80037e4:	4620      	mov	r0, r4
 80037e6:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 80037ea:	f8cb a570 	str.w	sl, [fp, #1392]	; 0x570
        linespace = space;
 80037ee:	f8ab 8574 	strh.w	r8, [fp, #1396]	; 0x574
        boundingArea = calculateBoundingArea();
 80037f2:	f00e f98b 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80037f6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80037fa:	f20b 537c 	addw	r3, fp, #1404	; 0x57c
 80037fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003802:	2315      	movs	r3, #21
    labelLC.setTypedText(touchgfx::TypedText(T___SINGLEUSE_43VM));
 8003804:	ee18 0a90 	vmov	r0, s17
 8003808:	4629      	mov	r1, r5
 800380a:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 800380e:	9721      	str	r7, [sp, #132]	; 0x84
 8003810:	f00e fc16 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003814:	ee18 1a90 	vmov	r1, s17
 8003818:	4648      	mov	r0, r9
 800381a:	f00b ffa1 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelRES.setPosition(1, 146, 131, 69);
 800381e:	2345      	movs	r3, #69	; 0x45
 8003820:	2292      	movs	r2, #146	; 0x92
 8003822:	ee19 0a10 	vmov	r0, s18
 8003826:	9300      	str	r3, [sp, #0]
 8003828:	2101      	movs	r1, #1
 800382a:	2383      	movs	r3, #131	; 0x83
 800382c:	f7ff fa57 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003830:	4620      	mov	r0, r4
 8003832:	ee19 1a10 	vmov	r1, s18
        color = newColor;
 8003836:	f8cb a5b8 	str.w	sl, [fp, #1464]	; 0x5b8
        linespace = space;
 800383a:	f8ab 85bc 	strh.w	r8, [fp, #1468]	; 0x5bc
        boundingArea = calculateBoundingArea();
 800383e:	f00e f965 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003842:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003846:	f20b 53c4 	addw	r3, fp, #1476	; 0x5c4
 800384a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800384e:	2311      	movs	r3, #17
    labelRES.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A8DL));
 8003850:	ee19 0a10 	vmov	r0, s18
 8003854:	4629      	mov	r1, r5
 8003856:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 800385a:	9721      	str	r7, [sp, #132]	; 0x84
 800385c:	f00e fbf0 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003860:	ee19 1a10 	vmov	r1, s18
 8003864:	4648      	mov	r0, r9
 8003866:	f00b ff7b 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelCLT.setPosition(1, 264, 132, 73);
 800386a:	2049      	movs	r0, #73	; 0x49
 800386c:	2384      	movs	r3, #132	; 0x84
 800386e:	f44f 7284 	mov.w	r2, #264	; 0x108
 8003872:	9000      	str	r0, [sp, #0]
 8003874:	2101      	movs	r1, #1
 8003876:	ee19 0a90 	vmov	r0, s19
 800387a:	f7ff fa30 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800387e:	4620      	mov	r0, r4
 8003880:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8003884:	f8cb a600 	str.w	sl, [fp, #1536]	; 0x600
        linespace = space;
 8003888:	f8ab 8604 	strh.w	r8, [fp, #1540]	; 0x604
        boundingArea = calculateBoundingArea();
 800388c:	f00e f93e 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003890:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003894:	f20b 630c 	addw	r3, fp, #1548	; 0x60c
 8003898:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800389c:	2314      	movs	r3, #20
    labelCLT.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y1TQ));
 800389e:	ee19 0a90 	vmov	r0, s19
 80038a2:	4629      	mov	r1, r5
    labelTmot.setPosition(134, 130, 133, 37);
 80038a4:	2625      	movs	r6, #37	; 0x25
 80038a6:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80038aa:	9721      	str	r7, [sp, #132]	; 0x84
    labelCLT.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y1TQ));
 80038ac:	f00e fbc8 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80038b0:	ee19 1a90 	vmov	r1, s19
 80038b4:	4648      	mov	r0, r9
 80038b6:	f00b ff53 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelTmot.setPosition(134, 130, 133, 37);
 80038ba:	2385      	movs	r3, #133	; 0x85
 80038bc:	2282      	movs	r2, #130	; 0x82
 80038be:	ee1a 0a10 	vmov	r0, s20
 80038c2:	9600      	str	r6, [sp, #0]
 80038c4:	2186      	movs	r1, #134	; 0x86
 80038c6:	f7ff fa0a 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 80038ca:	4620      	mov	r0, r4
 80038cc:	ee1a 1a10 	vmov	r1, s20
        color = newColor;
 80038d0:	f8cb a648 	str.w	sl, [fp, #1608]	; 0x648
        linespace = space;
 80038d4:	f8ab 864c 	strh.w	r8, [fp, #1612]	; 0x64c
        boundingArea = calculateBoundingArea();
 80038d8:	f00e f918 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80038dc:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80038e0:	f20b 6354 	addw	r3, fp, #1620	; 0x654
 80038e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80038e8:	231e      	movs	r3, #30
    labelTmot.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S2KY));
 80038ea:	ee1a 0a10 	vmov	r0, s20
 80038ee:	4629      	mov	r1, r5
 80038f0:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80038f4:	9721      	str	r7, [sp, #132]	; 0x84
 80038f6:	f00e fba3 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80038fa:	ee1a 1a10 	vmov	r1, s20
 80038fe:	4648      	mov	r0, r9
 8003900:	f00b ff2e 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelToil.setPosition(134, 250, 133, 37);
 8003904:	2385      	movs	r3, #133	; 0x85
 8003906:	22fa      	movs	r2, #250	; 0xfa
 8003908:	ee1a 0a90 	vmov	r0, s21
 800390c:	9600      	str	r6, [sp, #0]
 800390e:	2186      	movs	r1, #134	; 0x86
 8003910:	f7ff f9e5 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003914:	4620      	mov	r0, r4
 8003916:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 800391a:	f8cb a690 	str.w	sl, [fp, #1680]	; 0x690
        linespace = space;
 800391e:	f8ab 8694 	strh.w	r8, [fp, #1684]	; 0x694
        boundingArea = calculateBoundingArea();
 8003922:	f00e f8f3 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003926:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800392a:	f20b 639c 	addw	r3, fp, #1692	; 0x69c
 800392e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003932:	231d      	movs	r3, #29
    labelToil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2Q01));
 8003934:	ee1a 0a90 	vmov	r0, s21
 8003938:	4629      	mov	r1, r5
 800393a:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 800393e:	9721      	str	r7, [sp, #132]	; 0x84
 8003940:	f00e fb7e 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003944:	ee1a 1a90 	vmov	r1, s21
 8003948:	4648      	mov	r0, r9
 800394a:	f00b ff09 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelTorin.setPosition(134, 367, 133, 37);
 800394e:	2385      	movs	r3, #133	; 0x85
 8003950:	f240 126f 	movw	r2, #367	; 0x16f
 8003954:	ee1b 0a10 	vmov	r0, s22
 8003958:	9600      	str	r6, [sp, #0]
 800395a:	2186      	movs	r1, #134	; 0x86
 800395c:	f7ff f9bf 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003960:	4620      	mov	r0, r4
 8003962:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8003966:	f8cb a6d8 	str.w	sl, [fp, #1752]	; 0x6d8
        linespace = space;
 800396a:	f8ab 86dc 	strh.w	r8, [fp, #1756]	; 0x6dc
        boundingArea = calculateBoundingArea();
 800396e:	f00e f8cd 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003972:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003976:	f20b 63e4 	addw	r3, fp, #1764	; 0x6e4
 800397a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800397e:	231c      	movs	r3, #28
    labelTorin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8VFR));
 8003980:	ee1b 0a10 	vmov	r0, s22
 8003984:	4629      	mov	r1, r5
 8003986:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 800398a:	9721      	str	r7, [sp, #132]	; 0x84
 800398c:	f00e fb58 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003990:	ee1b 1a10 	vmov	r1, s22
 8003994:	4648      	mov	r0, r9
 8003996:	f00b fee3 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelBat12.setPosition(268, 370, 130, 37);
 800399a:	2382      	movs	r3, #130	; 0x82
 800399c:	f44f 72b9 	mov.w	r2, #370	; 0x172
 80039a0:	ee1b 0a90 	vmov	r0, s23
 80039a4:	9600      	str	r6, [sp, #0]
 80039a6:	f44f 7186 	mov.w	r1, #268	; 0x10c
 80039aa:	f7ff f998 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 80039ae:	4620      	mov	r0, r4
 80039b0:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 80039b4:	f8cb a720 	str.w	sl, [fp, #1824]	; 0x720
        linespace = space;
 80039b8:	f8ab 8724 	strh.w	r8, [fp, #1828]	; 0x724
        boundingArea = calculateBoundingArea();
 80039bc:	f00e f8a6 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80039c0:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80039c4:	f20b 732c 	addw	r3, fp, #1836	; 0x72c
 80039c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80039cc:	231b      	movs	r3, #27
    labelBat12.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DE5T));
 80039ce:	ee1b 0a90 	vmov	r0, s23
 80039d2:	4629      	mov	r1, r5
 80039d4:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80039d8:	9721      	str	r7, [sp, #132]	; 0x84
 80039da:	f00e fb31 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80039de:	ee1b 1a90 	vmov	r1, s23
 80039e2:	4648      	mov	r0, r9
 80039e4:	f00b febc 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelTorin_1_1.setPosition(399, 370, 130, 37);
 80039e8:	2382      	movs	r3, #130	; 0x82
 80039ea:	f44f 72b9 	mov.w	r2, #370	; 0x172
 80039ee:	ee1c 0a10 	vmov	r0, s24
 80039f2:	9600      	str	r6, [sp, #0]
 80039f4:	f240 118f 	movw	r1, #399	; 0x18f
 80039f8:	f7ff f971 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 80039fc:	4620      	mov	r0, r4
 80039fe:	ee1c 1a10 	vmov	r1, s24
        color = newColor;
 8003a02:	f8cb a768 	str.w	sl, [fp, #1896]	; 0x768
        linespace = space;
 8003a06:	f8ab 876c 	strh.w	r8, [fp, #1900]	; 0x76c
        boundingArea = calculateBoundingArea();
 8003a0a:	f00e f87f 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a0e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003a12:	f20b 7374 	addw	r3, fp, #1908	; 0x774
 8003a16:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003a1a:	231a      	movs	r3, #26
    labelTorin_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6T5M));
 8003a1c:	ee1c 0a10 	vmov	r0, s24
 8003a20:	4629      	mov	r1, r5
 8003a22:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003a26:	9721      	str	r7, [sp, #132]	; 0x84
 8003a28:	f00e fb0a 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a2c:	ee1c 1a10 	vmov	r1, s24
 8003a30:	4648      	mov	r0, r9
 8003a32:	f00b fe95 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelPoil.setPosition(532, 130, 132, 37);
 8003a36:	2384      	movs	r3, #132	; 0x84
 8003a38:	2282      	movs	r2, #130	; 0x82
 8003a3a:	ee1c 0a90 	vmov	r0, s25
 8003a3e:	9600      	str	r6, [sp, #0]
 8003a40:	e00a      	b.n	8003a58 <_ZN20DriverScreenViewBaseC1Ev+0x9d8>
 8003a42:	bf00      	nop
 8003a44:	2000ef80 	.word	0x2000ef80
 8003a48:	08028432 	.word	0x08028432
 8003a4c:	080284a8 	.word	0x080284a8
 8003a50:	2000ef74 	.word	0x2000ef74
 8003a54:	2000ef78 	.word	0x2000ef78
 8003a58:	f44f 7105 	mov.w	r1, #532	; 0x214
 8003a5c:	f7ff f93f 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a60:	4620      	mov	r0, r4
 8003a62:	ee1c 1a90 	vmov	r1, s25
        color = newColor;
 8003a66:	f8cb a7b0 	str.w	sl, [fp, #1968]	; 0x7b0
        linespace = space;
 8003a6a:	f8ab 87b4 	strh.w	r8, [fp, #1972]	; 0x7b4
        boundingArea = calculateBoundingArea();
 8003a6e:	f00e f84d 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a72:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003a76:	f20b 73bc 	addw	r3, fp, #1980	; 0x7bc
 8003a7a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003a7e:	2319      	movs	r3, #25
    labelPoil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8R8S));
 8003a80:	ee1c 0a90 	vmov	r0, s25
 8003a84:	4629      	mov	r1, r5
 8003a86:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003a8a:	9721      	str	r7, [sp, #132]	; 0x84
 8003a8c:	f00e fad8 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a90:	ee1c 1a90 	vmov	r1, s25
 8003a94:	4648      	mov	r0, r9
 8003a96:	f00b fe63 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelTPS.setPosition(664, 130, 136, 37);
 8003a9a:	2388      	movs	r3, #136	; 0x88
 8003a9c:	2282      	movs	r2, #130	; 0x82
 8003a9e:	ee1d 0a10 	vmov	r0, s26
 8003aa2:	9600      	str	r6, [sp, #0]
 8003aa4:	f44f 7126 	mov.w	r1, #664	; 0x298
 8003aa8:	f7ff f919 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003aac:	4620      	mov	r0, r4
 8003aae:	ee1d 1a10 	vmov	r1, s26
        color = newColor;
 8003ab2:	f8cb a7f8 	str.w	sl, [fp, #2040]	; 0x7f8
        linespace = space;
 8003ab6:	f8ab 87fc 	strh.w	r8, [fp, #2044]	; 0x7fc
        boundingArea = calculateBoundingArea();
 8003aba:	f00e f827 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003abe:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003ac2:	f60b 0304 	addw	r3, fp, #2052	; 0x804
 8003ac6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003aca:	2317      	movs	r3, #23
    labelTPS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OXBY));
 8003acc:	ee1d 0a10 	vmov	r0, s26
 8003ad0:	4629      	mov	r1, r5
 8003ad2:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003ad6:	9721      	str	r7, [sp, #132]	; 0x84
 8003ad8:	f00e fab2 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003adc:	ee1d 1a10 	vmov	r1, s26
 8003ae0:	4648      	mov	r0, r9
 8003ae2:	f00b fe3d 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelPbrake.setPosition(665, 250, 131, 37);
 8003ae6:	2383      	movs	r3, #131	; 0x83
 8003ae8:	22fa      	movs	r2, #250	; 0xfa
 8003aea:	ee1d 0a90 	vmov	r0, s27
 8003aee:	9600      	str	r6, [sp, #0]
 8003af0:	f240 2199 	movw	r1, #665	; 0x299
 8003af4:	f7ff f8f3 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003af8:	4620      	mov	r0, r4
 8003afa:	ee1d 1a90 	vmov	r1, s27
        color = newColor;
 8003afe:	f8cb a840 	str.w	sl, [fp, #2112]	; 0x840
        linespace = space;
 8003b02:	f8ab 8844 	strh.w	r8, [fp, #2116]	; 0x844
        boundingArea = calculateBoundingArea();
 8003b06:	f00e f801 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003b0a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003b0e:	f60b 034c 	addw	r3, fp, #2124	; 0x84c
 8003b12:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003b16:	2316      	movs	r3, #22
    labelPbrake.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7E8Q));
 8003b18:	ee1d 0a90 	vmov	r0, s27
 8003b1c:	4629      	mov	r1, r5
 8003b1e:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003b22:	9721      	str	r7, [sp, #132]	; 0x84
 8003b24:	f00e fa8c 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003b28:	ee1d 1a90 	vmov	r1, s27
 8003b2c:	4648      	mov	r0, r9
 8003b2e:	f00b fe17 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelPfuel.setPosition(532, 250, 131, 37);
 8003b32:	2383      	movs	r3, #131	; 0x83
 8003b34:	22fa      	movs	r2, #250	; 0xfa
 8003b36:	ee1e 0a10 	vmov	r0, s28
 8003b3a:	9600      	str	r6, [sp, #0]
 8003b3c:	f44f 7105 	mov.w	r1, #532	; 0x214
 8003b40:	f7ff f8cd 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b44:	4620      	mov	r0, r4
 8003b46:	ee1e 1a10 	vmov	r1, s28
        color = newColor;
 8003b4a:	f8cb a888 	str.w	sl, [fp, #2184]	; 0x888
        linespace = space;
 8003b4e:	f8ab 888c 	strh.w	r8, [fp, #2188]	; 0x88c
        boundingArea = calculateBoundingArea();
 8003b52:	f00d ffdb 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003b56:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003b5a:	f60b 0394 	addw	r3, fp, #2196	; 0x894
 8003b5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003b62:	2318      	movs	r3, #24
    labelPfuel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z9U2));
 8003b64:	ee1e 0a10 	vmov	r0, s28
 8003b68:	4629      	mov	r1, r5
 8003b6a:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003b6e:	9721      	str	r7, [sp, #132]	; 0x84
 8003b70:	f00e fa66 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003b74:	ee1e 1a10 	vmov	r1, s28
 8003b78:	4648      	mov	r0, r9
 8003b7a:	f00b fdf1 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtPoil.setPosition(532, 167, 131, 73);
 8003b7e:	2049      	movs	r0, #73	; 0x49
 8003b80:	2383      	movs	r3, #131	; 0x83
 8003b82:	22a7      	movs	r2, #167	; 0xa7
 8003b84:	f44f 7105 	mov.w	r1, #532	; 0x214
 8003b88:	9000      	str	r0, [sp, #0]
 8003b8a:	9802      	ldr	r0, [sp, #8]
 8003b8c:	f7ff f8a7 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003b90:	f8cb a8d0 	str.w	sl, [fp, #2256]	; 0x8d0
        linespace = space;
 8003b94:	f8ab 88d4 	strh.w	r8, [fp, #2260]	; 0x8d4
        return TextArea::BoundingArea();
 8003b98:	4628      	mov	r0, r5
 8003b9a:	f7ff fa2f 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003b9e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ba2:	f60b 03dc 	addw	r3, fp, #2268	; 0x8dc
 8003ba6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003baa:	49cc      	ldr	r1, [pc, #816]	; (8003edc <_ZN20DriverScreenViewBaseC1Ev+0xe5c>)
 8003bac:	680b      	ldr	r3, [r1, #0]
        : typedTextId(id)
 8003bae:	463e      	mov	r6, r7
    Unicode::snprintf(txtPoilBuffer, TXTPOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TP9G).getText());
 8003bb0:	f50b 643b 	add.w	r4, fp, #2992	; 0xbb0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003bb4:	2b00      	cmp	r3, #0
 8003bb6:	f43f ad5a 	beq.w	800366e <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003bba:	4ac9      	ldr	r2, [pc, #804]	; (8003ee0 <_ZN20DriverScreenViewBaseC1Ev+0xe60>)
 8003bbc:	8813      	ldrh	r3, [r2, #0]
 8003bbe:	2b29      	cmp	r3, #41	; 0x29
 8003bc0:	f67f ad5f 	bls.w	8003682 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003bc4:	4fc7      	ldr	r7, [pc, #796]	; (8003ee4 <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003bc6:	2129      	movs	r1, #41	; 0x29
 8003bc8:	6838      	ldr	r0, [r7, #0]
 8003bca:	f004 fabf 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8003bce:	4ac6      	ldr	r2, [pc, #792]	; (8003ee8 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003bd0:	4603      	mov	r3, r0
 8003bd2:	2105      	movs	r1, #5
 8003bd4:	4620      	mov	r0, r4
 8003bd6:	f014 facf 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003bda:	232a      	movs	r3, #42	; 0x2a
    txtPoil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E4IL));
 8003bdc:	9802      	ldr	r0, [sp, #8]
        wc1 = value;
 8003bde:	f8cb 48e8 	str.w	r4, [fp, #2280]	; 0x8e8
 8003be2:	4629      	mov	r1, r5
 8003be4:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003be8:	9621      	str	r6, [sp, #132]	; 0x84
 8003bea:	f00e fa29 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003bee:	9902      	ldr	r1, [sp, #8]
 8003bf0:	4648      	mov	r0, r9
 8003bf2:	f00b fdb5 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTPS.setPosition(664, 167, 137, 73);
 8003bf6:	2349      	movs	r3, #73	; 0x49
 8003bf8:	22a7      	movs	r2, #167	; 0xa7
 8003bfa:	f44f 7126 	mov.w	r1, #664	; 0x298
 8003bfe:	9803      	ldr	r0, [sp, #12]
 8003c00:	9300      	str	r3, [sp, #0]
 8003c02:	2389      	movs	r3, #137	; 0x89
 8003c04:	f7ff f86b 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003c08:	f8cb a91c 	str.w	sl, [fp, #2332]	; 0x91c
        linespace = space;
 8003c0c:	f8ab 8920 	strh.w	r8, [fp, #2336]	; 0x920
        return TextArea::BoundingArea();
 8003c10:	4628      	mov	r0, r5
 8003c12:	f7ff f9f3 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003c16:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003c1a:	f60b 1328 	addw	r3, fp, #2344	; 0x928
 8003c1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c22:	49ae      	ldr	r1, [pc, #696]	; (8003edc <_ZN20DriverScreenViewBaseC1Ev+0xe5c>)
 8003c24:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtTPSBuffer, TXTTPS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2VKQ).getText());
 8003c26:	f60b 34ba 	addw	r4, fp, #3002	; 0xbba
 8003c2a:	2b00      	cmp	r3, #0
 8003c2c:	f43f ad1f 	beq.w	800366e <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003c30:	4aab      	ldr	r2, [pc, #684]	; (8003ee0 <_ZN20DriverScreenViewBaseC1Ev+0xe60>)
 8003c32:	8813      	ldrh	r3, [r2, #0]
 8003c34:	2b23      	cmp	r3, #35	; 0x23
 8003c36:	f67f ad24 	bls.w	8003682 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003c3a:	6838      	ldr	r0, [r7, #0]
 8003c3c:	2123      	movs	r1, #35	; 0x23
 8003c3e:	f004 fa85 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8003c42:	4aa9      	ldr	r2, [pc, #676]	; (8003ee8 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003c44:	4603      	mov	r3, r0
 8003c46:	2103      	movs	r1, #3
 8003c48:	4620      	mov	r0, r4
 8003c4a:	f014 fa95 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003c4e:	f8cb 4934 	str.w	r4, [fp, #2356]	; 0x934
    txtTPS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QBHD));
 8003c52:	ac21      	add	r4, sp, #132	; 0x84
        : typedTextId(id)
 8003c54:	2324      	movs	r3, #36	; 0x24
 8003c56:	9803      	ldr	r0, [sp, #12]
 8003c58:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003c5c:	4621      	mov	r1, r4
 8003c5e:	9621      	str	r6, [sp, #132]	; 0x84
    txtPbrake.setPosition(664, 287, 136, 73);
 8003c60:	f04f 0a49 	mov.w	sl, #73	; 0x49
    txtTPS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QBHD));
 8003c64:	f00e f9ec 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003c68:	9903      	ldr	r1, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c6a:	4e9c      	ldr	r6, [pc, #624]	; (8003edc <_ZN20DriverScreenViewBaseC1Ev+0xe5c>)
 8003c6c:	4648      	mov	r0, r9
 8003c6e:	f00b fd77 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003c72:	f04f 38ff 	mov.w	r8, #4294967295
    txtPbrake.setPosition(664, 287, 136, 73);
 8003c76:	2388      	movs	r3, #136	; 0x88
 8003c78:	f240 121f 	movw	r2, #287	; 0x11f
 8003c7c:	f44f 7126 	mov.w	r1, #664	; 0x298
 8003c80:	9804      	ldr	r0, [sp, #16]
 8003c82:	f8cd a000 	str.w	sl, [sp]
        linespace = space;
 8003c86:	2700      	movs	r7, #0
 8003c88:	f7ff f829 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003c8c:	f8cb 8968 	str.w	r8, [fp, #2408]	; 0x968
        linespace = space;
 8003c90:	f8ab 796c 	strh.w	r7, [fp, #2412]	; 0x96c
        return TextArea::BoundingArea();
 8003c94:	4620      	mov	r0, r4
 8003c96:	f7ff f9b1 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003c9a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003c9e:	f60b 1374 	addw	r3, fp, #2420	; 0x974
 8003ca2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003ca6:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtPbrakeBuffer, TXTPBRAKE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5Z8O).getText());
 8003ca8:	f50b 613c 	add.w	r1, fp, #3008	; 0xbc0
 8003cac:	9102      	str	r1, [sp, #8]
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	f43f acdd 	beq.w	800366e <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        return typedTextId < numberOfTypedTexts;
 8003cb4:	4d8a      	ldr	r5, [pc, #552]	; (8003ee0 <_ZN20DriverScreenViewBaseC1Ev+0xe60>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003cb6:	882b      	ldrh	r3, [r5, #0]
 8003cb8:	2b21      	cmp	r3, #33	; 0x21
 8003cba:	f67f ace2 	bls.w	8003682 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003cbe:	4a89      	ldr	r2, [pc, #548]	; (8003ee4 <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003cc0:	2121      	movs	r1, #33	; 0x21
 8003cc2:	6810      	ldr	r0, [r2, #0]
 8003cc4:	f004 fa42 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8003cc8:	4a87      	ldr	r2, [pc, #540]	; (8003ee8 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003cca:	4603      	mov	r3, r0
 8003ccc:	2104      	movs	r1, #4
 8003cce:	9802      	ldr	r0, [sp, #8]
 8003cd0:	f014 fa52 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003cd4:	9902      	ldr	r1, [sp, #8]
        : typedTextId(id)
 8003cd6:	4b85      	ldr	r3, [pc, #532]	; (8003eec <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
    txtPbrake.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IEE9));
 8003cd8:	9804      	ldr	r0, [sp, #16]
 8003cda:	f8cb 1980 	str.w	r1, [fp, #2432]	; 0x980
 8003cde:	9321      	str	r3, [sp, #132]	; 0x84
 8003ce0:	4621      	mov	r1, r4
 8003ce2:	2322      	movs	r3, #34	; 0x22
 8003ce4:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003ce8:	f00e f9aa 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003cec:	9904      	ldr	r1, [sp, #16]
 8003cee:	4648      	mov	r0, r9
 8003cf0:	f00b fd36 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtBat24.setPosition(399, 407, 130, 73);
 8003cf4:	2382      	movs	r3, #130	; 0x82
 8003cf6:	f240 1297 	movw	r2, #407	; 0x197
 8003cfa:	f240 118f 	movw	r1, #399	; 0x18f
 8003cfe:	9805      	ldr	r0, [sp, #20]
 8003d00:	f8cd a000 	str.w	sl, [sp]
 8003d04:	f7fe ffeb 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003d08:	f8cb 89b4 	str.w	r8, [fp, #2484]	; 0x9b4
        linespace = space;
 8003d0c:	f8ab 79b8 	strh.w	r7, [fp, #2488]	; 0x9b8
        return TextArea::BoundingArea();
 8003d10:	4620      	mov	r0, r4
 8003d12:	f7ff f973 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003d16:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003d1a:	f50b 631c 	add.w	r3, fp, #2496	; 0x9c0
 8003d1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d22:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtBat24Buffer, TXTBAT24_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1E1Q).getText());
 8003d24:	f60b 31c8 	addw	r1, fp, #3016	; 0xbc8
 8003d28:	9102      	str	r1, [sp, #8]
 8003d2a:	2b00      	cmp	r3, #0
 8003d2c:	f43f ac9f 	beq.w	800366e <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d30:	882b      	ldrh	r3, [r5, #0]
 8003d32:	2b1f      	cmp	r3, #31
 8003d34:	f67f aca5 	bls.w	8003682 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003d38:	4a6a      	ldr	r2, [pc, #424]	; (8003ee4 <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003d3a:	211f      	movs	r1, #31
 8003d3c:	6810      	ldr	r0, [r2, #0]
 8003d3e:	f004 fa05 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8003d42:	4a69      	ldr	r2, [pc, #420]	; (8003ee8 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003d44:	4603      	mov	r3, r0
 8003d46:	2105      	movs	r1, #5
 8003d48:	9802      	ldr	r0, [sp, #8]
 8003d4a:	f014 fa15 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003d4e:	9902      	ldr	r1, [sp, #8]
        : typedTextId(id)
 8003d50:	4b66      	ldr	r3, [pc, #408]	; (8003eec <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
    txtBat24.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BB62));
 8003d52:	9805      	ldr	r0, [sp, #20]
 8003d54:	f8cb 19cc 	str.w	r1, [fp, #2508]	; 0x9cc
 8003d58:	9321      	str	r3, [sp, #132]	; 0x84
 8003d5a:	4621      	mov	r1, r4
 8003d5c:	2320      	movs	r3, #32
 8003d5e:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003d62:	f00e f96d 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003d66:	9905      	ldr	r1, [sp, #20]
 8003d68:	4648      	mov	r0, r9
 8003d6a:	f00b fcf9 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtPfuel.setPosition(533, 287, 131, 73);
 8003d6e:	2383      	movs	r3, #131	; 0x83
 8003d70:	f240 121f 	movw	r2, #287	; 0x11f
 8003d74:	f240 2115 	movw	r1, #533	; 0x215
 8003d78:	9806      	ldr	r0, [sp, #24]
 8003d7a:	f8cd a000 	str.w	sl, [sp]
 8003d7e:	f7fe ffae 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003d82:	f8cb 8a00 	str.w	r8, [fp, #2560]	; 0xa00
        linespace = space;
 8003d86:	f8ab 7a04 	strh.w	r7, [fp, #2564]	; 0xa04
        return TextArea::BoundingArea();
 8003d8a:	4620      	mov	r0, r4
 8003d8c:	f7ff f936 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003d90:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003d94:	f60b 230c 	addw	r3, fp, #2572	; 0xa0c
 8003d98:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d9c:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtPfuelBuffer, TXTPFUEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AJ0J).getText());
 8003d9e:	f60b 31d2 	addw	r1, fp, #3026	; 0xbd2
 8003da2:	9102      	str	r1, [sp, #8]
 8003da4:	2b00      	cmp	r3, #0
 8003da6:	f43f ac62 	beq.w	800366e <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003daa:	882b      	ldrh	r3, [r5, #0]
 8003dac:	2b27      	cmp	r3, #39	; 0x27
 8003dae:	f67f ac68 	bls.w	8003682 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003db2:	4a4c      	ldr	r2, [pc, #304]	; (8003ee4 <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003db4:	2127      	movs	r1, #39	; 0x27
 8003db6:	6810      	ldr	r0, [r2, #0]
 8003db8:	f004 f9c8 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8003dbc:	4a4a      	ldr	r2, [pc, #296]	; (8003ee8 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003dbe:	4603      	mov	r3, r0
 8003dc0:	2104      	movs	r1, #4
 8003dc2:	9802      	ldr	r0, [sp, #8]
 8003dc4:	f014 f9d8 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003dc8:	9902      	ldr	r1, [sp, #8]
        : typedTextId(id)
 8003dca:	4b48      	ldr	r3, [pc, #288]	; (8003eec <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
    txtPfuel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q9H4));
 8003dcc:	9806      	ldr	r0, [sp, #24]
 8003dce:	f8cb 1a18 	str.w	r1, [fp, #2584]	; 0xa18
 8003dd2:	9321      	str	r3, [sp, #132]	; 0x84
 8003dd4:	4621      	mov	r1, r4
 8003dd6:	2328      	movs	r3, #40	; 0x28
 8003dd8:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003ddc:	f00e f930 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003de0:	9906      	ldr	r1, [sp, #24]
 8003de2:	4648      	mov	r0, r9
 8003de4:	f00b fcbc 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtBat12.setPosition(267, 407, 131, 73);
 8003de8:	2383      	movs	r3, #131	; 0x83
 8003dea:	f240 1297 	movw	r2, #407	; 0x197
 8003dee:	f240 110b 	movw	r1, #267	; 0x10b
 8003df2:	9807      	ldr	r0, [sp, #28]
 8003df4:	f8cd a000 	str.w	sl, [sp]
 8003df8:	f7fe ff71 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003dfc:	f8cb 8a4c 	str.w	r8, [fp, #2636]	; 0xa4c
        linespace = space;
 8003e00:	f8ab 7a50 	strh.w	r7, [fp, #2640]	; 0xa50
        return TextArea::BoundingArea();
 8003e04:	4620      	mov	r0, r4
 8003e06:	f7ff f8f9 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003e0a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003e0e:	f60b 2358 	addw	r3, fp, #2648	; 0xa58
 8003e12:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e16:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtBat12Buffer, TXTBAT12_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KOX0).getText());
 8003e18:	f60b 31da 	addw	r1, fp, #3034	; 0xbda
 8003e1c:	9102      	str	r1, [sp, #8]
 8003e1e:	2b00      	cmp	r3, #0
 8003e20:	f43f ac25 	beq.w	800366e <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e24:	882b      	ldrh	r3, [r5, #0]
 8003e26:	2b25      	cmp	r3, #37	; 0x25
 8003e28:	f67f ac2b 	bls.w	8003682 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003e2c:	4a2d      	ldr	r2, [pc, #180]	; (8003ee4 <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003e2e:	2125      	movs	r1, #37	; 0x25
 8003e30:	6810      	ldr	r0, [r2, #0]
 8003e32:	f004 f98b 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8003e36:	4a2c      	ldr	r2, [pc, #176]	; (8003ee8 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003e38:	4603      	mov	r3, r0
 8003e3a:	2105      	movs	r1, #5
 8003e3c:	9802      	ldr	r0, [sp, #8]
 8003e3e:	f014 f99b 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003e42:	9902      	ldr	r1, [sp, #8]
        : typedTextId(id)
 8003e44:	4b29      	ldr	r3, [pc, #164]	; (8003eec <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
    txtBat12.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1UNR));
 8003e46:	9807      	ldr	r0, [sp, #28]
 8003e48:	f8cb 1a64 	str.w	r1, [fp, #2660]	; 0xa64
 8003e4c:	9321      	str	r3, [sp, #132]	; 0x84
 8003e4e:	4621      	mov	r1, r4
 8003e50:	2326      	movs	r3, #38	; 0x26
 8003e52:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003e56:	f00e f8f3 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e5a:	9907      	ldr	r1, [sp, #28]
 8003e5c:	4648      	mov	r0, r9
 8003e5e:	f00b fc7f 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtToil.setPosition(134, 287, 133, 73);
 8003e62:	2385      	movs	r3, #133	; 0x85
 8003e64:	f240 121f 	movw	r2, #287	; 0x11f
 8003e68:	2186      	movs	r1, #134	; 0x86
 8003e6a:	9808      	ldr	r0, [sp, #32]
 8003e6c:	f8cd a000 	str.w	sl, [sp]
 8003e70:	f7fe ff35 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        return TextArea::BoundingArea();
 8003e74:	4620      	mov	r0, r4
        color = newColor;
 8003e76:	f8cb 8a98 	str.w	r8, [fp, #2712]	; 0xa98
        linespace = space;
 8003e7a:	f8ab 7a9c 	strh.w	r7, [fp, #2716]	; 0xa9c
 8003e7e:	f7ff f8bd 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003e82:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003e86:	f60b 23a4 	addw	r3, fp, #2724	; 0xaa4
 8003e8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e8e:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtToilBuffer, TXTTOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUPH).getText());
 8003e90:	f60b 34e4 	addw	r4, fp, #3044	; 0xbe4
 8003e94:	2b00      	cmp	r3, #0
 8003e96:	f43f abea 	beq.w	800366e <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e9a:	882b      	ldrh	r3, [r5, #0]
 8003e9c:	2b2d      	cmp	r3, #45	; 0x2d
 8003e9e:	f67f abf0 	bls.w	8003682 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003ea2:	4e10      	ldr	r6, [pc, #64]	; (8003ee4 <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
        : typedTextId(id)
 8003ea4:	4d11      	ldr	r5, [pc, #68]	; (8003eec <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
        return texts->getText(typedTextId);
 8003ea6:	6830      	ldr	r0, [r6, #0]
 8003ea8:	212d      	movs	r1, #45	; 0x2d
 8003eaa:	f004 f94f 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8003eae:	4a0e      	ldr	r2, [pc, #56]	; (8003ee8 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003eb0:	4603      	mov	r3, r0
 8003eb2:	2104      	movs	r1, #4
 8003eb4:	4620      	mov	r0, r4
 8003eb6:	f014 f95f 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003eba:	f8cb 4ab0 	str.w	r4, [fp, #2736]	; 0xab0
    txtToil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BID7));
 8003ebe:	ac21      	add	r4, sp, #132	; 0x84
        : typedTextId(id)
 8003ec0:	232e      	movs	r3, #46	; 0x2e
 8003ec2:	9808      	ldr	r0, [sp, #32]
 8003ec4:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003ec8:	4621      	mov	r1, r4
 8003eca:	9521      	str	r5, [sp, #132]	; 0x84
 8003ecc:	f00e f8b8 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003ed0:	9908      	ldr	r1, [sp, #32]
 8003ed2:	4648      	mov	r0, r9
 8003ed4:	f00b fc44 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003ed8:	e00a      	b.n	8003ef0 <_ZN20DriverScreenViewBaseC1Ev+0xe70>
 8003eda:	bf00      	nop
 8003edc:	2000ef74 	.word	0x2000ef74
 8003ee0:	2000ef78 	.word	0x2000ef78
 8003ee4:	2000ef80 	.word	0x2000ef80
 8003ee8:	08028432 	.word	0x08028432
 8003eec:	080284a8 	.word	0x080284a8
    txtTorin.setPosition(134, 404, 133, 76);
 8003ef0:	234c      	movs	r3, #76	; 0x4c
 8003ef2:	f44f 72ca 	mov.w	r2, #404	; 0x194
 8003ef6:	2186      	movs	r1, #134	; 0x86
 8003ef8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003efa:	9300      	str	r3, [sp, #0]
 8003efc:	2385      	movs	r3, #133	; 0x85
 8003efe:	f7fe feee 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003f02:	f8cb 8ae4 	str.w	r8, [fp, #2788]	; 0xae4
        linespace = space;
 8003f06:	f8ab 7ae8 	strh.w	r7, [fp, #2792]	; 0xae8
        return TextArea::BoundingArea();
 8003f0a:	4620      	mov	r0, r4
 8003f0c:	f7ff f876 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003f10:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
        linespace = space;
 8003f14:	46b8      	mov	r8, r7
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003f16:	4f53      	ldr	r7, [pc, #332]	; (8004064 <_ZN20DriverScreenViewBaseC1Ev+0xfe4>)
        boundingArea = calculateBoundingArea();
 8003f18:	f50b 632f 	add.w	r3, fp, #2800	; 0xaf0
 8003f1c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003f20:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtTorinBuffer, TXTTORIN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IM6N).getText());
 8003f22:	f60b 3aec 	addw	sl, fp, #3052	; 0xbec
 8003f26:	2b00      	cmp	r3, #0
 8003f28:	f43f aba1 	beq.w	800366e <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003f2c:	4a4e      	ldr	r2, [pc, #312]	; (8004068 <_ZN20DriverScreenViewBaseC1Ev+0xfe8>)
 8003f2e:	8813      	ldrh	r3, [r2, #0]
 8003f30:	2b2b      	cmp	r3, #43	; 0x2b
 8003f32:	f67f aba6 	bls.w	8003682 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003f36:	212b      	movs	r1, #43	; 0x2b
 8003f38:	6830      	ldr	r0, [r6, #0]
 8003f3a:	f004 f907 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8003f3e:	4a4b      	ldr	r2, [pc, #300]	; (800406c <_ZN20DriverScreenViewBaseC1Ev+0xfec>)
 8003f40:	4603      	mov	r3, r0
 8003f42:	2104      	movs	r1, #4
 8003f44:	4650      	mov	r0, sl
 8003f46:	f014 f917 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003f4a:	232c      	movs	r3, #44	; 0x2c
    txtTorin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T9US));
 8003f4c:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 8003f4e:	f8cb aafc 	str.w	sl, [fp, #2812]	; 0xafc
 8003f52:	4621      	mov	r1, r4
 8003f54:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003f58:	9521      	str	r5, [sp, #132]	; 0x84
 8003f5a:	f00e f871 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003f5e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003f60:	4648      	mov	r0, r9
 8003f62:	f00b fbfd 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtLap.setPosition(267, 24, 264, 72);
 8003f66:	2348      	movs	r3, #72	; 0x48
 8003f68:	2218      	movs	r2, #24
 8003f6a:	f240 110b 	movw	r1, #267	; 0x10b
 8003f6e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003f70:	9300      	str	r3, [sp, #0]
 8003f72:	f44f 7384 	mov.w	r3, #264	; 0x108
 8003f76:	f7fe feb2 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003f7a:	f04f 33ff 	mov.w	r3, #4294967295
 8003f7e:	f8cb 3b30 	str.w	r3, [fp, #2864]	; 0xb30
        linespace = space;
 8003f82:	f8ab 8b34 	strh.w	r8, [fp, #2868]	; 0xb34
        return TextArea::BoundingArea();
 8003f86:	4620      	mov	r0, r4
 8003f88:	f7ff f838 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003f8c:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003f90:	f60b 333c 	addw	r3, fp, #2876	; 0xb3c
 8003f94:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003f98:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1QOJ).getText());
 8003f9a:	f60b 3af4 	addw	sl, fp, #3060	; 0xbf4
 8003f9e:	2b00      	cmp	r3, #0
 8003fa0:	f43f ab65 	beq.w	800366e <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003fa4:	4a30      	ldr	r2, [pc, #192]	; (8004068 <_ZN20DriverScreenViewBaseC1Ev+0xfe8>)
 8003fa6:	8813      	ldrh	r3, [r2, #0]
 8003fa8:	2b33      	cmp	r3, #51	; 0x33
 8003faa:	f67f ab6a 	bls.w	8003682 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003fae:	2133      	movs	r1, #51	; 0x33
 8003fb0:	6830      	ldr	r0, [r6, #0]
 8003fb2:	f004 f8cb 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8003fb6:	4a2d      	ldr	r2, [pc, #180]	; (800406c <_ZN20DriverScreenViewBaseC1Ev+0xfec>)
 8003fb8:	4603      	mov	r3, r0
 8003fba:	2103      	movs	r1, #3
 8003fbc:	4650      	mov	r0, sl
 8003fbe:	f014 f8db 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003fc2:	2335      	movs	r3, #53	; 0x35
    txtLap.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QZ30));
 8003fc4:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 8003fc6:	f8cb ab48 	str.w	sl, [fp, #2888]	; 0xb48
 8003fca:	4621      	mov	r1, r4
 8003fcc:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003fd0:	9521      	str	r5, [sp, #132]	; 0x84
 8003fd2:	f00e f835 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003fd6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003fd8:	4648      	mov	r0, r9
 8003fda:	f00b fbc1 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtSpeed.setPosition(532, 24, 268, 72);
 8003fde:	2348      	movs	r3, #72	; 0x48
 8003fe0:	2218      	movs	r2, #24
 8003fe2:	f44f 7105 	mov.w	r1, #532	; 0x214
 8003fe6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003fe8:	9300      	str	r3, [sp, #0]
 8003fea:	f44f 7386 	mov.w	r3, #268	; 0x10c
 8003fee:	f7fe fe76 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003ff2:	f04f 33ff 	mov.w	r3, #4294967295
 8003ff6:	f8cb 3b7c 	str.w	r3, [fp, #2940]	; 0xb7c
        linespace = space;
 8003ffa:	f8ab 8b80 	strh.w	r8, [fp, #2944]	; 0xb80
        return TextArea::BoundingArea();
 8003ffe:	4620      	mov	r0, r4
 8004000:	f7fe fffc 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004004:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8004008:	f60b 3388 	addw	r3, fp, #2952	; 0xb88
 800400c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004010:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AHJH).getText());
 8004012:	f60b 38fa 	addw	r8, fp, #3066	; 0xbfa
 8004016:	2b00      	cmp	r3, #0
 8004018:	f43f ab29 	beq.w	800366e <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800401c:	4a12      	ldr	r2, [pc, #72]	; (8004068 <_ZN20DriverScreenViewBaseC1Ev+0xfe8>)
 800401e:	8813      	ldrh	r3, [r2, #0]
 8004020:	2b31      	cmp	r3, #49	; 0x31
 8004022:	f67f ab2e 	bls.w	8003682 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8004026:	6830      	ldr	r0, [r6, #0]
 8004028:	2131      	movs	r1, #49	; 0x31
 800402a:	f004 f88f 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 800402e:	4a0f      	ldr	r2, [pc, #60]	; (800406c <_ZN20DriverScreenViewBaseC1Ev+0xfec>)
 8004030:	4603      	mov	r3, r0
 8004032:	2108      	movs	r1, #8
 8004034:	4640      	mov	r0, r8
 8004036:	f014 f89f 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800403a:	2332      	movs	r3, #50	; 0x32
    txtSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0URK));
 800403c:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 800403e:	f8cb 8b94 	str.w	r8, [fp, #2964]	; 0xb94
 8004042:	4621      	mov	r1, r4
 8004044:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8004048:	9521      	str	r5, [sp, #132]	; 0x84
 800404a:	f00d fff9 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800404e:	4648      	mov	r0, r9
 8004050:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004052:	f00b fb85 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004056:	4658      	mov	r0, fp
 8004058:	b025      	add	sp, #148	; 0x94
 800405a:	ecbd 8b10 	vpop	{d8-d15}
 800405e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004062:	bf00      	nop
 8004064:	2000ef74 	.word	0x2000ef74
 8004068:	2000ef78 	.word	0x2000ef78
 800406c:	08028432 	.word	0x08028432

08004070 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004070:	4770      	bx	lr

08004072 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8004072:	4770      	bx	lr

08004074 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8004074:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004078:	6808      	ldr	r0, [r1, #0]
 800407a:	6849      	ldr	r1, [r1, #4]
 800407c:	c303      	stmia	r3!, {r0, r1}
    }
 800407e:	4770      	bx	lr

08004080 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004080:	4770      	bx	lr

08004082 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004082:	4770      	bx	lr

08004084 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8004084:	6041      	str	r1, [r0, #4]
    }
 8004086:	4770      	bx	lr

08004088 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8004088:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800408a:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 800408c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8004090:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8004094:	8002      	strh	r2, [r0, #0]
 8004096:	8042      	strh	r2, [r0, #2]
 8004098:	8084      	strh	r4, [r0, #4]
 800409a:	80c1      	strh	r1, [r0, #6]
        }
 800409c:	bd10      	pop	{r4, pc}

0800409e <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 800409e:	4770      	bx	lr

080040a0 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80040a0:	4770      	bx	lr
	...

080040a4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80040a4:	4b06      	ldr	r3, [pc, #24]	; (80040c0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80040a6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80040aa:	2300      	movs	r3, #0
 80040ac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Startup

void FrontendApplicationBase::gotoStartupScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartupScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80040b0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80040b4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80040b8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoStartupScreenNoTransition();
    }
 80040bc:	4770      	bx	lr
 80040be:	bf00      	nop
 80040c0:	0800454d 	.word	0x0800454d

080040c4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80040c4:	2301      	movs	r3, #1
 80040c6:	7203      	strb	r3, [r0, #8]
    }
 80040c8:	4770      	bx	lr

080040ca <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 80040ca:	4770      	bx	lr

080040cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 80040cc:	4770      	bx	lr

080040ce <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
 80040ce:	4770      	bx	lr

080040d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 80040d0:	4770      	bx	lr

080040d2 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80040d2:	4770      	bx	lr

080040d4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80040d4:	4770      	bx	lr

080040d6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 80040d6:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80040d8:	6840      	ldr	r0, [r0, #4]
 80040da:	6803      	ldr	r3, [r0, #0]
 80040dc:	3110      	adds	r1, #16
 80040de:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80040e0:	4718      	bx	r3

080040e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 80040e2:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80040e4:	6840      	ldr	r0, [r0, #4]
 80040e6:	6803      	ldr	r3, [r0, #0]
 80040e8:	3110      	adds	r1, #16
 80040ea:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80040ec:	4718      	bx	r3

080040ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80040ee:	4770      	bx	lr

080040f0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80040f0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80040f2:	68c2      	ldr	r2, [r0, #12]
 80040f4:	6841      	ldr	r1, [r0, #4]
 80040f6:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80040f8:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80040fa:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80040fe:	07d2      	lsls	r2, r2, #31
 8004100:	bf48      	it	mi
 8004102:	590a      	ldrmi	r2, [r1, r4]
 8004104:	689b      	ldr	r3, [r3, #8]
    }
 8004106:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800410a:	bf48      	it	mi
 800410c:	58d3      	ldrmi	r3, [r2, r3]
 800410e:	4718      	bx	r3

08004110 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8004110:	6843      	ldr	r3, [r0, #4]
 8004112:	b12b      	cbz	r3, 8004120 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8004114:	6883      	ldr	r3, [r0, #8]
 8004116:	b92b      	cbnz	r3, 8004124 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8004118:	68c0      	ldr	r0, [r0, #12]
 800411a:	f000 0001 	and.w	r0, r0, #1
 800411e:	4770      	bx	lr
 8004120:	4618      	mov	r0, r3
 8004122:	4770      	bx	lr
 8004124:	2001      	movs	r0, #1
    }
 8004126:	4770      	bx	lr

08004128 <_ZN8touchgfx12NoTransitionD0Ev>:
 8004128:	b510      	push	{r4, lr}
 800412a:	210c      	movs	r1, #12
 800412c:	4604      	mov	r4, r0
 800412e:	f022 fa47 	bl	80265c0 <_ZdlPvj>
 8004132:	4620      	mov	r0, r4
 8004134:	bd10      	pop	{r4, pc}

08004136 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004136:	b510      	push	{r4, lr}
 8004138:	2110      	movs	r1, #16
 800413a:	4604      	mov	r4, r0
 800413c:	f022 fa40 	bl	80265c0 <_ZdlPvj>
 8004140:	4620      	mov	r0, r4
 8004142:	bd10      	pop	{r4, pc}

08004144 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8004144:	b510      	push	{r4, lr}
 8004146:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800414a:	4604      	mov	r4, r0
 800414c:	f022 fa38 	bl	80265c0 <_ZdlPvj>
 8004150:	4620      	mov	r0, r4
 8004152:	bd10      	pop	{r4, pc}

08004154 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8004154:	b510      	push	{r4, lr}
 8004156:	2138      	movs	r1, #56	; 0x38
 8004158:	4604      	mov	r4, r0
 800415a:	f022 fa31 	bl	80265c0 <_ZdlPvj>
 800415e:	4620      	mov	r0, r4
 8004160:	bd10      	pop	{r4, pc}

08004162 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8004162:	b510      	push	{r4, lr}
 8004164:	2128      	movs	r1, #40	; 0x28
 8004166:	4604      	mov	r4, r0
 8004168:	f022 fa2a 	bl	80265c0 <_ZdlPvj>
 800416c:	4620      	mov	r0, r4
 800416e:	bd10      	pop	{r4, pc}

08004170 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
 8004170:	b510      	push	{r4, lr}
 8004172:	2140      	movs	r1, #64	; 0x40
 8004174:	4604      	mov	r4, r0
 8004176:	f022 fa23 	bl	80265c0 <_ZdlPvj>
 800417a:	4620      	mov	r0, r4
 800417c:	bd10      	pop	{r4, pc}

0800417e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 800417e:	b510      	push	{r4, lr}
 8004180:	2140      	movs	r1, #64	; 0x40
 8004182:	4604      	mov	r4, r0
 8004184:	f022 fa1c 	bl	80265c0 <_ZdlPvj>
 8004188:	4620      	mov	r0, r4
 800418a:	bd10      	pop	{r4, pc}

0800418c <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800418c:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 800418e:	f010 fe83 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
 8004192:	6803      	ldr	r3, [r0, #0]
    }
 8004194:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8004198:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800419a:	4718      	bx	r3

0800419c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 800419c:	4b05      	ldr	r3, [pc, #20]	; (80041b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
 800419e:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80041a0:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80041a2:	b12b      	cbz	r3, 80041b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
 80041a4:	6840      	ldr	r0, [r0, #4]
 80041a6:	b118      	cbz	r0, 80041b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
        {
            screenContainer->remove(snapshot);
 80041a8:	6803      	ldr	r3, [r0, #0]
 80041aa:	310c      	adds	r1, #12
 80041ac:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80041ae:	4718      	bx	r3
        }
    }
 80041b0:	4770      	bx	lr
 80041b2:	bf00      	nop
 80041b4:	2000ef1b 	.word	0x2000ef1b

080041b8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80041b8:	4b05      	ldr	r3, [pc, #20]	; (80041d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 80041ba:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80041bc:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80041be:	b12b      	cbz	r3, 80041cc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 80041c0:	6840      	ldr	r0, [r0, #4]
 80041c2:	b118      	cbz	r0, 80041cc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 80041c4:	6803      	ldr	r3, [r0, #0]
 80041c6:	310c      	adds	r1, #12
 80041c8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80041ca:	4718      	bx	r3
    }
 80041cc:	4770      	bx	lr
 80041ce:	bf00      	nop
 80041d0:	2000ef1b 	.word	0x2000ef1b

080041d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
 80041d4:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 80041d6:	b570      	push	{r4, r5, r6, lr}
 80041d8:	4605      	mov	r5, r0
        if (done)
 80041da:	b9bb      	cbnz	r3, 800420c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x38>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 80041dc:	6840      	ldr	r0, [r0, #4]
 80041de:	6803      	ldr	r3, [r0, #0]
 80041e0:	69db      	ldr	r3, [r3, #28]
 80041e2:	4798      	blx	r3
 80041e4:	4604      	mov	r4, r0
        while (d)
 80041e6:	b14c      	cbz	r4, 80041fc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x28>
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
 80041e8:	88a1      	ldrh	r1, [r4, #4]
 80041ea:	8f6b      	ldrh	r3, [r5, #58]	; 0x3a
 80041ec:	1ac9      	subs	r1, r1, r3
 80041ee:	6823      	ldr	r3, [r4, #0]
 80041f0:	4620      	mov	r0, r4
 80041f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80041f4:	b209      	sxth	r1, r1
 80041f6:	4798      	blx	r3
        return nextSibling;
 80041f8:	69a4      	ldr	r4, [r4, #24]
        while (d)
 80041fa:	e7f4      	b.n	80041e6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x12>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
 80041fc:	6868      	ldr	r0, [r5, #4]
 80041fe:	6803      	ldr	r3, [r0, #0]
 8004200:	f105 010c 	add.w	r1, r5, #12
 8004204:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    }
 8004206:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 800420a:	4718      	bx	r3
    }
 800420c:	bd70      	pop	{r4, r5, r6, pc}

0800420e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800420e:	b570      	push	{r4, r5, r6, lr}
 8004210:	4604      	mov	r4, r0
        animationCounter++;
 8004212:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
        if (animationCounter > animationSteps)
 8004216:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
        animationCounter++;
 800421a:	3001      	adds	r0, #1
 800421c:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800421e:	4298      	cmp	r0, r3
        animationCounter++;
 8004220:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
        if (animationCounter > animationSteps)
 8004224:	d905      	bls.n	8004232 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x24>
            done = true;
 8004226:	2301      	movs	r3, #1
 8004228:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800422a:	2300      	movs	r3, #0
 800422c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    }
 8004230:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004232:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 8004236:	2100      	movs	r1, #0
 8004238:	f012 fc60 	bl	8016afc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 800423c:	f010 0201 	ands.w	r2, r0, #1
 8004240:	b283      	uxth	r3, r0
 8004242:	d006      	beq.n	8004252 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004244:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004248:	2800      	cmp	r0, #0
 800424a:	bfd8      	it	le
 800424c:	460a      	movle	r2, r1
 800424e:	1898      	adds	r0, r3, r2
 8004250:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 8004252:	8a23      	ldrh	r3, [r4, #16]
 8004254:	1ac0      	subs	r0, r0, r3
 8004256:	87a0      	strh	r0, [r4, #60]	; 0x3c
        Drawable* d = screenContainer->getFirstChild();
 8004258:	6860      	ldr	r0, [r4, #4]
 800425a:	6803      	ldr	r3, [r0, #0]
 800425c:	69db      	ldr	r3, [r3, #28]
 800425e:	4798      	blx	r3
 8004260:	4605      	mov	r5, r0
        while (d)
 8004262:	b14d      	cbz	r5, 8004278 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x6a>
                d->setX(d->getX() + relativeValue);
 8004264:	88a9      	ldrh	r1, [r5, #4]
 8004266:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 8004268:	4419      	add	r1, r3
 800426a:	682b      	ldr	r3, [r5, #0]
 800426c:	4628      	mov	r0, r5
 800426e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004270:	b209      	sxth	r1, r1
 8004272:	4798      	blx	r3
 8004274:	69ad      	ldr	r5, [r5, #24]
        while (d)
 8004276:	e7f4      	b.n	8004262 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x54>
        screenContainer->invalidate();
 8004278:	6860      	ldr	r0, [r4, #4]
 800427a:	6803      	ldr	r3, [r0, #0]
    }
 800427c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 8004280:	695b      	ldr	r3, [r3, #20]
 8004282:	4718      	bx	r3

08004284 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
        if (done)
 8004284:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 8004286:	b570      	push	{r4, r5, r6, lr}
 8004288:	4605      	mov	r5, r0
        if (done)
 800428a:	b9bb      	cbnz	r3, 80042bc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>
        Drawable* d = screenContainer->getFirstChild();
 800428c:	6840      	ldr	r0, [r0, #4]
 800428e:	6803      	ldr	r3, [r0, #0]
 8004290:	69db      	ldr	r3, [r3, #28]
 8004292:	4798      	blx	r3
 8004294:	4604      	mov	r4, r0
        while (d)
 8004296:	b14c      	cbz	r4, 80042ac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x28>
                d->setX(d->getX() - targetValue);
 8004298:	88a1      	ldrh	r1, [r4, #4]
 800429a:	8f6b      	ldrh	r3, [r5, #58]	; 0x3a
 800429c:	1ac9      	subs	r1, r1, r3
 800429e:	6823      	ldr	r3, [r4, #0]
 80042a0:	4620      	mov	r0, r4
 80042a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80042a4:	b209      	sxth	r1, r1
 80042a6:	4798      	blx	r3
 80042a8:	69a4      	ldr	r4, [r4, #24]
        while (d)
 80042aa:	e7f4      	b.n	8004296 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x12>
        screenContainer->add(snapshot);
 80042ac:	6868      	ldr	r0, [r5, #4]
 80042ae:	6803      	ldr	r3, [r0, #0]
 80042b0:	f105 010c 	add.w	r1, r5, #12
 80042b4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    }
 80042b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 80042ba:	4718      	bx	r3
    }
 80042bc:	bd70      	pop	{r4, r5, r6, pc}

080042be <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80042be:	b570      	push	{r4, r5, r6, lr}
 80042c0:	4604      	mov	r4, r0
        animationCounter++;
 80042c2:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
        if (animationCounter > animationSteps)
 80042c6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
        animationCounter++;
 80042ca:	3001      	adds	r0, #1
 80042cc:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80042ce:	4298      	cmp	r0, r3
        animationCounter++;
 80042d0:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
        if (animationCounter > animationSteps)
 80042d4:	d905      	bls.n	80042e2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
 80042d6:	2301      	movs	r3, #1
 80042d8:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80042da:	2300      	movs	r3, #0
 80042dc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    }
 80042e0:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80042e2:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 80042e6:	2100      	movs	r1, #0
 80042e8:	f012 fc08 	bl	8016afc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80042ec:	f010 0201 	ands.w	r2, r0, #1
 80042f0:	b283      	uxth	r3, r0
 80042f2:	d006      	beq.n	8004302 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80042f4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80042f8:	2800      	cmp	r0, #0
 80042fa:	bfd8      	it	le
 80042fc:	460a      	movle	r2, r1
 80042fe:	1898      	adds	r0, r3, r2
 8004300:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 8004302:	8a23      	ldrh	r3, [r4, #16]
 8004304:	1ac0      	subs	r0, r0, r3
 8004306:	87a0      	strh	r0, [r4, #60]	; 0x3c
        Drawable* d = screenContainer->getFirstChild();
 8004308:	6860      	ldr	r0, [r4, #4]
 800430a:	6803      	ldr	r3, [r0, #0]
 800430c:	69db      	ldr	r3, [r3, #28]
 800430e:	4798      	blx	r3
 8004310:	4605      	mov	r5, r0
        while (d)
 8004312:	b14d      	cbz	r5, 8004328 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x6a>
                d->setX(d->getX() + relativeValue);
 8004314:	88a9      	ldrh	r1, [r5, #4]
 8004316:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 8004318:	4419      	add	r1, r3
 800431a:	682b      	ldr	r3, [r5, #0]
 800431c:	4628      	mov	r0, r5
 800431e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004320:	b209      	sxth	r1, r1
 8004322:	4798      	blx	r3
 8004324:	69ad      	ldr	r5, [r5, #24]
        while (d)
 8004326:	e7f4      	b.n	8004312 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x54>
        screenContainer->invalidate();
 8004328:	6860      	ldr	r0, [r4, #4]
 800432a:	6803      	ldr	r3, [r0, #0]
    }
 800432c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 8004330:	695b      	ldr	r3, [r3, #20]
 8004332:	4718      	bx	r3

08004334 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004334:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004336:	4604      	mov	r4, r0
        animationCounter++;
 8004338:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800433a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 800433c:	3001      	adds	r0, #1
 800433e:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004340:	4298      	cmp	r0, r3
        animationCounter++;
 8004342:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004344:	d905      	bls.n	8004352 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8004346:	2301      	movs	r3, #1
 8004348:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800434a:	2300      	movs	r3, #0
 800434c:	72a3      	strb	r3, [r4, #10]
    }
 800434e:	b003      	add	sp, #12
 8004350:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004352:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004356:	2100      	movs	r1, #0
 8004358:	f012 fbd0 	bl	8016afc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 800435c:	f010 0201 	ands.w	r2, r0, #1
 8004360:	b283      	uxth	r3, r0
 8004362:	d128      	bne.n	80043b6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004364:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004366:	4b18      	ldr	r3, [pc, #96]	; (80043c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004368:	4818      	ldr	r0, [pc, #96]	; (80043cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800436a:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800436c:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800436e:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004370:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004374:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004378:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800437a:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 800437c:	442b      	add	r3, r5
 800437e:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004380:	b212      	sxth	r2, r2
 8004382:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8004386:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8004388:	8322      	strh	r2, [r4, #24]
 800438a:	f8ad 2000 	strh.w	r2, [sp]
 800438e:	2200      	movs	r2, #0
 8004390:	691b      	ldr	r3, [r3, #16]
 8004392:	f8ad 2002 	strh.w	r2, [sp, #2]
 8004396:	4669      	mov	r1, sp
 8004398:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800439a:	7aa3      	ldrb	r3, [r4, #10]
 800439c:	2b01      	cmp	r3, #1
 800439e:	d1d6      	bne.n	800434e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 80043a0:	4b0b      	ldr	r3, [pc, #44]	; (80043d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 80043a2:	781b      	ldrb	r3, [r3, #0]
 80043a4:	2b00      	cmp	r3, #0
 80043a6:	d0d2      	beq.n	800434e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80043a8:	f010 fd76 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80043ac:	b003      	add	sp, #12
 80043ae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80043b2:	f010 bd77 	b.w	8014ea4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80043b6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80043ba:	2800      	cmp	r0, #0
 80043bc:	bfd8      	it	le
 80043be:	460a      	movle	r2, r1
 80043c0:	4413      	add	r3, r2
 80043c2:	81e3      	strh	r3, [r4, #14]
 80043c4:	e7cf      	b.n	8004366 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80043c6:	bf00      	nop
 80043c8:	2000ef10 	.word	0x2000ef10
 80043cc:	2000ef12 	.word	0x2000ef12
 80043d0:	2000ef1a 	.word	0x2000ef1a

080043d4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80043d4:	b510      	push	{r4, lr}
 80043d6:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80043d8:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80043dc:	b158      	cbz	r0, 80043f6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80043de:	6803      	ldr	r3, [r0, #0]
 80043e0:	68db      	ldr	r3, [r3, #12]
 80043e2:	4798      	blx	r3
 80043e4:	b138      	cbz	r0, 80043f6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80043e6:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80043ea:	6803      	ldr	r3, [r0, #0]
 80043ec:	689b      	ldr	r3, [r3, #8]
 80043ee:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80043f0:	2300      	movs	r3, #0
 80043f2:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80043f6:	bd10      	pop	{r4, pc}

080043f8 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoDriverScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDriverScreenScreenNoTransitionImpl()
{
 80043f8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<DriverScreenView, DriverScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80043fc:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004400:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004402:	68a8      	ldr	r0, [r5, #8]
 8004404:	6803      	ldr	r3, [r0, #0]
 8004406:	6a1b      	ldr	r3, [r3, #32]
 8004408:	4798      	blx	r3
 800440a:	f640 431b 	movw	r3, #3099	; 0xc1b
 800440e:	4298      	cmp	r0, r3
 8004410:	d805      	bhi.n	800441e <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x26>
 8004412:	4b46      	ldr	r3, [pc, #280]	; (800452c <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x134>)
 8004414:	4a46      	ldr	r2, [pc, #280]	; (8004530 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x138>)
 8004416:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004418:	4846      	ldr	r0, [pc, #280]	; (8004534 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x13c>)
 800441a:	f022 f8ff 	bl	802661c <__assert_func>
 800441e:	6868      	ldr	r0, [r5, #4]
 8004420:	6803      	ldr	r3, [r0, #0]
 8004422:	6a1b      	ldr	r3, [r3, #32]
 8004424:	4798      	blx	r3
 8004426:	280f      	cmp	r0, #15
 8004428:	d803      	bhi.n	8004432 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x3a>
 800442a:	4b43      	ldr	r3, [pc, #268]	; (8004538 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x140>)
 800442c:	4a40      	ldr	r2, [pc, #256]	; (8004530 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x138>)
 800442e:	21a4      	movs	r1, #164	; 0xa4
 8004430:	e7f2      	b.n	8004418 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004432:	68e8      	ldr	r0, [r5, #12]
 8004434:	6803      	ldr	r3, [r0, #0]
 8004436:	6a1b      	ldr	r3, [r3, #32]
 8004438:	4798      	blx	r3
 800443a:	280b      	cmp	r0, #11
 800443c:	d803      	bhi.n	8004446 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x4e>
 800443e:	4b3f      	ldr	r3, [pc, #252]	; (800453c <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x144>)
 8004440:	4a3b      	ldr	r2, [pc, #236]	; (8004530 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x138>)
 8004442:	21a5      	movs	r1, #165	; 0xa5
 8004444:	e7e8      	b.n	8004418 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004446:	f010 fd27 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800444a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004544 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x14c>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800444e:	3004      	adds	r0, #4
 8004450:	f010 fd88 	bl	8014f64 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004454:	f8d9 0000 	ldr.w	r0, [r9]
 8004458:	b110      	cbz	r0, 8004460 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800445a:	6803      	ldr	r3, [r0, #0]
 800445c:	68db      	ldr	r3, [r3, #12]
 800445e:	4798      	blx	r3
    if (*currentTrans)
 8004460:	f8d9 0000 	ldr.w	r0, [r9]
 8004464:	b110      	cbz	r0, 800446c <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8004466:	6803      	ldr	r3, [r0, #0]
 8004468:	681b      	ldr	r3, [r3, #0]
 800446a:	4798      	blx	r3
    if (*currentScreen)
 800446c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004548 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x150>
 8004470:	f8d8 0000 	ldr.w	r0, [r8]
 8004474:	b110      	cbz	r0, 800447c <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004476:	6803      	ldr	r3, [r0, #0]
 8004478:	695b      	ldr	r3, [r3, #20]
 800447a:	4798      	blx	r3
    if (*currentPresenter)
 800447c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004480:	b110      	cbz	r0, 8004488 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004482:	6803      	ldr	r3, [r0, #0]
 8004484:	685b      	ldr	r3, [r3, #4]
 8004486:	4798      	blx	r3
    if (*currentScreen)
 8004488:	f8d8 0000 	ldr.w	r0, [r8]
 800448c:	b110      	cbz	r0, 8004494 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800448e:	6803      	ldr	r3, [r0, #0]
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	4798      	blx	r3
    if (*currentPresenter)
 8004494:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004498:	b110      	cbz	r0, 80044a0 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800449a:	6803      	ldr	r3, [r0, #0]
 800449c:	689b      	ldr	r3, [r3, #8]
 800449e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80044a0:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80044a2:	6803      	ldr	r3, [r0, #0]
 80044a4:	2100      	movs	r1, #0
 80044a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044a8:	4798      	blx	r3
        : screenContainer(0), done(false)
 80044aa:	f04f 0b00 	mov.w	fp, #0
 80044ae:	4b24      	ldr	r3, [pc, #144]	; (8004540 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x148>)
 80044b0:	6003      	str	r3, [r0, #0]
 80044b2:	4604      	mov	r4, r0
 80044b4:	f8c0 b004 	str.w	fp, [r0, #4]
 80044b8:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80044bc:	68a8      	ldr	r0, [r5, #8]
 80044be:	6803      	ldr	r3, [r0, #0]
 80044c0:	4659      	mov	r1, fp
 80044c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044c4:	4798      	blx	r3
 80044c6:	4606      	mov	r6, r0
 80044c8:	f003 ff9a 	bl	8008400 <_ZN16DriverScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80044cc:	6868      	ldr	r0, [r5, #4]
 80044ce:	6803      	ldr	r3, [r0, #0]
 80044d0:	4659      	mov	r1, fp
 80044d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044d4:	4798      	blx	r3
 80044d6:	4631      	mov	r1, r6
 80044d8:	4605      	mov	r5, r0
 80044da:	f003 ff6b 	bl	80083b4 <_ZN21DriverScreenPresenterC1ER16DriverScreenView>
    *currentTrans = newTransition;
 80044de:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80044e2:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80044e6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80044ea:	b1e5      	cbz	r5, 8004526 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x12e>
 80044ec:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80044ee:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80044f2:	6833      	ldr	r3, [r6, #0]
    virtual void debugMessageChanged() {};
    virtual void missionChanged() {};

    void bind(Model* m)
    {
        model = m;
 80044f4:	f8c5 a008 	str.w	sl, [r5, #8]
 80044f8:	4630      	mov	r0, r6
 80044fa:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80044fc:	63f5      	str	r5, [r6, #60]	; 0x3c
 80044fe:	4798      	blx	r3
    newPresenter->activate();
 8004500:	682b      	ldr	r3, [r5, #0]
 8004502:	4628      	mov	r0, r5
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004508:	4621      	mov	r1, r4
 800450a:	4630      	mov	r0, r6
 800450c:	f012 faf0 	bl	8016af0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004510:	6823      	ldr	r3, [r4, #0]
 8004512:	4620      	mov	r0, r4
 8004514:	691b      	ldr	r3, [r3, #16]
 8004516:	4798      	blx	r3
    newTransition->invalidate();
 8004518:	6823      	ldr	r3, [r4, #0]
 800451a:	695b      	ldr	r3, [r3, #20]
 800451c:	4620      	mov	r0, r4
}
 800451e:	b001      	add	sp, #4
 8004520:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004524:	4718      	bx	r3
    model->bind(newPresenter);
 8004526:	462b      	mov	r3, r5
 8004528:	e7e1      	b.n	80044ee <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0xf6>
 800452a:	bf00      	nop
 800452c:	080285d8 	.word	0x080285d8
 8004530:	08028666 	.word	0x08028666
 8004534:	08028774 	.word	0x08028774
 8004538:	080287bb 	.word	0x080287bb
 800453c:	0802885e 	.word	0x0802885e
 8004540:	08029414 	.word	0x08029414
 8004544:	2000ef64 	.word	0x2000ef64
 8004548:	2000ef60 	.word	0x2000ef60

0800454c <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv>:
{
 800454c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<StartupView, StartupPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004550:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004554:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004556:	68a8      	ldr	r0, [r5, #8]
 8004558:	6803      	ldr	r3, [r0, #0]
 800455a:	6a1b      	ldr	r3, [r3, #32]
 800455c:	4798      	blx	r3
 800455e:	28e3      	cmp	r0, #227	; 0xe3
 8004560:	d805      	bhi.n	800456e <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x22>
 8004562:	4b46      	ldr	r3, [pc, #280]	; (800467c <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x130>)
 8004564:	4a46      	ldr	r2, [pc, #280]	; (8004680 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x134>)
 8004566:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004568:	4846      	ldr	r0, [pc, #280]	; (8004684 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x138>)
 800456a:	f022 f857 	bl	802661c <__assert_func>
 800456e:	6868      	ldr	r0, [r5, #4]
 8004570:	6803      	ldr	r3, [r0, #0]
 8004572:	6a1b      	ldr	r3, [r3, #32]
 8004574:	4798      	blx	r3
 8004576:	280f      	cmp	r0, #15
 8004578:	d803      	bhi.n	8004582 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x36>
 800457a:	4b43      	ldr	r3, [pc, #268]	; (8004688 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x13c>)
 800457c:	4a40      	ldr	r2, [pc, #256]	; (8004680 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x134>)
 800457e:	21a4      	movs	r1, #164	; 0xa4
 8004580:	e7f2      	b.n	8004568 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004582:	68e8      	ldr	r0, [r5, #12]
 8004584:	6803      	ldr	r3, [r0, #0]
 8004586:	6a1b      	ldr	r3, [r3, #32]
 8004588:	4798      	blx	r3
 800458a:	280b      	cmp	r0, #11
 800458c:	d803      	bhi.n	8004596 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x4a>
 800458e:	4b3f      	ldr	r3, [pc, #252]	; (800468c <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x140>)
 8004590:	4a3b      	ldr	r2, [pc, #236]	; (8004680 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x134>)
 8004592:	21a5      	movs	r1, #165	; 0xa5
 8004594:	e7e8      	b.n	8004568 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8004596:	f010 fc7f 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800459a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004694 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x148>
 800459e:	3004      	adds	r0, #4
 80045a0:	f010 fce0 	bl	8014f64 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80045a4:	f8d9 0000 	ldr.w	r0, [r9]
 80045a8:	b110      	cbz	r0, 80045b0 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80045aa:	6803      	ldr	r3, [r0, #0]
 80045ac:	68db      	ldr	r3, [r3, #12]
 80045ae:	4798      	blx	r3
    if (*currentTrans)
 80045b0:	f8d9 0000 	ldr.w	r0, [r9]
 80045b4:	b110      	cbz	r0, 80045bc <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80045b6:	6803      	ldr	r3, [r0, #0]
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	4798      	blx	r3
    if (*currentScreen)
 80045bc:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004698 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x14c>
 80045c0:	f8d8 0000 	ldr.w	r0, [r8]
 80045c4:	b110      	cbz	r0, 80045cc <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80045c6:	6803      	ldr	r3, [r0, #0]
 80045c8:	695b      	ldr	r3, [r3, #20]
 80045ca:	4798      	blx	r3
    if (*currentPresenter)
 80045cc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045d0:	b110      	cbz	r0, 80045d8 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80045d2:	6803      	ldr	r3, [r0, #0]
 80045d4:	685b      	ldr	r3, [r3, #4]
 80045d6:	4798      	blx	r3
    if (*currentScreen)
 80045d8:	f8d8 0000 	ldr.w	r0, [r8]
 80045dc:	b110      	cbz	r0, 80045e4 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80045de:	6803      	ldr	r3, [r0, #0]
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	4798      	blx	r3
    if (*currentPresenter)
 80045e4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045e8:	b110      	cbz	r0, 80045f0 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80045ea:	6803      	ldr	r3, [r0, #0]
 80045ec:	689b      	ldr	r3, [r3, #8]
 80045ee:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80045f0:	68e8      	ldr	r0, [r5, #12]
 80045f2:	6803      	ldr	r3, [r0, #0]
 80045f4:	2100      	movs	r1, #0
 80045f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045f8:	4798      	blx	r3
 80045fa:	f04f 0b00 	mov.w	fp, #0
 80045fe:	4b24      	ldr	r3, [pc, #144]	; (8004690 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x144>)
 8004600:	6003      	str	r3, [r0, #0]
 8004602:	4604      	mov	r4, r0
 8004604:	f8c0 b004 	str.w	fp, [r0, #4]
 8004608:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800460c:	68a8      	ldr	r0, [r5, #8]
 800460e:	6803      	ldr	r3, [r0, #0]
 8004610:	4659      	mov	r1, fp
 8004612:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004614:	4798      	blx	r3
 8004616:	4606      	mov	r6, r0
 8004618:	f004 fd08 	bl	800902c <_ZN11StartupViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800461c:	6868      	ldr	r0, [r5, #4]
 800461e:	6803      	ldr	r3, [r0, #0]
 8004620:	4659      	mov	r1, fp
 8004622:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004624:	4798      	blx	r3
 8004626:	4631      	mov	r1, r6
 8004628:	4605      	mov	r5, r0
 800462a:	f004 fcdb 	bl	8008fe4 <_ZN16StartupPresenterC1ER11StartupView>
    *currentTrans = newTransition;
 800462e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004632:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004636:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800463a:	b1e5      	cbz	r5, 8004676 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x12a>
 800463c:	1d2b      	adds	r3, r5, #4
 800463e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004642:	6833      	ldr	r3, [r6, #0]
 8004644:	f8c5 a008 	str.w	sl, [r5, #8]
 8004648:	4630      	mov	r0, r6
 800464a:	68db      	ldr	r3, [r3, #12]
 800464c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800464e:	4798      	blx	r3
    newPresenter->activate();
 8004650:	682b      	ldr	r3, [r5, #0]
 8004652:	4628      	mov	r0, r5
 8004654:	681b      	ldr	r3, [r3, #0]
 8004656:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004658:	4621      	mov	r1, r4
 800465a:	4630      	mov	r0, r6
 800465c:	f012 fa48 	bl	8016af0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004660:	6823      	ldr	r3, [r4, #0]
 8004662:	4620      	mov	r0, r4
 8004664:	691b      	ldr	r3, [r3, #16]
 8004666:	4798      	blx	r3
    newTransition->invalidate();
 8004668:	6823      	ldr	r3, [r4, #0]
 800466a:	695b      	ldr	r3, [r3, #20]
 800466c:	4620      	mov	r0, r4
}
 800466e:	b001      	add	sp, #4
 8004670:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004674:	4718      	bx	r3
    model->bind(newPresenter);
 8004676:	462b      	mov	r3, r5
 8004678:	e7e1      	b.n	800463e <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0xf2>
 800467a:	bf00      	nop
 800467c:	080285d8 	.word	0x080285d8
 8004680:	08028901 	.word	0x08028901
 8004684:	08028774 	.word	0x08028774
 8004688:	080287bb 	.word	0x080287bb
 800468c:	0802885e 	.word	0x0802885e
 8004690:	08029414 	.word	0x08029414
 8004694:	2000ef64 	.word	0x2000ef64
 8004698:	2000ef60 	.word	0x2000ef60

0800469c <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800469c:	4b04      	ldr	r3, [pc, #16]	; (80046b0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800469e:	681b      	ldr	r3, [r3, #0]
 80046a0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80046a4:	b10a      	cbz	r2, 80046aa <_ZN8touchgfx3HAL3lcdEv+0xe>
 80046a6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80046a8:	b900      	cbnz	r0, 80046ac <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80046aa:	6898      	ldr	r0, [r3, #8]
    }
 80046ac:	4770      	bx	lr
 80046ae:	bf00      	nop
 80046b0:	2000ef1c 	.word	0x2000ef1c

080046b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80046b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046b6:	4604      	mov	r4, r0
 80046b8:	4617      	mov	r7, r2
 80046ba:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80046bc:	f010 fd20 	bl	8015100 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80046c0:	4b10      	ldr	r3, [pc, #64]	; (8004704 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80046c2:	601c      	str	r4, [r3, #0]
      model(m)
 80046c4:	4b10      	ldr	r3, [pc, #64]	; (8004708 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80046c6:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80046c8:	4b10      	ldr	r3, [pc, #64]	; (800470c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
          pendingScreenTransitionCallback(0)
 80046ca:	2500      	movs	r5, #0
 80046cc:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 80046d0:	4b0f      	ldr	r3, [pc, #60]	; (8004710 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80046d2:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 80046d6:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80046d8:	6803      	ldr	r3, [r0, #0]
 80046da:	4629      	mov	r1, r5
 80046dc:	689b      	ldr	r3, [r3, #8]
 80046de:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 80046e2:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80046e6:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80046e8:	4628      	mov	r0, r5
 80046ea:	f003 fcf3 	bl	80080d4 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80046ee:	f7ff ffd5 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 80046f2:	f01a f8ca 	bl	801e88a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80046f6:	f7ff ffd1 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 80046fa:	f01a f941 	bl	801e980 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80046fe:	4620      	mov	r0, r4
 8004700:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004702:	bf00      	nop
 8004704:	2000ef70 	.word	0x2000ef70
 8004708:	080293c0 	.word	0x080293c0
 800470c:	080293a8 	.word	0x080293a8
 8004710:	2000ef1c 	.word	0x2000ef1c

08004714 <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004714:	4b06      	ldr	r3, [pc, #24]	; (8004730 <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv+0x1c>)
 8004716:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800471a:	2300      	movs	r3, #0
 800471c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004720:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004724:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004728:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800472c:	4770      	bx	lr
 800472e:	bf00      	nop
 8004730:	0800454d 	.word	0x0800454d

08004734 <_ZN23FrontendApplicationBase43gotoMainInfotaimentScreenWipeTransitionEastEv>:
 8004734:	4b06      	ldr	r3, [pc, #24]	; (8004750 <_ZN23FrontendApplicationBase43gotoMainInfotaimentScreenWipeTransitionEastEv+0x1c>)
 8004736:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800473a:	2300      	movs	r3, #0
 800473c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004740:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004744:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004748:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800474c:	4770      	bx	lr
 800474e:	bf00      	nop
 8004750:	08004861 	.word	0x08004861

08004754 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionWestEv>:
 8004754:	4b06      	ldr	r3, [pc, #24]	; (8004770 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionWestEv+0x1c>)
 8004756:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800475a:	2300      	movs	r3, #0
 800475c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004760:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004764:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004768:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800476c:	4770      	bx	lr
 800476e:	bf00      	nop
 8004770:	08004ced 	.word	0x08004ced

08004774 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionEastEv>:
 8004774:	4b06      	ldr	r3, [pc, #24]	; (8004790 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionEastEv+0x1c>)
 8004776:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800477a:	2300      	movs	r3, #0
 800477c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004780:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004784:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004788:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800478c:	4770      	bx	lr
 800478e:	bf00      	nop
 8004790:	0800525d 	.word	0x0800525d

08004794 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionEastEv>:
 8004794:	4b06      	ldr	r3, [pc, #24]	; (80047b0 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionEastEv+0x1c>)
 8004796:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800479a:	2300      	movs	r3, #0
 800479c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047a0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047a4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047a8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047ac:	4770      	bx	lr
 80047ae:	bf00      	nop
 80047b0:	0800511d 	.word	0x0800511d

080047b4 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionWestEv>:
 80047b4:	4b06      	ldr	r3, [pc, #24]	; (80047d0 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionWestEv+0x1c>)
 80047b6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047ba:	2300      	movs	r3, #0
 80047bc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047c0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047c4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047cc:	4770      	bx	lr
 80047ce:	bf00      	nop
 80047d0:	08004bad 	.word	0x08004bad

080047d4 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionEastEv>:
 80047d4:	4b06      	ldr	r3, [pc, #24]	; (80047f0 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionEastEv+0x1c>)
 80047d6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047da:	2300      	movs	r3, #0
 80047dc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047e4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047ec:	4770      	bx	lr
 80047ee:	bf00      	nop
 80047f0:	08004fdd 	.word	0x08004fdd

080047f4 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionWestEv>:
 80047f4:	4b06      	ldr	r3, [pc, #24]	; (8004810 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionWestEv+0x1c>)
 80047f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047fa:	2300      	movs	r3, #0
 80047fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004800:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004804:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004808:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800480c:	4770      	bx	lr
 800480e:	bf00      	nop
 8004810:	08004a6d 	.word	0x08004a6d

08004814 <_ZN23FrontendApplicationBase34gotoDriverScreenScreenNoTransitionEv>:
 8004814:	4b06      	ldr	r3, [pc, #24]	; (8004830 <_ZN23FrontendApplicationBase34gotoDriverScreenScreenNoTransitionEv+0x1c>)
 8004816:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800481a:	2300      	movs	r3, #0
 800481c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004820:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004824:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004828:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800482c:	4770      	bx	lr
 800482e:	bf00      	nop
 8004830:	080043f9 	.word	0x080043f9

08004834 <_ZN23FrontendApplicationBase41gotoDriverScreenScreenSlideTransitionEastEv>:
 8004834:	4b06      	ldr	r3, [pc, #24]	; (8004850 <_ZN23FrontendApplicationBase41gotoDriverScreenScreenSlideTransitionEastEv+0x1c>)
 8004836:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800483a:	2300      	movs	r3, #0
 800483c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150

void FrontendApplicationBase::gotoDriverScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoDriverScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004840:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004844:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004848:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800484c:	4770      	bx	lr
 800484e:	bf00      	nop
 8004850:	08004e9d 	.word	0x08004e9d

08004854 <_ZN8touchgfx17AbstractPartition2atI19MainInfotaimentViewEERT_t>:
 8004854:	6803      	ldr	r3, [r0, #0]
 8004856:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004858:	4718      	bx	r3

0800485a <_ZN8touchgfx17AbstractPartition2atI24MainInfotaimentPresenterEERT_t>:
 800485a:	6803      	ldr	r3, [r0, #0]
 800485c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800485e:	4718      	bx	r3

08004860 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv>:
{
 8004860:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainInfotaimentView, MainInfotaimentPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004864:	e9d0 ba55 	ldrd	fp, sl, [r0, #340]	; 0x154
{
 8004868:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800486a:	f8db 0008 	ldr.w	r0, [fp, #8]
 800486e:	6803      	ldr	r3, [r0, #0]
 8004870:	6a1b      	ldr	r3, [r3, #32]
 8004872:	4798      	blx	r3
 8004874:	f244 7397 	movw	r3, #18327	; 0x4797
 8004878:	4298      	cmp	r0, r3
 800487a:	d805      	bhi.n	8004888 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x28>
 800487c:	4b54      	ldr	r3, [pc, #336]	; (80049d0 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x170>)
 800487e:	4a55      	ldr	r2, [pc, #340]	; (80049d4 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x174>)
 8004880:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004882:	4855      	ldr	r0, [pc, #340]	; (80049d8 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x178>)
 8004884:	f021 feca 	bl	802661c <__assert_func>
 8004888:	f8db 0004 	ldr.w	r0, [fp, #4]
 800488c:	6803      	ldr	r3, [r0, #0]
 800488e:	6a1b      	ldr	r3, [r3, #32]
 8004890:	4798      	blx	r3
 8004892:	280f      	cmp	r0, #15
 8004894:	d803      	bhi.n	800489e <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x3e>
 8004896:	4b51      	ldr	r3, [pc, #324]	; (80049dc <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x17c>)
 8004898:	4a4e      	ldr	r2, [pc, #312]	; (80049d4 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x174>)
 800489a:	21a4      	movs	r1, #164	; 0xa4
 800489c:	e7f1      	b.n	8004882 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800489e:	f8db 000c 	ldr.w	r0, [fp, #12]
 80048a2:	6803      	ldr	r3, [r0, #0]
 80048a4:	6a1b      	ldr	r3, [r3, #32]
 80048a6:	4798      	blx	r3
 80048a8:	2837      	cmp	r0, #55	; 0x37
 80048aa:	d803      	bhi.n	80048b4 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x54>
 80048ac:	4b4c      	ldr	r3, [pc, #304]	; (80049e0 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x180>)
 80048ae:	4a49      	ldr	r2, [pc, #292]	; (80049d4 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x174>)
 80048b0:	21a5      	movs	r1, #165	; 0xa5
 80048b2:	e7e6      	b.n	8004882 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x22>
    Application::getInstance()->clearAllTimerWidgets();
 80048b4:	f010 faf0 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80048b8:	f8df 9138 	ldr.w	r9, [pc, #312]	; 80049f4 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x194>
 80048bc:	3004      	adds	r0, #4
 80048be:	f010 fb51 	bl	8014f64 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80048c2:	f8d9 0000 	ldr.w	r0, [r9]
 80048c6:	b110      	cbz	r0, 80048ce <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x6e>
        (*currentTrans)->tearDown();
 80048c8:	6803      	ldr	r3, [r0, #0]
 80048ca:	68db      	ldr	r3, [r3, #12]
 80048cc:	4798      	blx	r3
    if (*currentTrans)
 80048ce:	f8d9 0000 	ldr.w	r0, [r9]
 80048d2:	b110      	cbz	r0, 80048da <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x7a>
        (*currentTrans)->~Transition();
 80048d4:	6803      	ldr	r3, [r0, #0]
 80048d6:	681b      	ldr	r3, [r3, #0]
 80048d8:	4798      	blx	r3
    if (*currentScreen)
 80048da:	f8df 811c 	ldr.w	r8, [pc, #284]	; 80049f8 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x198>
 80048de:	f8d8 0000 	ldr.w	r0, [r8]
 80048e2:	b110      	cbz	r0, 80048ea <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x8a>
        (*currentScreen)->tearDownScreen();
 80048e4:	6803      	ldr	r3, [r0, #0]
 80048e6:	695b      	ldr	r3, [r3, #20]
 80048e8:	4798      	blx	r3
    if (*currentPresenter)
 80048ea:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80048ee:	b110      	cbz	r0, 80048f6 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x96>
        (*currentPresenter)->deactivate();
 80048f0:	6803      	ldr	r3, [r0, #0]
 80048f2:	685b      	ldr	r3, [r3, #4]
 80048f4:	4798      	blx	r3
    if (*currentScreen)
 80048f6:	f8d8 0000 	ldr.w	r0, [r8]
 80048fa:	b110      	cbz	r0, 8004902 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0xa2>
        (*currentScreen)->~Screen();
 80048fc:	6803      	ldr	r3, [r0, #0]
 80048fe:	681b      	ldr	r3, [r3, #0]
 8004900:	4798      	blx	r3
    if (*currentPresenter)
 8004902:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004906:	b110      	cbz	r0, 800490e <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0xae>
        (*currentPresenter)->~Presenter();
 8004908:	6803      	ldr	r3, [r0, #0]
 800490a:	689b      	ldr	r3, [r3, #8]
 800490c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800490e:	f8db 000c 	ldr.w	r0, [fp, #12]
 8004912:	6803      	ldr	r3, [r0, #0]
 8004914:	2100      	movs	r1, #0
 8004916:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004918:	4798      	blx	r3
          solid()
 800491a:	4b32      	ldr	r3, [pc, #200]	; (80049e4 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x184>)
 800491c:	6003      	str	r3, [r0, #0]
 800491e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8004922:	8103      	strh	r3, [r0, #8]
 8004924:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004928:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 800492a:	4b2f      	ldr	r3, [pc, #188]	; (80049e8 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x188>)
 800492c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800492e:	4a2f      	ldr	r2, [pc, #188]	; (80049ec <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x18c>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004930:	4b2f      	ldr	r3, [pc, #188]	; (80049f0 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x190>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004932:	f9b2 2000 	ldrsh.w	r2, [r2]
            targetValue = HAL::DISPLAY_WIDTH;
 8004936:	f9b3 3000 	ldrsh.w	r3, [r3]
 800493a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 800493c:	2500      	movs	r5, #0
 800493e:	6045      	str	r5, [r0, #4]
          solid()
 8004940:	7285      	strb	r5, [r0, #10]
 8004942:	81c5      	strh	r5, [r0, #14]
 8004944:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8004948:	e9c0 5507 	strd	r5, r5, [r0, #28]
 800494c:	e9c0 5509 	strd	r5, r5, [r0, #36]	; 0x24
 8004950:	e9c0 550b 	strd	r5, r5, [r0, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004954:	4629      	mov	r1, r5
 8004956:	4604      	mov	r4, r0
 8004958:	9200      	str	r2, [sp, #0]
 800495a:	3010      	adds	r0, #16
 800495c:	462a      	mov	r2, r5
 800495e:	f7fe f9be 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004962:	4629      	mov	r1, r5
 8004964:	f8db 0008 	ldr.w	r0, [fp, #8]
 8004968:	f7ff ff74 	bl	8004854 <_ZN8touchgfx17AbstractPartition2atI19MainInfotaimentViewEERT_t>
 800496c:	4606      	mov	r6, r0
 800496e:	f003 ff81 	bl	8008874 <_ZN19MainInfotaimentViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004972:	4629      	mov	r1, r5
 8004974:	f8db 0004 	ldr.w	r0, [fp, #4]
 8004978:	f7ff ff6f 	bl	800485a <_ZN8touchgfx17AbstractPartition2atI24MainInfotaimentPresenterEERT_t>
 800497c:	4631      	mov	r1, r6
 800497e:	4605      	mov	r5, r0
 8004980:	f003 ff52 	bl	8008828 <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView>
    *currentTrans = newTransition;
 8004984:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004988:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800498c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004990:	b1e5      	cbz	r5, 80049cc <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x16c>
 8004992:	1d2b      	adds	r3, r5, #4
 8004994:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004998:	6833      	ldr	r3, [r6, #0]
 800499a:	f8c5 a008 	str.w	sl, [r5, #8]
 800499e:	4630      	mov	r0, r6
 80049a0:	68db      	ldr	r3, [r3, #12]
 80049a2:	63f5      	str	r5, [r6, #60]	; 0x3c
 80049a4:	4798      	blx	r3
    newPresenter->activate();
 80049a6:	682b      	ldr	r3, [r5, #0]
 80049a8:	4628      	mov	r0, r5
 80049aa:	681b      	ldr	r3, [r3, #0]
 80049ac:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80049ae:	4621      	mov	r1, r4
 80049b0:	4630      	mov	r0, r6
 80049b2:	f012 f89d 	bl	8016af0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80049b6:	6823      	ldr	r3, [r4, #0]
 80049b8:	4620      	mov	r0, r4
 80049ba:	691b      	ldr	r3, [r3, #16]
 80049bc:	4798      	blx	r3
    newTransition->invalidate();
 80049be:	6823      	ldr	r3, [r4, #0]
 80049c0:	695b      	ldr	r3, [r3, #20]
 80049c2:	4620      	mov	r0, r4
}
 80049c4:	b003      	add	sp, #12
 80049c6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049ca:	4718      	bx	r3
    model->bind(newPresenter);
 80049cc:	462b      	mov	r3, r5
 80049ce:	e7e1      	b.n	8004994 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x134>
 80049d0:	080285d8 	.word	0x080285d8
 80049d4:	08028a05 	.word	0x08028a05
 80049d8:	08028774 	.word	0x08028774
 80049dc:	080287bb 	.word	0x080287bb
 80049e0:	0802885e 	.word	0x0802885e
 80049e4:	08029480 	.word	0x08029480
 80049e8:	08029340 	.word	0x08029340
 80049ec:	2000ef12 	.word	0x2000ef12
 80049f0:	2000ef10 	.word	0x2000ef10
 80049f4:	2000ef64 	.word	0x2000ef64
 80049f8:	2000ef60 	.word	0x2000ef60

080049fc <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>:
 80049fc:	6803      	ldr	r3, [r0, #0]
 80049fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a00:	4718      	bx	r3
	...

08004a04 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8004a04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          relativeValue(0)
 8004a06:	4605      	mov	r5, r0
 8004a08:	2600      	movs	r6, #0
 8004a0a:	4b14      	ldr	r3, [pc, #80]	; (8004a5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x58>)
 8004a0c:	6046      	str	r6, [r0, #4]
 8004a0e:	7206      	strb	r6, [r0, #8]
 8004a10:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8004a14:	4604      	mov	r4, r0
          relativeValue(0)
 8004a16:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8004a18:	460f      	mov	r7, r1
          relativeValue(0)
 8004a1a:	f00c fd5f 	bl	80114dc <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
 8004a1e:	4b10      	ldr	r3, [pc, #64]	; (8004a60 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x5c>)
          relativeValue(0)
 8004a20:	f884 7038 	strb.w	r7, [r4, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 8004a24:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
 8004a26:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 8004a2a:	87a6      	strh	r6, [r4, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 8004a2c:	b923      	cbnz	r3, 8004a38 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x34>
            done = true;
 8004a2e:	2301      	movs	r3, #1
 8004a30:	7223      	strb	r3, [r4, #8]
    }
 8004a32:	4620      	mov	r0, r4
 8004a34:	b003      	add	sp, #12
 8004a36:	bdf0      	pop	{r4, r5, r6, r7, pc}
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004a38:	4b0a      	ldr	r3, [pc, #40]	; (8004a64 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x60>)
 8004a3a:	4f0b      	ldr	r7, [pc, #44]	; (8004a68 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x64>)
 8004a3c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004a40:	9300      	str	r3, [sp, #0]
 8004a42:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004a46:	4632      	mov	r2, r6
 8004a48:	4631      	mov	r1, r6
 8004a4a:	4628      	mov	r0, r5
 8004a4c:	f7fe f947 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 8004a50:	4628      	mov	r0, r5
 8004a52:	f00c fcbe 	bl	80113d2 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_WIDTH;
 8004a56:	883b      	ldrh	r3, [r7, #0]
 8004a58:	8763      	strh	r3, [r4, #58]	; 0x3a
            break;
 8004a5a:	e7ea      	b.n	8004a32 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x2e>
 8004a5c:	0802945c 	.word	0x0802945c
 8004a60:	2000ef1b 	.word	0x2000ef1b
 8004a64:	2000ef12 	.word	0x2000ef12
 8004a68:	2000ef10 	.word	0x2000ef10

08004a6c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv>:
{
 8004a6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CompetitionScreenView, CompetitionScreenPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a70:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a74:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a76:	68a0      	ldr	r0, [r4, #8]
 8004a78:	6803      	ldr	r3, [r0, #0]
 8004a7a:	6a1b      	ldr	r3, [r3, #32]
 8004a7c:	4798      	blx	r3
 8004a7e:	f5b0 7fa8 	cmp.w	r0, #336	; 0x150
 8004a82:	d205      	bcs.n	8004a90 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x24>
 8004a84:	4b42      	ldr	r3, [pc, #264]	; (8004b90 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x124>)
 8004a86:	4a43      	ldr	r2, [pc, #268]	; (8004b94 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x128>)
 8004a88:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a8a:	4843      	ldr	r0, [pc, #268]	; (8004b98 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x12c>)
 8004a8c:	f021 fdc6 	bl	802661c <__assert_func>
 8004a90:	6860      	ldr	r0, [r4, #4]
 8004a92:	6803      	ldr	r3, [r0, #0]
 8004a94:	6a1b      	ldr	r3, [r3, #32]
 8004a96:	4798      	blx	r3
 8004a98:	280f      	cmp	r0, #15
 8004a9a:	d803      	bhi.n	8004aa4 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x38>
 8004a9c:	4b3f      	ldr	r3, [pc, #252]	; (8004b9c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x130>)
 8004a9e:	4a3d      	ldr	r2, [pc, #244]	; (8004b94 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x128>)
 8004aa0:	21a4      	movs	r1, #164	; 0xa4
 8004aa2:	e7f2      	b.n	8004a8a <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004aa4:	68e0      	ldr	r0, [r4, #12]
 8004aa6:	6803      	ldr	r3, [r0, #0]
 8004aa8:	6a1b      	ldr	r3, [r3, #32]
 8004aaa:	4798      	blx	r3
 8004aac:	283f      	cmp	r0, #63	; 0x3f
 8004aae:	d803      	bhi.n	8004ab8 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x4c>
 8004ab0:	4b3b      	ldr	r3, [pc, #236]	; (8004ba0 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x134>)
 8004ab2:	4a38      	ldr	r2, [pc, #224]	; (8004b94 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x128>)
 8004ab4:	21a5      	movs	r1, #165	; 0xa5
 8004ab6:	e7e8      	b.n	8004a8a <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004ab8:	f010 f9ee 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004abc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ba4 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x138>
 8004ac0:	3004      	adds	r0, #4
 8004ac2:	f010 fa4f 	bl	8014f64 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004ac6:	f8d9 0000 	ldr.w	r0, [r9]
 8004aca:	b110      	cbz	r0, 8004ad2 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004acc:	6803      	ldr	r3, [r0, #0]
 8004ace:	68db      	ldr	r3, [r3, #12]
 8004ad0:	4798      	blx	r3
    if (*currentTrans)
 8004ad2:	f8d9 0000 	ldr.w	r0, [r9]
 8004ad6:	b110      	cbz	r0, 8004ade <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004ad8:	6803      	ldr	r3, [r0, #0]
 8004ada:	681b      	ldr	r3, [r3, #0]
 8004adc:	4798      	blx	r3
    if (*currentScreen)
 8004ade:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004ba8 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x13c>
 8004ae2:	f8d8 0000 	ldr.w	r0, [r8]
 8004ae6:	b110      	cbz	r0, 8004aee <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004ae8:	6803      	ldr	r3, [r0, #0]
 8004aea:	695b      	ldr	r3, [r3, #20]
 8004aec:	4798      	blx	r3
    if (*currentPresenter)
 8004aee:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004af2:	b110      	cbz	r0, 8004afa <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004af4:	6803      	ldr	r3, [r0, #0]
 8004af6:	685b      	ldr	r3, [r3, #4]
 8004af8:	4798      	blx	r3
    if (*currentScreen)
 8004afa:	f8d8 0000 	ldr.w	r0, [r8]
 8004afe:	b110      	cbz	r0, 8004b06 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004b00:	6803      	ldr	r3, [r0, #0]
 8004b02:	681b      	ldr	r3, [r3, #0]
 8004b04:	4798      	blx	r3
    if (*currentPresenter)
 8004b06:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b0a:	b110      	cbz	r0, 8004b12 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004b0c:	6803      	ldr	r3, [r0, #0]
 8004b0e:	689b      	ldr	r3, [r3, #8]
 8004b10:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b12:	68e0      	ldr	r0, [r4, #12]
 8004b14:	2100      	movs	r1, #0
 8004b16:	f7ff ff71 	bl	80049fc <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 8004b1a:	2114      	movs	r1, #20
 8004b1c:	4605      	mov	r5, r0
 8004b1e:	f7ff ff71 	bl	8004a04 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b22:	68a0      	ldr	r0, [r4, #8]
 8004b24:	6803      	ldr	r3, [r0, #0]
 8004b26:	2100      	movs	r1, #0
 8004b28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b2a:	4798      	blx	r3
 8004b2c:	4606      	mov	r6, r0
 8004b2e:	f003 fb97 	bl	8008260 <_ZN21CompetitionScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b32:	6860      	ldr	r0, [r4, #4]
 8004b34:	6803      	ldr	r3, [r0, #0]
 8004b36:	2100      	movs	r1, #0
 8004b38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b3a:	4798      	blx	r3
 8004b3c:	4631      	mov	r1, r6
 8004b3e:	4604      	mov	r4, r0
 8004b40:	f003 fb68 	bl	8008214 <_ZN26CompetitionScreenPresenterC1ER21CompetitionScreenView>
    *currentTrans = newTransition;
 8004b44:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b48:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b4c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b50:	b1dc      	cbz	r4, 8004b8a <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x11e>
 8004b52:	1d23      	adds	r3, r4, #4
 8004b54:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b58:	6833      	ldr	r3, [r6, #0]
 8004b5a:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b5e:	4630      	mov	r0, r6
 8004b60:	68db      	ldr	r3, [r3, #12]
 8004b62:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b64:	4798      	blx	r3
    newPresenter->activate();
 8004b66:	6823      	ldr	r3, [r4, #0]
 8004b68:	4620      	mov	r0, r4
 8004b6a:	681b      	ldr	r3, [r3, #0]
 8004b6c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b6e:	4629      	mov	r1, r5
 8004b70:	4630      	mov	r0, r6
 8004b72:	f011 ffbd 	bl	8016af0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b76:	682b      	ldr	r3, [r5, #0]
 8004b78:	4628      	mov	r0, r5
 8004b7a:	691b      	ldr	r3, [r3, #16]
 8004b7c:	4798      	blx	r3
    newTransition->invalidate();
 8004b7e:	682b      	ldr	r3, [r5, #0]
 8004b80:	4628      	mov	r0, r5
 8004b82:	695b      	ldr	r3, [r3, #20]
}
 8004b84:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b88:	4718      	bx	r3
    model->bind(newPresenter);
 8004b8a:	4623      	mov	r3, r4
 8004b8c:	e7e2      	b.n	8004b54 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0xe8>
 8004b8e:	bf00      	nop
 8004b90:	080285d8 	.word	0x080285d8
 8004b94:	08028b2b 	.word	0x08028b2b
 8004b98:	08028774 	.word	0x08028774
 8004b9c:	080287bb 	.word	0x080287bb
 8004ba0:	0802885e 	.word	0x0802885e
 8004ba4:	2000ef64 	.word	0x2000ef64
 8004ba8:	2000ef60 	.word	0x2000ef60

08004bac <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv>:
{
 8004bac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MissionSelectView, MissionSelectPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004bb0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004bb4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004bb6:	68a0      	ldr	r0, [r4, #8]
 8004bb8:	6803      	ldr	r3, [r0, #0]
 8004bba:	6a1b      	ldr	r3, [r3, #32]
 8004bbc:	4798      	blx	r3
 8004bbe:	f240 438b 	movw	r3, #1163	; 0x48b
 8004bc2:	4298      	cmp	r0, r3
 8004bc4:	d805      	bhi.n	8004bd2 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x26>
 8004bc6:	4b42      	ldr	r3, [pc, #264]	; (8004cd0 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x124>)
 8004bc8:	4a42      	ldr	r2, [pc, #264]	; (8004cd4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x128>)
 8004bca:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bcc:	4842      	ldr	r0, [pc, #264]	; (8004cd8 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x12c>)
 8004bce:	f021 fd25 	bl	802661c <__assert_func>
 8004bd2:	6860      	ldr	r0, [r4, #4]
 8004bd4:	6803      	ldr	r3, [r0, #0]
 8004bd6:	6a1b      	ldr	r3, [r3, #32]
 8004bd8:	4798      	blx	r3
 8004bda:	280f      	cmp	r0, #15
 8004bdc:	d803      	bhi.n	8004be6 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x3a>
 8004bde:	4b3f      	ldr	r3, [pc, #252]	; (8004cdc <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x130>)
 8004be0:	4a3c      	ldr	r2, [pc, #240]	; (8004cd4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x128>)
 8004be2:	21a4      	movs	r1, #164	; 0xa4
 8004be4:	e7f2      	b.n	8004bcc <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004be6:	68e0      	ldr	r0, [r4, #12]
 8004be8:	6803      	ldr	r3, [r0, #0]
 8004bea:	6a1b      	ldr	r3, [r3, #32]
 8004bec:	4798      	blx	r3
 8004bee:	283f      	cmp	r0, #63	; 0x3f
 8004bf0:	d803      	bhi.n	8004bfa <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x4e>
 8004bf2:	4b3b      	ldr	r3, [pc, #236]	; (8004ce0 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x134>)
 8004bf4:	4a37      	ldr	r2, [pc, #220]	; (8004cd4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x128>)
 8004bf6:	21a5      	movs	r1, #165	; 0xa5
 8004bf8:	e7e8      	b.n	8004bcc <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004bfa:	f010 f94d 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004bfe:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ce4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x138>
 8004c02:	3004      	adds	r0, #4
 8004c04:	f010 f9ae 	bl	8014f64 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c08:	f8d9 0000 	ldr.w	r0, [r9]
 8004c0c:	b110      	cbz	r0, 8004c14 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004c0e:	6803      	ldr	r3, [r0, #0]
 8004c10:	68db      	ldr	r3, [r3, #12]
 8004c12:	4798      	blx	r3
    if (*currentTrans)
 8004c14:	f8d9 0000 	ldr.w	r0, [r9]
 8004c18:	b110      	cbz	r0, 8004c20 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004c1a:	6803      	ldr	r3, [r0, #0]
 8004c1c:	681b      	ldr	r3, [r3, #0]
 8004c1e:	4798      	blx	r3
    if (*currentScreen)
 8004c20:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004ce8 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x13c>
 8004c24:	f8d8 0000 	ldr.w	r0, [r8]
 8004c28:	b110      	cbz	r0, 8004c30 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004c2a:	6803      	ldr	r3, [r0, #0]
 8004c2c:	695b      	ldr	r3, [r3, #20]
 8004c2e:	4798      	blx	r3
    if (*currentPresenter)
 8004c30:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c34:	b110      	cbz	r0, 8004c3c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004c36:	6803      	ldr	r3, [r0, #0]
 8004c38:	685b      	ldr	r3, [r3, #4]
 8004c3a:	4798      	blx	r3
    if (*currentScreen)
 8004c3c:	f8d8 0000 	ldr.w	r0, [r8]
 8004c40:	b110      	cbz	r0, 8004c48 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004c42:	6803      	ldr	r3, [r0, #0]
 8004c44:	681b      	ldr	r3, [r3, #0]
 8004c46:	4798      	blx	r3
    if (*currentPresenter)
 8004c48:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c4c:	b110      	cbz	r0, 8004c54 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004c4e:	6803      	ldr	r3, [r0, #0]
 8004c50:	689b      	ldr	r3, [r3, #8]
 8004c52:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c54:	68e0      	ldr	r0, [r4, #12]
 8004c56:	2100      	movs	r1, #0
 8004c58:	f7ff fed0 	bl	80049fc <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 8004c5c:	2114      	movs	r1, #20
 8004c5e:	4605      	mov	r5, r0
 8004c60:	f7ff fed0 	bl	8004a04 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c64:	68a0      	ldr	r0, [r4, #8]
 8004c66:	6803      	ldr	r3, [r0, #0]
 8004c68:	2100      	movs	r1, #0
 8004c6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c6c:	4798      	blx	r3
 8004c6e:	4606      	mov	r6, r0
 8004c70:	f004 f8e8 	bl	8008e44 <_ZN17MissionSelectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c74:	6860      	ldr	r0, [r4, #4]
 8004c76:	6803      	ldr	r3, [r0, #0]
 8004c78:	2100      	movs	r1, #0
 8004c7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c7c:	4798      	blx	r3
 8004c7e:	4631      	mov	r1, r6
 8004c80:	4604      	mov	r4, r0
 8004c82:	f004 f88d 	bl	8008da0 <_ZN22MissionSelectPresenterC1ER17MissionSelectView>
    *currentTrans = newTransition;
 8004c86:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c8a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c8e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c92:	b1dc      	cbz	r4, 8004ccc <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x120>
 8004c94:	1d23      	adds	r3, r4, #4
 8004c96:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c9a:	6833      	ldr	r3, [r6, #0]
 8004c9c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004ca0:	4630      	mov	r0, r6
 8004ca2:	68db      	ldr	r3, [r3, #12]
 8004ca4:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004ca6:	4798      	blx	r3
    newPresenter->activate();
 8004ca8:	6823      	ldr	r3, [r4, #0]
 8004caa:	4620      	mov	r0, r4
 8004cac:	681b      	ldr	r3, [r3, #0]
 8004cae:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004cb0:	4629      	mov	r1, r5
 8004cb2:	4630      	mov	r0, r6
 8004cb4:	f011 ff1c 	bl	8016af0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004cb8:	682b      	ldr	r3, [r5, #0]
 8004cba:	4628      	mov	r0, r5
 8004cbc:	691b      	ldr	r3, [r3, #16]
 8004cbe:	4798      	blx	r3
    newTransition->invalidate();
 8004cc0:	682b      	ldr	r3, [r5, #0]
 8004cc2:	4628      	mov	r0, r5
 8004cc4:	695b      	ldr	r3, [r3, #20]
}
 8004cc6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cca:	4718      	bx	r3
    model->bind(newPresenter);
 8004ccc:	4623      	mov	r3, r4
 8004cce:	e7e2      	b.n	8004c96 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0xea>
 8004cd0:	080285d8 	.word	0x080285d8
 8004cd4:	08028c56 	.word	0x08028c56
 8004cd8:	08028774 	.word	0x08028774
 8004cdc:	080287bb 	.word	0x080287bb
 8004ce0:	0802885e 	.word	0x0802885e
 8004ce4:	2000ef64 	.word	0x2000ef64
 8004ce8:	2000ef60 	.word	0x2000ef60

08004cec <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv>:
{
 8004cec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MainInfotaimentView, MainInfotaimentPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004cf0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004cf4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004cf6:	68a0      	ldr	r0, [r4, #8]
 8004cf8:	6803      	ldr	r3, [r0, #0]
 8004cfa:	6a1b      	ldr	r3, [r3, #32]
 8004cfc:	4798      	blx	r3
 8004cfe:	f244 7397 	movw	r3, #18327	; 0x4797
 8004d02:	4298      	cmp	r0, r3
 8004d04:	d805      	bhi.n	8004d12 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x26>
 8004d06:	4b41      	ldr	r3, [pc, #260]	; (8004e0c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x120>)
 8004d08:	4a41      	ldr	r2, [pc, #260]	; (8004e10 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x124>)
 8004d0a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d0c:	4841      	ldr	r0, [pc, #260]	; (8004e14 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x128>)
 8004d0e:	f021 fc85 	bl	802661c <__assert_func>
 8004d12:	6860      	ldr	r0, [r4, #4]
 8004d14:	6803      	ldr	r3, [r0, #0]
 8004d16:	6a1b      	ldr	r3, [r3, #32]
 8004d18:	4798      	blx	r3
 8004d1a:	280f      	cmp	r0, #15
 8004d1c:	d803      	bhi.n	8004d26 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x3a>
 8004d1e:	4b3e      	ldr	r3, [pc, #248]	; (8004e18 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x12c>)
 8004d20:	4a3b      	ldr	r2, [pc, #236]	; (8004e10 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x124>)
 8004d22:	21a4      	movs	r1, #164	; 0xa4
 8004d24:	e7f2      	b.n	8004d0c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d26:	68e0      	ldr	r0, [r4, #12]
 8004d28:	6803      	ldr	r3, [r0, #0]
 8004d2a:	6a1b      	ldr	r3, [r3, #32]
 8004d2c:	4798      	blx	r3
 8004d2e:	283f      	cmp	r0, #63	; 0x3f
 8004d30:	d803      	bhi.n	8004d3a <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x4e>
 8004d32:	4b3a      	ldr	r3, [pc, #232]	; (8004e1c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x130>)
 8004d34:	4a36      	ldr	r2, [pc, #216]	; (8004e10 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x124>)
 8004d36:	21a5      	movs	r1, #165	; 0xa5
 8004d38:	e7e8      	b.n	8004d0c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004d3a:	f010 f8ad 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d3e:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8004e20 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x134>
 8004d42:	3004      	adds	r0, #4
 8004d44:	f010 f90e 	bl	8014f64 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d48:	f8d9 0000 	ldr.w	r0, [r9]
 8004d4c:	b110      	cbz	r0, 8004d54 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004d4e:	6803      	ldr	r3, [r0, #0]
 8004d50:	68db      	ldr	r3, [r3, #12]
 8004d52:	4798      	blx	r3
    if (*currentTrans)
 8004d54:	f8d9 0000 	ldr.w	r0, [r9]
 8004d58:	b110      	cbz	r0, 8004d60 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004d5a:	6803      	ldr	r3, [r0, #0]
 8004d5c:	681b      	ldr	r3, [r3, #0]
 8004d5e:	4798      	blx	r3
    if (*currentScreen)
 8004d60:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8004e24 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x138>
 8004d64:	f8d8 0000 	ldr.w	r0, [r8]
 8004d68:	b110      	cbz	r0, 8004d70 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004d6a:	6803      	ldr	r3, [r0, #0]
 8004d6c:	695b      	ldr	r3, [r3, #20]
 8004d6e:	4798      	blx	r3
    if (*currentPresenter)
 8004d70:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d74:	b110      	cbz	r0, 8004d7c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004d76:	6803      	ldr	r3, [r0, #0]
 8004d78:	685b      	ldr	r3, [r3, #4]
 8004d7a:	4798      	blx	r3
    if (*currentScreen)
 8004d7c:	f8d8 0000 	ldr.w	r0, [r8]
 8004d80:	b110      	cbz	r0, 8004d88 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004d82:	6803      	ldr	r3, [r0, #0]
 8004d84:	681b      	ldr	r3, [r3, #0]
 8004d86:	4798      	blx	r3
    if (*currentPresenter)
 8004d88:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d8c:	b110      	cbz	r0, 8004d94 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004d8e:	6803      	ldr	r3, [r0, #0]
 8004d90:	689b      	ldr	r3, [r3, #8]
 8004d92:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d94:	68e0      	ldr	r0, [r4, #12]
 8004d96:	2100      	movs	r1, #0
 8004d98:	f7ff fe30 	bl	80049fc <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 8004d9c:	2114      	movs	r1, #20
 8004d9e:	4605      	mov	r5, r0
 8004da0:	f7ff fe30 	bl	8004a04 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004da4:	2100      	movs	r1, #0
 8004da6:	68a0      	ldr	r0, [r4, #8]
 8004da8:	f7ff fd54 	bl	8004854 <_ZN8touchgfx17AbstractPartition2atI19MainInfotaimentViewEERT_t>
 8004dac:	4606      	mov	r6, r0
 8004dae:	f003 fd61 	bl	8008874 <_ZN19MainInfotaimentViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004db2:	6860      	ldr	r0, [r4, #4]
 8004db4:	2100      	movs	r1, #0
 8004db6:	f7ff fd50 	bl	800485a <_ZN8touchgfx17AbstractPartition2atI24MainInfotaimentPresenterEERT_t>
 8004dba:	4631      	mov	r1, r6
 8004dbc:	4604      	mov	r4, r0
 8004dbe:	f003 fd33 	bl	8008828 <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView>
    *currentTrans = newTransition;
 8004dc2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004dc6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004dca:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004dce:	b1dc      	cbz	r4, 8004e08 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x11c>
 8004dd0:	1d23      	adds	r3, r4, #4
 8004dd2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004dd6:	6833      	ldr	r3, [r6, #0]
 8004dd8:	f8c4 a008 	str.w	sl, [r4, #8]
 8004ddc:	4630      	mov	r0, r6
 8004dde:	68db      	ldr	r3, [r3, #12]
 8004de0:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004de2:	4798      	blx	r3
    newPresenter->activate();
 8004de4:	6823      	ldr	r3, [r4, #0]
 8004de6:	4620      	mov	r0, r4
 8004de8:	681b      	ldr	r3, [r3, #0]
 8004dea:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004dec:	4629      	mov	r1, r5
 8004dee:	4630      	mov	r0, r6
 8004df0:	f011 fe7e 	bl	8016af0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004df4:	682b      	ldr	r3, [r5, #0]
 8004df6:	4628      	mov	r0, r5
 8004df8:	691b      	ldr	r3, [r3, #16]
 8004dfa:	4798      	blx	r3
    newTransition->invalidate();
 8004dfc:	682b      	ldr	r3, [r5, #0]
 8004dfe:	4628      	mov	r0, r5
 8004e00:	695b      	ldr	r3, [r3, #20]
}
 8004e02:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e06:	4718      	bx	r3
    model->bind(newPresenter);
 8004e08:	4623      	mov	r3, r4
 8004e0a:	e7e2      	b.n	8004dd2 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0xe6>
 8004e0c:	080285d8 	.word	0x080285d8
 8004e10:	08028d79 	.word	0x08028d79
 8004e14:	08028774 	.word	0x08028774
 8004e18:	080287bb 	.word	0x080287bb
 8004e1c:	0802885e 	.word	0x0802885e
 8004e20:	2000ef64 	.word	0x2000ef64
 8004e24:	2000ef60 	.word	0x2000ef60

08004e28 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>:
 8004e28:	6803      	ldr	r3, [r0, #0]
 8004e2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e2c:	4718      	bx	r3
	...

08004e30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8004e30:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          relativeValue(0)
 8004e32:	4605      	mov	r5, r0
 8004e34:	2600      	movs	r6, #0
 8004e36:	4b15      	ldr	r3, [pc, #84]	; (8004e8c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
 8004e38:	6046      	str	r6, [r0, #4]
 8004e3a:	7206      	strb	r6, [r0, #8]
 8004e3c:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8004e40:	4604      	mov	r4, r0
          relativeValue(0)
 8004e42:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8004e44:	460f      	mov	r7, r1
          relativeValue(0)
 8004e46:	f00c fb49 	bl	80114dc <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
 8004e4a:	4b11      	ldr	r3, [pc, #68]	; (8004e90 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x60>)
          relativeValue(0)
 8004e4c:	f884 7038 	strb.w	r7, [r4, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 8004e50:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
 8004e52:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 8004e56:	87a6      	strh	r6, [r4, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 8004e58:	b923      	cbnz	r3, 8004e64 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x34>
            done = true;
 8004e5a:	2301      	movs	r3, #1
 8004e5c:	7223      	strb	r3, [r4, #8]
    }
 8004e5e:	4620      	mov	r0, r4
 8004e60:	b003      	add	sp, #12
 8004e62:	bdf0      	pop	{r4, r5, r6, r7, pc}
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004e64:	4b0b      	ldr	r3, [pc, #44]	; (8004e94 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x64>)
 8004e66:	4f0c      	ldr	r7, [pc, #48]	; (8004e98 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x68>)
 8004e68:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004e6c:	9300      	str	r3, [sp, #0]
 8004e6e:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004e72:	4632      	mov	r2, r6
 8004e74:	4631      	mov	r1, r6
 8004e76:	4628      	mov	r0, r5
 8004e78:	f7fd ff31 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 8004e7c:	4628      	mov	r0, r5
 8004e7e:	f00c faa8 	bl	80113d2 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
 8004e82:	883b      	ldrh	r3, [r7, #0]
 8004e84:	425b      	negs	r3, r3
 8004e86:	8763      	strh	r3, [r4, #58]	; 0x3a
            break;
 8004e88:	e7e9      	b.n	8004e5e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x2e>
 8004e8a:	bf00      	nop
 8004e8c:	08029438 	.word	0x08029438
 8004e90:	2000ef1b 	.word	0x2000ef1b
 8004e94:	2000ef12 	.word	0x2000ef12
 8004e98:	2000ef10 	.word	0x2000ef10

08004e9c <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoDriverScreenScreenSlideTransitionEastImpl()
{
 8004e9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<DriverScreenView, DriverScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ea0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004ea4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ea6:	68a0      	ldr	r0, [r4, #8]
 8004ea8:	6803      	ldr	r3, [r0, #0]
 8004eaa:	6a1b      	ldr	r3, [r3, #32]
 8004eac:	4798      	blx	r3
 8004eae:	f640 431b 	movw	r3, #3099	; 0xc1b
 8004eb2:	4298      	cmp	r0, r3
 8004eb4:	d805      	bhi.n	8004ec2 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x26>
 8004eb6:	4b42      	ldr	r3, [pc, #264]	; (8004fc0 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x124>)
 8004eb8:	4a42      	ldr	r2, [pc, #264]	; (8004fc4 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x128>)
 8004eba:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ebc:	4842      	ldr	r0, [pc, #264]	; (8004fc8 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x12c>)
 8004ebe:	f021 fbad 	bl	802661c <__assert_func>
 8004ec2:	6860      	ldr	r0, [r4, #4]
 8004ec4:	6803      	ldr	r3, [r0, #0]
 8004ec6:	6a1b      	ldr	r3, [r3, #32]
 8004ec8:	4798      	blx	r3
 8004eca:	280f      	cmp	r0, #15
 8004ecc:	d803      	bhi.n	8004ed6 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x3a>
 8004ece:	4b3f      	ldr	r3, [pc, #252]	; (8004fcc <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x130>)
 8004ed0:	4a3c      	ldr	r2, [pc, #240]	; (8004fc4 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x128>)
 8004ed2:	21a4      	movs	r1, #164	; 0xa4
 8004ed4:	e7f2      	b.n	8004ebc <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ed6:	68e0      	ldr	r0, [r4, #12]
 8004ed8:	6803      	ldr	r3, [r0, #0]
 8004eda:	6a1b      	ldr	r3, [r3, #32]
 8004edc:	4798      	blx	r3
 8004ede:	283f      	cmp	r0, #63	; 0x3f
 8004ee0:	d803      	bhi.n	8004eea <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x4e>
 8004ee2:	4b3b      	ldr	r3, [pc, #236]	; (8004fd0 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x134>)
 8004ee4:	4a37      	ldr	r2, [pc, #220]	; (8004fc4 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x128>)
 8004ee6:	21a5      	movs	r1, #165	; 0xa5
 8004ee8:	e7e8      	b.n	8004ebc <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004eea:	f00f ffd5 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004eee:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004fd4 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x138>
 8004ef2:	3004      	adds	r0, #4
 8004ef4:	f010 f836 	bl	8014f64 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004ef8:	f8d9 0000 	ldr.w	r0, [r9]
 8004efc:	b110      	cbz	r0, 8004f04 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004efe:	6803      	ldr	r3, [r0, #0]
 8004f00:	68db      	ldr	r3, [r3, #12]
 8004f02:	4798      	blx	r3
    if (*currentTrans)
 8004f04:	f8d9 0000 	ldr.w	r0, [r9]
 8004f08:	b110      	cbz	r0, 8004f10 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004f0a:	6803      	ldr	r3, [r0, #0]
 8004f0c:	681b      	ldr	r3, [r3, #0]
 8004f0e:	4798      	blx	r3
    if (*currentScreen)
 8004f10:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004fd8 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x13c>
 8004f14:	f8d8 0000 	ldr.w	r0, [r8]
 8004f18:	b110      	cbz	r0, 8004f20 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004f1a:	6803      	ldr	r3, [r0, #0]
 8004f1c:	695b      	ldr	r3, [r3, #20]
 8004f1e:	4798      	blx	r3
    if (*currentPresenter)
 8004f20:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f24:	b110      	cbz	r0, 8004f2c <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004f26:	6803      	ldr	r3, [r0, #0]
 8004f28:	685b      	ldr	r3, [r3, #4]
 8004f2a:	4798      	blx	r3
    if (*currentScreen)
 8004f2c:	f8d8 0000 	ldr.w	r0, [r8]
 8004f30:	b110      	cbz	r0, 8004f38 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004f32:	6803      	ldr	r3, [r0, #0]
 8004f34:	681b      	ldr	r3, [r3, #0]
 8004f36:	4798      	blx	r3
    if (*currentPresenter)
 8004f38:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f3c:	b110      	cbz	r0, 8004f44 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004f3e:	6803      	ldr	r3, [r0, #0]
 8004f40:	689b      	ldr	r3, [r3, #8]
 8004f42:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f44:	68e0      	ldr	r0, [r4, #12]
 8004f46:	2100      	movs	r1, #0
 8004f48:	f7ff ff6e 	bl	8004e28 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8004f4c:	2114      	movs	r1, #20
 8004f4e:	4605      	mov	r5, r0
 8004f50:	f7ff ff6e 	bl	8004e30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f54:	68a0      	ldr	r0, [r4, #8]
 8004f56:	6803      	ldr	r3, [r0, #0]
 8004f58:	2100      	movs	r1, #0
 8004f5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f5c:	4798      	blx	r3
 8004f5e:	4606      	mov	r6, r0
 8004f60:	f003 fa4e 	bl	8008400 <_ZN16DriverScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f64:	6860      	ldr	r0, [r4, #4]
 8004f66:	6803      	ldr	r3, [r0, #0]
 8004f68:	2100      	movs	r1, #0
 8004f6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f6c:	4798      	blx	r3
 8004f6e:	4631      	mov	r1, r6
 8004f70:	4604      	mov	r4, r0
 8004f72:	f003 fa1f 	bl	80083b4 <_ZN21DriverScreenPresenterC1ER16DriverScreenView>
    *currentTrans = newTransition;
 8004f76:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f7a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f7e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f82:	b1dc      	cbz	r4, 8004fbc <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x120>
 8004f84:	1d23      	adds	r3, r4, #4
 8004f86:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f8a:	6833      	ldr	r3, [r6, #0]
 8004f8c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f90:	4630      	mov	r0, r6
 8004f92:	68db      	ldr	r3, [r3, #12]
 8004f94:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f96:	4798      	blx	r3
    newPresenter->activate();
 8004f98:	6823      	ldr	r3, [r4, #0]
 8004f9a:	4620      	mov	r0, r4
 8004f9c:	681b      	ldr	r3, [r3, #0]
 8004f9e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004fa0:	4629      	mov	r1, r5
 8004fa2:	4630      	mov	r0, r6
 8004fa4:	f011 fda4 	bl	8016af0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004fa8:	682b      	ldr	r3, [r5, #0]
 8004faa:	4628      	mov	r0, r5
 8004fac:	691b      	ldr	r3, [r3, #16]
 8004fae:	4798      	blx	r3
    newTransition->invalidate();
 8004fb0:	682b      	ldr	r3, [r5, #0]
 8004fb2:	4628      	mov	r0, r5
 8004fb4:	695b      	ldr	r3, [r3, #20]
}
 8004fb6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fba:	4718      	bx	r3
    model->bind(newPresenter);
 8004fbc:	4623      	mov	r3, r4
 8004fbe:	e7e2      	b.n	8004f86 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0xea>
 8004fc0:	080285d8 	.word	0x080285d8
 8004fc4:	08028ea0 	.word	0x08028ea0
 8004fc8:	08028774 	.word	0x08028774
 8004fcc:	080287bb 	.word	0x080287bb
 8004fd0:	0802885e 	.word	0x0802885e
 8004fd4:	2000ef64 	.word	0x2000ef64
 8004fd8:	2000ef60 	.word	0x2000ef60

08004fdc <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv>:
{
 8004fdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CompetitionScreenView, CompetitionScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004fe0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004fe4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004fe6:	68a0      	ldr	r0, [r4, #8]
 8004fe8:	6803      	ldr	r3, [r0, #0]
 8004fea:	6a1b      	ldr	r3, [r3, #32]
 8004fec:	4798      	blx	r3
 8004fee:	f5b0 7fa8 	cmp.w	r0, #336	; 0x150
 8004ff2:	d205      	bcs.n	8005000 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x24>
 8004ff4:	4b42      	ldr	r3, [pc, #264]	; (8005100 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x124>)
 8004ff6:	4a43      	ldr	r2, [pc, #268]	; (8005104 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x128>)
 8004ff8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ffa:	4843      	ldr	r0, [pc, #268]	; (8005108 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x12c>)
 8004ffc:	f021 fb0e 	bl	802661c <__assert_func>
 8005000:	6860      	ldr	r0, [r4, #4]
 8005002:	6803      	ldr	r3, [r0, #0]
 8005004:	6a1b      	ldr	r3, [r3, #32]
 8005006:	4798      	blx	r3
 8005008:	280f      	cmp	r0, #15
 800500a:	d803      	bhi.n	8005014 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x38>
 800500c:	4b3f      	ldr	r3, [pc, #252]	; (800510c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x130>)
 800500e:	4a3d      	ldr	r2, [pc, #244]	; (8005104 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x128>)
 8005010:	21a4      	movs	r1, #164	; 0xa4
 8005012:	e7f2      	b.n	8004ffa <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005014:	68e0      	ldr	r0, [r4, #12]
 8005016:	6803      	ldr	r3, [r0, #0]
 8005018:	6a1b      	ldr	r3, [r3, #32]
 800501a:	4798      	blx	r3
 800501c:	283f      	cmp	r0, #63	; 0x3f
 800501e:	d803      	bhi.n	8005028 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x4c>
 8005020:	4b3b      	ldr	r3, [pc, #236]	; (8005110 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x134>)
 8005022:	4a38      	ldr	r2, [pc, #224]	; (8005104 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x128>)
 8005024:	21a5      	movs	r1, #165	; 0xa5
 8005026:	e7e8      	b.n	8004ffa <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005028:	f00f ff36 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800502c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005114 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x138>
 8005030:	3004      	adds	r0, #4
 8005032:	f00f ff97 	bl	8014f64 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005036:	f8d9 0000 	ldr.w	r0, [r9]
 800503a:	b110      	cbz	r0, 8005042 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800503c:	6803      	ldr	r3, [r0, #0]
 800503e:	68db      	ldr	r3, [r3, #12]
 8005040:	4798      	blx	r3
    if (*currentTrans)
 8005042:	f8d9 0000 	ldr.w	r0, [r9]
 8005046:	b110      	cbz	r0, 800504e <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005048:	6803      	ldr	r3, [r0, #0]
 800504a:	681b      	ldr	r3, [r3, #0]
 800504c:	4798      	blx	r3
    if (*currentScreen)
 800504e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005118 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x13c>
 8005052:	f8d8 0000 	ldr.w	r0, [r8]
 8005056:	b110      	cbz	r0, 800505e <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005058:	6803      	ldr	r3, [r0, #0]
 800505a:	695b      	ldr	r3, [r3, #20]
 800505c:	4798      	blx	r3
    if (*currentPresenter)
 800505e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005062:	b110      	cbz	r0, 800506a <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005064:	6803      	ldr	r3, [r0, #0]
 8005066:	685b      	ldr	r3, [r3, #4]
 8005068:	4798      	blx	r3
    if (*currentScreen)
 800506a:	f8d8 0000 	ldr.w	r0, [r8]
 800506e:	b110      	cbz	r0, 8005076 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005070:	6803      	ldr	r3, [r0, #0]
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	4798      	blx	r3
    if (*currentPresenter)
 8005076:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800507a:	b110      	cbz	r0, 8005082 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800507c:	6803      	ldr	r3, [r0, #0]
 800507e:	689b      	ldr	r3, [r3, #8]
 8005080:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005082:	68e0      	ldr	r0, [r4, #12]
 8005084:	2100      	movs	r1, #0
 8005086:	f7ff fecf 	bl	8004e28 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800508a:	2114      	movs	r1, #20
 800508c:	4605      	mov	r5, r0
 800508e:	f7ff fecf 	bl	8004e30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005092:	68a0      	ldr	r0, [r4, #8]
 8005094:	6803      	ldr	r3, [r0, #0]
 8005096:	2100      	movs	r1, #0
 8005098:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800509a:	4798      	blx	r3
 800509c:	4606      	mov	r6, r0
 800509e:	f003 f8df 	bl	8008260 <_ZN21CompetitionScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80050a2:	6860      	ldr	r0, [r4, #4]
 80050a4:	6803      	ldr	r3, [r0, #0]
 80050a6:	2100      	movs	r1, #0
 80050a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050aa:	4798      	blx	r3
 80050ac:	4631      	mov	r1, r6
 80050ae:	4604      	mov	r4, r0
 80050b0:	f003 f8b0 	bl	8008214 <_ZN26CompetitionScreenPresenterC1ER21CompetitionScreenView>
    *currentTrans = newTransition;
 80050b4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80050b8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80050bc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80050c0:	b1dc      	cbz	r4, 80050fa <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x11e>
 80050c2:	1d23      	adds	r3, r4, #4
 80050c4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80050c8:	6833      	ldr	r3, [r6, #0]
 80050ca:	f8c4 a008 	str.w	sl, [r4, #8]
 80050ce:	4630      	mov	r0, r6
 80050d0:	68db      	ldr	r3, [r3, #12]
 80050d2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80050d4:	4798      	blx	r3
    newPresenter->activate();
 80050d6:	6823      	ldr	r3, [r4, #0]
 80050d8:	4620      	mov	r0, r4
 80050da:	681b      	ldr	r3, [r3, #0]
 80050dc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80050de:	4629      	mov	r1, r5
 80050e0:	4630      	mov	r0, r6
 80050e2:	f011 fd05 	bl	8016af0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80050e6:	682b      	ldr	r3, [r5, #0]
 80050e8:	4628      	mov	r0, r5
 80050ea:	691b      	ldr	r3, [r3, #16]
 80050ec:	4798      	blx	r3
    newTransition->invalidate();
 80050ee:	682b      	ldr	r3, [r5, #0]
 80050f0:	4628      	mov	r0, r5
 80050f2:	695b      	ldr	r3, [r3, #20]
}
 80050f4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80050f8:	4718      	bx	r3
    model->bind(newPresenter);
 80050fa:	4623      	mov	r3, r4
 80050fc:	e7e2      	b.n	80050c4 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0xe8>
 80050fe:	bf00      	nop
 8005100:	080285d8 	.word	0x080285d8
 8005104:	08028fc1 	.word	0x08028fc1
 8005108:	08028774 	.word	0x08028774
 800510c:	080287bb 	.word	0x080287bb
 8005110:	0802885e 	.word	0x0802885e
 8005114:	2000ef64 	.word	0x2000ef64
 8005118:	2000ef60 	.word	0x2000ef60

0800511c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv>:
{
 800511c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MissionSelectView, MissionSelectPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005120:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005124:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005126:	68a0      	ldr	r0, [r4, #8]
 8005128:	6803      	ldr	r3, [r0, #0]
 800512a:	6a1b      	ldr	r3, [r3, #32]
 800512c:	4798      	blx	r3
 800512e:	f240 438b 	movw	r3, #1163	; 0x48b
 8005132:	4298      	cmp	r0, r3
 8005134:	d805      	bhi.n	8005142 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x26>
 8005136:	4b42      	ldr	r3, [pc, #264]	; (8005240 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x124>)
 8005138:	4a42      	ldr	r2, [pc, #264]	; (8005244 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x128>)
 800513a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800513c:	4842      	ldr	r0, [pc, #264]	; (8005248 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x12c>)
 800513e:	f021 fa6d 	bl	802661c <__assert_func>
 8005142:	6860      	ldr	r0, [r4, #4]
 8005144:	6803      	ldr	r3, [r0, #0]
 8005146:	6a1b      	ldr	r3, [r3, #32]
 8005148:	4798      	blx	r3
 800514a:	280f      	cmp	r0, #15
 800514c:	d803      	bhi.n	8005156 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x3a>
 800514e:	4b3f      	ldr	r3, [pc, #252]	; (800524c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x130>)
 8005150:	4a3c      	ldr	r2, [pc, #240]	; (8005244 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x128>)
 8005152:	21a4      	movs	r1, #164	; 0xa4
 8005154:	e7f2      	b.n	800513c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005156:	68e0      	ldr	r0, [r4, #12]
 8005158:	6803      	ldr	r3, [r0, #0]
 800515a:	6a1b      	ldr	r3, [r3, #32]
 800515c:	4798      	blx	r3
 800515e:	283f      	cmp	r0, #63	; 0x3f
 8005160:	d803      	bhi.n	800516a <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x4e>
 8005162:	4b3b      	ldr	r3, [pc, #236]	; (8005250 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x134>)
 8005164:	4a37      	ldr	r2, [pc, #220]	; (8005244 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x128>)
 8005166:	21a5      	movs	r1, #165	; 0xa5
 8005168:	e7e8      	b.n	800513c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800516a:	f00f fe95 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800516e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005254 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x138>
 8005172:	3004      	adds	r0, #4
 8005174:	f00f fef6 	bl	8014f64 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005178:	f8d9 0000 	ldr.w	r0, [r9]
 800517c:	b110      	cbz	r0, 8005184 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800517e:	6803      	ldr	r3, [r0, #0]
 8005180:	68db      	ldr	r3, [r3, #12]
 8005182:	4798      	blx	r3
    if (*currentTrans)
 8005184:	f8d9 0000 	ldr.w	r0, [r9]
 8005188:	b110      	cbz	r0, 8005190 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800518a:	6803      	ldr	r3, [r0, #0]
 800518c:	681b      	ldr	r3, [r3, #0]
 800518e:	4798      	blx	r3
    if (*currentScreen)
 8005190:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005258 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x13c>
 8005194:	f8d8 0000 	ldr.w	r0, [r8]
 8005198:	b110      	cbz	r0, 80051a0 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800519a:	6803      	ldr	r3, [r0, #0]
 800519c:	695b      	ldr	r3, [r3, #20]
 800519e:	4798      	blx	r3
    if (*currentPresenter)
 80051a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051a4:	b110      	cbz	r0, 80051ac <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80051a6:	6803      	ldr	r3, [r0, #0]
 80051a8:	685b      	ldr	r3, [r3, #4]
 80051aa:	4798      	blx	r3
    if (*currentScreen)
 80051ac:	f8d8 0000 	ldr.w	r0, [r8]
 80051b0:	b110      	cbz	r0, 80051b8 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80051b2:	6803      	ldr	r3, [r0, #0]
 80051b4:	681b      	ldr	r3, [r3, #0]
 80051b6:	4798      	blx	r3
    if (*currentPresenter)
 80051b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051bc:	b110      	cbz	r0, 80051c4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80051be:	6803      	ldr	r3, [r0, #0]
 80051c0:	689b      	ldr	r3, [r3, #8]
 80051c2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80051c4:	68e0      	ldr	r0, [r4, #12]
 80051c6:	2100      	movs	r1, #0
 80051c8:	f7ff fe2e 	bl	8004e28 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 80051cc:	2114      	movs	r1, #20
 80051ce:	4605      	mov	r5, r0
 80051d0:	f7ff fe2e 	bl	8004e30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80051d4:	68a0      	ldr	r0, [r4, #8]
 80051d6:	6803      	ldr	r3, [r0, #0]
 80051d8:	2100      	movs	r1, #0
 80051da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051dc:	4798      	blx	r3
 80051de:	4606      	mov	r6, r0
 80051e0:	f003 fe30 	bl	8008e44 <_ZN17MissionSelectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80051e4:	6860      	ldr	r0, [r4, #4]
 80051e6:	6803      	ldr	r3, [r0, #0]
 80051e8:	2100      	movs	r1, #0
 80051ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051ec:	4798      	blx	r3
 80051ee:	4631      	mov	r1, r6
 80051f0:	4604      	mov	r4, r0
 80051f2:	f003 fdd5 	bl	8008da0 <_ZN22MissionSelectPresenterC1ER17MissionSelectView>
    *currentTrans = newTransition;
 80051f6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80051fa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80051fe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005202:	b1dc      	cbz	r4, 800523c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x120>
 8005204:	1d23      	adds	r3, r4, #4
 8005206:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800520a:	6833      	ldr	r3, [r6, #0]
 800520c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005210:	4630      	mov	r0, r6
 8005212:	68db      	ldr	r3, [r3, #12]
 8005214:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005216:	4798      	blx	r3
    newPresenter->activate();
 8005218:	6823      	ldr	r3, [r4, #0]
 800521a:	4620      	mov	r0, r4
 800521c:	681b      	ldr	r3, [r3, #0]
 800521e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005220:	4629      	mov	r1, r5
 8005222:	4630      	mov	r0, r6
 8005224:	f011 fc64 	bl	8016af0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005228:	682b      	ldr	r3, [r5, #0]
 800522a:	4628      	mov	r0, r5
 800522c:	691b      	ldr	r3, [r3, #16]
 800522e:	4798      	blx	r3
    newTransition->invalidate();
 8005230:	682b      	ldr	r3, [r5, #0]
 8005232:	4628      	mov	r0, r5
 8005234:	695b      	ldr	r3, [r3, #20]
}
 8005236:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800523a:	4718      	bx	r3
    model->bind(newPresenter);
 800523c:	4623      	mov	r3, r4
 800523e:	e7e2      	b.n	8005206 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0xea>
 8005240:	080285d8 	.word	0x080285d8
 8005244:	080290ec 	.word	0x080290ec
 8005248:	08028774 	.word	0x08028774
 800524c:	080287bb 	.word	0x080287bb
 8005250:	0802885e 	.word	0x0802885e
 8005254:	2000ef64 	.word	0x2000ef64
 8005258:	2000ef60 	.word	0x2000ef60

0800525c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv>:
{
 800525c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MainInfotaimentView, MainInfotaimentPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005260:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005264:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005266:	68a0      	ldr	r0, [r4, #8]
 8005268:	6803      	ldr	r3, [r0, #0]
 800526a:	6a1b      	ldr	r3, [r3, #32]
 800526c:	4798      	blx	r3
 800526e:	f244 7397 	movw	r3, #18327	; 0x4797
 8005272:	4298      	cmp	r0, r3
 8005274:	d805      	bhi.n	8005282 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x26>
 8005276:	4b41      	ldr	r3, [pc, #260]	; (800537c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x120>)
 8005278:	4a41      	ldr	r2, [pc, #260]	; (8005380 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x124>)
 800527a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800527c:	4841      	ldr	r0, [pc, #260]	; (8005384 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x128>)
 800527e:	f021 f9cd 	bl	802661c <__assert_func>
 8005282:	6860      	ldr	r0, [r4, #4]
 8005284:	6803      	ldr	r3, [r0, #0]
 8005286:	6a1b      	ldr	r3, [r3, #32]
 8005288:	4798      	blx	r3
 800528a:	280f      	cmp	r0, #15
 800528c:	d803      	bhi.n	8005296 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x3a>
 800528e:	4b3e      	ldr	r3, [pc, #248]	; (8005388 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x12c>)
 8005290:	4a3b      	ldr	r2, [pc, #236]	; (8005380 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x124>)
 8005292:	21a4      	movs	r1, #164	; 0xa4
 8005294:	e7f2      	b.n	800527c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005296:	68e0      	ldr	r0, [r4, #12]
 8005298:	6803      	ldr	r3, [r0, #0]
 800529a:	6a1b      	ldr	r3, [r3, #32]
 800529c:	4798      	blx	r3
 800529e:	283f      	cmp	r0, #63	; 0x3f
 80052a0:	d803      	bhi.n	80052aa <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x4e>
 80052a2:	4b3a      	ldr	r3, [pc, #232]	; (800538c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x130>)
 80052a4:	4a36      	ldr	r2, [pc, #216]	; (8005380 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x124>)
 80052a6:	21a5      	movs	r1, #165	; 0xa5
 80052a8:	e7e8      	b.n	800527c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80052aa:	f00f fdf5 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80052ae:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8005390 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x134>
 80052b2:	3004      	adds	r0, #4
 80052b4:	f00f fe56 	bl	8014f64 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80052b8:	f8d9 0000 	ldr.w	r0, [r9]
 80052bc:	b110      	cbz	r0, 80052c4 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80052be:	6803      	ldr	r3, [r0, #0]
 80052c0:	68db      	ldr	r3, [r3, #12]
 80052c2:	4798      	blx	r3
    if (*currentTrans)
 80052c4:	f8d9 0000 	ldr.w	r0, [r9]
 80052c8:	b110      	cbz	r0, 80052d0 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80052ca:	6803      	ldr	r3, [r0, #0]
 80052cc:	681b      	ldr	r3, [r3, #0]
 80052ce:	4798      	blx	r3
    if (*currentScreen)
 80052d0:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8005394 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x138>
 80052d4:	f8d8 0000 	ldr.w	r0, [r8]
 80052d8:	b110      	cbz	r0, 80052e0 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80052da:	6803      	ldr	r3, [r0, #0]
 80052dc:	695b      	ldr	r3, [r3, #20]
 80052de:	4798      	blx	r3
    if (*currentPresenter)
 80052e0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052e4:	b110      	cbz	r0, 80052ec <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80052e6:	6803      	ldr	r3, [r0, #0]
 80052e8:	685b      	ldr	r3, [r3, #4]
 80052ea:	4798      	blx	r3
    if (*currentScreen)
 80052ec:	f8d8 0000 	ldr.w	r0, [r8]
 80052f0:	b110      	cbz	r0, 80052f8 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80052f2:	6803      	ldr	r3, [r0, #0]
 80052f4:	681b      	ldr	r3, [r3, #0]
 80052f6:	4798      	blx	r3
    if (*currentPresenter)
 80052f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052fc:	b110      	cbz	r0, 8005304 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80052fe:	6803      	ldr	r3, [r0, #0]
 8005300:	689b      	ldr	r3, [r3, #8]
 8005302:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005304:	68e0      	ldr	r0, [r4, #12]
 8005306:	2100      	movs	r1, #0
 8005308:	f7ff fd8e 	bl	8004e28 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800530c:	2114      	movs	r1, #20
 800530e:	4605      	mov	r5, r0
 8005310:	f7ff fd8e 	bl	8004e30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005314:	2100      	movs	r1, #0
 8005316:	68a0      	ldr	r0, [r4, #8]
 8005318:	f7ff fa9c 	bl	8004854 <_ZN8touchgfx17AbstractPartition2atI19MainInfotaimentViewEERT_t>
 800531c:	4606      	mov	r6, r0
 800531e:	f003 faa9 	bl	8008874 <_ZN19MainInfotaimentViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005322:	6860      	ldr	r0, [r4, #4]
 8005324:	2100      	movs	r1, #0
 8005326:	f7ff fa98 	bl	800485a <_ZN8touchgfx17AbstractPartition2atI24MainInfotaimentPresenterEERT_t>
 800532a:	4631      	mov	r1, r6
 800532c:	4604      	mov	r4, r0
 800532e:	f003 fa7b 	bl	8008828 <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView>
    *currentTrans = newTransition;
 8005332:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005336:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800533a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800533e:	b1dc      	cbz	r4, 8005378 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x11c>
 8005340:	1d23      	adds	r3, r4, #4
 8005342:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005346:	6833      	ldr	r3, [r6, #0]
 8005348:	f8c4 a008 	str.w	sl, [r4, #8]
 800534c:	4630      	mov	r0, r6
 800534e:	68db      	ldr	r3, [r3, #12]
 8005350:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005352:	4798      	blx	r3
    newPresenter->activate();
 8005354:	6823      	ldr	r3, [r4, #0]
 8005356:	4620      	mov	r0, r4
 8005358:	681b      	ldr	r3, [r3, #0]
 800535a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800535c:	4629      	mov	r1, r5
 800535e:	4630      	mov	r0, r6
 8005360:	f011 fbc6 	bl	8016af0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005364:	682b      	ldr	r3, [r5, #0]
 8005366:	4628      	mov	r0, r5
 8005368:	691b      	ldr	r3, [r3, #16]
 800536a:	4798      	blx	r3
    newTransition->invalidate();
 800536c:	682b      	ldr	r3, [r5, #0]
 800536e:	4628      	mov	r0, r5
 8005370:	695b      	ldr	r3, [r3, #20]
}
 8005372:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005376:	4718      	bx	r3
    model->bind(newPresenter);
 8005378:	4623      	mov	r3, r4
 800537a:	e7e2      	b.n	8005342 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0xe6>
 800537c:	080285d8 	.word	0x080285d8
 8005380:	0802920f 	.word	0x0802920f
 8005384:	08028774 	.word	0x08028774
 8005388:	080287bb 	.word	0x080287bb
 800538c:	0802885e 	.word	0x0802885e
 8005390:	2000ef64 	.word	0x2000ef64
 8005394:	2000ef60 	.word	0x2000ef60

08005398 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005398:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800539a:	4770      	bx	lr

0800539c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 800539c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800539e:	4770      	bx	lr

080053a0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80053a0:	4770      	bx	lr

080053a2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80053a2:	888b      	ldrh	r3, [r1, #4]
 80053a4:	69c0      	ldr	r0, [r0, #28]
 80053a6:	680a      	ldr	r2, [r1, #0]
 80053a8:	0adb      	lsrs	r3, r3, #11
 80053aa:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80053ae:	4410      	add	r0, r2
 80053b0:	4770      	bx	lr

080053b2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80053b2:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80053b4:	b1c2      	cbz	r2, 80053e8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80053b6:	7b13      	ldrb	r3, [r2, #12]
 80053b8:	b1b3      	cbz	r3, 80053e8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80053ba:	7b54      	ldrb	r4, [r2, #13]
 80053bc:	7ad2      	ldrb	r2, [r2, #11]
 80053be:	0224      	lsls	r4, r4, #8
 80053c0:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80053c4:	4314      	orrs	r4, r2
 80053c6:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80053c8:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80053ca:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80053ce:	8813      	ldrh	r3, [r2, #0]
 80053d0:	428b      	cmp	r3, r1
 80053d2:	d102      	bne.n	80053da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80053d4:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80053d8:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80053da:	d805      	bhi.n	80053e8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80053dc:	3801      	subs	r0, #1
 80053de:	b280      	uxth	r0, r0
 80053e0:	3204      	adds	r2, #4
 80053e2:	2800      	cmp	r0, #0
 80053e4:	d1f3      	bne.n	80053ce <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80053e6:	e7f7      	b.n	80053d8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80053e8:	2000      	movs	r0, #0
 80053ea:	e7f5      	b.n	80053d8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080053ec <_ZN8touchgfx13GeneratedFontD0Ev>:
 80053ec:	b510      	push	{r4, lr}
 80053ee:	212c      	movs	r1, #44	; 0x2c
 80053f0:	4604      	mov	r4, r0
 80053f2:	f021 f8e5 	bl	80265c0 <_ZdlPvj>
 80053f6:	4620      	mov	r0, r4
 80053f8:	bd10      	pop	{r4, pc}
	...

080053fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80053fc:	b530      	push	{r4, r5, lr}
 80053fe:	b08b      	sub	sp, #44	; 0x2c
 8005400:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8005402:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005406:	9508      	str	r5, [sp, #32]
 8005408:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 800540c:	9507      	str	r5, [sp, #28]
 800540e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8005412:	9506      	str	r5, [sp, #24]
 8005414:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005418:	9505      	str	r5, [sp, #20]
 800541a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800541e:	9504      	str	r5, [sp, #16]
 8005420:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005424:	9503      	str	r5, [sp, #12]
 8005426:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800542a:	9502      	str	r5, [sp, #8]
 800542c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005430:	9501      	str	r5, [sp, #4]
 8005432:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8005436:	9500      	str	r5, [sp, #0]
 8005438:	f010 fec4 	bl	80161c4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800543c:	4b06      	ldr	r3, [pc, #24]	; (8005458 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800543e:	6023      	str	r3, [r4, #0]
 8005440:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005442:	61e3      	str	r3, [r4, #28]
 8005444:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005446:	6223      	str	r3, [r4, #32]
 8005448:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800544a:	6263      	str	r3, [r4, #36]	; 0x24
 800544c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800544e:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005450:	4620      	mov	r0, r4
 8005452:	b00b      	add	sp, #44	; 0x2c
 8005454:	bd30      	pop	{r4, r5, pc}
 8005456:	bf00      	nop
 8005458:	080294a4 	.word	0x080294a4

0800545c <_ZN23MainInfotaimentViewBase11setupScreenEv>:
}

void MainInfotaimentViewBase::setupScreen()
{

}
 800545c:	4770      	bx	lr

0800545e <_ZN8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800545e:	4770      	bx	lr

08005460 <_ZN8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005460:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005462:	68c2      	ldr	r2, [r0, #12]
 8005464:	6844      	ldr	r4, [r0, #4]
 8005466:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005468:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800546a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800546e:	07d2      	lsls	r2, r2, #31
 8005470:	bf48      	it	mi
 8005472:	5962      	ldrmi	r2, [r4, r5]
 8005474:	689b      	ldr	r3, [r3, #8]
    }
 8005476:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005478:	bf48      	it	mi
 800547a:	58d3      	ldrmi	r3, [r2, r3]
 800547c:	4718      	bx	r3

0800547e <_ZNK8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800547e:	6843      	ldr	r3, [r0, #4]
 8005480:	b12b      	cbz	r3, 800548e <_ZNK8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005482:	6883      	ldr	r3, [r0, #8]
 8005484:	b92b      	cbnz	r3, 8005492 <_ZNK8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005486:	68c0      	ldr	r0, [r0, #12]
 8005488:	f000 0001 	and.w	r0, r0, #1
 800548c:	4770      	bx	lr
 800548e:	4618      	mov	r0, r3
 8005490:	4770      	bx	lr
 8005492:	2001      	movs	r0, #1
    }
 8005494:	4770      	bx	lr

08005496 <_ZN8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005496:	b510      	push	{r4, lr}
 8005498:	2110      	movs	r1, #16
 800549a:	4604      	mov	r4, r0
 800549c:	f021 f890 	bl	80265c0 <_ZdlPvj>
 80054a0:	4620      	mov	r0, r4
 80054a2:	bd10      	pop	{r4, pc}

080054a4 <_ZN23MainInfotaimentViewBaseD1Ev>:
MainInfotaimentViewBase::~MainInfotaimentViewBase()
 80054a4:	b510      	push	{r4, lr}
 80054a6:	4b03      	ldr	r3, [pc, #12]	; (80054b4 <_ZN23MainInfotaimentViewBaseD1Ev+0x10>)
 80054a8:	6003      	str	r3, [r0, #0]
 80054aa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80054ac:	f00d fff2 	bl	8013494 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80054b0:	4620      	mov	r0, r4
 80054b2:	bd10      	pop	{r4, pc}
 80054b4:	0802951c 	.word	0x0802951c

080054b8 <_ZN23MainInfotaimentViewBaseD0Ev>:
MainInfotaimentViewBase::~MainInfotaimentViewBase()
 80054b8:	b507      	push	{r0, r1, r2, lr}
 80054ba:	4b07      	ldr	r3, [pc, #28]	; (80054d8 <_ZN23MainInfotaimentViewBaseD0Ev+0x20>)
 80054bc:	6003      	str	r3, [r0, #0]
 80054be:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80054c0:	f00d ffe8 	bl	8013494 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80054c4:	9801      	ldr	r0, [sp, #4]
 80054c6:	f244 7198 	movw	r1, #18328	; 0x4798
 80054ca:	f021 f879 	bl	80265c0 <_ZdlPvj>
 80054ce:	9801      	ldr	r0, [sp, #4]
 80054d0:	b003      	add	sp, #12
 80054d2:	f85d fb04 	ldr.w	pc, [sp], #4
 80054d6:	bf00      	nop
 80054d8:	0802951c 	.word	0x0802951c

080054dc <_ZN23MainInfotaimentViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainInfotaimentViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80054dc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btnNextPage)
 80054de:	f500 53aa 	add.w	r3, r0, #5440	; 0x1540
 80054e2:	330c      	adds	r3, #12
 80054e4:	4299      	cmp	r1, r3
{
 80054e6:	4604      	mov	r4, r0
 80054e8:	460d      	mov	r5, r1
    if (&src == &btnNextPage)
 80054ea:	d103      	bne.n	80054f4 <_ZN23MainInfotaimentViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
    virtual ~MainInfotaimentViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80054ec:	f00f fcd4 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //fromLiveDataToMissionSelect
        //When btnNextPage clicked change screen to MissionSelect
        //Go to MissionSelect with screen transition towards East
        application().gotoMissionSelectScreenSlideTransitionEast();
 80054f0:	f7ff f950 	bl	8004794 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionEastEv>
    }
    if (&src == &toDriver1)
 80054f4:	f504 53b5 	add.w	r3, r4, #5792	; 0x16a0
 80054f8:	3304      	adds	r3, #4
 80054fa:	429d      	cmp	r5, r3
 80054fc:	d103      	bne.n	8005506 <_ZN23MainInfotaimentViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
 80054fe:	f00f fccb 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //toDriverEasterEgg1
        //When toDriver1 clicked change screen to DriverScreen
        //Go to DriverScreen with no screen transition
        application().gotoDriverScreenScreenNoTransition();
 8005502:	f7ff f987 	bl	8004814 <_ZN23FrontendApplicationBase34gotoDriverScreenScreenNoTransitionEv>
    }
    if (&src == &toDriver2)
 8005506:	f504 54b6 	add.w	r4, r4, #5824	; 0x16c0
 800550a:	3418      	adds	r4, #24
 800550c:	42a5      	cmp	r5, r4
 800550e:	d105      	bne.n	800551c <_ZN23MainInfotaimentViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x40>
 8005510:	f00f fcc2 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
        //toDriverEasterEgg2
        //When toDriver2 clicked change screen to DriverScreen
        //Go to DriverScreen with no screen transition
        application().gotoDriverScreenScreenNoTransition();
    }
}
 8005514:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoDriverScreenScreenNoTransition();
 8005518:	f7ff b97c 	b.w	8004814 <_ZN23FrontendApplicationBase34gotoDriverScreenScreenNoTransitionEv>
}
 800551c:	bd38      	pop	{r3, r4, r5, pc}
	...

08005520 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8005520:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8005522:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8005524:	4604      	mov	r4, r0
 8005526:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8005528:	2100      	movs	r1, #0
 800552a:	f021 f903 	bl	8026734 <memset>
 800552e:	4620      	mov	r0, r4
 8005530:	f7fd fbe8 	bl	8002d04 <_ZN8touchgfx6WidgetC1Ev>
 8005534:	4b06      	ldr	r3, [pc, #24]	; (8005550 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8005536:	6023      	str	r3, [r4, #0]
 8005538:	882b      	ldrh	r3, [r5, #0]
 800553a:	84e3      	strh	r3, [r4, #38]	; 0x26
 800553c:	23ff      	movs	r3, #255	; 0xff
    {
        Image::setBitmap(bmp);
 800553e:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8005540:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8005544:	4629      	mov	r1, r5
 8005546:	f00c ffa7 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800554a:	4620      	mov	r0, r4
 800554c:	bd38      	pop	{r3, r4, r5, pc}
 800554e:	bf00      	nop
 8005550:	0802a4cc 	.word	0x0802a4cc

08005554 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005554:	0152      	lsls	r2, r2, #5
 8005556:	0149      	lsls	r1, r1, #5
 8005558:	f00b be6a 	b.w	8011230 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

0800555c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800555c:	0152      	lsls	r2, r2, #5
 800555e:	0149      	lsls	r1, r1, #5
 8005560:	f00b be71 	b.w	8011246 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08005564 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8005564:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8005566:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8005568:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 800556c:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8005570:	d004      	beq.n	800557c <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8005572:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8005576:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8005578:	f00b bd64 	b.w	8011044 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 800557c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005580:	4770      	bx	lr
	...

08005584 <_ZN23MainInfotaimentViewBaseC1Ev>:
MainInfotaimentViewBase::MainInfotaimentViewBase() :
 8005584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005588:	ed2d 8b10 	vpush	{d8-d15}
 800558c:	4683      	mov	fp, r0
 800558e:	b0c5      	sub	sp, #276	; 0x114
    buttonCallback(this, &MainInfotaimentViewBase::buttonCallbackHandler)
 8005590:	46da      	mov	sl, fp
        : presenter(0)
 8005592:	2500      	movs	r5, #0
 8005594:	f011 f900 	bl	8016798 <_ZN8touchgfx6ScreenC1Ev>
 8005598:	4be3      	ldr	r3, [pc, #908]	; (8005928 <_ZN23MainInfotaimentViewBaseC1Ev+0x3a4>)
 800559a:	f8cb 503c 	str.w	r5, [fp, #60]	; 0x3c
 800559e:	f84a 3b40 	str.w	r3, [sl], #64
 80055a2:	f10b 096c 	add.w	r9, fp, #108	; 0x6c
 80055a6:	4650      	mov	r0, sl
 80055a8:	f7fd fd14 	bl	8002fd4 <_ZN8touchgfx3BoxC1Ev>
 80055ac:	4648      	mov	r0, r9
 80055ae:	f7fd fd5b 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80055b2:	f10b 03b8 	add.w	r3, fp, #184	; 0xb8
 80055b6:	4618      	mov	r0, r3
 80055b8:	9308      	str	r3, [sp, #32]
 80055ba:	f7fd fd55 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80055be:	f50b 7382 	add.w	r3, fp, #260	; 0x104
 80055c2:	4618      	mov	r0, r3
 80055c4:	f50b 78a6 	add.w	r8, fp, #332	; 0x14c
 80055c8:	9309      	str	r3, [sp, #36]	; 0x24
 80055ca:	f7fd fd1f 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80055ce:	4640      	mov	r0, r8
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80055d0:	4cd6      	ldr	r4, [pc, #856]	; (800592c <_ZN23MainInfotaimentViewBaseC1Ev+0x3a8>)
 80055d2:	f00b fd17 	bl	8011004 <_ZN8touchgfx4LineC1Ev>
 80055d6:	f50b 73de 	add.w	r3, fp, #444	; 0x1bc
 80055da:	4618      	mov	r0, r3
 80055dc:	f104 0624 	add.w	r6, r4, #36	; 0x24
 80055e0:	9336      	str	r3, [sp, #216]	; 0xd8
 80055e2:	f7fc fb59 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80055e6:	f50b 73e8 	add.w	r3, fp, #464	; 0x1d0
 80055ea:	f8cb 41bc 	str.w	r4, [fp, #444]	; 0x1bc
 80055ee:	f8cb 61c4 	str.w	r6, [fp, #452]	; 0x1c4
 80055f2:	4618      	mov	r0, r3
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80055f4:	f8cb 51c8 	str.w	r5, [fp, #456]	; 0x1c8
 80055f8:	9319      	str	r3, [sp, #100]	; 0x64
 80055fa:	f7fd fd35 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80055fe:	f50b 7307 	add.w	r3, fp, #540	; 0x21c
 8005602:	4618      	mov	r0, r3
 8005604:	930a      	str	r3, [sp, #40]	; 0x28
 8005606:	f7fd fd01 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800560a:	f50b 7319 	add.w	r3, fp, #612	; 0x264
 800560e:	4618      	mov	r0, r3
 8005610:	932a      	str	r3, [sp, #168]	; 0xa8
 8005612:	f7fd fd1b 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005616:	f50b 7326 	add.w	r3, fp, #664	; 0x298
 800561a:	4618      	mov	r0, r3
 800561c:	932b      	str	r3, [sp, #172]	; 0xac
 800561e:	f7fd fd15 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005622:	f50b 7333 	add.w	r3, fp, #716	; 0x2cc
 8005626:	4618      	mov	r0, r3
 8005628:	ee08 3a10 	vmov	s16, r3
 800562c:	f009 fe84 	bl	800f338 <_ZN8touchgfx11BoxProgressC1Ev>
 8005630:	f50b 736c 	add.w	r3, fp, #944	; 0x3b0
 8005634:	4618      	mov	r0, r3
 8005636:	ee08 3a90 	vmov	s17, r3
 800563a:	f009 fe7d 	bl	800f338 <_ZN8touchgfx11BoxProgressC1Ev>
 800563e:	f20b 4394 	addw	r3, fp, #1172	; 0x494
 8005642:	4618      	mov	r0, r3
 8005644:	932c      	str	r3, [sp, #176]	; 0xb0
 8005646:	f7fd fd01 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800564a:	f50b 6399 	add.w	r3, fp, #1224	; 0x4c8
 800564e:	4618      	mov	r0, r3
 8005650:	ee09 3a10 	vmov	s18, r3
 8005654:	f009 fe70 	bl	800f338 <_ZN8touchgfx11BoxProgressC1Ev>
 8005658:	f20b 53ac 	addw	r3, fp, #1452	; 0x5ac
 800565c:	4618      	mov	r0, r3
 800565e:	932d      	str	r3, [sp, #180]	; 0xb4
 8005660:	f7fd fcf4 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005664:	f50b 63bc 	add.w	r3, fp, #1504	; 0x5e0
 8005668:	4618      	mov	r0, r3
 800566a:	ee0d 3a90 	vmov	s27, r3
 800566e:	f00b fcc9 	bl	8011004 <_ZN8touchgfx4LineC1Ev>
 8005672:	f50b 63ca 	add.w	r3, fp, #1616	; 0x650
 8005676:	4618      	mov	r0, r3
 8005678:	9337      	str	r3, [sp, #220]	; 0xdc
 800567a:	f7fc fb0d 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800567e:	f20b 6364 	addw	r3, fp, #1636	; 0x664
 8005682:	f8cb 4650 	str.w	r4, [fp, #1616]	; 0x650
 8005686:	f8cb 6658 	str.w	r6, [fp, #1624]	; 0x658
 800568a:	4618      	mov	r0, r3
 800568c:	f8cb 565c 	str.w	r5, [fp, #1628]	; 0x65c
 8005690:	ee0e 3a10 	vmov	s28, r3
 8005694:	f00b fcb6 	bl	8011004 <_ZN8touchgfx4LineC1Ev>
 8005698:	f20b 63d4 	addw	r3, fp, #1748	; 0x6d4
 800569c:	4618      	mov	r0, r3
 800569e:	9338      	str	r3, [sp, #224]	; 0xe0
 80056a0:	f7fc fafa 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80056a4:	f50b 63dd 	add.w	r3, fp, #1768	; 0x6e8
 80056a8:	f8cb 46d4 	str.w	r4, [fp, #1748]	; 0x6d4
 80056ac:	f8cb 66dc 	str.w	r6, [fp, #1756]	; 0x6dc
 80056b0:	4618      	mov	r0, r3
 80056b2:	f8cb 56e0 	str.w	r5, [fp, #1760]	; 0x6e0
 80056b6:	930b      	str	r3, [sp, #44]	; 0x2c
 80056b8:	f7fd fca8 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80056bc:	f50b 63e6 	add.w	r3, fp, #1840	; 0x730
 80056c0:	4618      	mov	r0, r3
 80056c2:	9322      	str	r3, [sp, #136]	; 0x88
 80056c4:	f7fd fcd0 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80056c8:	f20b 737c 	addw	r3, fp, #1916	; 0x77c
 80056cc:	4618      	mov	r0, r3
 80056ce:	931a      	str	r3, [sp, #104]	; 0x68
 80056d0:	f7fd fc9c 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80056d4:	f20b 73c4 	addw	r3, fp, #1988	; 0x7c4
 80056d8:	4618      	mov	r0, r3
 80056da:	ee09 3a90 	vmov	s19, r3
 80056de:	f009 fe2b 	bl	800f338 <_ZN8touchgfx11BoxProgressC1Ev>
 80056e2:	f60b 03a8 	addw	r3, fp, #2216	; 0x8a8
 80056e6:	4618      	mov	r0, r3
 80056e8:	ee0a 3a10 	vmov	s20, r3
 80056ec:	f009 fe24 	bl	800f338 <_ZN8touchgfx11BoxProgressC1Ev>
 80056f0:	f60b 138c 	addw	r3, fp, #2444	; 0x98c
 80056f4:	4618      	mov	r0, r3
 80056f6:	ee0a 3a90 	vmov	s21, r3
 80056fa:	f009 fe1d 	bl	800f338 <_ZN8touchgfx11BoxProgressC1Ev>
 80056fe:	f50b 6327 	add.w	r3, fp, #2672	; 0xa70
 8005702:	4618      	mov	r0, r3
 8005704:	932e      	str	r3, [sp, #184]	; 0xb8
 8005706:	f7fd fca1 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800570a:	f60b 23a4 	addw	r3, fp, #2724	; 0xaa4
 800570e:	4618      	mov	r0, r3
 8005710:	9323      	str	r3, [sp, #140]	; 0x8c
 8005712:	f7fd fca9 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005716:	f50b 632f 	add.w	r3, fp, #2800	; 0xaf0
 800571a:	4618      	mov	r0, r3
 800571c:	932f      	str	r3, [sp, #188]	; 0xbc
 800571e:	f7fd fc95 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005722:	f60b 3324 	addw	r3, fp, #2852	; 0xb24
 8005726:	4618      	mov	r0, r3
 8005728:	9330      	str	r3, [sp, #192]	; 0xc0
 800572a:	f7fd fc8f 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800572e:	f60b 3358 	addw	r3, fp, #2904	; 0xb58
 8005732:	4618      	mov	r0, r3
 8005734:	9324      	str	r3, [sp, #144]	; 0x90
 8005736:	f7fd fc97 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800573a:	f60b 33a4 	addw	r3, fp, #2980	; 0xba4
 800573e:	4618      	mov	r0, r3
 8005740:	9325      	str	r3, [sp, #148]	; 0x94
 8005742:	f7fd fc91 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005746:	f50b 633f 	add.w	r3, fp, #3056	; 0xbf0
 800574a:	4618      	mov	r0, r3
 800574c:	9331      	str	r3, [sp, #196]	; 0xc4
 800574e:	f7fd fc7d 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005752:	f60b 4324 	addw	r3, fp, #3108	; 0xc24
 8005756:	4618      	mov	r0, r3
 8005758:	930c      	str	r3, [sp, #48]	; 0x30
 800575a:	f7fd fc57 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800575e:	f60b 436c 	addw	r3, fp, #3180	; 0xc6c
 8005762:	4618      	mov	r0, r3
 8005764:	9332      	str	r3, [sp, #200]	; 0xc8
 8005766:	f7fd fc71 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800576a:	f50b 634a 	add.w	r3, fp, #3232	; 0xca0
 800576e:	4618      	mov	r0, r3
 8005770:	930d      	str	r3, [sp, #52]	; 0x34
 8005772:	f7fd fc4b 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8005776:	f60b 43e8 	addw	r3, fp, #3304	; 0xce8
 800577a:	af41      	add	r7, sp, #260	; 0x104
 800577c:	931b      	str	r3, [sp, #108]	; 0x6c
 800577e:	4639      	mov	r1, r7
 8005780:	f04f 33ff 	mov.w	r3, #4294967295
 8005784:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8005786:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 800578a:	f00b ff15 	bl	80115b8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800578e:	f60b 5314 	addw	r3, fp, #3348	; 0xd14
 8005792:	4618      	mov	r0, r3
 8005794:	ee0e 3a90 	vmov	s29, r3
 8005798:	f7fd fc38 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800579c:	f60b 535c 	addw	r3, fp, #3420	; 0xd5c
 80057a0:	4618      	mov	r0, r3
 80057a2:	ee0f 3a10 	vmov	s30, r3
 80057a6:	f00b fc2d 	bl	8011004 <_ZN8touchgfx4LineC1Ev>
 80057aa:	f60b 53cc 	addw	r3, fp, #3532	; 0xdcc
 80057ae:	4618      	mov	r0, r3
 80057b0:	9339      	str	r3, [sp, #228]	; 0xe4
 80057b2:	f7fc fa71 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80057b6:	f50b 635e 	add.w	r3, fp, #3552	; 0xde0
 80057ba:	f8cb 4dcc 	str.w	r4, [fp, #3532]	; 0xdcc
 80057be:	f8cb 6dd4 	str.w	r6, [fp, #3540]	; 0xdd4
 80057c2:	4618      	mov	r0, r3
 80057c4:	f8cb 5dd8 	str.w	r5, [fp, #3544]	; 0xdd8
 80057c8:	ee0f 3a90 	vmov	s31, r3
 80057cc:	f00b fc1a 	bl	8011004 <_ZN8touchgfx4LineC1Ev>
 80057d0:	f50b 6365 	add.w	r3, fp, #3664	; 0xe50
 80057d4:	4618      	mov	r0, r3
 80057d6:	933a      	str	r3, [sp, #232]	; 0xe8
 80057d8:	f7fc fa5e 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80057dc:	f60b 6364 	addw	r3, fp, #3684	; 0xe64
 80057e0:	f8cb 4e50 	str.w	r4, [fp, #3664]	; 0xe50
 80057e4:	f8cb 6e58 	str.w	r6, [fp, #3672]	; 0xe58
 80057e8:	4618      	mov	r0, r3
 80057ea:	f8cb 5e5c 	str.w	r5, [fp, #3676]	; 0xe5c
 80057ee:	9333      	str	r3, [sp, #204]	; 0xcc
 80057f0:	f7fd fc2c 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 80057f4:	f60b 6398 	addw	r3, fp, #3736	; 0xe98
 80057f8:	4618      	mov	r0, r3
 80057fa:	9302      	str	r3, [sp, #8]
 80057fc:	f7fd fc06 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8005800:	f50b 636e 	add.w	r3, fp, #3808	; 0xee0
 8005804:	4618      	mov	r0, r3
 8005806:	9334      	str	r3, [sp, #208]	; 0xd0
 8005808:	f7fd fc20 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800580c:	f60b 7314 	addw	r3, fp, #3860	; 0xf14
 8005810:	4618      	mov	r0, r3
 8005812:	9303      	str	r3, [sp, #12]
 8005814:	f00b fbf6 	bl	8011004 <_ZN8touchgfx4LineC1Ev>
 8005818:	f60b 7384 	addw	r3, fp, #3972	; 0xf84
 800581c:	4618      	mov	r0, r3
 800581e:	933b      	str	r3, [sp, #236]	; 0xec
 8005820:	f7fc fa3a 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005824:	f60b 7398 	addw	r3, fp, #3992	; 0xf98
 8005828:	f8cb 4f84 	str.w	r4, [fp, #3972]	; 0xf84
 800582c:	f8cb 6f8c 	str.w	r6, [fp, #3980]	; 0xf8c
 8005830:	4618      	mov	r0, r3
 8005832:	f8cb 5f90 	str.w	r5, [fp, #3984]	; 0xf90
 8005836:	9335      	str	r3, [sp, #212]	; 0xd4
 8005838:	f7fd fc08 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800583c:	f60b 73cc 	addw	r3, fp, #4044	; 0xfcc
 8005840:	4618      	mov	r0, r3
 8005842:	9304      	str	r3, [sp, #16]
 8005844:	f00b fbde 	bl	8011004 <_ZN8touchgfx4LineC1Ev>
 8005848:	f50b 5381 	add.w	r3, fp, #4128	; 0x1020
 800584c:	331c      	adds	r3, #28
 800584e:	4618      	mov	r0, r3
 8005850:	9326      	str	r3, [sp, #152]	; 0x98
 8005852:	f7fc fa21 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005856:	f50b 5380 	add.w	r3, fp, #4096	; 0x1000
 800585a:	63dc      	str	r4, [r3, #60]	; 0x3c
 800585c:	645e      	str	r6, [r3, #68]	; 0x44
 800585e:	649d      	str	r5, [r3, #72]	; 0x48
 8005860:	f50b 5382 	add.w	r3, fp, #4160	; 0x1040
 8005864:	3310      	adds	r3, #16
 8005866:	4618      	mov	r0, r3
 8005868:	931c      	str	r3, [sp, #112]	; 0x70
 800586a:	f7fd fbef 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800586e:	f50b 5384 	add.w	r3, fp, #4224	; 0x1080
 8005872:	3304      	adds	r3, #4
 8005874:	4618      	mov	r0, r3
 8005876:	ee0b 3a10 	vmov	s22, r3
 800587a:	f7fd fbc7 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800587e:	f50b 5386 	add.w	r3, fp, #4288	; 0x10c0
 8005882:	330c      	adds	r3, #12
 8005884:	4618      	mov	r0, r3
 8005886:	ee0b 3a90 	vmov	s23, r3
 800588a:	f7fd fbbf 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800588e:	f50b 5388 	add.w	r3, fp, #4352	; 0x1100
 8005892:	3314      	adds	r3, #20
 8005894:	4618      	mov	r0, r3
 8005896:	9305      	str	r3, [sp, #20]
 8005898:	f7fd fbe6 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800589c:	f50b 538b 	add.w	r3, fp, #4448	; 0x1160
 80058a0:	4618      	mov	r0, r3
 80058a2:	931d      	str	r3, [sp, #116]	; 0x74
 80058a4:	f7fd fbe0 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80058a8:	f50b 538d 	add.w	r3, fp, #4512	; 0x11a0
 80058ac:	330c      	adds	r3, #12
 80058ae:	4618      	mov	r0, r3
 80058b0:	9306      	str	r3, [sp, #24]
 80058b2:	f7fd fbd9 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80058b6:	f50b 538f 	add.w	r3, fp, #4576	; 0x11e0
 80058ba:	3318      	adds	r3, #24
 80058bc:	4618      	mov	r0, r3
 80058be:	9307      	str	r3, [sp, #28]
 80058c0:	f7fd fbd2 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80058c4:	f50b 5392 	add.w	r3, fp, #4672	; 0x1240
 80058c8:	3304      	adds	r3, #4
 80058ca:	4618      	mov	r0, r3
 80058cc:	931e      	str	r3, [sp, #120]	; 0x78
 80058ce:	f7fd fbbd 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 80058d2:	f50b 5393 	add.w	r3, fp, #4704	; 0x1260
 80058d6:	3318      	adds	r3, #24
 80058d8:	4618      	mov	r0, r3
 80058da:	930e      	str	r3, [sp, #56]	; 0x38
 80058dc:	f7fd fbc4 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80058e0:	f50b 5396 	add.w	r3, fp, #4800	; 0x12c0
 80058e4:	3304      	adds	r3, #4
 80058e6:	f04f 34ff 	mov.w	r4, #4294967295
 80058ea:	4639      	mov	r1, r7
 80058ec:	4618      	mov	r0, r3
 80058ee:	930f      	str	r3, [sp, #60]	; 0x3c
 80058f0:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 80058f4:	f7ff fe14 	bl	8005520 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80058f8:	f50b 5397 	add.w	r3, fp, #4832	; 0x12e0
 80058fc:	3310      	adds	r3, #16
 80058fe:	4618      	mov	r0, r3
 8005900:	931f      	str	r3, [sp, #124]	; 0x7c
 8005902:	f7fd fba3 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005906:	f50b 5399 	add.w	r3, fp, #4896	; 0x1320
 800590a:	3304      	adds	r3, #4
 800590c:	4618      	mov	r0, r3
 800590e:	9310      	str	r3, [sp, #64]	; 0x40
 8005910:	f7fd fbaa 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005914:	f50b 539b 	add.w	r3, fp, #4960	; 0x1360
 8005918:	3310      	adds	r3, #16
 800591a:	4639      	mov	r1, r7
 800591c:	4618      	mov	r0, r3
 800591e:	9311      	str	r3, [sp, #68]	; 0x44
 8005920:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 8005924:	e004      	b.n	8005930 <_ZN23MainInfotaimentViewBaseC1Ev+0x3ac>
 8005926:	bf00      	nop
 8005928:	0802951c 	.word	0x0802951c
 800592c:	08029fd8 	.word	0x08029fd8
 8005930:	f7ff fdf6 	bl	8005520 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005934:	f50b 539c 	add.w	r3, fp, #4992	; 0x1380
 8005938:	331c      	adds	r3, #28
 800593a:	4639      	mov	r1, r7
 800593c:	4618      	mov	r0, r3
 800593e:	9312      	str	r3, [sp, #72]	; 0x48
 8005940:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 8005944:	f7ff fdec 	bl	8005520 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005948:	f50b 539e 	add.w	r3, fp, #5056	; 0x13c0
 800594c:	3308      	adds	r3, #8
 800594e:	4639      	mov	r1, r7
 8005950:	4618      	mov	r0, r3
 8005952:	9313      	str	r3, [sp, #76]	; 0x4c
 8005954:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 8005958:	f7ff fde2 	bl	8005520 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800595c:	f50b 539f 	add.w	r3, fp, #5088	; 0x13e0
 8005960:	3314      	adds	r3, #20
 8005962:	4618      	mov	r0, r3
 8005964:	9320      	str	r3, [sp, #128]	; 0x80
 8005966:	f7fd fb71 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 800596a:	f50b 53a1 	add.w	r3, fp, #5152	; 0x1420
 800596e:	3308      	adds	r3, #8
 8005970:	4618      	mov	r0, r3
 8005972:	9314      	str	r3, [sp, #80]	; 0x50
 8005974:	f7fd fb78 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005978:	f50b 53a3 	add.w	r3, fp, #5216	; 0x1460
 800597c:	3314      	adds	r3, #20
 800597e:	4639      	mov	r1, r7
 8005980:	4618      	mov	r0, r3
 8005982:	9315      	str	r3, [sp, #84]	; 0x54
 8005984:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 8005988:	f7ff fdca 	bl	8005520 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800598c:	f50b 53a5 	add.w	r3, fp, #5280	; 0x14a0
 8005990:	4639      	mov	r1, r7
 8005992:	4618      	mov	r0, r3
 8005994:	9327      	str	r3, [sp, #156]	; 0x9c
 8005996:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 800599a:	f7ff fdc1 	bl	8005520 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800599e:	f50b 53a6 	add.w	r3, fp, #5312	; 0x14c0
 80059a2:	330c      	adds	r3, #12
 80059a4:	4618      	mov	r0, r3
 80059a6:	9321      	str	r3, [sp, #132]	; 0x84
 80059a8:	f7fd fb50 	bl	800304c <_ZN8touchgfx13BoxWithBorderC1Ev>
 80059ac:	f50b 53a8 	add.w	r3, fp, #5376	; 0x1500
 80059b0:	4618      	mov	r0, r3
 80059b2:	9328      	str	r3, [sp, #160]	; 0xa0
 80059b4:	f7fd fb58 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80059b8:	f50b 53aa 	add.w	r3, fp, #5440	; 0x1540
 80059bc:	330c      	adds	r3, #12
 80059be:	4618      	mov	r0, r3
 80059c0:	9316      	str	r3, [sp, #88]	; 0x58
 80059c2:	f7fd f9b1 	bl	8002d28 <_ZN8touchgfx6ButtonC1Ev>
 80059c6:	f50b 53ac 	add.w	r3, fp, #5504	; 0x1580
 80059ca:	4618      	mov	r0, r3
 80059cc:	9329      	str	r3, [sp, #164]	; 0xa4
 80059ce:	f7fd fb4b 	bl	8003068 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80059d2:	f50b 53ae 	add.w	r3, fp, #5568	; 0x15c0
 80059d6:	330c      	adds	r3, #12
 80059d8:	4618      	mov	r0, r3
 80059da:	ee0c 3a10 	vmov	s24, r3
 80059de:	f7fd fb15 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80059e2:	f50b 53b0 	add.w	r3, fp, #5632	; 0x1600
 80059e6:	3314      	adds	r3, #20
 80059e8:	4618      	mov	r0, r3
 80059ea:	ee0c 3a90 	vmov	s25, r3
 80059ee:	f7fd fb0d 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80059f2:	f50b 53b2 	add.w	r3, fp, #5696	; 0x1640
 80059f6:	331c      	adds	r3, #28
 80059f8:	4618      	mov	r0, r3
 80059fa:	ee0d 3a10 	vmov	s26, r3
 80059fe:	f7fd fb05 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8005a02:	f50b 53b5 	add.w	r3, fp, #5792	; 0x16a0
 8005a06:	3304      	adds	r3, #4
 8005a08:	4618      	mov	r0, r3
 8005a0a:	9317      	str	r3, [sp, #92]	; 0x5c
 8005a0c:	f7fd f98c 	bl	8002d28 <_ZN8touchgfx6ButtonC1Ev>
 8005a10:	f50b 53b6 	add.w	r3, fp, #5824	; 0x16c0
 8005a14:	3318      	adds	r3, #24
 8005a16:	4618      	mov	r0, r3
 8005a18:	9318      	str	r3, [sp, #96]	; 0x60
 8005a1a:	f7fd f985 	bl	8002d28 <_ZN8touchgfx6ButtonC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005a1e:	f50b 4380 	add.w	r3, fp, #16384	; 0x4000
 8005a22:	4a29      	ldr	r2, [pc, #164]	; (8005ac8 <_ZN23MainInfotaimentViewBaseC1Ev+0x544>)
 8005a24:	f8c3 2788 	str.w	r2, [r3, #1928]	; 0x788
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005a28:	f50b 50c5 	add.w	r0, fp, #6304	; 0x18a0
 8005a2c:	4a27      	ldr	r2, [pc, #156]	; (8005acc <_ZN23MainInfotaimentViewBaseC1Ev+0x548>)
 8005a2e:	f8c3 2790 	str.w	r2, [r3, #1936]	; 0x790
 8005a32:	f8c3 b78c 	str.w	fp, [r3, #1932]	; 0x78c
 8005a36:	f8c3 5794 	str.w	r5, [r3, #1940]	; 0x794
 8005a3a:	f642 61e0 	movw	r1, #12000	; 0x2ee0
 8005a3e:	3008      	adds	r0, #8
 8005a40:	f00d fd1e 	bl	8013480 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 800, 480);
 8005a44:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8005a48:	462a      	mov	r2, r5
 8005a4a:	4650      	mov	r0, sl
 8005a4c:	9300      	str	r3, [sp, #0]
 8005a4e:	4629      	mov	r1, r5
 8005a50:	f44f 7348 	mov.w	r3, #800	; 0x320
 8005a54:	f7fd f943 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a58:	f10b 0404 	add.w	r4, fp, #4
 8005a5c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005a60:	f8cb 3068 	str.w	r3, [fp, #104]	; 0x68
 8005a64:	4651      	mov	r1, sl
 8005a66:	4620      	mov	r0, r4
 8005a68:	f009 fe7a 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtGear.setXY(363, 40);
 8005a6c:	2228      	movs	r2, #40	; 0x28
 8005a6e:	f240 116b 	movw	r1, #363	; 0x16b
 8005a72:	4648      	mov	r0, r9
 8005a74:	f7fd f926 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005a78:	4b15      	ldr	r3, [pc, #84]	; (8005ad0 <_ZN23MainInfotaimentViewBaseC1Ev+0x54c>)
 8005a7a:	f8cb 309c 	str.w	r3, [fp, #156]	; 0x9c
        boundingArea = calculateBoundingArea();
 8005a7e:	f8db 306c 	ldr.w	r3, [fp, #108]	; 0x6c
        linespace = space;
 8005a82:	f8ab 50a0 	strh.w	r5, [fp, #160]	; 0xa0
        boundingArea = calculateBoundingArea();
 8005a86:	ae3c      	add	r6, sp, #240	; 0xf0
 8005a88:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005a8c:	4649      	mov	r1, r9
 8005a8e:	4630      	mov	r0, r6
 8005a90:	4798      	blx	r3
 8005a92:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005a96:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8005a9a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005a9e:	4b0d      	ldr	r3, [pc, #52]	; (8005ad4 <_ZN23MainInfotaimentViewBaseC1Ev+0x550>)
 8005aa0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B1YM).getText());
 8005aa2:	f50b 5ab8 	add.w	sl, fp, #5888	; 0x1700
 8005aa6:	f10a 0a0c 	add.w	sl, sl, #12
 8005aaa:	b92b      	cbnz	r3, 8005ab8 <_ZN23MainInfotaimentViewBaseC1Ev+0x534>
 8005aac:	4b0a      	ldr	r3, [pc, #40]	; (8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x554>)
 8005aae:	4a0b      	ldr	r2, [pc, #44]	; (8005adc <_ZN23MainInfotaimentViewBaseC1Ev+0x558>)
 8005ab0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005ab2:	480b      	ldr	r0, [pc, #44]	; (8005ae0 <_ZN23MainInfotaimentViewBaseC1Ev+0x55c>)
 8005ab4:	f020 fdb2 	bl	802661c <__assert_func>
 8005ab8:	4b0a      	ldr	r3, [pc, #40]	; (8005ae4 <_ZN23MainInfotaimentViewBaseC1Ev+0x560>)
 8005aba:	881b      	ldrh	r3, [r3, #0]
 8005abc:	2b7f      	cmp	r3, #127	; 0x7f
 8005abe:	d815      	bhi.n	8005aec <_ZN23MainInfotaimentViewBaseC1Ev+0x568>
 8005ac0:	4b09      	ldr	r3, [pc, #36]	; (8005ae8 <_ZN23MainInfotaimentViewBaseC1Ev+0x564>)
 8005ac2:	4a06      	ldr	r2, [pc, #24]	; (8005adc <_ZN23MainInfotaimentViewBaseC1Ev+0x558>)
 8005ac4:	2161      	movs	r1, #97	; 0x61
 8005ac6:	e7f4      	b.n	8005ab2 <_ZN23MainInfotaimentViewBaseC1Ev+0x52e>
 8005ac8:	08029504 	.word	0x08029504
 8005acc:	080054dd 	.word	0x080054dd
 8005ad0:	ffffea00 	.word	0xffffea00
 8005ad4:	2000ef74 	.word	0x2000ef74
 8005ad8:	080282f8 	.word	0x080282f8
 8005adc:	080283fa 	.word	0x080283fa
 8005ae0:	08028375 	.word	0x08028375
 8005ae4:	2000ef78 	.word	0x2000ef78
 8005ae8:	080283bc 	.word	0x080283bc
        return texts->getText(typedTextId);
 8005aec:	4bdc      	ldr	r3, [pc, #880]	; (8005e60 <_ZN23MainInfotaimentViewBaseC1Ev+0x8dc>)
 8005aee:	217f      	movs	r1, #127	; 0x7f
 8005af0:	6818      	ldr	r0, [r3, #0]
 8005af2:	f002 fb2b 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8005af6:	4adb      	ldr	r2, [pc, #876]	; (8005e64 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e0>)
 8005af8:	4603      	mov	r3, r0
 8005afa:	2102      	movs	r1, #2
 8005afc:	4650      	mov	r0, sl
 8005afe:	f012 fb3b 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtGear.resizeToCurrentText();
 8005b02:	4648      	mov	r0, r9
 8005b04:	f8cb a0b4 	str.w	sl, [fp, #180]	; 0xb4
 8005b08:	f00c fa7a 	bl	8012000 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005b0c:	4bd6      	ldr	r3, [pc, #856]	; (8005e68 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
 8005b0e:	9341      	str	r3, [sp, #260]	; 0x104
 8005b10:	f04f 0280 	mov.w	r2, #128	; 0x80
    txtGear.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8VH0));
 8005b14:	4648      	mov	r0, r9
 8005b16:	4639      	mov	r1, r7
 8005b18:	f8ad 2108 	strh.w	r2, [sp, #264]	; 0x108
 8005b1c:	f00c fa90 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b20:	4649      	mov	r1, r9
 8005b22:	4620      	mov	r0, r4
 8005b24:	f009 fe1c 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtSpeed.setXY(670, 71);
 8005b28:	9808      	ldr	r0, [sp, #32]
 8005b2a:	2247      	movs	r2, #71	; 0x47
 8005b2c:	f240 219e 	movw	r1, #670	; 0x29e
 8005b30:	f7fd f8c8 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 8005b34:	f8db 30b8 	ldr.w	r3, [fp, #184]	; 0xb8
        color = newColor;
 8005b38:	4acc      	ldr	r2, [pc, #816]	; (8005e6c <_ZN23MainInfotaimentViewBaseC1Ev+0x8e8>)
        boundingArea = calculateBoundingArea();
 8005b3a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005b3e:	9908      	ldr	r1, [sp, #32]
        color = newColor;
 8005b40:	f8cb 20e8 	str.w	r2, [fp, #232]	; 0xe8
        boundingArea = calculateBoundingArea();
 8005b44:	4630      	mov	r0, r6
        linespace = space;
 8005b46:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8005b4a:	4798      	blx	r3
 8005b4c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005b50:	f10b 03f4 	add.w	r3, fp, #244	; 0xf4
 8005b54:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005b58:	49c5      	ldr	r1, [pc, #788]	; (8005e70 <_ZN23MainInfotaimentViewBaseC1Ev+0x8ec>)
 8005b5a:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KTQV).getText());
 8005b5c:	f50b 59b8 	add.w	r9, fp, #5888	; 0x1700
 8005b60:	f109 0910 	add.w	r9, r9, #16
 8005b64:	2b00      	cmp	r3, #0
 8005b66:	d0a1      	beq.n	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005b68:	49c2      	ldr	r1, [pc, #776]	; (8005e74 <_ZN23MainInfotaimentViewBaseC1Ev+0x8f0>)
 8005b6a:	880b      	ldrh	r3, [r1, #0]
 8005b6c:	2b7d      	cmp	r3, #125	; 0x7d
 8005b6e:	d9a7      	bls.n	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8005b70:	48bb      	ldr	r0, [pc, #748]	; (8005e60 <_ZN23MainInfotaimentViewBaseC1Ev+0x8dc>)
 8005b72:	217d      	movs	r1, #125	; 0x7d
 8005b74:	6800      	ldr	r0, [r0, #0]
 8005b76:	f002 fae9 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8005b7a:	4aba      	ldr	r2, [pc, #744]	; (8005e64 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e0>)
 8005b7c:	4603      	mov	r3, r0
 8005b7e:	2104      	movs	r1, #4
 8005b80:	4648      	mov	r0, r9
 8005b82:	f012 faf9 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtSpeed.resizeToCurrentText();
 8005b86:	9808      	ldr	r0, [sp, #32]
 8005b88:	f8cb 9100 	str.w	r9, [fp, #256]	; 0x100
 8005b8c:	f00c fa38 	bl	8012000 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005b90:	4bb5      	ldr	r3, [pc, #724]	; (8005e68 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
    txtSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UXLR));
 8005b92:	9808      	ldr	r0, [sp, #32]
 8005b94:	9341      	str	r3, [sp, #260]	; 0x104
 8005b96:	4639      	mov	r1, r7
 8005b98:	237e      	movs	r3, #126	; 0x7e
 8005b9a:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8005b9e:	f00c fa4f 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ba2:	9908      	ldr	r1, [sp, #32]
 8005ba4:	4620      	mov	r0, r4
 8005ba6:	f009 fddb 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005baa:	f04f 3aff 	mov.w	sl, #4294967295
    labelSpeed.setXY(767, 78);
 8005bae:	224e      	movs	r2, #78	; 0x4e
 8005bb0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005bb2:	f240 21ff 	movw	r1, #767	; 0x2ff
 8005bb6:	f7fd f885 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005bba:	9909      	ldr	r1, [sp, #36]	; 0x24
        color = newColor;
 8005bbc:	f8cb a134 	str.w	sl, [fp, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8005bc0:	4630      	mov	r0, r6
        linespace = space;
 8005bc2:	f8ab 5138 	strh.w	r5, [fp, #312]	; 0x138
        boundingArea = calculateBoundingArea();
 8005bc6:	f00b ffa1 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005bca:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        rotation = textRotation;
 8005bce:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 8005bd2:	f50b 79a0 	add.w	r9, fp, #320	; 0x140
 8005bd6:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 8005bda:	f88b c13c 	strb.w	ip, [fp, #316]	; 0x13c
        boundingArea = calculateBoundingArea();
 8005bde:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005be0:	4630      	mov	r0, r6
 8005be2:	f00b ff93 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005be6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005bea:	4b9f      	ldr	r3, [pc, #636]	; (8005e68 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
 8005bec:	9341      	str	r3, [sp, #260]	; 0x104
 8005bee:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 8005bf2:	237c      	movs	r3, #124	; 0x7c
    labelSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FQ22));
 8005bf4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005bf6:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8005bfa:	4639      	mov	r1, r7
 8005bfc:	f00c fa20 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c00:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005c02:	4620      	mov	r0, r4
 8005c04:	f009 fdac 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(752, 75, 15, 42);
 8005c08:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8005c0c:	f8cd e000 	str.w	lr, [sp]
 8005c10:	230f      	movs	r3, #15
 8005c12:	4640      	mov	r0, r8
 8005c14:	224b      	movs	r2, #75	; 0x4b
 8005c16:	f44f 713c 	mov.w	r1, #752	; 0x2f0
 8005c1a:	f7fd f860 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8005c1e:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8005c20:	f8cb 2174 	str.w	r2, [fp, #372]	; 0x174
    line1.setStart(0, 0);
 8005c24:	4640      	mov	r0, r8
 8005c26:	462a      	mov	r2, r5
 8005c28:	4629      	mov	r1, r5
 8005c2a:	f8cb a1c8 	str.w	sl, [fp, #456]	; 0x1c8
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005c2e:	f8ab a1cc 	strh.w	sl, [fp, #460]	; 0x1cc
 8005c32:	f7ff fc8f 	bl	8005554 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(0, 45);
 8005c36:	222d      	movs	r2, #45	; 0x2d
 8005c38:	4640      	mov	r0, r8
 8005c3a:	4629      	mov	r1, r5
 8005c3c:	f7ff fc8e 	bl	800555c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(10);
 8005c40:	4640      	mov	r0, r8
 8005c42:	210a      	movs	r1, #10
 8005c44:	f7ff fc8e 	bl	8005564 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8005c48:	4640      	mov	r0, r8
 8005c4a:	4629      	mov	r1, r5
 8005c4c:	f00b fb06 	bl	801125c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005c50:	4641      	mov	r1, r8
 8005c52:	4620      	mov	r0, r4
 8005c54:	f009 fd84 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRpm.setPosition(12, 71, 128, 49);
 8005c58:	f04f 0e31 	mov.w	lr, #49	; 0x31
 8005c5c:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005c5e:	f8cd e000 	str.w	lr, [sp]
 8005c62:	2380      	movs	r3, #128	; 0x80
 8005c64:	2247      	movs	r2, #71	; 0x47
 8005c66:	210c      	movs	r1, #12
 8005c68:	f7fd f839 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8005c6c:	f8db 31d0 	ldr.w	r3, [fp, #464]	; 0x1d0
        color = newColor;
 8005c70:	4a7e      	ldr	r2, [pc, #504]	; (8005e6c <_ZN23MainInfotaimentViewBaseC1Ev+0x8e8>)
        boundingArea = calculateBoundingArea();
 8005c72:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005c76:	9919      	ldr	r1, [sp, #100]	; 0x64
        color = newColor;
 8005c78:	f8cb 2200 	str.w	r2, [fp, #512]	; 0x200
        boundingArea = calculateBoundingArea();
 8005c7c:	4630      	mov	r0, r6
        linespace = space;
 8005c7e:	f8ab 5204 	strh.w	r5, [fp, #516]	; 0x204
        boundingArea = calculateBoundingArea();
 8005c82:	4798      	blx	r3
 8005c84:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005c88:	f50b 7303 	add.w	r3, fp, #524	; 0x20c
 8005c8c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005c90:	4977      	ldr	r1, [pc, #476]	; (8005e70 <_ZN23MainInfotaimentViewBaseC1Ev+0x8ec>)
 8005c92:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Y39W).getText());
 8005c94:	f50b 58b8 	add.w	r8, fp, #5888	; 0x1700
 8005c98:	f108 0818 	add.w	r8, r8, #24
 8005c9c:	2b00      	cmp	r3, #0
 8005c9e:	f43f af05 	beq.w	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005ca2:	4974      	ldr	r1, [pc, #464]	; (8005e74 <_ZN23MainInfotaimentViewBaseC1Ev+0x8f0>)
 8005ca4:	880b      	ldrh	r3, [r1, #0]
 8005ca6:	2b7a      	cmp	r3, #122	; 0x7a
 8005ca8:	f67f af0a 	bls.w	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8005cac:	486c      	ldr	r0, [pc, #432]	; (8005e60 <_ZN23MainInfotaimentViewBaseC1Ev+0x8dc>)
 8005cae:	217a      	movs	r1, #122	; 0x7a
 8005cb0:	6800      	ldr	r0, [r0, #0]
 8005cb2:	f002 fa4b 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8005cb6:	4a6b      	ldr	r2, [pc, #428]	; (8005e64 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e0>)
 8005cb8:	4603      	mov	r3, r0
 8005cba:	2107      	movs	r1, #7
 8005cbc:	4640      	mov	r0, r8
 8005cbe:	f012 fa5b 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8005cc2:	4b69      	ldr	r3, [pc, #420]	; (8005e68 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
    txtRpm.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VS7F));
 8005cc4:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005cc6:	f8cb 8218 	str.w	r8, [fp, #536]	; 0x218
 8005cca:	9341      	str	r3, [sp, #260]	; 0x104
 8005ccc:	4639      	mov	r1, r7
 8005cce:	237b      	movs	r3, #123	; 0x7b
 8005cd0:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8005cd4:	f00c f9b4 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005cd8:	9919      	ldr	r1, [sp, #100]	; 0x64
 8005cda:	4620      	mov	r0, r4
 8005cdc:	f009 fd40 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelRpm.setXY(158, 79);
 8005ce0:	224f      	movs	r2, #79	; 0x4f
 8005ce2:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005ce4:	219e      	movs	r1, #158	; 0x9e
 8005ce6:	f7fc ffed 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 8005cea:	990a      	ldr	r1, [sp, #40]	; 0x28
        color = newColor;
 8005cec:	f8cb a24c 	str.w	sl, [fp, #588]	; 0x24c
        boundingArea = calculateBoundingArea();
 8005cf0:	4630      	mov	r0, r6
        linespace = space;
 8005cf2:	f8ab 5250 	strh.w	r5, [fp, #592]	; 0x250
        boundingArea = calculateBoundingArea();
 8005cf6:	f00b ff09 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005cfa:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        rotation = textRotation;
 8005cfe:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 8005d02:	f50b 7816 	add.w	r8, fp, #600	; 0x258
 8005d06:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8005d0a:	f88b c254 	strb.w	ip, [fp, #596]	; 0x254
        boundingArea = calculateBoundingArea();
 8005d0e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005d10:	4630      	mov	r0, r6
 8005d12:	f00b fefb 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005d16:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005d1a:	4b53      	ldr	r3, [pc, #332]	; (8005e68 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
 8005d1c:	9341      	str	r3, [sp, #260]	; 0x104
 8005d1e:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8005d22:	2379      	movs	r3, #121	; 0x79
    labelRpm.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4SAL));
 8005d24:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005d26:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8005d2a:	4639      	mov	r1, r7
 8005d2c:	f00c f988 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d30:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005d32:	4620      	mov	r0, r4
 8005d34:	f009 fd14 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxThrottle.setPosition(305, 169, 190, 24);
 8005d38:	f04f 0e18 	mov.w	lr, #24
 8005d3c:	f8cd e000 	str.w	lr, [sp]
 8005d40:	23be      	movs	r3, #190	; 0xbe
 8005d42:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8005d44:	22a9      	movs	r2, #169	; 0xa9
 8005d46:	f240 1131 	movw	r1, #305	; 0x131
 8005d4a:	f7fc ffc8 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d4e:	f04f 0804 	mov.w	r8, #4
        borderColor = colorBorder;
 8005d52:	4a49      	ldr	r2, [pc, #292]	; (8005e78 <_ZN23MainInfotaimentViewBaseC1Ev+0x8f4>)
 8005d54:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8005d56:	f8cb 2290 	str.w	r2, [fp, #656]	; 0x290
        borderSize = size;
 8005d5a:	f8ab 8294 	strh.w	r8, [fp, #660]	; 0x294
 8005d5e:	4620      	mov	r0, r4
 8005d60:	f8cb a28c 	str.w	sl, [fp, #652]	; 0x28c
 8005d64:	f009 fcfc 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBrake.setPosition(305, 216, 190, 24);
 8005d68:	f04f 0e18 	mov.w	lr, #24
 8005d6c:	f8cd e000 	str.w	lr, [sp]
 8005d70:	23be      	movs	r3, #190	; 0xbe
 8005d72:	982b      	ldr	r0, [sp, #172]	; 0xac
 8005d74:	22d8      	movs	r2, #216	; 0xd8
 8005d76:	f240 1131 	movw	r1, #305	; 0x131
 8005d7a:	f7fc ffb0 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8005d7e:	4a3e      	ldr	r2, [pc, #248]	; (8005e78 <_ZN23MainInfotaimentViewBaseC1Ev+0x8f4>)
 8005d80:	992b      	ldr	r1, [sp, #172]	; 0xac
 8005d82:	f8cb 22c4 	str.w	r2, [fp, #708]	; 0x2c4
        borderSize = size;
 8005d86:	f8ab 82c8 	strh.w	r8, [fp, #712]	; 0x2c8
 8005d8a:	4620      	mov	r0, r4
 8005d8c:	f8cb a2c0 	str.w	sl, [fp, #704]	; 0x2c0
 8005d90:	f009 fce6 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressThrottle.setXY(308, 171);
 8005d94:	ee18 0a10 	vmov	r0, s16
 8005d98:	22ab      	movs	r2, #171	; 0xab
 8005d9a:	f44f 719a 	mov.w	r1, #308	; 0x134
 8005d9e:	f7fc ff91 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    progressThrottle.setProgressIndicatorPosition(2, 2, 180, 16);
 8005da2:	f04f 0910 	mov.w	r9, #16
 8005da6:	2202      	movs	r2, #2
 8005da8:	4611      	mov	r1, r2
 8005daa:	ee18 0a10 	vmov	r0, s16
 8005dae:	23b4      	movs	r3, #180	; 0xb4
 8005db0:	f8cd 9000 	str.w	r9, [sp]
 8005db4:	f009 fa1b 	bl	800f1ee <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressThrottle.setRange(0, 100);
 8005db8:	462b      	mov	r3, r5
 8005dba:	2264      	movs	r2, #100	; 0x64
 8005dbc:	ee18 0a10 	vmov	r0, s16
 8005dc0:	4629      	mov	r1, r5
 8005dc2:	9500      	str	r5, [sp, #0]
 8005dc4:	f009 fb30 	bl	800f428 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressThrottle.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8005dc8:	ee18 0a10 	vmov	r0, s16
 8005dcc:	4629      	mov	r1, r5
 8005dce:	f009 fb0a 	bl	800f3e6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
 8005dd2:	f04f 080a 	mov.w	r8, #10
    progressThrottle.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
 8005dd6:	ee18 0a10 	vmov	r0, s16
 8005dda:	4639      	mov	r1, r7
 8005ddc:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8005de0:	f009 fc50 	bl	800f684 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressThrottle.setColor(touchgfx::Color::getColorFromRGB(9, 255, 0));
 8005de4:	4925      	ldr	r1, [pc, #148]	; (8005e7c <_ZN23MainInfotaimentViewBaseC1Ev+0x8f8>)
 8005de6:	ee18 0a10 	vmov	r0, s16
 8005dea:	f009 f9ea 	bl	800f1c2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressThrottle.setValue(0);
 8005dee:	ee18 0a10 	vmov	r0, s16
 8005df2:	4629      	mov	r1, r5
 8005df4:	f009 fa13 	bl	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>
 8005df8:	ee18 1a10 	vmov	r1, s16
 8005dfc:	4620      	mov	r0, r4
 8005dfe:	f009 fcaf 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressBrakeFront.setXY(308, 218);
 8005e02:	ee18 0a90 	vmov	r0, s17
 8005e06:	22da      	movs	r2, #218	; 0xda
 8005e08:	f44f 719a 	mov.w	r1, #308	; 0x134
 8005e0c:	f7fc ff5a 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    progressBrakeFront.setProgressIndicatorPosition(2, 2, 180, 16);
 8005e10:	2202      	movs	r2, #2
 8005e12:	4611      	mov	r1, r2
 8005e14:	ee18 0a90 	vmov	r0, s17
 8005e18:	23b4      	movs	r3, #180	; 0xb4
 8005e1a:	f8cd 9000 	str.w	r9, [sp]
 8005e1e:	f009 f9e6 	bl	800f1ee <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressBrakeFront.setRange(0, 100);
 8005e22:	462b      	mov	r3, r5
 8005e24:	2264      	movs	r2, #100	; 0x64
 8005e26:	ee18 0a90 	vmov	r0, s17
 8005e2a:	4629      	mov	r1, r5
 8005e2c:	9500      	str	r5, [sp, #0]
 8005e2e:	f009 fafb 	bl	800f428 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressBrakeFront.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8005e32:	ee18 0a90 	vmov	r0, s17
 8005e36:	4629      	mov	r1, r5
 8005e38:	f009 fad5 	bl	800f3e6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    progressBrakeFront.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
 8005e3c:	ee18 0a90 	vmov	r0, s17
 8005e40:	4639      	mov	r1, r7
 8005e42:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8005e46:	f009 fc1d 	bl	800f684 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressBrakeFront.setColor(touchgfx::Color::getColorFromRGB(245, 15, 15));
 8005e4a:	490d      	ldr	r1, [pc, #52]	; (8005e80 <_ZN23MainInfotaimentViewBaseC1Ev+0x8fc>)
 8005e4c:	ee18 0a90 	vmov	r0, s17
 8005e50:	f009 f9b7 	bl	800f1c2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressBrakeFront.setValue(0);
 8005e54:	ee18 0a90 	vmov	r0, s17
 8005e58:	4629      	mov	r1, r5
 8005e5a:	f009 f9e0 	bl	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>
 8005e5e:	e011      	b.n	8005e84 <_ZN23MainInfotaimentViewBaseC1Ev+0x900>
 8005e60:	2000ef80 	.word	0x2000ef80
 8005e64:	08028432 	.word	0x08028432
 8005e68:	080284a8 	.word	0x080284a8
 8005e6c:	ffffea00 	.word	0xffffea00
 8005e70:	2000ef74 	.word	0x2000ef74
 8005e74:	2000ef78 	.word	0x2000ef78
 8005e78:	fff4ff1f 	.word	0xfff4ff1f
 8005e7c:	ff09ff00 	.word	0xff09ff00
 8005e80:	fff50f0f 	.word	0xfff50f0f
 8005e84:	ee18 1a90 	vmov	r1, s17
 8005e88:	4620      	mov	r0, r4
 8005e8a:	f009 fc69 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBrake_1.setPosition(305, 238, 190, 24);
 8005e8e:	f04f 0e18 	mov.w	lr, #24
 8005e92:	23be      	movs	r3, #190	; 0xbe
 8005e94:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8005e96:	f8cd e000 	str.w	lr, [sp]
 8005e9a:	22ee      	movs	r2, #238	; 0xee
 8005e9c:	f240 1131 	movw	r1, #305	; 0x131
 8005ea0:	f7fc ff1d 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8005ea4:	f04f 0e04 	mov.w	lr, #4
        borderColor = colorBorder;
 8005ea8:	4ae7      	ldr	r2, [pc, #924]	; (8006248 <_ZN23MainInfotaimentViewBaseC1Ev+0xcc4>)
        borderSize = size;
 8005eaa:	f8ab e4c4 	strh.w	lr, [fp, #1220]	; 0x4c4
 8005eae:	992c      	ldr	r1, [sp, #176]	; 0xb0
        borderColor = colorBorder;
 8005eb0:	f8cb 24c0 	str.w	r2, [fp, #1216]	; 0x4c0
 8005eb4:	4620      	mov	r0, r4
 8005eb6:	f8cb a4bc 	str.w	sl, [fp, #1212]	; 0x4bc
 8005eba:	f009 fc51 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressBrakeRear.setXY(308, 240);
 8005ebe:	ee19 0a10 	vmov	r0, s18
 8005ec2:	22f0      	movs	r2, #240	; 0xf0
 8005ec4:	f44f 719a 	mov.w	r1, #308	; 0x134
 8005ec8:	f7fc fefc 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    progressBrakeRear.setProgressIndicatorPosition(2, 2, 180, 16);
 8005ecc:	2202      	movs	r2, #2
 8005ece:	4611      	mov	r1, r2
 8005ed0:	ee19 0a10 	vmov	r0, s18
 8005ed4:	23b4      	movs	r3, #180	; 0xb4
 8005ed6:	f8cd 9000 	str.w	r9, [sp]
 8005eda:	f009 f988 	bl	800f1ee <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressBrakeRear.setRange(0, 100);
 8005ede:	462b      	mov	r3, r5
 8005ee0:	2264      	movs	r2, #100	; 0x64
 8005ee2:	ee19 0a10 	vmov	r0, s18
 8005ee6:	4629      	mov	r1, r5
 8005ee8:	9500      	str	r5, [sp, #0]
 8005eea:	f009 fa9d 	bl	800f428 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressBrakeRear.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8005eee:	ee19 0a10 	vmov	r0, s18
 8005ef2:	4629      	mov	r1, r5
 8005ef4:	f009 fa77 	bl	800f3e6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    progressBrakeRear.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
 8005ef8:	ee19 0a10 	vmov	r0, s18
 8005efc:	4639      	mov	r1, r7
 8005efe:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8005f02:	f009 fbbf 	bl	800f684 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressBrakeRear.setColor(touchgfx::Color::getColorFromRGB(245, 15, 15));
 8005f06:	49d1      	ldr	r1, [pc, #836]	; (800624c <_ZN23MainInfotaimentViewBaseC1Ev+0xcc8>)
 8005f08:	ee19 0a10 	vmov	r0, s18
 8005f0c:	f009 f959 	bl	800f1c2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressBrakeRear.setValue(0);
 8005f10:	ee19 0a10 	vmov	r0, s18
 8005f14:	4629      	mov	r1, r5
 8005f16:	f009 f982 	bl	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>
 8005f1a:	ee19 1a10 	vmov	r1, s18
 8005f1e:	4620      	mov	r0, r4
 8005f20:	f009 fc1e 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxRES.setPosition(5, 253, 135, 64);
 8005f24:	2340      	movs	r3, #64	; 0x40
 8005f26:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8005f28:	9300      	str	r3, [sp, #0]
 8005f2a:	22fd      	movs	r2, #253	; 0xfd
 8005f2c:	2387      	movs	r3, #135	; 0x87
 8005f2e:	2105      	movs	r1, #5
 8005f30:	f7fc fed5 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f34:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        borderSize = size;
 8005f38:	f04f 0e04 	mov.w	lr, #4
 8005f3c:	f8cb 25d4 	str.w	r2, [fp, #1492]	; 0x5d4
        borderColor = colorBorder;
 8005f40:	4ac3      	ldr	r2, [pc, #780]	; (8006250 <_ZN23MainInfotaimentViewBaseC1Ev+0xccc>)
 8005f42:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8005f44:	f8cb 25d8 	str.w	r2, [fp, #1496]	; 0x5d8
        borderSize = size;
 8005f48:	f8ab e5dc 	strh.w	lr, [fp, #1500]	; 0x5dc
 8005f4c:	4620      	mov	r0, r4
 8005f4e:	f009 fc07 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(143, 75, 15, 42);
 8005f52:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8005f56:	230f      	movs	r3, #15
 8005f58:	ee1d 0a90 	vmov	r0, s27
 8005f5c:	f8cd e000 	str.w	lr, [sp]
 8005f60:	224b      	movs	r2, #75	; 0x4b
 8005f62:	218f      	movs	r1, #143	; 0x8f
 8005f64:	f7fc febb 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f68:	f04f 3eff 	mov.w	lr, #4294967295
 8005f6c:	9837      	ldr	r0, [sp, #220]	; 0xdc
 8005f6e:	f8ab e660 	strh.w	lr, [fp, #1632]	; 0x660
 8005f72:	f8cb 0608 	str.w	r0, [fp, #1544]	; 0x608
    line1_1.setStart(0, 0);
 8005f76:	462a      	mov	r2, r5
 8005f78:	ee1d 0a90 	vmov	r0, s27
 8005f7c:	4629      	mov	r1, r5
 8005f7e:	f8cb a65c 	str.w	sl, [fp, #1628]	; 0x65c
 8005f82:	f7ff fae7 	bl	8005554 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(0, 45);
 8005f86:	222d      	movs	r2, #45	; 0x2d
 8005f88:	ee1d 0a90 	vmov	r0, s27
 8005f8c:	4629      	mov	r1, r5
 8005f8e:	f7ff fae5 	bl	800555c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(10);
 8005f92:	4641      	mov	r1, r8
 8005f94:	ee1d 0a90 	vmov	r0, s27
 8005f98:	f7ff fae4 	bl	8005564 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8005f9c:	ee1d 0a90 	vmov	r0, s27
 8005fa0:	4629      	mov	r1, r5
 8005fa2:	f00b f95b 	bl	801125c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005fa6:	ee1d 1a90 	vmov	r1, s27
 8005faa:	4620      	mov	r0, r4
 8005fac:	f009 fbd8 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_1.setPosition(143, 154, 15, 42);
 8005fb0:	202a      	movs	r0, #42	; 0x2a
 8005fb2:	230f      	movs	r3, #15
 8005fb4:	9000      	str	r0, [sp, #0]
 8005fb6:	229a      	movs	r2, #154	; 0x9a
 8005fb8:	ee1e 0a10 	vmov	r0, s28
 8005fbc:	218f      	movs	r1, #143	; 0x8f
 8005fbe:	f7fc fe8e 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8005fc2:	f04f 3eff 	mov.w	lr, #4294967295
 8005fc6:	9838      	ldr	r0, [sp, #224]	; 0xe0
 8005fc8:	f8ab e6e4 	strh.w	lr, [fp, #1764]	; 0x6e4
 8005fcc:	f8cb 068c 	str.w	r0, [fp, #1676]	; 0x68c
    line1_1_1.setStart(0, 0);
 8005fd0:	462a      	mov	r2, r5
 8005fd2:	ee1e 0a10 	vmov	r0, s28
 8005fd6:	4629      	mov	r1, r5
 8005fd8:	f8cb a6e0 	str.w	sl, [fp, #1760]	; 0x6e0
 8005fdc:	f7ff faba 	bl	8005554 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_1.setEnd(0, 45);
 8005fe0:	222d      	movs	r2, #45	; 0x2d
 8005fe2:	ee1e 0a10 	vmov	r0, s28
 8005fe6:	4629      	mov	r1, r5
 8005fe8:	f7ff fab8 	bl	800555c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_1.setLineWidth(10);
 8005fec:	4641      	mov	r1, r8
 8005fee:	ee1e 0a10 	vmov	r0, s28
 8005ff2:	f7ff fab7 	bl	8005564 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8005ff6:	ee1e 0a10 	vmov	r0, s28
 8005ffa:	4629      	mov	r1, r5
 8005ffc:	f00b f92e 	bl	801125c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006000:	ee1e 1a10 	vmov	r1, s28
 8006004:	4620      	mov	r0, r4
 8006006:	f009 fbab 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelLapCounter.setXY(158, 161);
 800600a:	22a1      	movs	r2, #161	; 0xa1
 800600c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800600e:	219e      	movs	r1, #158	; 0x9e
 8006010:	f7fc fe58 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006014:	990b      	ldr	r1, [sp, #44]	; 0x2c
        color = newColor;
 8006016:	f8cb a718 	str.w	sl, [fp, #1816]	; 0x718
        boundingArea = calculateBoundingArea();
 800601a:	4630      	mov	r0, r6
        linespace = space;
 800601c:	f8ab 571c 	strh.w	r5, [fp, #1820]	; 0x71c
        boundingArea = calculateBoundingArea();
 8006020:	f00b fd74 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006024:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        rotation = textRotation;
 8006028:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 800602c:	f20b 7824 	addw	r8, fp, #1828	; 0x724
 8006030:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8006034:	f88b c720 	strb.w	ip, [fp, #1824]	; 0x720
        boundingArea = calculateBoundingArea();
 8006038:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800603a:	4630      	mov	r0, r6
 800603c:	f00b fd66 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006040:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006044:	4b83      	ldr	r3, [pc, #524]	; (8006254 <_ZN23MainInfotaimentViewBaseC1Ev+0xcd0>)
 8006046:	9341      	str	r3, [sp, #260]	; 0x104
 8006048:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 800604c:	2358      	movs	r3, #88	; 0x58
    labelLapCounter.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IPF6));
 800604e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8006050:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006054:	4639      	mov	r1, r7
 8006056:	f00b fff3 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800605a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800605c:	4620      	mov	r0, r4
 800605e:	f009 fb7f 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtLap.setPosition(5, 150, 135, 49);
 8006062:	f04f 0e31 	mov.w	lr, #49	; 0x31
 8006066:	2387      	movs	r3, #135	; 0x87
 8006068:	2105      	movs	r1, #5
 800606a:	9822      	ldr	r0, [sp, #136]	; 0x88
 800606c:	f8cd e000 	str.w	lr, [sp]
 8006070:	2296      	movs	r2, #150	; 0x96
 8006072:	f7fc fe34 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006076:	4a76      	ldr	r2, [pc, #472]	; (8006250 <_ZN23MainInfotaimentViewBaseC1Ev+0xccc>)
 8006078:	f8cb 2760 	str.w	r2, [fp, #1888]	; 0x760
        linespace = space;
 800607c:	f8ab 5764 	strh.w	r5, [fp, #1892]	; 0x764
        return TextArea::BoundingArea();
 8006080:	4638      	mov	r0, r7
 8006082:	f7fc ffbb 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006086:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800608a:	f20b 736c 	addw	r3, fp, #1900	; 0x76c
 800608e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006092:	4971      	ldr	r1, [pc, #452]	; (8006258 <_ZN23MainInfotaimentViewBaseC1Ev+0xcd4>)
 8006094:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AR7I).getText());
 8006096:	f50b 58b9 	add.w	r8, fp, #5920	; 0x1720
 800609a:	f108 0806 	add.w	r8, r8, #6
 800609e:	2b00      	cmp	r3, #0
 80060a0:	f43f ad04 	beq.w	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80060a4:	496d      	ldr	r1, [pc, #436]	; (800625c <_ZN23MainInfotaimentViewBaseC1Ev+0xcd8>)
 80060a6:	880b      	ldrh	r3, [r1, #0]
 80060a8:	2b59      	cmp	r3, #89	; 0x59
 80060aa:	f67f ad09 	bls.w	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 80060ae:	486c      	ldr	r0, [pc, #432]	; (8006260 <_ZN23MainInfotaimentViewBaseC1Ev+0xcdc>)
 80060b0:	2159      	movs	r1, #89	; 0x59
 80060b2:	6800      	ldr	r0, [r0, #0]
 80060b4:	f002 f84a 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 80060b8:	4a6a      	ldr	r2, [pc, #424]	; (8006264 <_ZN23MainInfotaimentViewBaseC1Ev+0xce0>)
 80060ba:	4603      	mov	r3, r0
 80060bc:	2103      	movs	r1, #3
 80060be:	4640      	mov	r0, r8
 80060c0:	f012 f85a 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80060c4:	4b63      	ldr	r3, [pc, #396]	; (8006254 <_ZN23MainInfotaimentViewBaseC1Ev+0xcd0>)
    txtLap.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9DFI));
 80060c6:	9822      	ldr	r0, [sp, #136]	; 0x88
        wc1 = value;
 80060c8:	f8cb 8778 	str.w	r8, [fp, #1912]	; 0x778
 80060cc:	4639      	mov	r1, r7
 80060ce:	f04f 085a 	mov.w	r8, #90	; 0x5a
 80060d2:	9341      	str	r3, [sp, #260]	; 0x104
 80060d4:	f8ad 8108 	strh.w	r8, [sp, #264]	; 0x108
 80060d8:	f00b ffb2 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060dc:	9922      	ldr	r1, [sp, #136]	; 0x88
 80060de:	4620      	mov	r0, r4
 80060e0:	f009 fb3e 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelRES.setXY(36, 267);
 80060e4:	f240 120b 	movw	r2, #267	; 0x10b
 80060e8:	981a      	ldr	r0, [sp, #104]	; 0x68
 80060ea:	2124      	movs	r1, #36	; 0x24
 80060ec:	f7fc fdea 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 80060f0:	4630      	mov	r0, r6
 80060f2:	991a      	ldr	r1, [sp, #104]	; 0x68
        linespace = space;
 80060f4:	f8ab 57b0 	strh.w	r5, [fp, #1968]	; 0x7b0
        color = newColor;
 80060f8:	f8cb a7ac 	str.w	sl, [fp, #1964]	; 0x7ac
        boundingArea = calculateBoundingArea();
 80060fc:	f00b fd06 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006100:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006104:	f50b 63f7 	add.w	r3, fp, #1976	; 0x7b8
 8006108:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800610c:	260c      	movs	r6, #12
 800610e:	4b51      	ldr	r3, [pc, #324]	; (8006254 <_ZN23MainInfotaimentViewBaseC1Ev+0xcd0>)
    labelRES.setTypedText(touchgfx::TypedText(T_RES));
 8006110:	981a      	ldr	r0, [sp, #104]	; 0x68
 8006112:	9341      	str	r3, [sp, #260]	; 0x104
 8006114:	4639      	mov	r1, r7
 8006116:	f8ad 6108 	strh.w	r6, [sp, #264]	; 0x108
 800611a:	f00b ff91 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800611e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8006120:	4620      	mov	r0, r4
 8006122:	f009 fb1d 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressRpmLow.setXY(12, 20);
 8006126:	4631      	mov	r1, r6
 8006128:	ee19 0a90 	vmov	r0, s19
 800612c:	2214      	movs	r2, #20
 800612e:	f7fc fdc9 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    progressRpmLow.setProgressIndicatorPosition(2, 2, 246, 16);
 8006132:	2202      	movs	r2, #2
 8006134:	4611      	mov	r1, r2
 8006136:	ee19 0a90 	vmov	r0, s19
 800613a:	23f6      	movs	r3, #246	; 0xf6
 800613c:	f8cd 9000 	str.w	r9, [sp]
 8006140:	f009 f855 	bl	800f1ee <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressRpmLow.setRange(0, 100);
 8006144:	462b      	mov	r3, r5
 8006146:	2264      	movs	r2, #100	; 0x64
 8006148:	4629      	mov	r1, r5
 800614a:	ee19 0a90 	vmov	r0, s19
 800614e:	9500      	str	r5, [sp, #0]
 8006150:	f009 f96a 	bl	800f428 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressRpmLow.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8006154:	4629      	mov	r1, r5
 8006156:	ee19 0a90 	vmov	r0, s19
 800615a:	f009 f944 	bl	800f3e6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
 800615e:	2617      	movs	r6, #23
    progressRpmLow.setBackground(touchgfx::Bitmap(BITMAP_PROGRESS_BAR_LARGE_ID));
 8006160:	ee19 0a90 	vmov	r0, s19
 8006164:	4639      	mov	r1, r7
 8006166:	f8ad 6104 	strh.w	r6, [sp, #260]	; 0x104
 800616a:	f009 fa8b 	bl	800f684 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressRpmLow.setColor(touchgfx::Color::getColorFromRGB(9, 255, 0));
 800616e:	493e      	ldr	r1, [pc, #248]	; (8006268 <_ZN23MainInfotaimentViewBaseC1Ev+0xce4>)
 8006170:	ee19 0a90 	vmov	r0, s19
 8006174:	f009 f825 	bl	800f1c2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressRpmLow.setValue(0);
 8006178:	4629      	mov	r1, r5
 800617a:	ee19 0a90 	vmov	r0, s19
 800617e:	f009 f84e 	bl	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>
 8006182:	ee19 1a90 	vmov	r1, s19
 8006186:	4620      	mov	r0, r4
 8006188:	f009 faea 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressRpmMed.setXY(275, 20);
 800618c:	ee1a 0a10 	vmov	r0, s20
 8006190:	2214      	movs	r2, #20
 8006192:	f240 1113 	movw	r1, #275	; 0x113
 8006196:	f7fc fd95 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    progressRpmMed.setProgressIndicatorPosition(2, 2, 246, 16);
 800619a:	2202      	movs	r2, #2
 800619c:	4611      	mov	r1, r2
 800619e:	ee1a 0a10 	vmov	r0, s20
 80061a2:	23f6      	movs	r3, #246	; 0xf6
 80061a4:	f8cd 9000 	str.w	r9, [sp]
 80061a8:	f009 f821 	bl	800f1ee <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressRpmMed.setRange(0, 100);
 80061ac:	462b      	mov	r3, r5
 80061ae:	2264      	movs	r2, #100	; 0x64
 80061b0:	4629      	mov	r1, r5
 80061b2:	ee1a 0a10 	vmov	r0, s20
 80061b6:	9500      	str	r5, [sp, #0]
 80061b8:	f009 f936 	bl	800f428 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressRpmMed.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 80061bc:	4629      	mov	r1, r5
 80061be:	ee1a 0a10 	vmov	r0, s20
 80061c2:	f009 f910 	bl	800f3e6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    progressRpmMed.setBackground(touchgfx::Bitmap(BITMAP_PROGRESS_BAR_LARGE_ID));
 80061c6:	ee1a 0a10 	vmov	r0, s20
 80061ca:	4639      	mov	r1, r7
 80061cc:	f8ad 6104 	strh.w	r6, [sp, #260]	; 0x104
 80061d0:	f009 fa58 	bl	800f684 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressRpmMed.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
 80061d4:	4925      	ldr	r1, [pc, #148]	; (800626c <_ZN23MainInfotaimentViewBaseC1Ev+0xce8>)
 80061d6:	ee1a 0a10 	vmov	r0, s20
 80061da:	f008 fff2 	bl	800f1c2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressRpmMed.setValue(0);
 80061de:	4629      	mov	r1, r5
 80061e0:	ee1a 0a10 	vmov	r0, s20
 80061e4:	f009 f81b 	bl	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>
 80061e8:	ee1a 1a10 	vmov	r1, s20
 80061ec:	4620      	mov	r0, r4
 80061ee:	f009 fab7 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressRpmHigh.setXY(536, 20);
 80061f2:	ee1a 0a90 	vmov	r0, s21
 80061f6:	2214      	movs	r2, #20
 80061f8:	f44f 7106 	mov.w	r1, #536	; 0x218
 80061fc:	f7fc fd62 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    progressRpmHigh.setProgressIndicatorPosition(2, 2, 246, 16);
 8006200:	2202      	movs	r2, #2
 8006202:	4611      	mov	r1, r2
 8006204:	ee1a 0a90 	vmov	r0, s21
 8006208:	23f6      	movs	r3, #246	; 0xf6
 800620a:	f8cd 9000 	str.w	r9, [sp]
 800620e:	f008 ffee 	bl	800f1ee <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressRpmHigh.setRange(0, 100);
 8006212:	462b      	mov	r3, r5
 8006214:	2264      	movs	r2, #100	; 0x64
 8006216:	4629      	mov	r1, r5
 8006218:	ee1a 0a90 	vmov	r0, s21
 800621c:	9500      	str	r5, [sp, #0]
 800621e:	f009 f903 	bl	800f428 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressRpmHigh.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8006222:	4629      	mov	r1, r5
 8006224:	ee1a 0a90 	vmov	r0, s21
 8006228:	f009 f8dd 	bl	800f3e6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    progressRpmHigh.setBackground(touchgfx::Bitmap(BITMAP_PROGRESS_BAR_LARGE_ID));
 800622c:	ee1a 0a90 	vmov	r0, s21
 8006230:	4639      	mov	r1, r7
 8006232:	f8ad 6104 	strh.w	r6, [sp, #260]	; 0x104
 8006236:	f009 fa25 	bl	800f684 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressRpmHigh.setColor(touchgfx::Color::getColorFromRGB(149, 0, 255));
 800623a:	490d      	ldr	r1, [pc, #52]	; (8006270 <_ZN23MainInfotaimentViewBaseC1Ev+0xcec>)
 800623c:	ee1a 0a90 	vmov	r0, s21
 8006240:	f008 ffbf 	bl	800f1c2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressRpmHigh.setValue(0);
 8006244:	4629      	mov	r1, r5
 8006246:	e015      	b.n	8006274 <_ZN23MainInfotaimentViewBaseC1Ev+0xcf0>
 8006248:	fff4ff1f 	.word	0xfff4ff1f
 800624c:	fff50f0f 	.word	0xfff50f0f
 8006250:	ffffea00 	.word	0xffffea00
 8006254:	080284a8 	.word	0x080284a8
 8006258:	2000ef74 	.word	0x2000ef74
 800625c:	2000ef78 	.word	0x2000ef78
 8006260:	2000ef80 	.word	0x2000ef80
 8006264:	08028432 	.word	0x08028432
 8006268:	ff09ff00 	.word	0xff09ff00
 800626c:	ffff0000 	.word	0xffff0000
 8006270:	ff9500ff 	.word	0xff9500ff
 8006274:	ee1a 0a90 	vmov	r0, s21
 8006278:	f008 ffd1 	bl	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>
 800627c:	ee1a 1a90 	vmov	r1, s21
 8006280:	4620      	mov	r0, r4
 8006282:	f009 fa6d 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTWater.setPosition(150, 373, 90, 38);
 8006286:	2326      	movs	r3, #38	; 0x26
 8006288:	982e      	ldr	r0, [sp, #184]	; 0xb8
 800628a:	9300      	str	r3, [sp, #0]
 800628c:	f240 1275 	movw	r2, #373	; 0x175
 8006290:	4643      	mov	r3, r8
 8006292:	2196      	movs	r1, #150	; 0x96
 8006294:	f7fc fd23 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8006298:	f04f 467f 	mov.w	r6, #4278190080	; 0xff000000
        borderColor = colorBorder;
 800629c:	4ad5      	ldr	r2, [pc, #852]	; (80065f4 <_ZN23MainInfotaimentViewBaseC1Ev+0x1070>)
 800629e:	992e      	ldr	r1, [sp, #184]	; 0xb8
 80062a0:	f8cb 6a98 	str.w	r6, [fp, #2712]	; 0xa98
        borderSize = size;
 80062a4:	2305      	movs	r3, #5
        borderColor = colorBorder;
 80062a6:	f8cb 2a9c 	str.w	r2, [fp, #2716]	; 0xa9c
        borderSize = size;
 80062aa:	f8ab 3aa0 	strh.w	r3, [fp, #2720]	; 0xaa0
 80062ae:	4620      	mov	r0, r4
 80062b0:	f009 fa56 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTWater.setPosition(157, 383, 75, 19);
 80062b4:	2313      	movs	r3, #19
 80062b6:	f240 127f 	movw	r2, #383	; 0x17f
 80062ba:	219d      	movs	r1, #157	; 0x9d
 80062bc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80062be:	9300      	str	r3, [sp, #0]
 80062c0:	234b      	movs	r3, #75	; 0x4b
 80062c2:	f7fc fd0c 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        linespace = space;
 80062c6:	f8ab 5ad8 	strh.w	r5, [fp, #2776]	; 0xad8
        color = newColor;
 80062ca:	f8cb aad4 	str.w	sl, [fp, #2772]	; 0xad4
        return TextArea::BoundingArea();
 80062ce:	4638      	mov	r0, r7
 80062d0:	f7fc fe94 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80062d4:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80062d8:	4ec7      	ldr	r6, [pc, #796]	; (80065f8 <_ZN23MainInfotaimentViewBaseC1Ev+0x1074>)
 80062da:	f50b 632e 	add.w	r3, fp, #2784	; 0xae0
 80062de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80062e2:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtTWaterBuffer, TXTTWATER_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_K6X0).getText());
 80062e4:	f50b 55b9 	add.w	r5, fp, #5920	; 0x1720
 80062e8:	350c      	adds	r5, #12
 80062ea:	2b00      	cmp	r3, #0
 80062ec:	f43f abde 	beq.w	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80062f0:	49c2      	ldr	r1, [pc, #776]	; (80065fc <_ZN23MainInfotaimentViewBaseC1Ev+0x1078>)
 80062f2:	880b      	ldrh	r3, [r1, #0]
 80062f4:	2b77      	cmp	r3, #119	; 0x77
 80062f6:	f67f abe3 	bls.w	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 80062fa:	48c1      	ldr	r0, [pc, #772]	; (8006600 <_ZN23MainInfotaimentViewBaseC1Ev+0x107c>)
        borderColor = colorBorder;
 80062fc:	4fbd      	ldr	r7, [pc, #756]	; (80065f4 <_ZN23MainInfotaimentViewBaseC1Ev+0x1070>)
 80062fe:	6800      	ldr	r0, [r0, #0]
 8006300:	2177      	movs	r1, #119	; 0x77
 8006302:	f001 ff23 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8006306:	4abf      	ldr	r2, [pc, #764]	; (8006604 <_ZN23MainInfotaimentViewBaseC1Ev+0x1080>)
 8006308:	4603      	mov	r3, r0
 800630a:	2104      	movs	r1, #4
 800630c:	4628      	mov	r0, r5
 800630e:	f011 ff33 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtTWater.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ROYB));
 8006312:	ae41      	add	r6, sp, #260	; 0x104
        : typedTextId(id)
 8006314:	4bbc      	ldr	r3, [pc, #752]	; (8006608 <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
 8006316:	9823      	ldr	r0, [sp, #140]	; 0x8c
        wc1 = value;
 8006318:	f8cb 5aec 	str.w	r5, [fp, #2796]	; 0xaec
 800631c:	9341      	str	r3, [sp, #260]	; 0x104
 800631e:	4631      	mov	r1, r6
 8006320:	2378      	movs	r3, #120	; 0x78
 8006322:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
    boxTOil.setPosition(150, 333, 90, 38);
 8006326:	2526      	movs	r5, #38	; 0x26
    txtTWater.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ROYB));
 8006328:	f00b fe8a 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800632c:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800632e:	4620      	mov	r0, r4
 8006330:	f009 fa16 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTOil.setPosition(150, 333, 90, 38);
 8006334:	4643      	mov	r3, r8
 8006336:	f240 124d 	movw	r2, #333	; 0x14d
 800633a:	982f      	ldr	r0, [sp, #188]	; 0xbc
 800633c:	9500      	str	r5, [sp, #0]
 800633e:	2196      	movs	r1, #150	; 0x96
 8006340:	f7fc fccd 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 8006344:	f04f 0905 	mov.w	r9, #5
 8006348:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 800634c:	f8cb eb18 	str.w	lr, [fp, #2840]	; 0xb18
 8006350:	992f      	ldr	r1, [sp, #188]	; 0xbc
        borderColor = colorBorder;
 8006352:	f8cb 7b1c 	str.w	r7, [fp, #2844]	; 0xb1c
 8006356:	4620      	mov	r0, r4
        borderSize = size;
 8006358:	f8ab 9b20 	strh.w	r9, [fp, #2848]	; 0xb20
 800635c:	f009 fa00 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPOil.setPosition(150, 293, 90, 38);
 8006360:	4643      	mov	r3, r8
 8006362:	f240 1225 	movw	r2, #293	; 0x125
 8006366:	9830      	ldr	r0, [sp, #192]	; 0xc0
 8006368:	9500      	str	r5, [sp, #0]
 800636a:	2196      	movs	r1, #150	; 0x96
 800636c:	f04f 457f 	mov.w	r5, #4278190080	; 0xff000000
 8006370:	f7fc fcb5 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
    txtTOil.setPosition(157, 343, 75, 19);
 8006374:	f04f 0813 	mov.w	r8, #19
 8006378:	9930      	ldr	r1, [sp, #192]	; 0xc0
 800637a:	f8cb 5b4c 	str.w	r5, [fp, #2892]	; 0xb4c
        borderColor = colorBorder;
 800637e:	f8cb 7b50 	str.w	r7, [fp, #2896]	; 0xb50
 8006382:	4620      	mov	r0, r4
        borderSize = size;
 8006384:	f8ab 9b54 	strh.w	r9, [fp, #2900]	; 0xb54
 8006388:	f009 f9ea 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800638c:	2700      	movs	r7, #0
 800638e:	234b      	movs	r3, #75	; 0x4b
 8006390:	f240 1257 	movw	r2, #343	; 0x157
 8006394:	219d      	movs	r1, #157	; 0x9d
 8006396:	9824      	ldr	r0, [sp, #144]	; 0x90
 8006398:	f8cd 8000 	str.w	r8, [sp]
 800639c:	f7fc fc9f 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80063a0:	f8cb ab88 	str.w	sl, [fp, #2952]	; 0xb88
        linespace = space;
 80063a4:	f8ab 7b8c 	strh.w	r7, [fp, #2956]	; 0xb8c
        return TextArea::BoundingArea();
 80063a8:	4630      	mov	r0, r6
 80063aa:	f7fc fe27 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80063ae:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80063b2:	f60b 3394 	addw	r3, fp, #2964	; 0xb94
 80063b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80063ba:	4a8f      	ldr	r2, [pc, #572]	; (80065f8 <_ZN23MainInfotaimentViewBaseC1Ev+0x1074>)
 80063bc:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(txtTOilBuffer, TXTTOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ZRFT).getText());
 80063be:	f50b 55b9 	add.w	r5, fp, #5920	; 0x1720
 80063c2:	3514      	adds	r5, #20
 80063c4:	2b00      	cmp	r3, #0
 80063c6:	f43f ab71 	beq.w	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80063ca:	498c      	ldr	r1, [pc, #560]	; (80065fc <_ZN23MainInfotaimentViewBaseC1Ev+0x1078>)
 80063cc:	880b      	ldrh	r3, [r1, #0]
 80063ce:	2b75      	cmp	r3, #117	; 0x75
 80063d0:	f67f ab76 	bls.w	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 80063d4:	488a      	ldr	r0, [pc, #552]	; (8006600 <_ZN23MainInfotaimentViewBaseC1Ev+0x107c>)
 80063d6:	2175      	movs	r1, #117	; 0x75
 80063d8:	6800      	ldr	r0, [r0, #0]
 80063da:	f001 feb7 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 80063de:	4a89      	ldr	r2, [pc, #548]	; (8006604 <_ZN23MainInfotaimentViewBaseC1Ev+0x1080>)
 80063e0:	4603      	mov	r3, r0
 80063e2:	2104      	movs	r1, #4
 80063e4:	4628      	mov	r0, r5
 80063e6:	f011 fec7 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80063ea:	4b87      	ldr	r3, [pc, #540]	; (8006608 <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
    txtTOil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YR52));
 80063ec:	9824      	ldr	r0, [sp, #144]	; 0x90
        wc1 = value;
 80063ee:	f8cb 5ba0 	str.w	r5, [fp, #2976]	; 0xba0
 80063f2:	9341      	str	r3, [sp, #260]	; 0x104
 80063f4:	4631      	mov	r1, r6
 80063f6:	2376      	movs	r3, #118	; 0x76
 80063f8:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 80063fc:	f00b fe20 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006400:	9924      	ldr	r1, [sp, #144]	; 0x90
 8006402:	4620      	mov	r0, r4
 8006404:	f009 f9ac 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtPOil.setPosition(157, 303, 75, 19);
 8006408:	234b      	movs	r3, #75	; 0x4b
 800640a:	f240 122f 	movw	r2, #303	; 0x12f
 800640e:	219d      	movs	r1, #157	; 0x9d
 8006410:	9825      	ldr	r0, [sp, #148]	; 0x94
 8006412:	f8cd 8000 	str.w	r8, [sp]
 8006416:	f7fc fc62 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800641a:	f8cb abd4 	str.w	sl, [fp, #3028]	; 0xbd4
        linespace = space;
 800641e:	f8ab 7bd8 	strh.w	r7, [fp, #3032]	; 0xbd8
        return TextArea::BoundingArea();
 8006422:	4630      	mov	r0, r6
 8006424:	f7fc fdea 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006428:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800642c:	f50b 633e 	add.w	r3, fp, #3040	; 0xbe0
 8006430:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006434:	4a70      	ldr	r2, [pc, #448]	; (80065f8 <_ZN23MainInfotaimentViewBaseC1Ev+0x1074>)
 8006436:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(txtPOilBuffer, TXTPOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1M75).getText());
 8006438:	f50b 55b9 	add.w	r5, fp, #5920	; 0x1720
 800643c:	351c      	adds	r5, #28
 800643e:	2b00      	cmp	r3, #0
 8006440:	f43f ab34 	beq.w	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006444:	496d      	ldr	r1, [pc, #436]	; (80065fc <_ZN23MainInfotaimentViewBaseC1Ev+0x1078>)
 8006446:	880b      	ldrh	r3, [r1, #0]
 8006448:	2b73      	cmp	r3, #115	; 0x73
 800644a:	f67f ab39 	bls.w	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 800644e:	486c      	ldr	r0, [pc, #432]	; (8006600 <_ZN23MainInfotaimentViewBaseC1Ev+0x107c>)
 8006450:	2173      	movs	r1, #115	; 0x73
 8006452:	6800      	ldr	r0, [r0, #0]
 8006454:	f001 fe7a 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8006458:	4a6a      	ldr	r2, [pc, #424]	; (8006604 <_ZN23MainInfotaimentViewBaseC1Ev+0x1080>)
 800645a:	4603      	mov	r3, r0
 800645c:	2106      	movs	r1, #6
 800645e:	4628      	mov	r0, r5
 8006460:	f011 fe8a 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006464:	4b68      	ldr	r3, [pc, #416]	; (8006608 <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
    txtPOil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5NKC));
 8006466:	9825      	ldr	r0, [sp, #148]	; 0x94
        wc1 = value;
 8006468:	f8cb 5bec 	str.w	r5, [fp, #3052]	; 0xbec
 800646c:	9341      	str	r3, [sp, #260]	; 0x104
 800646e:	4631      	mov	r1, r6
 8006470:	2374      	movs	r3, #116	; 0x74
 8006472:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
    boxLC.setPosition(5, 321, 135, 63);
 8006476:	253f      	movs	r5, #63	; 0x3f
    txtPOil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5NKC));
 8006478:	f00b fde2 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800647c:	9925      	ldr	r1, [sp, #148]	; 0x94
 800647e:	4620      	mov	r0, r4
 8006480:	f009 f96e 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxLC.setPosition(5, 321, 135, 63);
 8006484:	2387      	movs	r3, #135	; 0x87
 8006486:	4649      	mov	r1, r9
 8006488:	9831      	ldr	r0, [sp, #196]	; 0xc4
 800648a:	9500      	str	r5, [sp, #0]
 800648c:	f240 1241 	movw	r2, #321	; 0x141
 8006490:	f7fc fc25 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 8006494:	f04f 0804 	mov.w	r8, #4
        borderColor = colorBorder;
 8006498:	4a56      	ldr	r2, [pc, #344]	; (80065f4 <_ZN23MainInfotaimentViewBaseC1Ev+0x1070>)
 800649a:	9931      	ldr	r1, [sp, #196]	; 0xc4
 800649c:	f8cb 2c1c 	str.w	r2, [fp, #3100]	; 0xc1c
 80064a0:	f04f 457f 	mov.w	r5, #4278190080	; 0xff000000
 80064a4:	f8cb 5c18 	str.w	r5, [fp, #3096]	; 0xc18
        borderSize = size;
 80064a8:	f8ab 8c20 	strh.w	r8, [fp, #3104]	; 0xc20
 80064ac:	4620      	mov	r0, r4
 80064ae:	ad3c      	add	r5, sp, #240	; 0xf0
 80064b0:	f009 f956 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelLC.setXY(47, 335);
 80064b4:	f240 124f 	movw	r2, #335	; 0x14f
 80064b8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80064ba:	212f      	movs	r1, #47	; 0x2f
 80064bc:	f7fc fc02 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 80064c0:	4628      	mov	r0, r5
 80064c2:	990c      	ldr	r1, [sp, #48]	; 0x30
        color = newColor;
 80064c4:	f8cb ac54 	str.w	sl, [fp, #3156]	; 0xc54
        linespace = space;
 80064c8:	f8ab 7c58 	strh.w	r7, [fp, #3160]	; 0xc58
        boundingArea = calculateBoundingArea();
 80064cc:	f00b fb1e 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064d0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80064d2:	f101 033c 	add.w	r3, r1, #60	; 0x3c
 80064d6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80064da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80064de:	4b4a      	ldr	r3, [pc, #296]	; (8006608 <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
    labelLC.setTypedText(touchgfx::TypedText(T_LC));
 80064e0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80064e2:	9341      	str	r3, [sp, #260]	; 0x104
 80064e4:	4631      	mov	r1, r6
 80064e6:	230b      	movs	r3, #11
 80064e8:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 80064ec:	f00b fda8 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80064f2:	4620      	mov	r0, r4
 80064f4:	f009 f934 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxClutch.setPosition(5, 388, 135, 63);
 80064f8:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
 80064fc:	2387      	movs	r3, #135	; 0x87
 80064fe:	4649      	mov	r1, r9
 8006500:	9832      	ldr	r0, [sp, #200]	; 0xc8
 8006502:	f8cd e000 	str.w	lr, [sp]
 8006506:	f44f 72c2 	mov.w	r2, #388	; 0x184
 800650a:	f7fc fbe8 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800650e:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8006512:	4a38      	ldr	r2, [pc, #224]	; (80065f4 <_ZN23MainInfotaimentViewBaseC1Ev+0x1070>)
 8006514:	f8cb ec94 	str.w	lr, [fp, #3220]	; 0xc94
 8006518:	9932      	ldr	r1, [sp, #200]	; 0xc8
 800651a:	f8cb 2c98 	str.w	r2, [fp, #3224]	; 0xc98
        borderSize = size;
 800651e:	f8ab 8c9c 	strh.w	r8, [fp, #3228]	; 0xc9c
 8006522:	4620      	mov	r0, r4
 8006524:	f009 f91c 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelClutch.setXY(39, 402);
 8006528:	f44f 72c9 	mov.w	r2, #402	; 0x192
 800652c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800652e:	2127      	movs	r1, #39	; 0x27
 8006530:	f7fc fbc8 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 8006534:	4628      	mov	r0, r5
 8006536:	990d      	ldr	r1, [sp, #52]	; 0x34
        color = newColor;
 8006538:	f8cb acd0 	str.w	sl, [fp, #3280]	; 0xcd0
        linespace = space;
 800653c:	f8ab 7cd4 	strh.w	r7, [fp, #3284]	; 0xcd4
        boundingArea = calculateBoundingArea();
 8006540:	f00b fae4 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006544:	990d      	ldr	r1, [sp, #52]	; 0x34
 8006546:	f101 033c 	add.w	r3, r1, #60	; 0x3c
 800654a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800654e:	f04f 0e0a 	mov.w	lr, #10
 8006552:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006556:	4b2c      	ldr	r3, [pc, #176]	; (8006608 <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
    labelClutch.setTypedText(touchgfx::TypedText(T_CLUTCH));
 8006558:	980d      	ldr	r0, [sp, #52]	; 0x34
 800655a:	f8ad e108 	strh.w	lr, [sp, #264]	; 0x108
 800655e:	4631      	mov	r1, r6
 8006560:	9341      	str	r3, [sp, #260]	; 0x104
 8006562:	f00b fd6d 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006566:	990d      	ldr	r1, [sp, #52]	; 0x34
 8006568:	4620      	mov	r0, r4
 800656a:	f009 f8f9 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800656e:	230d      	movs	r3, #13
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_MMRD_LOGO_NUOVO_185X111_ID));
 8006570:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8006572:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006576:	4631      	mov	r1, r6
 8006578:	f00b ff8e 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(308, 340, 185, 111);
 800657c:	f04f 0e6f 	mov.w	lr, #111	; 0x6f
 8006580:	f8cd e000 	str.w	lr, [sp]
 8006584:	23b9      	movs	r3, #185	; 0xb9
 8006586:	f44f 72aa 	mov.w	r2, #340	; 0x154
 800658a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800658c:	f44f 719a 	mov.w	r1, #308	; 0x134
 8006590:	f7fc fba5 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006594:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8006596:	4639      	mov	r1, r7
 8006598:	f00a ffc8 	bl	801152c <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800659c:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800659e:	4620      	mov	r0, r4
 80065a0:	f009 f8de 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelDS.setXY(766, 160);
 80065a4:	22a0      	movs	r2, #160	; 0xa0
 80065a6:	ee1e 0a90 	vmov	r0, s29
 80065aa:	f240 21fe 	movw	r1, #766	; 0x2fe
 80065ae:	f7fc fb89 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 80065b2:	4628      	mov	r0, r5
 80065b4:	ee1e 1a90 	vmov	r1, s29
        color = newColor;
 80065b8:	f8cb ad44 	str.w	sl, [fp, #3396]	; 0xd44
        linespace = space;
 80065bc:	f8ab 7d48 	strh.w	r7, [fp, #3400]	; 0xd48
        boundingArea = calculateBoundingArea();
 80065c0:	f00b faa4 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065c4:	ee1e 1a90 	vmov	r1, s29
 80065c8:	f101 083c 	add.w	r8, r1, #60	; 0x3c
 80065cc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 80065d0:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 80065d4:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 80065d8:	f88b cd4c 	strb.w	ip, [fp, #3404]	; 0xd4c
        boundingArea = calculateBoundingArea();
 80065dc:	4628      	mov	r0, r5
 80065de:	ee1e 1a90 	vmov	r1, s29
 80065e2:	f00b fa93 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065e6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80065ea:	4b07      	ldr	r3, [pc, #28]	; (8006608 <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
 80065ec:	9341      	str	r3, [sp, #260]	; 0x104
 80065ee:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 80065f2:	e00b      	b.n	800660c <_ZN23MainInfotaimentViewBaseC1Ev+0x1088>
 80065f4:	ffffea00 	.word	0xffffea00
 80065f8:	2000ef74 	.word	0x2000ef74
 80065fc:	2000ef78 	.word	0x2000ef78
 8006600:	2000ef80 	.word	0x2000ef80
 8006604:	08028432 	.word	0x08028432
 8006608:	080284a8 	.word	0x080284a8
 800660c:	2372      	movs	r3, #114	; 0x72
    labelDS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_67FN));
 800660e:	ee1e 0a90 	vmov	r0, s29
 8006612:	4631      	mov	r1, r6
 8006614:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006618:	f00b fd12 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800661c:	ee1e 1a90 	vmov	r1, s29
 8006620:	4620      	mov	r0, r4
 8006622:	f009 f89d 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_2.setPosition(751, 150, 15, 42);
 8006626:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 800662a:	f8cd e000 	str.w	lr, [sp]
 800662e:	230f      	movs	r3, #15
 8006630:	ee1f 0a10 	vmov	r0, s30
 8006634:	2296      	movs	r2, #150	; 0x96
 8006636:	f240 21ef 	movw	r1, #751	; 0x2ef
 800663a:	f7fc fb50 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800663e:	9939      	ldr	r1, [sp, #228]	; 0xe4
 8006640:	f8cb 1d84 	str.w	r1, [fp, #3460]	; 0xd84
    line1_2.setStart(0, 0);
 8006644:	ee1f 0a10 	vmov	r0, s30
 8006648:	463a      	mov	r2, r7
 800664a:	4639      	mov	r1, r7
 800664c:	f8cb add8 	str.w	sl, [fp, #3544]	; 0xdd8
 8006650:	f8ab addc 	strh.w	sl, [fp, #3548]	; 0xddc
 8006654:	f7fe ff7e 	bl	8005554 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2.setEnd(0, 45);
 8006658:	222d      	movs	r2, #45	; 0x2d
 800665a:	ee1f 0a10 	vmov	r0, s30
 800665e:	4639      	mov	r1, r7
 8006660:	f7fe ff7c 	bl	800555c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2.setLineWidth(10);
 8006664:	ee1f 0a10 	vmov	r0, s30
 8006668:	210a      	movs	r1, #10
 800666a:	f7fe ff7b 	bl	8005564 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 800666e:	ee1f 0a10 	vmov	r0, s30
 8006672:	4639      	mov	r1, r7
 8006674:	f00a fdf2 	bl	801125c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006678:	ee1f 1a10 	vmov	r1, s30
 800667c:	4620      	mov	r0, r4
 800667e:	f009 f86f 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_2_1.setPosition(751, 195, 15, 42);
 8006682:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8006686:	f8cd e000 	str.w	lr, [sp]
 800668a:	ee1f 0a90 	vmov	r0, s31
 800668e:	230f      	movs	r3, #15
 8006690:	22c3      	movs	r2, #195	; 0xc3
 8006692:	f240 21ef 	movw	r1, #751	; 0x2ef
 8006696:	f7fc fb22 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800669a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800669e:	993a      	ldr	r1, [sp, #232]	; 0xe8
 80066a0:	f8ab 3e60 	strh.w	r3, [fp, #3680]	; 0xe60
    line1_2_1.setStart(0, 0);
 80066a4:	ee1f 0a90 	vmov	r0, s31
 80066a8:	f8cb 1e08 	str.w	r1, [fp, #3592]	; 0xe08
 80066ac:	463a      	mov	r2, r7
 80066ae:	4639      	mov	r1, r7
 80066b0:	f8cb ae5c 	str.w	sl, [fp, #3676]	; 0xe5c
 80066b4:	f7fe ff4e 	bl	8005554 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2_1.setEnd(0, 45);
 80066b8:	222d      	movs	r2, #45	; 0x2d
 80066ba:	ee1f 0a90 	vmov	r0, s31
 80066be:	4639      	mov	r1, r7
 80066c0:	f7fe ff4c 	bl	800555c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2_1.setLineWidth(10);
 80066c4:	ee1f 0a90 	vmov	r0, s31
 80066c8:	210a      	movs	r1, #10
 80066ca:	f7fe ff4b 	bl	8005564 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 80066ce:	ee1f 0a90 	vmov	r0, s31
 80066d2:	4639      	mov	r1, r7
 80066d4:	f00a fdc2 	bl	801125c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80066d8:	ee1f 1a90 	vmov	r1, s31
 80066dc:	4620      	mov	r0, r4
 80066de:	f009 f83f 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxDS.setPosition(586, 150, 145, 42);
 80066e2:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 80066e6:	2391      	movs	r3, #145	; 0x91
 80066e8:	9833      	ldr	r0, [sp, #204]	; 0xcc
 80066ea:	f8cd e000 	str.w	lr, [sp]
 80066ee:	2296      	movs	r2, #150	; 0x96
 80066f0:	f240 214a 	movw	r1, #586	; 0x24a
 80066f4:	f7fc faf3 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 80066f8:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80066fc:	4add      	ldr	r2, [pc, #884]	; (8006a74 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f0>)
 80066fe:	f8cb ee8c 	str.w	lr, [fp, #3724]	; 0xe8c
 8006702:	9933      	ldr	r1, [sp, #204]	; 0xcc
 8006704:	f8cb 2e90 	str.w	r2, [fp, #3728]	; 0xe90
        borderSize = size;
 8006708:	f8ab 9e94 	strh.w	r9, [fp, #3732]	; 0xe94
 800670c:	4620      	mov	r0, r4
 800670e:	f009 f827 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelAS.setXY(766, 207);
 8006712:	22cf      	movs	r2, #207	; 0xcf
 8006714:	9802      	ldr	r0, [sp, #8]
 8006716:	f240 21fe 	movw	r1, #766	; 0x2fe
 800671a:	f7fc fad3 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800671e:	4628      	mov	r0, r5
 8006720:	9902      	ldr	r1, [sp, #8]
        color = newColor;
 8006722:	f8cb aec8 	str.w	sl, [fp, #3784]	; 0xec8
        linespace = space;
 8006726:	f8ab 7ecc 	strh.w	r7, [fp, #3788]	; 0xecc
        boundingArea = calculateBoundingArea();
 800672a:	f00b f9ef 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800672e:	9902      	ldr	r1, [sp, #8]
 8006730:	f101 083c 	add.w	r8, r1, #60	; 0x3c
 8006734:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 8006738:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 800673c:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8006740:	f88b ced0 	strb.w	ip, [fp, #3792]	; 0xed0
        boundingArea = calculateBoundingArea();
 8006744:	4628      	mov	r0, r5
 8006746:	9902      	ldr	r1, [sp, #8]
 8006748:	f00b f9e0 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800674c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006750:	4bc9      	ldr	r3, [pc, #804]	; (8006a78 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f4>)
 8006752:	9341      	str	r3, [sp, #260]	; 0x104
 8006754:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8006758:	2371      	movs	r3, #113	; 0x71
    labelAS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MIUL));
 800675a:	9802      	ldr	r0, [sp, #8]
 800675c:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006760:	4631      	mov	r1, r6
 8006762:	f00b fc6d 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006766:	9902      	ldr	r1, [sp, #8]
 8006768:	4620      	mov	r0, r4
 800676a:	f008 fff9 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxAS.setPosition(586, 195, 145, 42);
 800676e:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8006772:	2391      	movs	r3, #145	; 0x91
 8006774:	9834      	ldr	r0, [sp, #208]	; 0xd0
 8006776:	f8cd e000 	str.w	lr, [sp]
 800677a:	22c3      	movs	r2, #195	; 0xc3
 800677c:	f240 214a 	movw	r1, #586	; 0x24a
 8006780:	f7fc faad 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006784:	4abb      	ldr	r2, [pc, #748]	; (8006a74 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f0>)
 8006786:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8006788:	f8cb 2f0c 	str.w	r2, [fp, #3852]	; 0xf0c
 800678c:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8006790:	f8cb ef08 	str.w	lr, [fp, #3848]	; 0xf08
        borderSize = size;
 8006794:	f8ab 9f10 	strh.w	r9, [fp, #3856]	; 0xf10
 8006798:	4620      	mov	r0, r4
 800679a:	f008 ffe1 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_2_2.setPosition(751, 240, 15, 42);
 800679e:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 80067a2:	f8cd e000 	str.w	lr, [sp]
 80067a6:	230f      	movs	r3, #15
 80067a8:	9803      	ldr	r0, [sp, #12]
 80067aa:	22f0      	movs	r2, #240	; 0xf0
 80067ac:	f240 21ef 	movw	r1, #751	; 0x2ef
 80067b0:	f7fc fa95 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 80067b4:	993b      	ldr	r1, [sp, #236]	; 0xec
    line1_2_2.setStart(0, 0);
 80067b6:	9803      	ldr	r0, [sp, #12]
 80067b8:	f8cb 1f3c 	str.w	r1, [fp, #3900]	; 0xf3c
 80067bc:	463a      	mov	r2, r7
 80067be:	4639      	mov	r1, r7
 80067c0:	f8cb af90 	str.w	sl, [fp, #3984]	; 0xf90
 80067c4:	f8ab af94 	strh.w	sl, [fp, #3988]	; 0xf94
 80067c8:	f7fe fec4 	bl	8005554 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2_2.setEnd(0, 45);
 80067cc:	222d      	movs	r2, #45	; 0x2d
 80067ce:	9803      	ldr	r0, [sp, #12]
 80067d0:	4639      	mov	r1, r7
 80067d2:	f7fe fec3 	bl	800555c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2_2.setLineWidth(10);
 80067d6:	9803      	ldr	r0, [sp, #12]
 80067d8:	210a      	movs	r1, #10
 80067da:	f7fe fec3 	bl	8005564 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2_2.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 80067de:	9803      	ldr	r0, [sp, #12]
 80067e0:	4639      	mov	r1, r7
 80067e2:	f00a fd3b 	bl	801125c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80067e6:	9903      	ldr	r1, [sp, #12]
 80067e8:	4620      	mov	r0, r4
 80067ea:	f008 ffb9 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxAMI.setPosition(586, 240, 145, 42);
 80067ee:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 80067f2:	2391      	movs	r3, #145	; 0x91
 80067f4:	9835      	ldr	r0, [sp, #212]	; 0xd4
 80067f6:	f8cd e000 	str.w	lr, [sp]
 80067fa:	22f0      	movs	r2, #240	; 0xf0
 80067fc:	f240 214a 	movw	r1, #586	; 0x24a
 8006800:	f7fc fa6d 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006804:	4a9b      	ldr	r2, [pc, #620]	; (8006a74 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f0>)
 8006806:	9935      	ldr	r1, [sp, #212]	; 0xd4
 8006808:	f8cb 2fc4 	str.w	r2, [fp, #4036]	; 0xfc4
 800680c:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8006810:	f8cb efc0 	str.w	lr, [fp, #4032]	; 0xfc0
        borderSize = size;
 8006814:	f8ab 9fc8 	strh.w	r9, [fp, #4040]	; 0xfc8
 8006818:	4620      	mov	r0, r4
 800681a:	f008 ffa1 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_2_1_1_1.setPosition(751, 284, 15, 42);
 800681e:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8006822:	f50b 5880 	add.w	r8, fp, #4096	; 0x1000
 8006826:	f8cd e000 	str.w	lr, [sp]
 800682a:	230f      	movs	r3, #15
 800682c:	9804      	ldr	r0, [sp, #16]
 800682e:	f44f 728e 	mov.w	r2, #284	; 0x11c
 8006832:	f240 21ef 	movw	r1, #751	; 0x2ef
 8006836:	f7fc fa52 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800683a:	9926      	ldr	r1, [sp, #152]	; 0x98
    line1_2_1_1_1.setStart(0, 0);
 800683c:	9804      	ldr	r0, [sp, #16]
 800683e:	f8c8 a048 	str.w	sl, [r8, #72]	; 0x48
 8006842:	f8a8 a04c 	strh.w	sl, [r8, #76]	; 0x4c
 8006846:	463a      	mov	r2, r7
 8006848:	f8cb 1ff4 	str.w	r1, [fp, #4084]	; 0xff4
 800684c:	4639      	mov	r1, r7
 800684e:	f7fe fe81 	bl	8005554 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2_1_1_1.setEnd(0, 45);
 8006852:	222d      	movs	r2, #45	; 0x2d
 8006854:	9804      	ldr	r0, [sp, #16]
 8006856:	4639      	mov	r1, r7
 8006858:	f7fe fe80 	bl	800555c <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2_1_1_1.setLineWidth(10);
 800685c:	9804      	ldr	r0, [sp, #16]
 800685e:	210a      	movs	r1, #10
 8006860:	f7fe fe80 	bl	8005564 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2_1_1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8006864:	9804      	ldr	r0, [sp, #16]
 8006866:	4639      	mov	r1, r7
 8006868:	f00a fcf8 	bl	801125c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800686c:	9904      	ldr	r1, [sp, #16]
 800686e:	4620      	mov	r0, r4
 8006870:	f008 ff76 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxEBS.setPosition(586, 284, 145, 42);
 8006874:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8006878:	2391      	movs	r3, #145	; 0x91
 800687a:	981c      	ldr	r0, [sp, #112]	; 0x70
 800687c:	f8cd e000 	str.w	lr, [sp]
 8006880:	f44f 728e 	mov.w	r2, #284	; 0x11c
 8006884:	f240 214a 	movw	r1, #586	; 0x24a
 8006888:	f7fc fa29 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800688c:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8006890:	4a78      	ldr	r2, [pc, #480]	; (8006a74 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f0>)
 8006892:	f8c8 e078 	str.w	lr, [r8, #120]	; 0x78
 8006896:	991c      	ldr	r1, [sp, #112]	; 0x70
 8006898:	f8c8 207c 	str.w	r2, [r8, #124]	; 0x7c
        borderSize = size;
 800689c:	f8a8 9080 	strh.w	r9, [r8, #128]	; 0x80
 80068a0:	4620      	mov	r0, r4
 80068a2:	f008 ff5d 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelAS_1.setXY(767, 247);
 80068a6:	22f7      	movs	r2, #247	; 0xf7
 80068a8:	ee1b 0a10 	vmov	r0, s22
 80068ac:	f240 21ff 	movw	r1, #767	; 0x2ff
 80068b0:	f7fc fa08 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80068b4:	4628      	mov	r0, r5
 80068b6:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 80068ba:	f8c8 a0b4 	str.w	sl, [r8, #180]	; 0xb4
        linespace = space;
 80068be:	f8a8 70b8 	strh.w	r7, [r8, #184]	; 0xb8
        boundingArea = calculateBoundingArea();
 80068c2:	f00b f923 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80068c6:	ee1b 1a10 	vmov	r1, s22
 80068ca:	f101 093c 	add.w	r9, r1, #60	; 0x3c
 80068ce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 80068d2:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 80068d6:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 80068da:	f888 c0bc 	strb.w	ip, [r8, #188]	; 0xbc
        boundingArea = calculateBoundingArea();
 80068de:	4628      	mov	r0, r5
 80068e0:	ee1b 1a10 	vmov	r1, s22
 80068e4:	f00b f912 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80068e8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80068ec:	4b62      	ldr	r3, [pc, #392]	; (8006a78 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f4>)
 80068ee:	9341      	str	r3, [sp, #260]	; 0x104
 80068f0:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 80068f4:	2370      	movs	r3, #112	; 0x70
    labelAS_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D9LL));
 80068f6:	ee1b 0a10 	vmov	r0, s22
 80068fa:	4631      	mov	r1, r6
 80068fc:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006900:	f00b fb9e 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006904:	ee1b 1a10 	vmov	r1, s22
 8006908:	4620      	mov	r0, r4
 800690a:	f008 ff29 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelAS_2.setXY(766, 290);
 800690e:	f44f 7291 	mov.w	r2, #290	; 0x122
 8006912:	ee1b 0a90 	vmov	r0, s23
 8006916:	f240 21fe 	movw	r1, #766	; 0x2fe
 800691a:	f7fc f9d3 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800691e:	4628      	mov	r0, r5
 8006920:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 8006924:	f8c8 a0fc 	str.w	sl, [r8, #252]	; 0xfc
        linespace = space;
 8006928:	f8a8 7100 	strh.w	r7, [r8, #256]	; 0x100
        boundingArea = calculateBoundingArea();
 800692c:	f00b f8ee 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006930:	ee1b 1a90 	vmov	r1, s23
 8006934:	f101 093c 	add.w	r9, r1, #60	; 0x3c
 8006938:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 800693c:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 8006940:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8006944:	4628      	mov	r0, r5
 8006946:	ee1b 1a90 	vmov	r1, s23
        rotation = textRotation;
 800694a:	f888 c104 	strb.w	ip, [r8, #260]	; 0x104
        boundingArea = calculateBoundingArea();
 800694e:	f00b f8dd 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006952:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006956:	4b48      	ldr	r3, [pc, #288]	; (8006a78 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f4>)
 8006958:	9341      	str	r3, [sp, #260]	; 0x104
 800695a:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 800695e:	f04f 0c6f 	mov.w	ip, #111	; 0x6f
    labelAS_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W7WZ));
 8006962:	ee1b 0a90 	vmov	r0, s23
 8006966:	4631      	mov	r1, r6
 8006968:	f8ad c108 	strh.w	ip, [sp, #264]	; 0x108
 800696c:	f00b fb68 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006970:	ee1b 1a90 	vmov	r1, s23
 8006974:	4620      	mov	r0, r4
 8006976:	f008 fef3 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtDS.setXY(595, 158);
 800697a:	229e      	movs	r2, #158	; 0x9e
 800697c:	f240 2153 	movw	r1, #595	; 0x253
 8006980:	9805      	ldr	r0, [sp, #20]
 8006982:	f7fc f99f 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006986:	f8c8 a144 	str.w	sl, [r8, #324]	; 0x144
        linespace = space;
 800698a:	f8a8 7148 	strh.w	r7, [r8, #328]	; 0x148
        return TextArea::BoundingArea();
 800698e:	4630      	mov	r0, r6
 8006990:	f7fc fb34 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006994:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006998:	f508 73a8 	add.w	r3, r8, #336	; 0x150
 800699c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80069a0:	4b36      	ldr	r3, [pc, #216]	; (8006a7c <_ZN23MainInfotaimentViewBaseC1Ev+0x14f8>)
 80069a2:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtDSBuffer, TXTDS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Q3EN).getText());
 80069a4:	f50b 55ba 	add.w	r5, fp, #5952	; 0x1740
 80069a8:	3508      	adds	r5, #8
 80069aa:	2b00      	cmp	r3, #0
 80069ac:	f43f a87e 	beq.w	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80069b0:	4933      	ldr	r1, [pc, #204]	; (8006a80 <_ZN23MainInfotaimentViewBaseC1Ev+0x14fc>)
 80069b2:	880b      	ldrh	r3, [r1, #0]
 80069b4:	2b6d      	cmp	r3, #109	; 0x6d
 80069b6:	f67f a883 	bls.w	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 80069ba:	4832      	ldr	r0, [pc, #200]	; (8006a84 <_ZN23MainInfotaimentViewBaseC1Ev+0x1500>)
 80069bc:	216d      	movs	r1, #109	; 0x6d
 80069be:	6800      	ldr	r0, [r0, #0]
 80069c0:	f001 fbc4 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 80069c4:	4a30      	ldr	r2, [pc, #192]	; (8006a88 <_ZN23MainInfotaimentViewBaseC1Ev+0x1504>)
 80069c6:	4603      	mov	r3, r0
 80069c8:	2128      	movs	r1, #40	; 0x28
 80069ca:	4628      	mov	r0, r5
 80069cc:	f011 fbd4 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtDS.resizeToCurrentText();
 80069d0:	9805      	ldr	r0, [sp, #20]
        wc1 = value;
 80069d2:	f8c8 515c 	str.w	r5, [r8, #348]	; 0x15c
 80069d6:	f00b fb13 	bl	8012000 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80069da:	4d27      	ldr	r5, [pc, #156]	; (8006a78 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f4>)
    txtDS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J40F));
 80069dc:	9805      	ldr	r0, [sp, #20]
 80069de:	9541      	str	r5, [sp, #260]	; 0x104
 80069e0:	236e      	movs	r3, #110	; 0x6e
 80069e2:	4631      	mov	r1, r6
 80069e4:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 80069e8:	f00b fb2a 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069ec:	9905      	ldr	r1, [sp, #20]
 80069ee:	4620      	mov	r0, r4
 80069f0:	f008 feb6 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtAS.setXY(595, 202);
 80069f4:	22ca      	movs	r2, #202	; 0xca
 80069f6:	f240 2153 	movw	r1, #595	; 0x253
 80069fa:	981d      	ldr	r0, [sp, #116]	; 0x74
 80069fc:	f7fc f962 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006a00:	f8c8 a190 	str.w	sl, [r8, #400]	; 0x190
        linespace = space;
 8006a04:	f8a8 7194 	strh.w	r7, [r8, #404]	; 0x194
        return TextArea::BoundingArea();
 8006a08:	4630      	mov	r0, r6
 8006a0a:	f7fc faf7 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006a0e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006a12:	f508 73ce 	add.w	r3, r8, #412	; 0x19c
 8006a16:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006a1a:	4b18      	ldr	r3, [pc, #96]	; (8006a7c <_ZN23MainInfotaimentViewBaseC1Ev+0x14f8>)
 8006a1c:	681b      	ldr	r3, [r3, #0]
 8006a1e:	2b00      	cmp	r3, #0
 8006a20:	f43f a844 	beq.w	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a24:	4916      	ldr	r1, [pc, #88]	; (8006a80 <_ZN23MainInfotaimentViewBaseC1Ev+0x14fc>)
 8006a26:	880b      	ldrh	r3, [r1, #0]
 8006a28:	2b6b      	cmp	r3, #107	; 0x6b
 8006a2a:	f67f a849 	bls.w	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006a2e:	4815      	ldr	r0, [pc, #84]	; (8006a84 <_ZN23MainInfotaimentViewBaseC1Ev+0x1500>)
 8006a30:	216b      	movs	r1, #107	; 0x6b
 8006a32:	6800      	ldr	r0, [r0, #0]
 8006a34:	f001 fb8a 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
        wc1 = value;
 8006a38:	f8c8 01a8 	str.w	r0, [r8, #424]	; 0x1a8
    txtAS.resizeToCurrentText();
 8006a3c:	981d      	ldr	r0, [sp, #116]	; 0x74
 8006a3e:	f00b fadf 	bl	8012000 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006a42:	236c      	movs	r3, #108	; 0x6c
    txtAS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0J70));
 8006a44:	4631      	mov	r1, r6
 8006a46:	981d      	ldr	r0, [sp, #116]	; 0x74
 8006a48:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006a4c:	9541      	str	r5, [sp, #260]	; 0x104
 8006a4e:	f00b faf7 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a52:	991d      	ldr	r1, [sp, #116]	; 0x74
 8006a54:	4620      	mov	r0, r4
 8006a56:	f008 fe83 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtAMI.setXY(595, 247);
 8006a5a:	22f7      	movs	r2, #247	; 0xf7
 8006a5c:	f240 2153 	movw	r1, #595	; 0x253
 8006a60:	9806      	ldr	r0, [sp, #24]
 8006a62:	f7fc f92f 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006a66:	f8c8 a1dc 	str.w	sl, [r8, #476]	; 0x1dc
        linespace = space;
 8006a6a:	f8a8 71e0 	strh.w	r7, [r8, #480]	; 0x1e0
        return TextArea::BoundingArea();
 8006a6e:	4630      	mov	r0, r6
 8006a70:	e00c      	b.n	8006a8c <_ZN23MainInfotaimentViewBaseC1Ev+0x1508>
 8006a72:	bf00      	nop
 8006a74:	ffffea00 	.word	0xffffea00
 8006a78:	080284a8 	.word	0x080284a8
 8006a7c:	2000ef74 	.word	0x2000ef74
 8006a80:	2000ef78 	.word	0x2000ef78
 8006a84:	2000ef80 	.word	0x2000ef80
 8006a88:	08028432 	.word	0x08028432
 8006a8c:	f7fc fab6 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006a90:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006a94:	f508 78f4 	add.w	r8, r8, #488	; 0x1e8
 8006a98:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006a9c:	48d7      	ldr	r0, [pc, #860]	; (8006dfc <_ZN23MainInfotaimentViewBaseC1Ev+0x1878>)
 8006a9e:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(txtAMIBuffer, TXTAMI_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VLUE).getText());
 8006aa0:	f50b 56bc 	add.w	r6, fp, #6016	; 0x1780
 8006aa4:	3618      	adds	r6, #24
 8006aa6:	2b00      	cmp	r3, #0
 8006aa8:	f43f a800 	beq.w	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006aac:	49d4      	ldr	r1, [pc, #848]	; (8006e00 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006aae:	880b      	ldrh	r3, [r1, #0]
 8006ab0:	2b69      	cmp	r3, #105	; 0x69
 8006ab2:	f67f a805 	bls.w	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006ab6:	f8df 8358 	ldr.w	r8, [pc, #856]	; 8006e10 <_ZN23MainInfotaimentViewBaseC1Ev+0x188c>
 8006aba:	2169      	movs	r1, #105	; 0x69
 8006abc:	f8d8 0000 	ldr.w	r0, [r8]
 8006ac0:	f001 fb44 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
        wc1 = value;
 8006ac4:	f50b 5580 	add.w	r5, fp, #4096	; 0x1000
 8006ac8:	4ace      	ldr	r2, [pc, #824]	; (8006e04 <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 8006aca:	4603      	mov	r3, r0
 8006acc:	2128      	movs	r1, #40	; 0x28
 8006ace:	4630      	mov	r0, r6
 8006ad0:	f011 fb52 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtAMI.resizeToCurrentText();
 8006ad4:	9806      	ldr	r0, [sp, #24]
 8006ad6:	f8c5 61f4 	str.w	r6, [r5, #500]	; 0x1f4
 8006ada:	f00b fa91 	bl	8012000 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    txtAMI.setTypedText(touchgfx::TypedText(T___SINGLEUSE_74WN));
 8006ade:	ae41      	add	r6, sp, #260	; 0x104
        : typedTextId(id)
 8006ae0:	4bc9      	ldr	r3, [pc, #804]	; (8006e08 <_ZN23MainInfotaimentViewBaseC1Ev+0x1884>)
 8006ae2:	9806      	ldr	r0, [sp, #24]
 8006ae4:	9341      	str	r3, [sp, #260]	; 0x104
 8006ae6:	4631      	mov	r1, r6
 8006ae8:	236a      	movs	r3, #106	; 0x6a
 8006aea:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006aee:	f00b faa7 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006af2:	9906      	ldr	r1, [sp, #24]
 8006af4:	4620      	mov	r0, r4
 8006af6:	f008 fe33 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtEBS.setXY(595, 293);
 8006afa:	f240 1225 	movw	r2, #293	; 0x125
 8006afe:	f240 2153 	movw	r1, #595	; 0x253
 8006b02:	9807      	ldr	r0, [sp, #28]
 8006b04:	f7fc f8de 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006b08:	f8c5 a228 	str.w	sl, [r5, #552]	; 0x228
        linespace = space;
 8006b0c:	f8a5 722c 	strh.w	r7, [r5, #556]	; 0x22c
        return TextArea::BoundingArea();
 8006b10:	4630      	mov	r0, r6
 8006b12:	f7fc fa73 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006b16:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        linespace = space;
 8006b1a:	46b9      	mov	r9, r7
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006b1c:	4fb7      	ldr	r7, [pc, #732]	; (8006dfc <_ZN23MainInfotaimentViewBaseC1Ev+0x1878>)
        boundingArea = calculateBoundingArea();
 8006b1e:	f505 730d 	add.w	r3, r5, #564	; 0x234
 8006b22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b26:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtEBSBuffer, TXTEBS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_V415).getText());
 8006b28:	f50b 5abf 	add.w	sl, fp, #6112	; 0x17e0
 8006b2c:	f10a 0a08 	add.w	sl, sl, #8
 8006b30:	2b00      	cmp	r3, #0
 8006b32:	f43e afbb 	beq.w	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006b36:	49b2      	ldr	r1, [pc, #712]	; (8006e00 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006b38:	880b      	ldrh	r3, [r1, #0]
 8006b3a:	2b67      	cmp	r3, #103	; 0x67
 8006b3c:	f67e afc0 	bls.w	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006b40:	2167      	movs	r1, #103	; 0x67
 8006b42:	f8d8 0000 	ldr.w	r0, [r8]
 8006b46:	f001 fb01 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8006b4a:	4aae      	ldr	r2, [pc, #696]	; (8006e04 <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 8006b4c:	4603      	mov	r3, r0
 8006b4e:	210a      	movs	r1, #10
 8006b50:	4650      	mov	r0, sl
 8006b52:	f011 fb11 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtEBS.resizeToCurrentText();
 8006b56:	9807      	ldr	r0, [sp, #28]
        wc1 = value;
 8006b58:	f8c5 a240 	str.w	sl, [r5, #576]	; 0x240
 8006b5c:	f00b fa50 	bl	8012000 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006b60:	4ba9      	ldr	r3, [pc, #676]	; (8006e08 <_ZN23MainInfotaimentViewBaseC1Ev+0x1884>)
    txtEBS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HJ17));
 8006b62:	9807      	ldr	r0, [sp, #28]
 8006b64:	9341      	str	r3, [sp, #260]	; 0x104
 8006b66:	4631      	mov	r1, r6
 8006b68:	2368      	movs	r3, #104	; 0x68
 8006b6a:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006b6e:	f00b fa67 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b72:	9907      	ldr	r1, [sp, #28]
 8006b74:	4620      	mov	r0, r4
 8006b76:	f008 fdf3 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBattery_V.setPosition(526, 376, 87, 38);
 8006b7a:	2026      	movs	r0, #38	; 0x26
 8006b7c:	2357      	movs	r3, #87	; 0x57
 8006b7e:	9000      	str	r0, [sp, #0]
 8006b80:	f44f 72bc 	mov.w	r2, #376	; 0x178
 8006b84:	981e      	ldr	r0, [sp, #120]	; 0x78
 8006b86:	f240 210e 	movw	r1, #526	; 0x20e
 8006b8a:	f7fc f8a8 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006b8e:	4a9f      	ldr	r2, [pc, #636]	; (8006e0c <_ZN23MainInfotaimentViewBaseC1Ev+0x1888>)
 8006b90:	991e      	ldr	r1, [sp, #120]	; 0x78
 8006b92:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8006b96:	e9c5 029b 	strd	r0, r2, [r5, #620]	; 0x26c
        borderSize = size;
 8006b9a:	f04f 0005 	mov.w	r0, #5
 8006b9e:	f8a5 0274 	strh.w	r0, [r5, #628]	; 0x274
 8006ba2:	4620      	mov	r0, r4
 8006ba4:	f008 fddc 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtBattery_V.setPosition(536, 386, 70, 19);
 8006ba8:	f04f 0c13 	mov.w	ip, #19
 8006bac:	2346      	movs	r3, #70	; 0x46
 8006bae:	f44f 72c1 	mov.w	r2, #386	; 0x182
 8006bb2:	f44f 7106 	mov.w	r1, #536	; 0x218
 8006bb6:	980e      	ldr	r0, [sp, #56]	; 0x38
 8006bb8:	f8cd c000 	str.w	ip, [sp]
 8006bbc:	f7fc f88f 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006bc0:	f04f 3cff 	mov.w	ip, #4294967295
 8006bc4:	f8c5 c2a8 	str.w	ip, [r5, #680]	; 0x2a8
        linespace = space;
 8006bc8:	f8a5 92ac 	strh.w	r9, [r5, #684]	; 0x2ac
        return TextArea::BoundingArea();
 8006bcc:	4630      	mov	r0, r6
 8006bce:	f7fc fa15 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006bd2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006bd6:	f505 732d 	add.w	r3, r5, #692	; 0x2b4
 8006bda:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006bde:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtBattery_VBuffer, TXTBATTERY_V_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G99E).getText());
 8006be0:	f50b 5abf 	add.w	sl, fp, #6112	; 0x17e0
 8006be4:	f10a 0a1c 	add.w	sl, sl, #28
 8006be8:	2b00      	cmp	r3, #0
 8006bea:	f43e af5f 	beq.w	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006bee:	4984      	ldr	r1, [pc, #528]	; (8006e00 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006bf0:	880b      	ldrh	r3, [r1, #0]
 8006bf2:	2b64      	cmp	r3, #100	; 0x64
 8006bf4:	f67e af64 	bls.w	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006bf8:	2164      	movs	r1, #100	; 0x64
 8006bfa:	f8d8 0000 	ldr.w	r0, [r8]
 8006bfe:	f001 faa5 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8006c02:	4a80      	ldr	r2, [pc, #512]	; (8006e04 <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 8006c04:	4603      	mov	r3, r0
 8006c06:	2106      	movs	r1, #6
 8006c08:	4650      	mov	r0, sl
 8006c0a:	f011 fab5 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006c0e:	4b7e      	ldr	r3, [pc, #504]	; (8006e08 <_ZN23MainInfotaimentViewBaseC1Ev+0x1884>)
    txtBattery_V.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J87C));
 8006c10:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8006c12:	f8c5 a2c0 	str.w	sl, [r5, #704]	; 0x2c0
 8006c16:	9341      	str	r3, [sp, #260]	; 0x104
 8006c18:	4631      	mov	r1, r6
 8006c1a:	2365      	movs	r3, #101	; 0x65
 8006c1c:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006c20:	f00b fa0e 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c24:	990e      	ldr	r1, [sp, #56]	; 0x38
 8006c26:	4620      	mov	r0, r4
 8006c28:	f008 fd9a 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgOilPres.setXY(242, 293);
 8006c2c:	f240 1225 	movw	r2, #293	; 0x125
 8006c30:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8006c32:	21f2      	movs	r1, #242	; 0xf2
 8006c34:	f7fc f846 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 8006c38:	2311      	movs	r3, #17
    imgOilPres.setBitmap(touchgfx::Bitmap(BITMAP_OIL_PRES_OK_ID));
 8006c3a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8006c3c:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006c40:	4631      	mov	r1, r6
 8006c42:	f00b fc29 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c46:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006c48:	4620      	mov	r0, r4
 8006c4a:	f008 fd89 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPFuel.setPosition(150, 253, 90, 38);
 8006c4e:	f04f 0c26 	mov.w	ip, #38	; 0x26
 8006c52:	235a      	movs	r3, #90	; 0x5a
 8006c54:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8006c56:	f8cd c000 	str.w	ip, [sp]
 8006c5a:	22fd      	movs	r2, #253	; 0xfd
 8006c5c:	2196      	movs	r1, #150	; 0x96
 8006c5e:	f7fc f83e 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006c62:	4a6a      	ldr	r2, [pc, #424]	; (8006e0c <_ZN23MainInfotaimentViewBaseC1Ev+0x1888>)
 8006c64:	991f      	ldr	r1, [sp, #124]	; 0x7c
 8006c66:	f8c5 231c 	str.w	r2, [r5, #796]	; 0x31c
 8006c6a:	f04f 4c7f 	mov.w	ip, #4278190080	; 0xff000000
        borderSize = size;
 8006c6e:	f04f 0005 	mov.w	r0, #5
 8006c72:	f8c5 c318 	str.w	ip, [r5, #792]	; 0x318
 8006c76:	f8a5 0320 	strh.w	r0, [r5, #800]	; 0x320
 8006c7a:	4620      	mov	r0, r4
 8006c7c:	f008 fd70 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtPFuel.setPosition(157, 263, 75, 19);
 8006c80:	f04f 0c13 	mov.w	ip, #19
 8006c84:	234b      	movs	r3, #75	; 0x4b
 8006c86:	f240 1207 	movw	r2, #263	; 0x107
 8006c8a:	219d      	movs	r1, #157	; 0x9d
 8006c8c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006c8e:	f8cd c000 	str.w	ip, [sp]
 8006c92:	f7fc f824 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006c96:	f04f 3cff 	mov.w	ip, #4294967295
 8006c9a:	f8c5 c354 	str.w	ip, [r5, #852]	; 0x354
        linespace = space;
 8006c9e:	f8a5 9358 	strh.w	r9, [r5, #856]	; 0x358
        return TextArea::BoundingArea();
 8006ca2:	4630      	mov	r0, r6
 8006ca4:	f7fc f9aa 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006ca8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006cac:	f50b 539b 	add.w	r3, fp, #4960	; 0x1360
 8006cb0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006cb4:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtPFuelBuffer, TXTPFUEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B7Z3).getText());
 8006cb6:	f50b 5ac0 	add.w	sl, fp, #6144	; 0x1800
 8006cba:	f10a 0a08 	add.w	sl, sl, #8
 8006cbe:	2b00      	cmp	r3, #0
 8006cc0:	f43e aef4 	beq.w	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006cc4:	494e      	ldr	r1, [pc, #312]	; (8006e00 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006cc6:	880b      	ldrh	r3, [r1, #0]
 8006cc8:	2b55      	cmp	r3, #85	; 0x55
 8006cca:	f67e aef9 	bls.w	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006cce:	2155      	movs	r1, #85	; 0x55
 8006cd0:	f8d8 0000 	ldr.w	r0, [r8]
 8006cd4:	f001 fa3a 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8006cd8:	4a4a      	ldr	r2, [pc, #296]	; (8006e04 <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 8006cda:	4603      	mov	r3, r0
 8006cdc:	2106      	movs	r1, #6
 8006cde:	4650      	mov	r0, sl
 8006ce0:	f011 fa4a 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006ce4:	4b48      	ldr	r3, [pc, #288]	; (8006e08 <_ZN23MainInfotaimentViewBaseC1Ev+0x1884>)
    txtPFuel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EUMO));
 8006ce6:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8006ce8:	f8c5 a36c 	str.w	sl, [r5, #876]	; 0x36c
 8006cec:	9341      	str	r3, [sp, #260]	; 0x104
 8006cee:	4631      	mov	r1, r6
 8006cf0:	2356      	movs	r3, #86	; 0x56
 8006cf2:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006cf6:	f00b f9a3 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006cfa:	9910      	ldr	r1, [sp, #64]	; 0x40
 8006cfc:	4620      	mov	r0, r4
 8006cfe:	f008 fd2f 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgOilTemp.setXY(242, 330);
 8006d02:	f44f 72a5 	mov.w	r2, #330	; 0x14a
 8006d06:	9811      	ldr	r0, [sp, #68]	; 0x44
 8006d08:	21f2      	movs	r1, #242	; 0xf2
 8006d0a:	f7fb ffdb 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 8006d0e:	2314      	movs	r3, #20
    imgOilTemp.setBitmap(touchgfx::Bitmap(BITMAP_OIL_TEMP_OK_ID));
 8006d10:	9811      	ldr	r0, [sp, #68]	; 0x44
 8006d12:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006d16:	4631      	mov	r1, r6
 8006d18:	f00b fbbe 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d1c:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006d1e:	4620      	mov	r0, r4
 8006d20:	f008 fd1e 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgWaterTemp.setXY(242, 377);
 8006d24:	f240 1279 	movw	r2, #377	; 0x179
 8006d28:	9812      	ldr	r0, [sp, #72]	; 0x48
 8006d2a:	21f2      	movs	r1, #242	; 0xf2
 8006d2c:	f7fb ffca 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 8006d30:	2319      	movs	r3, #25
    imgWaterTemp.setBitmap(touchgfx::Bitmap(BITMAP_WATER_LOW_ID));
 8006d32:	9812      	ldr	r0, [sp, #72]	; 0x48
 8006d34:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006d38:	4631      	mov	r1, r6
 8006d3a:	f00b fbad 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d3e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8006d40:	4620      	mov	r0, r4
 8006d42:	f008 fd0d 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgTOrin.setXY(246, 415);
 8006d46:	f240 129f 	movw	r2, #415	; 0x19f
 8006d4a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8006d4c:	21f6      	movs	r1, #246	; 0xf6
 8006d4e:	f7fb ffb9 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 8006d52:	2316      	movs	r3, #22
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_OK_ID));
 8006d54:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8006d56:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006d5a:	4631      	mov	r1, r6
 8006d5c:	f00b fb9c 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d60:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8006d62:	4620      	mov	r0, r4
 8006d64:	f008 fcfc 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTOrin.setPosition(150, 413, 90, 38);
 8006d68:	f04f 0c26 	mov.w	ip, #38	; 0x26
 8006d6c:	235a      	movs	r3, #90	; 0x5a
 8006d6e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8006d70:	f8cd c000 	str.w	ip, [sp]
 8006d74:	f240 129d 	movw	r2, #413	; 0x19d
 8006d78:	2196      	movs	r1, #150	; 0x96
 8006d7a:	f7fb ffb0 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006d7e:	4a23      	ldr	r2, [pc, #140]	; (8006e0c <_ZN23MainInfotaimentViewBaseC1Ev+0x1888>)
 8006d80:	9920      	ldr	r1, [sp, #128]	; 0x80
 8006d82:	f8c5 2420 	str.w	r2, [r5, #1056]	; 0x420
 8006d86:	f04f 4c7f 	mov.w	ip, #4278190080	; 0xff000000
        borderSize = size;
 8006d8a:	f04f 0005 	mov.w	r0, #5
 8006d8e:	f8c5 c41c 	str.w	ip, [r5, #1052]	; 0x41c
 8006d92:	f8a5 0424 	strh.w	r0, [r5, #1060]	; 0x424
 8006d96:	4620      	mov	r0, r4
 8006d98:	f008 fce2 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTOrin.setPosition(157, 423, 75, 19);
 8006d9c:	f04f 0c13 	mov.w	ip, #19
 8006da0:	234b      	movs	r3, #75	; 0x4b
 8006da2:	f240 12a7 	movw	r2, #423	; 0x1a7
 8006da6:	219d      	movs	r1, #157	; 0x9d
 8006da8:	9814      	ldr	r0, [sp, #80]	; 0x50
 8006daa:	f8cd c000 	str.w	ip, [sp]
 8006dae:	f7fb ff96 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006db2:	f04f 3cff 	mov.w	ip, #4294967295
 8006db6:	f8c5 c458 	str.w	ip, [r5, #1112]	; 0x458
        linespace = space;
 8006dba:	f8a5 945c 	strh.w	r9, [r5, #1116]	; 0x45c
        return TextArea::BoundingArea();
 8006dbe:	4630      	mov	r0, r6
 8006dc0:	f7fc f91c 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006dc4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006dc8:	f205 4364 	addw	r3, r5, #1124	; 0x464
 8006dcc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006dd0:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtTOrinBuffer, TXTTORIN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IMBT).getText());
 8006dd2:	f50b 5ac0 	add.w	sl, fp, #6144	; 0x1800
 8006dd6:	f10a 0a14 	add.w	sl, sl, #20
 8006dda:	2b00      	cmp	r3, #0
 8006ddc:	f43e ae66 	beq.w	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006de0:	4907      	ldr	r1, [pc, #28]	; (8006e00 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006de2:	880b      	ldrh	r3, [r1, #0]
 8006de4:	2b5f      	cmp	r3, #95	; 0x5f
 8006de6:	f67e ae6b 	bls.w	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006dea:	f8d8 0000 	ldr.w	r0, [r8]
 8006dee:	215f      	movs	r1, #95	; 0x5f
 8006df0:	f001 f9ac 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8006df4:	4a03      	ldr	r2, [pc, #12]	; (8006e04 <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 8006df6:	4603      	mov	r3, r0
 8006df8:	2104      	movs	r1, #4
 8006dfa:	e00b      	b.n	8006e14 <_ZN23MainInfotaimentViewBaseC1Ev+0x1890>
 8006dfc:	2000ef74 	.word	0x2000ef74
 8006e00:	2000ef78 	.word	0x2000ef78
 8006e04:	08028432 	.word	0x08028432
 8006e08:	080284a8 	.word	0x080284a8
 8006e0c:	ffffea00 	.word	0xffffea00
 8006e10:	2000ef80 	.word	0x2000ef80
 8006e14:	4650      	mov	r0, sl
 8006e16:	f011 f9af 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006e1a:	4bc7      	ldr	r3, [pc, #796]	; (8007138 <_ZN23MainInfotaimentViewBaseC1Ev+0x1bb4>)
        wc1 = value;
 8006e1c:	f8c5 a470 	str.w	sl, [r5, #1136]	; 0x470
    txtTOrin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9UXZ));
 8006e20:	4631      	mov	r1, r6
 8006e22:	9814      	ldr	r0, [sp, #80]	; 0x50
 8006e24:	9341      	str	r3, [sp, #260]	; 0x104
 8006e26:	2360      	movs	r3, #96	; 0x60
 8006e28:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006e2c:	f00b f908 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e30:	9914      	ldr	r1, [sp, #80]	; 0x50
 8006e32:	4620      	mov	r0, r4
 8006e34:	f008 fc94 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgBatteryV.setXY(529, 337);
 8006e38:	f240 1251 	movw	r2, #337	; 0x151
 8006e3c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8006e3e:	f240 2111 	movw	r1, #529	; 0x211
 8006e42:	f7fb ff3f 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 8006e46:	f04f 0807 	mov.w	r8, #7
    imgBatteryV.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_OK_ID));
 8006e4a:	4631      	mov	r1, r6
 8006e4c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8006e4e:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8006e52:	f00b fb21 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006e56:	9915      	ldr	r1, [sp, #84]	; 0x54
 8006e58:	4620      	mov	r0, r4
 8006e5a:	f008 fc81 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    img24v.setXY(609, 337);
 8006e5e:	f240 1251 	movw	r2, #337	; 0x151
 8006e62:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8006e64:	f240 2161 	movw	r1, #609	; 0x261
 8006e68:	f7fb ff2c 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    img24v.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_OK_ID));
 8006e6c:	4631      	mov	r1, r6
 8006e6e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8006e70:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8006e74:	f00b fb10 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006e78:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8006e7a:	4620      	mov	r0, r4
 8006e7c:	f008 fc70 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box24v.setPosition(608, 376, 87, 38);
 8006e80:	2326      	movs	r3, #38	; 0x26
 8006e82:	9821      	ldr	r0, [sp, #132]	; 0x84
 8006e84:	9300      	str	r3, [sp, #0]
 8006e86:	f44f 72bc 	mov.w	r2, #376	; 0x178
 8006e8a:	2357      	movs	r3, #87	; 0x57
 8006e8c:	f44f 7118 	mov.w	r1, #608	; 0x260
 8006e90:	f7fb ff25 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006e94:	4aa9      	ldr	r2, [pc, #676]	; (800713c <_ZN23MainInfotaimentViewBaseC1Ev+0x1bb8>)
 8006e96:	f8c5 24f8 	str.w	r2, [r5, #1272]	; 0x4f8
 8006e9a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderSize = size;
 8006e9e:	f04f 0005 	mov.w	r0, #5
 8006ea2:	f8c5 34f4 	str.w	r3, [r5, #1268]	; 0x4f4
 8006ea6:	f8a5 04fc 	strh.w	r0, [r5, #1276]	; 0x4fc
 8006eaa:	9921      	ldr	r1, [sp, #132]	; 0x84
 8006eac:	4620      	mov	r0, r4
 8006eae:	f008 fc57 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txt24v.setPosition(616, 386, 70, 19);
 8006eb2:	2313      	movs	r3, #19
 8006eb4:	f44f 72c1 	mov.w	r2, #386	; 0x182
 8006eb8:	f44f 711a 	mov.w	r1, #616	; 0x268
 8006ebc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8006ebe:	9300      	str	r3, [sp, #0]
 8006ec0:	2346      	movs	r3, #70	; 0x46
 8006ec2:	f7fb ff0c 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006ec6:	f04f 33ff 	mov.w	r3, #4294967295
 8006eca:	f8c5 3530 	str.w	r3, [r5, #1328]	; 0x530
        linespace = space;
 8006ece:	f8a5 9534 	strh.w	r9, [r5, #1332]	; 0x534
        return TextArea::BoundingArea();
 8006ed2:	4630      	mov	r0, r6
 8006ed4:	f7fc f892 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006ed8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006edc:	683b      	ldr	r3, [r7, #0]
 8006ede:	f205 553c 	addw	r5, r5, #1340	; 0x53c
    Unicode::snprintf(txt24vBuffer, TXT24V_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8BB2).getText());
 8006ee2:	f50b 56c0 	add.w	r6, fp, #6144	; 0x1800
 8006ee6:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8006eea:	361c      	adds	r6, #28
 8006eec:	2b00      	cmp	r3, #0
 8006eee:	f43e addd 	beq.w	8005aac <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006ef2:	4993      	ldr	r1, [pc, #588]	; (8007140 <_ZN23MainInfotaimentViewBaseC1Ev+0x1bbc>)
 8006ef4:	880b      	ldrh	r3, [r1, #0]
 8006ef6:	2b5d      	cmp	r3, #93	; 0x5d
 8006ef8:	f67e ade2 	bls.w	8005ac0 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006efc:	4b91      	ldr	r3, [pc, #580]	; (8007144 <_ZN23MainInfotaimentViewBaseC1Ev+0x1bc0>)
        : typedTextId(id)
 8006efe:	f8df a238 	ldr.w	sl, [pc, #568]	; 8007138 <_ZN23MainInfotaimentViewBaseC1Ev+0x1bb4>
        return texts->getText(typedTextId);
 8006f02:	6818      	ldr	r0, [r3, #0]
 8006f04:	215d      	movs	r1, #93	; 0x5d
 8006f06:	f001 f921 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
        wc1 = value;
 8006f0a:	f50b 5580 	add.w	r5, fp, #4096	; 0x1000
 8006f0e:	4a8e      	ldr	r2, [pc, #568]	; (8007148 <_ZN23MainInfotaimentViewBaseC1Ev+0x1bc4>)
 8006f10:	4603      	mov	r3, r0
 8006f12:	2106      	movs	r1, #6
 8006f14:	4630      	mov	r0, r6
 8006f16:	f011 f92f 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006f1a:	f8c5 6548 	str.w	r6, [r5, #1352]	; 0x548
    txt24v.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JG35));
 8006f1e:	ae41      	add	r6, sp, #260	; 0x104
        : typedTextId(id)
 8006f20:	235e      	movs	r3, #94	; 0x5e
 8006f22:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8006f24:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006f28:	4631      	mov	r1, r6
 8006f2a:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
 8006f2e:	f00b f887 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f32:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8006f34:	4620      	mov	r0, r4
 8006f36:	f008 fc13 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnNextPage.setAction(buttonCallback);
 8006f3a:	f50b 498f 	add.w	r9, fp, #18304	; 0x4780
    btnNextPage.setXY(735, 415);
 8006f3e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8006f40:	f240 129f 	movw	r2, #415	; 0x19f
 8006f44:	f240 21df 	movw	r1, #735	; 0x2df
 8006f48:	f7fb febc 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    btnNextPage.setAction(buttonCallback);
 8006f4c:	f109 0908 	add.w	r9, r9, #8
 8006f50:	230b      	movs	r3, #11
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
 8006f52:	4632      	mov	r2, r6
 8006f54:	9816      	ldr	r0, [sp, #88]	; 0x58
 8006f56:	f8ad 3100 	strh.w	r3, [sp, #256]	; 0x100
 8006f5a:	a940      	add	r1, sp, #256	; 0x100
 8006f5c:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006f60:	f00b f8cc 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006f64:	9916      	ldr	r1, [sp, #88]	; 0x58
 8006f66:	f8c5 9574 	str.w	r9, [r5, #1396]	; 0x574
 8006f6a:	4620      	mov	r0, r4
 8006f6c:	f008 fbf8 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dbgTextArea.setPosition(5, 454, 741, 23);
 8006f70:	2317      	movs	r3, #23
 8006f72:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8006f74:	9300      	str	r3, [sp, #0]
 8006f76:	f44f 72e3 	mov.w	r2, #454	; 0x1c6
 8006f7a:	2105      	movs	r1, #5
 8006f7c:	f240 23e5 	movw	r3, #741	; 0x2e5
        linespace = space;
 8006f80:	f04f 0800 	mov.w	r8, #0
 8006f84:	f7fb feab 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006f88:	f04f 33ff 	mov.w	r3, #4294967295
 8006f8c:	f8c5 35b0 	str.w	r3, [r5, #1456]	; 0x5b0
        linespace = space;
 8006f90:	f8a5 85b4 	strh.w	r8, [r5, #1460]	; 0x5b4
        return TextArea::BoundingArea();
 8006f94:	4630      	mov	r0, r6
 8006f96:	f7fc f831 	bl	8002ffc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006f9a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006f9e:	f205 53bc 	addw	r3, r5, #1468	; 0x5bc
 8006fa2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    dbgTextArea.setWildcard(dbgTextAreaBuffer);
 8006fa6:	f50b 53c1 	add.w	r3, fp, #6176	; 0x1820
 8006faa:	3308      	adds	r3, #8
    dbgTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F2RY));
 8006fac:	9829      	ldr	r0, [sp, #164]	; 0xa4
        wc1 = value;
 8006fae:	f8c5 35c8 	str.w	r3, [r5, #1480]	; 0x5c8
 8006fb2:	4631      	mov	r1, r6
 8006fb4:	2362      	movs	r3, #98	; 0x62
    dbgTextAreaBuffer[0] = 0;
 8006fb6:	f8a5 8828 	strh.w	r8, [r5, #2088]	; 0x828
 8006fba:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006fbe:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
    dbgTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F2RY));
 8006fc2:	f00b f83d 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006fc6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8006fc8:	4620      	mov	r0, r4
 8006fca:	f008 fbc9 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(635, 414);
 8006fce:	ee1c 0a10 	vmov	r0, s24
 8006fd2:	f44f 72cf 	mov.w	r2, #414	; 0x19e
 8006fd6:	f240 217b 	movw	r1, #635	; 0x27b
 8006fda:	f7fb fe73 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 8006fde:	af3c      	add	r7, sp, #240	; 0xf0
        color = newColor;
 8006fe0:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006fe4:	ee1c 1a10 	vmov	r1, s24
        color = newColor;
 8006fe8:	f8c5 35fc 	str.w	r3, [r5, #1532]	; 0x5fc
        boundingArea = calculateBoundingArea();
 8006fec:	4638      	mov	r0, r7
        linespace = space;
 8006fee:	f8a5 8600 	strh.w	r8, [r5, #1536]	; 0x600
        boundingArea = calculateBoundingArea();
 8006ff2:	f00a fd8b 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ff6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006ffa:	ee1c 3a10 	vmov	r3, s24
 8006ffe:	333c      	adds	r3, #60	; 0x3c
 8007000:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007004:	235c      	movs	r3, #92	; 0x5c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J3QN));
 8007006:	ee1c 0a10 	vmov	r0, s24
 800700a:	4631      	mov	r1, r6
 800700c:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8007010:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
 8007014:	f00b f814 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007018:	ee1c 1a10 	vmov	r1, s24
 800701c:	4620      	mov	r0, r4
 800701e:	f008 fb9f 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_1.setXY(557, 414);
 8007022:	ee1c 0a90 	vmov	r0, s25
 8007026:	f44f 72cf 	mov.w	r2, #414	; 0x19e
 800702a:	f240 212d 	movw	r1, #557	; 0x22d
 800702e:	f7fb fe49 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007032:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007036:	ee1c 1a90 	vmov	r1, s25
        color = newColor;
 800703a:	f8c5 3644 	str.w	r3, [r5, #1604]	; 0x644
        boundingArea = calculateBoundingArea();
 800703e:	4638      	mov	r0, r7
        linespace = space;
 8007040:	f8a5 8648 	strh.w	r8, [r5, #1608]	; 0x648
        boundingArea = calculateBoundingArea();
 8007044:	f00a fd62 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007048:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800704c:	ee1c 3a90 	vmov	r3, s25
 8007050:	333c      	adds	r3, #60	; 0x3c
 8007052:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007056:	235b      	movs	r3, #91	; 0x5b
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BU43));
 8007058:	ee1c 0a90 	vmov	r0, s25
 800705c:	4631      	mov	r1, r6
 800705e:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8007062:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
 8007066:	f00a ffeb 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800706a:	ee1c 1a90 	vmov	r1, s25
 800706e:	4620      	mov	r0, r4
 8007070:	f008 fb76 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(246, 261);
 8007074:	ee1d 0a10 	vmov	r0, s26
 8007078:	f240 1205 	movw	r2, #261	; 0x105
 800707c:	21f6      	movs	r1, #246	; 0xf6
 800707e:	f7fb fe21 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007082:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007086:	ee1d 1a10 	vmov	r1, s26
        color = newColor;
 800708a:	f8c5 368c 	str.w	r3, [r5, #1676]	; 0x68c
        boundingArea = calculateBoundingArea();
 800708e:	4638      	mov	r0, r7
        linespace = space;
 8007090:	f8a5 8690 	strh.w	r8, [r5, #1680]	; 0x690
        boundingArea = calculateBoundingArea();
 8007094:	f00a fd3a 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007098:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800709c:	ee1d 3a10 	vmov	r3, s26
 80070a0:	333c      	adds	r3, #60	; 0x3c
 80070a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80070a6:	2354      	movs	r3, #84	; 0x54
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ONGO));
 80070a8:	ee1d 0a10 	vmov	r0, s26
 80070ac:	4631      	mov	r1, r6
 80070ae:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 80070b2:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
 80070b6:	f00a ffc3 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070ba:	ee1d 1a10 	vmov	r1, s26
 80070be:	4620      	mov	r0, r4
 80070c0:	f008 fb4e 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    toDriver1.setXY(308, 341);
 80070c4:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80070c6:	f240 1255 	movw	r2, #341	; 0x155
 80070ca:	f44f 719a 	mov.w	r1, #308	; 0x134
 80070ce:	f7fb fdf9 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 80070d2:	2704      	movs	r7, #4
    toDriver1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID));
 80070d4:	4632      	mov	r2, r6
 80070d6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80070d8:	f8ad 7100 	strh.w	r7, [sp, #256]	; 0x100
 80070dc:	a940      	add	r1, sp, #256	; 0x100
 80070de:	f8ad 7104 	strh.w	r7, [sp, #260]	; 0x104
 80070e2:	f00b f80b 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80070e6:	9917      	ldr	r1, [sp, #92]	; 0x5c
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80070e8:	f885 86d6 	strb.w	r8, [r5, #1750]	; 0x6d6
 80070ec:	4620      	mov	r0, r4
 80070ee:	f8c5 96cc 	str.w	r9, [r5, #1740]	; 0x6cc
 80070f2:	f008 fb35 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    toDriver2.setXY(351, 393);
 80070f6:	9818      	ldr	r0, [sp, #96]	; 0x60
 80070f8:	f240 1289 	movw	r2, #393	; 0x189
 80070fc:	f240 115f 	movw	r1, #351	; 0x15f
 8007100:	f7fb fde0 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    toDriver2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID));
 8007104:	9818      	ldr	r0, [sp, #96]	; 0x60
 8007106:	f8ad 7100 	strh.w	r7, [sp, #256]	; 0x100
 800710a:	4632      	mov	r2, r6
 800710c:	a940      	add	r1, sp, #256	; 0x100
 800710e:	f8ad 7104 	strh.w	r7, [sp, #260]	; 0x104
 8007112:	f00a fff3 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007116:	4620      	mov	r0, r4
 8007118:	9918      	ldr	r1, [sp, #96]	; 0x60
 800711a:	f885 870a 	strb.w	r8, [r5, #1802]	; 0x70a
        visible = vis;
 800711e:	f885 86fd 	strb.w	r8, [r5, #1789]	; 0x6fd
 8007122:	f8c5 9700 	str.w	r9, [r5, #1792]	; 0x700
 8007126:	f008 fb1b 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800712a:	4658      	mov	r0, fp
 800712c:	b045      	add	sp, #276	; 0x114
 800712e:	ecbd 8b10 	vpop	{d8-d15}
 8007132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007136:	bf00      	nop
 8007138:	080284a8 	.word	0x080284a8
 800713c:	ffffea00 	.word	0xffffea00
 8007140:	2000ef78 	.word	0x2000ef78
 8007144:	2000ef80 	.word	0x2000ef80
 8007148:	08028432 	.word	0x08028432

0800714c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800714c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800714e:	4770      	bx	lr

08007150 <_ZN21MissionSelectViewBase21onChassisResetClickedEv>:
     * Virtual Action Handlers
     */
    virtual void onChassisResetClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8007150:	4770      	bx	lr

08007152 <_ZN21MissionSelectViewBase16onIdleBtnClickedEv>:
    virtual void onIdleBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8007152:	4770      	bx	lr

08007154 <_ZN21MissionSelectViewBase24onAccelerationBtnClickedEv>:
    virtual void onAccelerationBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8007154:	4770      	bx	lr

08007156 <_ZN21MissionSelectViewBase19onSkidpadBtnClickedEv>:
    virtual void onSkidpadBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8007156:	4770      	bx	lr

08007158 <_ZN21MissionSelectViewBase21onAutocrossBtnClickedEv>:
    virtual void onAutocrossBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8007158:	4770      	bx	lr

0800715a <_ZN21MissionSelectViewBase22onTrackdriveBtnClickedEv>:
    virtual void onTrackdriveBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 800715a:	4770      	bx	lr

0800715c <_ZN21MissionSelectViewBase19onEbsTestBtnClickedEv>:
    virtual void onEbsTestBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 800715c:	4770      	bx	lr

0800715e <_ZN21MissionSelectViewBase22onInspectionBtnClickedEv>:
    virtual void onInspectionBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 800715e:	4770      	bx	lr

08007160 <_ZN21MissionSelectViewBase18onManualBtnClickedEv>:
    virtual void onManualBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8007160:	4770      	bx	lr

08007162 <_ZN21MissionSelectViewBase17onDebugBtnClickedEv>:
    virtual void onDebugBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8007162:	4770      	bx	lr

08007164 <_ZN21MissionSelectViewBaseD1Ev>:
}

MissionSelectViewBase::~MissionSelectViewBase()
{

}
 8007164:	4770      	bx	lr

08007166 <_ZN21MissionSelectViewBase11setupScreenEv>:

void MissionSelectViewBase::setupScreen()
{

}
 8007166:	4770      	bx	lr

08007168 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8007168:	4770      	bx	lr

0800716a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 800716a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800716e:	b14b      	cbz	r3, 8007184 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8007170:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 8007174:	6812      	ldr	r2, [r2, #0]
 8007176:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8007178:	b13b      	cbz	r3, 800718a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 800717a:	f100 0374 	add.w	r3, r0, #116	; 0x74
 800717e:	681b      	ldr	r3, [r3, #0]
        borderColor = colorBorder;
 8007180:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8007182:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8007184:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8007188:	e7f4      	b.n	8007174 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800718a:	f100 0370 	add.w	r3, r0, #112	; 0x70
 800718e:	e7f6      	b.n	800717e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08007190 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextArea text;           ///< The text
    colortype colorReleased; ///< The color released
    colortype colorPressed;  ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 8007190:	b508      	push	{r3, lr}
    {
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 8007192:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007196:	b13b      	cbz	r3, 80071a8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x18>
 8007198:	f100 03c4 	add.w	r3, r0, #196	; 0xc4
 800719c:	681b      	ldr	r3, [r3, #0]
        color = newColor;
 800719e:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 80071a2:	f7ff ffe2 	bl	800716a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 80071a6:	bd08      	pop	{r3, pc}
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 80071a8:	f100 03c0 	add.w	r3, r0, #192	; 0xc0
 80071ac:	e7f6      	b.n	800719c <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

080071ae <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80071ae:	4770      	bx	lr

080071b0 <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 80071b0:	4770      	bx	lr

080071b2 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TextButtonStyle : public T
 80071b2:	4770      	bx	lr

080071b4 <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80071b4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80071b6:	68c2      	ldr	r2, [r0, #12]
 80071b8:	6844      	ldr	r4, [r0, #4]
 80071ba:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80071bc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80071be:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80071c2:	07d2      	lsls	r2, r2, #31
 80071c4:	bf48      	it	mi
 80071c6:	5962      	ldrmi	r2, [r4, r5]
 80071c8:	689b      	ldr	r3, [r3, #8]
    }
 80071ca:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80071cc:	bf48      	it	mi
 80071ce:	58d3      	ldrmi	r3, [r2, r3]
 80071d0:	4718      	bx	r3

080071d2 <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80071d2:	6843      	ldr	r3, [r0, #4]
 80071d4:	b12b      	cbz	r3, 80071e2 <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 80071d6:	6883      	ldr	r3, [r0, #8]
 80071d8:	b92b      	cbnz	r3, 80071e6 <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80071da:	68c0      	ldr	r0, [r0, #12]
 80071dc:	f000 0001 	and.w	r0, r0, #1
 80071e0:	4770      	bx	lr
 80071e2:	4618      	mov	r0, r3
 80071e4:	4770      	bx	lr
 80071e6:	2001      	movs	r0, #1
    }
 80071e8:	4770      	bx	lr

080071ea <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80071ea:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80071ec:	68c2      	ldr	r2, [r0, #12]
 80071ee:	6844      	ldr	r4, [r0, #4]
 80071f0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80071f2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80071f4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80071f8:	07d2      	lsls	r2, r2, #31
 80071fa:	bf48      	it	mi
 80071fc:	5962      	ldrmi	r2, [r4, r5]
 80071fe:	689b      	ldr	r3, [r3, #8]
    }
 8007200:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007202:	bf48      	it	mi
 8007204:	58d3      	ldrmi	r3, [r2, r3]
 8007206:	4718      	bx	r3

08007208 <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007208:	6843      	ldr	r3, [r0, #4]
 800720a:	b12b      	cbz	r3, 8007218 <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800720c:	6883      	ldr	r3, [r0, #8]
 800720e:	b92b      	cbnz	r3, 800721c <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007210:	68c0      	ldr	r0, [r0, #12]
 8007212:	f000 0001 	and.w	r0, r0, #1
 8007216:	4770      	bx	lr
 8007218:	4618      	mov	r0, r3
 800721a:	4770      	bx	lr
 800721c:	2001      	movs	r0, #1
    }
 800721e:	4770      	bx	lr

08007220 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8007220:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 8007224:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8007228:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        text.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 800722c:	4770      	bx	lr

0800722e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 800722e:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8007232:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8007236:	4770      	bx	lr

08007238 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8007238:	b510      	push	{r4, lr}
 800723a:	2178      	movs	r1, #120	; 0x78
 800723c:	4604      	mov	r4, r0
 800723e:	f01f f9bf 	bl	80265c0 <_ZdlPvj>
 8007242:	4620      	mov	r0, r4
 8007244:	bd10      	pop	{r4, pc}

08007246 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TextButtonStyle : public T
 8007246:	b510      	push	{r4, lr}
 8007248:	21c8      	movs	r1, #200	; 0xc8
 800724a:	4604      	mov	r4, r0
 800724c:	f01f f9b8 	bl	80265c0 <_ZdlPvj>
 8007250:	4620      	mov	r0, r4
 8007252:	bd10      	pop	{r4, pc}

08007254 <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007254:	b510      	push	{r4, lr}
 8007256:	2110      	movs	r1, #16
 8007258:	4604      	mov	r4, r0
 800725a:	f01f f9b1 	bl	80265c0 <_ZdlPvj>
 800725e:	4620      	mov	r0, r4
 8007260:	bd10      	pop	{r4, pc}

08007262 <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8007262:	b510      	push	{r4, lr}
 8007264:	2110      	movs	r1, #16
 8007266:	4604      	mov	r4, r0
 8007268:	f01f f9aa 	bl	80265c0 <_ZdlPvj>
 800726c:	4620      	mov	r0, r4
 800726e:	bd10      	pop	{r4, pc}

08007270 <_ZN21MissionSelectViewBaseD0Ev>:
MissionSelectViewBase::~MissionSelectViewBase()
 8007270:	b510      	push	{r4, lr}
}
 8007272:	f240 418c 	movw	r1, #1164	; 0x48c
MissionSelectViewBase::~MissionSelectViewBase()
 8007276:	4604      	mov	r4, r0
}
 8007278:	f01f f9a2 	bl	80265c0 <_ZdlPvj>
 800727c:	4620      	mov	r0, r4
 800727e:	bd10      	pop	{r4, pc}

08007280 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MissionSelectViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8007280:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btnNextPage)
 8007282:	f100 036c 	add.w	r3, r0, #108	; 0x6c
 8007286:	4299      	cmp	r1, r3
{
 8007288:	4604      	mov	r4, r0
 800728a:	460d      	mov	r5, r1
    if (&src == &btnNextPage)
 800728c:	d103      	bne.n	8007296 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800728e:	f00d fe03 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //fromMissionSelectToCompetitionScreen
        //When btnNextPage clicked change screen to CompetitionScreen
        //Go to CompetitionScreen with screen transition towards East
        application().gotoCompetitionScreenScreenSlideTransitionEast();
 8007292:	f7fd fa9f 	bl	80047d4 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionEastEv>
    }
    if (&src == &idleBtn)
 8007296:	f504 73f2 	add.w	r3, r4, #484	; 0x1e4
 800729a:	429d      	cmp	r5, r3
 800729c:	d103      	bne.n	80072a6 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
    {
        //IdleMission
        //When idleBtn clicked call virtual function
        //Call onIdleBtnClicked
        onIdleBtnClicked();
 800729e:	6823      	ldr	r3, [r4, #0]
 80072a0:	4620      	mov	r0, r4
 80072a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80072a4:	4798      	blx	r3
    }
    if (&src == &accelerationBtn)
 80072a6:	f504 7365 	add.w	r3, r4, #916	; 0x394
 80072aa:	429d      	cmp	r5, r3
 80072ac:	d103      	bne.n	80072b6 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
    {
        //AccelerationMission
        //When accelerationBtn clicked call virtual function
        //Call onAccelerationBtnClicked
        onAccelerationBtnClicked();
 80072ae:	6823      	ldr	r3, [r4, #0]
 80072b0:	4620      	mov	r0, r4
 80072b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80072b4:	4798      	blx	r3
    }
    if (&src == &skidpadBtn)
 80072b6:	f504 7377 	add.w	r3, r4, #988	; 0x3dc
 80072ba:	429d      	cmp	r5, r3
 80072bc:	d103      	bne.n	80072c6 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x46>
    {
        //SkidpadMission
        //When skidpadBtn clicked call virtual function
        //Call onSkidpadBtnClicked
        onSkidpadBtnClicked();
 80072be:	6823      	ldr	r3, [r4, #0]
 80072c0:	4620      	mov	r0, r4
 80072c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80072c4:	4798      	blx	r3
    }
    if (&src == &autocrossBtn)
 80072c6:	f204 4324 	addw	r3, r4, #1060	; 0x424
 80072ca:	429d      	cmp	r5, r3
 80072cc:	d103      	bne.n	80072d6 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
    {
        //AutocrossMission
        //When autocrossBtn clicked call virtual function
        //Call onAutocrossBtnClicked
        onAutocrossBtnClicked();
 80072ce:	6823      	ldr	r3, [r4, #0]
 80072d0:	4620      	mov	r0, r4
 80072d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80072d4:	4798      	blx	r3
    }
    if (&src == &trackdriveBtn)
 80072d6:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 80072da:	429d      	cmp	r5, r3
 80072dc:	d103      	bne.n	80072e6 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x66>
    {
        //TrackdriveMission
        //When trackdriveBtn clicked call virtual function
        //Call onTrackdriveBtnClicked
        onTrackdriveBtnClicked();
 80072de:	6823      	ldr	r3, [r4, #0]
 80072e0:	4620      	mov	r0, r4
 80072e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80072e4:	4798      	blx	r3
    }
    if (&src == &ebsTestBtn)
 80072e6:	f504 731d 	add.w	r3, r4, #628	; 0x274
 80072ea:	429d      	cmp	r5, r3
 80072ec:	d103      	bne.n	80072f6 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x76>
    {
        //EbtTestMission
        //When ebsTestBtn clicked call virtual function
        //Call onEbsTestBtnClicked
        onEbsTestBtnClicked();
 80072ee:	6823      	ldr	r3, [r4, #0]
 80072f0:	4620      	mov	r0, r4
 80072f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80072f4:	4798      	blx	r3
    }
    if (&src == &inspectionBtn)
 80072f6:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 80072fa:	429d      	cmp	r5, r3
 80072fc:	d103      	bne.n	8007306 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x86>
    {
        //InspectionMission
        //When inspectionBtn clicked call virtual function
        //Call onInspectionBtnClicked
        onInspectionBtnClicked();
 80072fe:	6823      	ldr	r3, [r4, #0]
 8007300:	4620      	mov	r0, r4
 8007302:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007304:	4798      	blx	r3
    }
    if (&src == &manualBtn)
 8007306:	f504 7341 	add.w	r3, r4, #772	; 0x304
 800730a:	429d      	cmp	r5, r3
 800730c:	d103      	bne.n	8007316 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x96>
    {
        //ManualMission
        //When manualBtn clicked call virtual function
        //Call onManualBtnClicked
        onManualBtnClicked();
 800730e:	6823      	ldr	r3, [r4, #0]
 8007310:	4620      	mov	r0, r4
 8007312:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007314:	4798      	blx	r3
    }
    if (&src == &debugBtn)
 8007316:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 800731a:	429d      	cmp	r5, r3
 800731c:	d103      	bne.n	8007326 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa6>
    {
        //DebugMission
        //When debugBtn clicked call virtual function
        //Call onDebugBtnClicked
        onDebugBtnClicked();
 800731e:	6823      	ldr	r3, [r4, #0]
 8007320:	4620      	mov	r0, r4
 8007322:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007324:	4798      	blx	r3
    }
    if (&src == &btnPrevPage)
 8007326:	34a0      	adds	r4, #160	; 0xa0
 8007328:	42a5      	cmp	r5, r4
 800732a:	d105      	bne.n	8007338 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xb8>
 800732c:	f00d fdb4 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
        //fromMissionSelectToMainInfotaiment
        //When btnPrevPage clicked change screen to MainInfotaiment
        //Go to MainInfotaiment with screen transition towards West
        application().gotoMainInfotaimentScreenSlideTransitionWest();
    }
}
 8007330:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMainInfotaimentScreenSlideTransitionWest();
 8007334:	f7fd ba0e 	b.w	8004754 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionWestEv>
}
 8007338:	bd38      	pop	{r3, r4, r5, pc}

0800733a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800733a:	b510      	push	{r4, lr}
 800733c:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 800733e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8007340:	b150      	cbz	r0, 8007358 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8007342:	6803      	ldr	r3, [r0, #0]
 8007344:	68db      	ldr	r3, [r3, #12]
 8007346:	4798      	blx	r3
 8007348:	b130      	cbz	r0, 8007358 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 800734a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800734c:	6803      	ldr	r3, [r0, #0]
 800734e:	4621      	mov	r1, r4
 8007350:	689b      	ldr	r3, [r3, #8]
        }
    }
 8007352:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8007356:	4718      	bx	r3
    }
 8007358:	bd10      	pop	{r4, pc}

0800735a <_ZN21MissionSelectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MissionSelectViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &chassisResetBtn)
 800735a:	f500 728e 	add.w	r2, r0, #284	; 0x11c
 800735e:	428a      	cmp	r2, r1
 8007360:	d102      	bne.n	8007368 <_ZN21MissionSelectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ChassisReset
        //When chassisResetBtn clicked call virtual function
        //Call onChassisResetClicked
        onChassisResetClicked();
 8007362:	6803      	ldr	r3, [r0, #0]
 8007364:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007366:	4718      	bx	r3
    }
}
 8007368:	4770      	bx	lr

0800736a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 800736a:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800736c:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 800736e:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8007372:	4604      	mov	r4, r0
 8007374:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8007376:	b99b      	cbnz	r3, 80073a0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8007378:	b98e      	cbnz	r6, 800739e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800737a:	fab3 f383 	clz	r3, r3
 800737e:	095b      	lsrs	r3, r3, #5
 8007380:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8007384:	6823      	ldr	r3, [r4, #0]
 8007386:	4620      	mov	r0, r4
 8007388:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800738c:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 800738e:	6823      	ldr	r3, [r4, #0]
 8007390:	4620      	mov	r0, r4
 8007392:	695b      	ldr	r3, [r3, #20]
 8007394:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8007396:	b116      	cbz	r6, 800739e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8007398:	792b      	ldrb	r3, [r5, #4]
 800739a:	2b01      	cmp	r3, #1
 800739c:	d003      	beq.n	80073a6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 800739e:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80073a0:	2e00      	cmp	r6, #0
 80073a2:	d0fc      	beq.n	800739e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 80073a4:	e7e9      	b.n	800737a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 80073a6:	6823      	ldr	r3, [r4, #0]
 80073a8:	4620      	mov	r0, r4
 80073aa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 80073ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 80073b2:	4718      	bx	r3

080073b4 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 80073b4:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 80073b6:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 80073b8:	4604      	mov	r4, r0
        setWidth(width);
 80073ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    void setWidthHeight(int16_t width, int16_t height)
 80073bc:	4615      	mov	r5, r2
        setWidth(width);
 80073be:	4798      	blx	r3
        setHeight(height);
 80073c0:	6823      	ldr	r3, [r4, #0]
 80073c2:	4629      	mov	r1, r5
 80073c4:	4620      	mov	r0, r4
 80073c6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80073c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80073cc:	4718      	bx	r3
	...

080073d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80073d0:	4b1a      	ldr	r3, [pc, #104]	; (800743c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80073d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80073d4:	881b      	ldrh	r3, [r3, #0]
 80073d6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80073d8:	428b      	cmp	r3, r1
    void updateTextPosition()
 80073da:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80073dc:	d92a      	bls.n	8007434 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80073de:	4b18      	ldr	r3, [pc, #96]	; (8007440 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80073e0:	681b      	ldr	r3, [r3, #0]
 80073e2:	b92b      	cbnz	r3, 80073f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80073e4:	4b17      	ldr	r3, [pc, #92]	; (8007444 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80073e6:	4a18      	ldr	r2, [pc, #96]	; (8007448 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80073e8:	4818      	ldr	r0, [pc, #96]	; (800744c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80073ea:	216c      	movs	r1, #108	; 0x6c
 80073ec:	f01f f916 	bl	802661c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80073f0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80073f4:	4b16      	ldr	r3, [pc, #88]	; (8007450 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80073f6:	681b      	ldr	r3, [r3, #0]
 80073f8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80073fc:	4b15      	ldr	r3, [pc, #84]	; (8007454 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80073fe:	6818      	ldr	r0, [r3, #0]
 8007400:	f000 fea4 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007404:	682b      	ldr	r3, [r5, #0]
 8007406:	9001      	str	r0, [sp, #4]
 8007408:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800740a:	4628      	mov	r0, r5
 800740c:	4798      	blx	r3
 800740e:	682b      	ldr	r3, [r5, #0]
 8007410:	9901      	ldr	r1, [sp, #4]
 8007412:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007414:	4604      	mov	r4, r0
 8007416:	4628      	mov	r0, r5
 8007418:	4798      	blx	r3
 800741a:	682b      	ldr	r3, [r5, #0]
 800741c:	9901      	ldr	r1, [sp, #4]
 800741e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007420:	fb14 f400 	smulbb	r4, r4, r0
 8007424:	4628      	mov	r0, r5
 8007426:	4798      	blx	r3
 8007428:	b2a4      	uxth	r4, r4
 800742a:	4404      	add	r4, r0
 800742c:	f8a6 4046 	strh.w	r4, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8007430:	b002      	add	sp, #8
 8007432:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8007434:	2300      	movs	r3, #0
 8007436:	f8a0 3046 	strh.w	r3, [r0, #70]	; 0x46
    }
 800743a:	e7f9      	b.n	8007430 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x60>
 800743c:	2000ef78 	.word	0x2000ef78
 8007440:	2000ef74 	.word	0x2000ef74
 8007444:	080282f8 	.word	0x080282f8
 8007448:	0802833a 	.word	0x0802833a
 800744c:	08028375 	.word	0x08028375
 8007450:	2000ef7c 	.word	0x2000ef7c
 8007454:	2000ef80 	.word	0x2000ef80

08007458 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8007458:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    TextButtonStyle()
 800745c:	b570      	push	{r4, r5, r6, lr}
        : T(), up(), down()
 800745e:	4606      	mov	r6, r0
 8007460:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8007462:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8007466:	2500      	movs	r5, #0
 8007468:	8483      	strh	r3, [r0, #36]	; 0x24
 800746a:	4b19      	ldr	r3, [pc, #100]	; (80074d0 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x78>)
 800746c:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 800746e:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8007472:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8007476:	e9c0 5505 	strd	r5, r5, [r0, #20]
 800747a:	e9c0 5507 	strd	r5, r5, [r0, #28]
 800747e:	6305      	str	r5, [r0, #48]	; 0x30
 8007480:	f846 3b34 	str.w	r3, [r6], #52
 8007484:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8007486:	4630      	mov	r0, r6
 8007488:	f7fb fda4 	bl	8002fd4 <_ZN8touchgfx3BoxC1Ev>
 800748c:	4b11      	ldr	r3, [pc, #68]	; (80074d4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x7c>)
 800748e:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8007490:	462a      	mov	r2, r5
 8007492:	4629      	mov	r1, r5
 8007494:	4630      	mov	r0, r6
        : color(0)
 8007496:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 800749a:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 800749e:	6625      	str	r5, [r4, #96]	; 0x60
 80074a0:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80074a4:	f7fb fc0e 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 80074a8:	4631      	mov	r1, r6
 80074aa:	4620      	mov	r0, r4
        : T()
 80074ac:	4626      	mov	r6, r4
 80074ae:	f008 f957 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80074b2:	4b09      	ldr	r3, [pc, #36]	; (80074d8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x80>)
 80074b4:	f846 3b78 	str.w	r3, [r6], #120
 80074b8:	4630      	mov	r0, r6
 80074ba:	f7fb fda7 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
        T::add(text);
 80074be:	4620      	mov	r0, r4
        : color(0)
 80074c0:	e9c4 5530 	strd	r5, r5, [r4, #192]	; 0xc0
 80074c4:	4631      	mov	r1, r6
 80074c6:	f008 f94b 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80074ca:	4620      	mov	r0, r4
 80074cc:	bd70      	pop	{r4, r5, r6, pc}
 80074ce:	bf00      	nop
 80074d0:	08029550 	.word	0x08029550
 80074d4:	0802a464 	.word	0x0802a464
 80074d8:	080295ec 	.word	0x080295ec

080074dc <_ZN21MissionSelectViewBaseC1Ev>:
MissionSelectViewBase::MissionSelectViewBase() :
 80074dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80074e0:	ed2d 8b08 	vpush	{d8-d11}
 80074e4:	4604      	mov	r4, r0
 80074e6:	b08b      	sub	sp, #44	; 0x2c
    flexButtonCallback(this, &MissionSelectViewBase::flexButtonCallbackHandler)
 80074e8:	4627      	mov	r7, r4
 80074ea:	f04f 0800 	mov.w	r8, #0
 80074ee:	f00f f953 	bl	8016798 <_ZN8touchgfx6ScreenC1Ev>
 80074f2:	4be9      	ldr	r3, [pc, #932]	; (8007898 <_ZN21MissionSelectViewBaseC1Ev+0x3bc>)
 80074f4:	f8c4 803c 	str.w	r8, [r4, #60]	; 0x3c
 80074f8:	f847 3b40 	str.w	r3, [r7], #64
 80074fc:	4638      	mov	r0, r7
 80074fe:	f7fb fd69 	bl	8002fd4 <_ZN8touchgfx3BoxC1Ev>
 8007502:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8007506:	4618      	mov	r0, r3
 8007508:	f104 05a0 	add.w	r5, r4, #160	; 0xa0
 800750c:	9301      	str	r3, [sp, #4]
 800750e:	f104 0bd4 	add.w	fp, r4, #212	; 0xd4
 8007512:	f7fb fc09 	bl	8002d28 <_ZN8touchgfx6ButtonC1Ev>
 8007516:	4628      	mov	r0, r5
 8007518:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 800751c:	f7fb fc04 	bl	8002d28 <_ZN8touchgfx6ButtonC1Ev>
 8007520:	4658      	mov	r0, fp
 8007522:	f7fb fd73 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8007526:	f504 7af2 	add.w	sl, r4, #484	; 0x1e4
 800752a:	4648      	mov	r0, r9
 800752c:	f7ff ff94 	bl	8007458 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8007530:	4650      	mov	r0, sl
 8007532:	f00b f8e9 	bl	8012708 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007536:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 800753a:	4618      	mov	r0, r3
 800753c:	ee08 3a10 	vmov	s16, r3
 8007540:	f00b f8e2 	bl	8012708 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007544:	f504 731d 	add.w	r3, r4, #628	; 0x274
 8007548:	4618      	mov	r0, r3
 800754a:	ee08 3a90 	vmov	s17, r3
 800754e:	f00b f8db 	bl	8012708 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007552:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8007556:	4618      	mov	r0, r3
 8007558:	ee09 3a10 	vmov	s18, r3
 800755c:	f00b f8d4 	bl	8012708 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007560:	f504 7341 	add.w	r3, r4, #772	; 0x304
 8007564:	4618      	mov	r0, r3
 8007566:	ee09 3a90 	vmov	s19, r3
 800756a:	f00b f8cd 	bl	8012708 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800756e:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8007572:	4618      	mov	r0, r3
 8007574:	ee0a 3a10 	vmov	s20, r3
 8007578:	f00b f8c6 	bl	8012708 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800757c:	f504 7365 	add.w	r3, r4, #916	; 0x394
 8007580:	4618      	mov	r0, r3
 8007582:	ee0a 3a90 	vmov	s21, r3
 8007586:	f00b f8bf 	bl	8012708 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800758a:	f504 7377 	add.w	r3, r4, #988	; 0x3dc
 800758e:	4618      	mov	r0, r3
 8007590:	ee0b 3a10 	vmov	s22, r3
 8007594:	f00b f8b8 	bl	8012708 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007598:	f204 4324 	addw	r3, r4, #1060	; 0x424
 800759c:	4618      	mov	r0, r3
 800759e:	ee0b 3a90 	vmov	s23, r3
 80075a2:	f00b f8b1 	bl	8012708 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80075a6:	4abd      	ldr	r2, [pc, #756]	; (800789c <_ZN21MissionSelectViewBaseC1Ev+0x3c0>)
 80075a8:	f8c4 246c 	str.w	r2, [r4, #1132]	; 0x46c
 80075ac:	4abc      	ldr	r2, [pc, #752]	; (80078a0 <_ZN21MissionSelectViewBaseC1Ev+0x3c4>)
 80075ae:	f8c4 2474 	str.w	r2, [r4, #1140]	; 0x474
 80075b2:	4abc      	ldr	r2, [pc, #752]	; (80078a4 <_ZN21MissionSelectViewBaseC1Ev+0x3c8>)
 80075b4:	f8c4 247c 	str.w	r2, [r4, #1148]	; 0x47c
 80075b8:	4abb      	ldr	r2, [pc, #748]	; (80078a8 <_ZN21MissionSelectViewBaseC1Ev+0x3cc>)
 80075ba:	f8c4 8478 	str.w	r8, [r4, #1144]	; 0x478
 80075be:	f8c4 2484 	str.w	r2, [r4, #1156]	; 0x484
 80075c2:	f8c4 8488 	str.w	r8, [r4, #1160]	; 0x488
        setXY(x, y);
 80075c6:	4642      	mov	r2, r8
 80075c8:	4641      	mov	r1, r8
 80075ca:	4638      	mov	r0, r7
 80075cc:	f8c4 4470 	str.w	r4, [r4, #1136]	; 0x470
 80075d0:	f8c4 4480 	str.w	r4, [r4, #1152]	; 0x480
 80075d4:	f7fb fb76 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80075d8:	4638      	mov	r0, r7
 80075da:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80075de:	f44f 7148 	mov.w	r1, #800	; 0x320
 80075e2:	1d26      	adds	r6, r4, #4
 80075e4:	f7ff fee6 	bl	80073b4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        color = newColor;
 80075e8:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 80075ec:	66a2      	str	r2, [r4, #104]	; 0x68
 80075ee:	4639      	mov	r1, r7
 80075f0:	4630      	mov	r0, r6
 80075f2:	f008 f8b5 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnNextPage.setXY(735, 415);
 80075f6:	9b01      	ldr	r3, [sp, #4]
 80075f8:	f240 129f 	movw	r2, #415	; 0x19f
 80075fc:	4618      	mov	r0, r3
 80075fe:	f240 21df 	movw	r1, #735	; 0x2df
 8007602:	f7fb fb5f 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
 8007606:	9b01      	ldr	r3, [sp, #4]
 8007608:	220b      	movs	r2, #11
 800760a:	f8ad 201c 	strh.w	r2, [sp, #28]
 800760e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8007612:	a907      	add	r1, sp, #28
 8007614:	aa08      	add	r2, sp, #32
 8007616:	4618      	mov	r0, r3
 8007618:	f00a fd70 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800761c:	9b01      	ldr	r3, [sp, #4]
    btnNextPage.setAction(buttonCallback);
 800761e:	f204 476c 	addw	r7, r4, #1132	; 0x46c
 8007622:	4619      	mov	r1, r3
 8007624:	4630      	mov	r0, r6
 8007626:	f8c4 7094 	str.w	r7, [r4, #148]	; 0x94
 800762a:	f008 f899 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnPrevPage.setXY(17, 415);
 800762e:	4628      	mov	r0, r5
 8007630:	f240 129f 	movw	r2, #415	; 0x19f
 8007634:	2111      	movs	r1, #17
 8007636:	f7fb fb45 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 800763a:	230c      	movs	r3, #12
    btnPrevPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_PREV_ID), touchgfx::Bitmap(BITMAP_BTN_PREV_ID));
 800763c:	aa08      	add	r2, sp, #32
 800763e:	a907      	add	r1, sp, #28
 8007640:	4628      	mov	r0, r5
 8007642:	f8ad 301c 	strh.w	r3, [sp, #28]
 8007646:	f8ad 3020 	strh.w	r3, [sp, #32]
 800764a:	f00a fd57 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800764e:	4629      	mov	r1, r5
 8007650:	4630      	mov	r0, r6
 8007652:	f8c4 70c8 	str.w	r7, [r4, #200]	; 0xc8
        color = newColor;
 8007656:	f04f 35ff 	mov.w	r5, #4294967295
 800765a:	f008 f881 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelSelectMission.setXY(258, 17);
 800765e:	2211      	movs	r2, #17
 8007660:	4658      	mov	r0, fp
 8007662:	f44f 7181 	mov.w	r1, #258	; 0x102
 8007666:	f7fb fb2d 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 800766a:	f8a4 8108 	strh.w	r8, [r4, #264]	; 0x108
        boundingArea = calculateBoundingArea();
 800766e:	a802      	add	r0, sp, #8
 8007670:	4659      	mov	r1, fp
        color = newColor;
 8007672:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
        boundingArea = calculateBoundingArea();
 8007676:	f00a fa49 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800767a:	a802      	add	r0, sp, #8
 800767c:	c807      	ldmia	r0, {r0, r1, r2}
 800767e:	f504 7388 	add.w	r3, r4, #272	; 0x110
 8007682:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007686:	4b89      	ldr	r3, [pc, #548]	; (80078ac <_ZN21MissionSelectViewBaseC1Ev+0x3d0>)
 8007688:	9308      	str	r3, [sp, #32]
 800768a:	2263      	movs	r2, #99	; 0x63
    labelSelectMission.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U2AM));
 800768c:	a908      	add	r1, sp, #32
 800768e:	4658      	mov	r0, fp
 8007690:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8007694:	f00a fcd4 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007698:	4659      	mov	r1, fp
 800769a:	4630      	mov	r0, r6
 800769c:	f008 f860 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 80076a0:	f504 70a8 	add.w	r0, r4, #336	; 0x150
        setXY(x, y);
 80076a4:	4642      	mov	r2, r8
 80076a6:	4641      	mov	r1, r8
 80076a8:	9001      	str	r0, [sp, #4]
 80076aa:	f7fb fb0b 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80076ae:	9801      	ldr	r0, [sp, #4]
 80076b0:	21d6      	movs	r1, #214	; 0xd6
 80076b2:	f240 122b 	movw	r2, #299	; 0x12b
 80076b6:	f7ff fe7d 	bl	80073b4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        borderSize = size;
 80076ba:	2205      	movs	r2, #5
 80076bc:	f8a4 2180 	strh.w	r2, [r4, #384]	; 0x180
        up = colorReleased;
 80076c0:	4a7b      	ldr	r2, [pc, #492]	; (80078b0 <_ZN21MissionSelectViewBaseC1Ev+0x3d4>)
 80076c2:	f8c4 2184 	str.w	r2, [r4, #388]	; 0x184
        down = colorPressed;
 80076c6:	f46f 73e6 	mvn.w	r3, #460	; 0x1cc
 80076ca:	f5a2 1268 	sub.w	r2, r2, #3801088	; 0x3a0000
 80076ce:	441a      	add	r2, r3
 80076d0:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
        borderUp = borderColorReleased;
 80076d4:	f5a2 4288 	sub.w	r2, r2, #17408	; 0x4400
 80076d8:	3a66      	subs	r2, #102	; 0x66
 80076da:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
        borderDown = borderColorPressed;
 80076de:	f102 1233 	add.w	r2, r2, #3342387	; 0x330033
 80076e2:	f502 524c 	add.w	r2, r2, #13056	; 0x3300
 80076e6:	f8c4 2190 	str.w	r2, [r4, #400]	; 0x190
        handlePressedUpdated();
 80076ea:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 80076ee:	4648      	mov	r0, r9
 80076f0:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 80076f4:	4790      	blx	r2
 80076f6:	4b6d      	ldr	r3, [pc, #436]	; (80078ac <_ZN21MissionSelectViewBaseC1Ev+0x3d0>)
 80076f8:	9308      	str	r3, [sp, #32]
        text.setTypedText(t);
 80076fa:	f504 70ca 	add.w	r0, r4, #404	; 0x194
 80076fe:	2357      	movs	r3, #87	; 0x57
 8007700:	a908      	add	r1, sp, #32
 8007702:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007706:	9001      	str	r0, [sp, #4]
 8007708:	f00a fc9a 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 800770c:	f9b4 2126 	ldrsh.w	r2, [r4, #294]	; 0x126
 8007710:	f9b4 1124 	ldrsh.w	r1, [r4, #292]	; 0x124
 8007714:	9801      	ldr	r0, [sp, #4]
 8007716:	f7ff fe4d 	bl	80073b4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        setXY(x, y);
 800771a:	9801      	ldr	r0, [sp, #4]
 800771c:	4641      	mov	r1, r8
 800771e:	225d      	movs	r2, #93	; 0x5d
 8007720:	f7fb fad0 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8007724:	9801      	ldr	r0, [sp, #4]
 8007726:	f240 122b 	movw	r2, #299	; 0x12b
 800772a:	21d6      	movs	r1, #214	; 0xd6
 800772c:	f7ff fe42 	bl	80073b4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        handlePressedUpdated();
 8007730:	4648      	mov	r0, r9
        colorPressed = newColorPressed;
 8007732:	e9c4 5577 	strd	r5, r5, [r4, #476]	; 0x1dc
        handlePressedUpdated();
 8007736:	f7ff fd2b 	bl	8007190 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    chassisResetBtn.setAction(flexButtonCallback);
 800773a:	f204 437c 	addw	r3, r4, #1148	; 0x47c
        action = &callback;
 800773e:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
        setXY(x, y);
 8007742:	4648      	mov	r0, r9
 8007744:	2254      	movs	r2, #84	; 0x54
 8007746:	2111      	movs	r1, #17
 8007748:	f7fb fabc 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800774c:	f240 122b 	movw	r2, #299	; 0x12b
 8007750:	4648      	mov	r0, r9
 8007752:	21d6      	movs	r1, #214	; 0xd6
 8007754:	f7ff fe2e 	bl	80073b4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8007758:	4649      	mov	r1, r9
 800775a:	4630      	mov	r0, r6
 800775c:	f008 f800 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    idleBtn.setXY(270, 84);
 8007760:	4650      	mov	r0, sl
 8007762:	2254      	movs	r2, #84	; 0x54
 8007764:	f44f 7187 	mov.w	r1, #270	; 0x10e
 8007768:	f04f 0902 	mov.w	r9, #2
 800776c:	f04f 0803 	mov.w	r8, #3
 8007770:	f7fb faa8 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    idleBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 8007774:	aa08      	add	r2, sp, #32
 8007776:	a907      	add	r1, sp, #28
 8007778:	4650      	mov	r0, sl
 800777a:	f8ad 901c 	strh.w	r9, [sp, #28]
 800777e:	f8ad 8020 	strh.w	r8, [sp, #32]
 8007782:	f00a fcbb 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007786:	2352      	movs	r3, #82	; 0x52
 8007788:	f8a4 321c 	strh.w	r3, [r4, #540]	; 0x21c
        updateTextPosition();
 800778c:	4650      	mov	r0, sl
 800778e:	f7ff fe1f 	bl	80073d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007792:	4651      	mov	r1, sl
 8007794:	4630      	mov	r0, r6
        colorPressed = col;
 8007796:	e9c4 5588 	strd	r5, r5, [r4, #544]	; 0x220
 800779a:	f8c4 720c 	str.w	r7, [r4, #524]	; 0x20c
 800779e:	f007 ffdf 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    trackdriveBtn.setXY(532, 84);
 80077a2:	ee18 0a10 	vmov	r0, s16
 80077a6:	2254      	movs	r2, #84	; 0x54
 80077a8:	f44f 7105 	mov.w	r1, #532	; 0x214
 80077ac:	f7fb fa8a 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    trackdriveBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 80077b0:	aa08      	add	r2, sp, #32
 80077b2:	a907      	add	r1, sp, #28
 80077b4:	ee18 0a10 	vmov	r0, s16
 80077b8:	f8ad 901c 	strh.w	r9, [sp, #28]
 80077bc:	f8ad 8020 	strh.w	r8, [sp, #32]
 80077c0:	f00a fc9c 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80077c4:	234a      	movs	r3, #74	; 0x4a
 80077c6:	f8a4 3264 	strh.w	r3, [r4, #612]	; 0x264
        updateTextPosition();
 80077ca:	ee18 0a10 	vmov	r0, s16
 80077ce:	f7ff fdff 	bl	80073d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80077d2:	ee18 1a10 	vmov	r1, s16
 80077d6:	4630      	mov	r0, r6
        colorPressed = col;
 80077d8:	e9c4 559a 	strd	r5, r5, [r4, #616]	; 0x268
 80077dc:	f8c4 7254 	str.w	r7, [r4, #596]	; 0x254
 80077e0:	f007 ffbe 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ebsTestBtn.setXY(532, 164);
 80077e4:	ee18 0a90 	vmov	r0, s17
 80077e8:	22a4      	movs	r2, #164	; 0xa4
 80077ea:	f44f 7105 	mov.w	r1, #532	; 0x214
 80077ee:	f7fb fa69 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    ebsTestBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 80077f2:	aa08      	add	r2, sp, #32
 80077f4:	a907      	add	r1, sp, #28
 80077f6:	ee18 0a90 	vmov	r0, s17
 80077fa:	f8ad 901c 	strh.w	r9, [sp, #28]
 80077fe:	f8ad 8020 	strh.w	r8, [sp, #32]
 8007802:	f00a fc7b 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007806:	2348      	movs	r3, #72	; 0x48
 8007808:	f8a4 32ac 	strh.w	r3, [r4, #684]	; 0x2ac
        updateTextPosition();
 800780c:	ee18 0a90 	vmov	r0, s17
 8007810:	f7ff fdde 	bl	80073d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007814:	ee18 1a90 	vmov	r1, s17
 8007818:	4630      	mov	r0, r6
        colorPressed = col;
 800781a:	e9c4 55ac 	strd	r5, r5, [r4, #688]	; 0x2b0
 800781e:	f8c4 729c 	str.w	r7, [r4, #668]	; 0x29c
 8007822:	f007 ff9d 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    inspectionBtn.setXY(532, 244);
 8007826:	ee19 0a10 	vmov	r0, s18
 800782a:	22f4      	movs	r2, #244	; 0xf4
 800782c:	f44f 7105 	mov.w	r1, #532	; 0x214
 8007830:	f7fb fa48 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    inspectionBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 8007834:	aa08      	add	r2, sp, #32
 8007836:	a907      	add	r1, sp, #28
 8007838:	ee19 0a10 	vmov	r0, s18
 800783c:	f8ad 901c 	strh.w	r9, [sp, #28]
 8007840:	f8ad 8020 	strh.w	r8, [sp, #32]
 8007844:	f00a fc5a 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007848:	2346      	movs	r3, #70	; 0x46
 800784a:	f8a4 32f4 	strh.w	r3, [r4, #756]	; 0x2f4
        updateTextPosition();
 800784e:	ee19 0a10 	vmov	r0, s18
 8007852:	f7ff fdbd 	bl	80073d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007856:	ee19 1a10 	vmov	r1, s18
 800785a:	4630      	mov	r0, r6
        colorPressed = col;
 800785c:	e9c4 55be 	strd	r5, r5, [r4, #760]	; 0x2f8
 8007860:	f8c4 72e4 	str.w	r7, [r4, #740]	; 0x2e4
 8007864:	f007 ff7c 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    manualBtn.setXY(532, 323);
 8007868:	ee19 0a90 	vmov	r0, s19
 800786c:	f240 1243 	movw	r2, #323	; 0x143
 8007870:	f44f 7105 	mov.w	r1, #532	; 0x214
 8007874:	f7fb fa26 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    manualBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 8007878:	aa08      	add	r2, sp, #32
 800787a:	a907      	add	r1, sp, #28
 800787c:	ee19 0a90 	vmov	r0, s19
 8007880:	f8ad 901c 	strh.w	r9, [sp, #28]
 8007884:	f8ad 8020 	strh.w	r8, [sp, #32]
 8007888:	f00a fc38 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800788c:	2344      	movs	r3, #68	; 0x44
 800788e:	f8a4 333c 	strh.w	r3, [r4, #828]	; 0x33c
        updateTextPosition();
 8007892:	ee19 0a90 	vmov	r0, s19
 8007896:	e00d      	b.n	80078b4 <_ZN21MissionSelectViewBaseC1Ev+0x3d8>
 8007898:	080296b8 	.word	0x080296b8
 800789c:	08029688 	.word	0x08029688
 80078a0:	08007281 	.word	0x08007281
 80078a4:	080296a0 	.word	0x080296a0
 80078a8:	0800735b 	.word	0x0800735b
 80078ac:	080284a8 	.word	0x080284a8
 80078b0:	ff3a7999 	.word	0xff3a7999
 80078b4:	f7ff fd8c 	bl	80073d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80078b8:	ee19 1a90 	vmov	r1, s19
 80078bc:	4630      	mov	r0, r6
        colorPressed = col;
 80078be:	e9c4 55d0 	strd	r5, r5, [r4, #832]	; 0x340
 80078c2:	f8c4 732c 	str.w	r7, [r4, #812]	; 0x32c
 80078c6:	f007 ff4b 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    debugBtn.setXY(400, 405);
 80078ca:	ee1a 0a10 	vmov	r0, s20
 80078ce:	f240 1295 	movw	r2, #405	; 0x195
 80078d2:	f44f 71c8 	mov.w	r1, #400	; 0x190
 80078d6:	f7fb f9f5 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    debugBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 80078da:	aa08      	add	r2, sp, #32
 80078dc:	a907      	add	r1, sp, #28
 80078de:	ee1a 0a10 	vmov	r0, s20
 80078e2:	f8ad 901c 	strh.w	r9, [sp, #28]
 80078e6:	f8ad 8020 	strh.w	r8, [sp, #32]
 80078ea:	f00a fc07 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80078ee:	2342      	movs	r3, #66	; 0x42
 80078f0:	f8a4 3384 	strh.w	r3, [r4, #900]	; 0x384
        updateTextPosition();
 80078f4:	ee1a 0a10 	vmov	r0, s20
 80078f8:	f7ff fd6a 	bl	80073d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80078fc:	ee1a 1a10 	vmov	r1, s20
 8007900:	4630      	mov	r0, r6
        colorPressed = col;
 8007902:	e9c4 55e2 	strd	r5, r5, [r4, #904]	; 0x388
 8007906:	f8c4 7374 	str.w	r7, [r4, #884]	; 0x374
 800790a:	f007 ff29 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    accelerationBtn.setXY(270, 164);
 800790e:	ee1a 0a90 	vmov	r0, s21
 8007912:	22a4      	movs	r2, #164	; 0xa4
 8007914:	f44f 7187 	mov.w	r1, #270	; 0x10e
 8007918:	f7fb f9d4 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    accelerationBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 800791c:	aa08      	add	r2, sp, #32
 800791e:	a907      	add	r1, sp, #28
 8007920:	ee1a 0a90 	vmov	r0, s21
 8007924:	f8ad 901c 	strh.w	r9, [sp, #28]
 8007928:	f8ad 8020 	strh.w	r8, [sp, #32]
 800792c:	f00a fbe6 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007930:	2350      	movs	r3, #80	; 0x50
 8007932:	f8a4 33cc 	strh.w	r3, [r4, #972]	; 0x3cc
        updateTextPosition();
 8007936:	ee1a 0a90 	vmov	r0, s21
 800793a:	f7ff fd49 	bl	80073d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800793e:	ee1a 1a90 	vmov	r1, s21
 8007942:	4630      	mov	r0, r6
        colorPressed = col;
 8007944:	e9c4 55f4 	strd	r5, r5, [r4, #976]	; 0x3d0
 8007948:	f8c4 73bc 	str.w	r7, [r4, #956]	; 0x3bc
 800794c:	f007 ff08 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    skidpadBtn.setXY(270, 244);
 8007950:	ee1b 0a10 	vmov	r0, s22
 8007954:	22f4      	movs	r2, #244	; 0xf4
 8007956:	f44f 7187 	mov.w	r1, #270	; 0x10e
 800795a:	f7fb f9b3 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    skidpadBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 800795e:	aa08      	add	r2, sp, #32
 8007960:	a907      	add	r1, sp, #28
 8007962:	ee1b 0a10 	vmov	r0, s22
 8007966:	f8ad 901c 	strh.w	r9, [sp, #28]
 800796a:	f8ad 8020 	strh.w	r8, [sp, #32]
 800796e:	f00a fbc5 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007972:	234e      	movs	r3, #78	; 0x4e
 8007974:	f8a4 3414 	strh.w	r3, [r4, #1044]	; 0x414
        updateTextPosition();
 8007978:	ee1b 0a10 	vmov	r0, s22
 800797c:	f7ff fd28 	bl	80073d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007980:	ee1b 1a10 	vmov	r1, s22
 8007984:	4630      	mov	r0, r6
        color = col;
 8007986:	f8c4 5418 	str.w	r5, [r4, #1048]	; 0x418
        colorPressed = col;
 800798a:	f8c4 541c 	str.w	r5, [r4, #1052]	; 0x41c
 800798e:	f8c4 7404 	str.w	r7, [r4, #1028]	; 0x404
 8007992:	f007 fee5 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    autocrossBtn.setXY(270, 323);
 8007996:	ee1b 0a90 	vmov	r0, s23
 800799a:	f240 1243 	movw	r2, #323	; 0x143
 800799e:	f44f 7187 	mov.w	r1, #270	; 0x10e
 80079a2:	f7fb f98f 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
    autocrossBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 80079a6:	aa08      	add	r2, sp, #32
 80079a8:	a907      	add	r1, sp, #28
 80079aa:	ee1b 0a90 	vmov	r0, s23
 80079ae:	f8ad 901c 	strh.w	r9, [sp, #28]
 80079b2:	f8ad 8020 	strh.w	r8, [sp, #32]
 80079b6:	f00a fba1 	bl	80120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80079ba:	234c      	movs	r3, #76	; 0x4c
        updateTextPosition();
 80079bc:	ee1b 0a90 	vmov	r0, s23
 80079c0:	f8a4 345c 	strh.w	r3, [r4, #1116]	; 0x45c
 80079c4:	f7ff fd04 	bl	80073d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80079c8:	4630      	mov	r0, r6
 80079ca:	ee1b 1a90 	vmov	r1, s23
        color = col;
 80079ce:	f8c4 5460 	str.w	r5, [r4, #1120]	; 0x460
        colorPressed = col;
 80079d2:	f8c4 5464 	str.w	r5, [r4, #1124]	; 0x464
 80079d6:	f8c4 744c 	str.w	r7, [r4, #1100]	; 0x44c
 80079da:	f007 fec1 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80079de:	4620      	mov	r0, r4
 80079e0:	b00b      	add	sp, #44	; 0x2c
 80079e2:	ecbd 8b08 	vpop	{d8-d11}
 80079e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80079ea:	bf00      	nop

080079ec <_ZN15StartupViewBaseD1Ev>:
}

StartupViewBase::~StartupViewBase()
{

}
 80079ec:	4770      	bx	lr

080079ee <_ZN15StartupViewBase11setupScreenEv>:

void StartupViewBase::setupScreen()
{

}
 80079ee:	4770      	bx	lr

080079f0 <_ZN15StartupViewBase15afterTransitionEv>:
void StartupViewBase::afterTransition()
{
    //fromStartupToInfotaiment
    //When screen transition ends delay
    //Delay for 2400 ms (144 Ticks)
    fromStartupToInfotaimentCounter = FROMSTARTUPTOINFOTAIMENT_DURATION;
 80079f0:	2390      	movs	r3, #144	; 0x90
 80079f2:	f8a0 30e0 	strh.w	r3, [r0, #224]	; 0xe0
}
 80079f6:	4770      	bx	lr

080079f8 <_ZN15StartupViewBaseD0Ev>:
StartupViewBase::~StartupViewBase()
 80079f8:	b510      	push	{r4, lr}
}
 80079fa:	21e4      	movs	r1, #228	; 0xe4
StartupViewBase::~StartupViewBase()
 80079fc:	4604      	mov	r4, r0
}
 80079fe:	f01e fddf 	bl	80265c0 <_ZdlPvj>
 8007a02:	4620      	mov	r0, r4
 8007a04:	bd10      	pop	{r4, pc}

08007a06 <_ZN15StartupViewBase15handleTickEventEv>:

void StartupViewBase::handleTickEvent()
{
 8007a06:	b508      	push	{r3, lr}
    if (fromStartupToInfotaimentCounter > 0)
 8007a08:	f8b0 30e0 	ldrh.w	r3, [r0, #224]	; 0xe0
 8007a0c:	b153      	cbz	r3, 8007a24 <_ZN15StartupViewBase15handleTickEventEv+0x1e>
    {
        fromStartupToInfotaimentCounter--;
 8007a0e:	3b01      	subs	r3, #1
 8007a10:	b29b      	uxth	r3, r3
 8007a12:	f8a0 30e0 	strh.w	r3, [r0, #224]	; 0xe0
        if (fromStartupToInfotaimentCounter == 0)
 8007a16:	b92b      	cbnz	r3, 8007a24 <_ZN15StartupViewBase15handleTickEventEv+0x1e>
    virtual void afterTransition();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007a18:	f00d fa3e 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
                //When fromStartupToInfotaiment completed change screen to MainInfotaiment
                //Go to MainInfotaiment with screen transition towards East
                application().gotoMainInfotaimentScreenWipeTransitionEast();
        }
    }
}
 8007a1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
                application().gotoMainInfotaimentScreenWipeTransitionEast();
 8007a20:	f7fc be88 	b.w	8004734 <_ZN23FrontendApplicationBase43gotoMainInfotaimentScreenWipeTransitionEastEv>
}
 8007a24:	bd08      	pop	{r3, pc}
	...

08007a28 <_ZN15StartupViewBaseC1Ev>:
StartupViewBase::StartupViewBase() :
 8007a28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007a2c:	4604      	mov	r4, r0
 8007a2e:	b086      	sub	sp, #24
    fromStartupToInfotaimentCounter(0)
 8007a30:	4626      	mov	r6, r4
 8007a32:	2500      	movs	r5, #0
 8007a34:	f00e feb0 	bl	8016798 <_ZN8touchgfx6ScreenC1Ev>
 8007a38:	4b4e      	ldr	r3, [pc, #312]	; (8007b74 <_ZN15StartupViewBaseC1Ev+0x14c>)
 8007a3a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007a3c:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007a40:	4629      	mov	r1, r5
 8007a42:	2226      	movs	r2, #38	; 0x26
 8007a44:	4630      	mov	r0, r6
 8007a46:	f01e fe75 	bl	8026734 <memset>
 8007a4a:	4630      	mov	r0, r6
 8007a4c:	f7fb f95a 	bl	8002d04 <_ZN8touchgfx6WidgetC1Ev>
 8007a50:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007a54:	4b48      	ldr	r3, [pc, #288]	; (8007b78 <_ZN15StartupViewBaseC1Ev+0x150>)
 8007a56:	6423      	str	r3, [r4, #64]	; 0x40
 8007a58:	27ff      	movs	r7, #255	; 0xff
        : Widget(), bitmap(bmp), alpha(255)
 8007a5a:	2226      	movs	r2, #38	; 0x26
 8007a5c:	4629      	mov	r1, r5
 8007a5e:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
        : color(col)
 8007a62:	66a5      	str	r5, [r4, #104]	; 0x68
 8007a64:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8007a68:	4640      	mov	r0, r8
 8007a6a:	f8ad 9010 	strh.w	r9, [sp, #16]
 8007a6e:	f01e fe61 	bl	8026734 <memset>
 8007a72:	4640      	mov	r0, r8
 8007a74:	f7fb f946 	bl	8002d04 <_ZN8touchgfx6WidgetC1Ev>
 8007a78:	4b40      	ldr	r3, [pc, #256]	; (8007b7c <_ZN15StartupViewBaseC1Ev+0x154>)
 8007a7a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007a7c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8007a80:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007a84:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007a88:	a904      	add	r1, sp, #16
 8007a8a:	f104 0798 	add.w	r7, r4, #152	; 0x98
 8007a8e:	4640      	mov	r0, r8
 8007a90:	f00a fd02 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8007a94:	4629      	mov	r1, r5
 8007a96:	2226      	movs	r2, #38	; 0x26
 8007a98:	4638      	mov	r0, r7
 8007a9a:	f01e fe4b 	bl	8026734 <memset>
 8007a9e:	4638      	mov	r0, r7
 8007aa0:	f7fb f930 	bl	8002d04 <_ZN8touchgfx6WidgetC1Ev>
 8007aa4:	4b36      	ldr	r3, [pc, #216]	; (8007b80 <_ZN15StartupViewBaseC1Ev+0x158>)
 8007aa6:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007aaa:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
        : typedTextId(id)
 8007aae:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8007b88 <_ZN15StartupViewBaseC1Ev+0x160>
 8007ab2:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8007ab6:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 8007aba:	e9c4 3536 	strd	r3, r5, [r4, #216]	; 0xd8
        setXY(x, y);
 8007abe:	462a      	mov	r2, r5
 8007ac0:	f8a4 90c4 	strh.w	r9, [r4, #196]	; 0xc4
        : color(col)
 8007ac4:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8007ac8:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8007acc:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
 8007ad0:	f8a4 50e0 	strh.w	r5, [r4, #224]	; 0xe0
 8007ad4:	4629      	mov	r1, r5
 8007ad6:	4630      	mov	r0, r6
 8007ad8:	f8c4 a0c0 	str.w	sl, [r4, #192]	; 0xc0
 8007adc:	f7fb f8f2 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007ae0:	4630      	mov	r0, r6
 8007ae2:	f44f 7148 	mov.w	r1, #800	; 0x320
 8007ae6:	f7fa f851 	bl	8001b8c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007aea:	4630      	mov	r0, r6
 8007aec:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8007af0:	f7fa f84e 	bl	8001b90 <_ZN8touchgfx8Drawable9setHeightEs>
 8007af4:	f104 0904 	add.w	r9, r4, #4
        color = newColor;
 8007af8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007afc:	66a3      	str	r3, [r4, #104]	; 0x68
 8007afe:	4631      	mov	r1, r6
 8007b00:	4648      	mov	r0, r9
 8007b02:	f007 fe2d 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    backgroundStartup.setXY(0, 0);
 8007b06:	462a      	mov	r2, r5
 8007b08:	4629      	mov	r1, r5
 8007b0a:	4640      	mov	r0, r8
 8007b0c:	f7fb f8da 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 8007b10:	230e      	movs	r3, #14
    backgroundStartup.setBitmap(touchgfx::Bitmap(BITMAP_MMRD_LOGO_NUOVO_800X480_ID));
 8007b12:	a904      	add	r1, sp, #16
 8007b14:	4640      	mov	r0, r8
 8007b16:	f8ad 3010 	strh.w	r3, [sp, #16]
 8007b1a:	f00a fcbd 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b1e:	4641      	mov	r1, r8
 8007b20:	4648      	mov	r0, r9
 8007b22:	f007 fe1d 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(707, 0);
 8007b26:	462a      	mov	r2, r5
 8007b28:	4638      	mov	r0, r7
 8007b2a:	f240 21c3 	movw	r1, #707	; 0x2c3
 8007b2e:	f7fb f8c9 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007b32:	4b14      	ldr	r3, [pc, #80]	; (8007b84 <_ZN15StartupViewBaseC1Ev+0x15c>)
        linespace = space;
 8007b34:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007b38:	466d      	mov	r5, sp
        color = newColor;
 8007b3a:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007b3e:	4639      	mov	r1, r7
 8007b40:	4628      	mov	r0, r5
 8007b42:	f009 ffe3 	bl	8011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007b46:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007b4a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007b4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007b52:	2366      	movs	r3, #102	; 0x66
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RP6T));
 8007b54:	a904      	add	r1, sp, #16
 8007b56:	4638      	mov	r0, r7
 8007b58:	f8ad 3014 	strh.w	r3, [sp, #20]
 8007b5c:	f8cd a010 	str.w	sl, [sp, #16]
 8007b60:	f00a fa6e 	bl	8012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b64:	4648      	mov	r0, r9
 8007b66:	4639      	mov	r1, r7
 8007b68:	f007 fdfa 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007b6c:	4620      	mov	r0, r4
 8007b6e:	b006      	add	sp, #24
 8007b70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007b74:	08029714 	.word	0x08029714
 8007b78:	0802a388 	.word	0x0802a388
 8007b7c:	0802a4cc 	.word	0x0802a4cc
 8007b80:	0802a2f8 	.word	0x0802a2f8
 8007b84:	ffbab6b6 	.word	0xffbab6b6
 8007b88:	080284a8 	.word	0x080284a8

08007b8c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_100_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_100_4bpp();

touchgfx::GeneratedFont& getFont_verdana_100_4bpp()
{
    static touchgfx::GeneratedFont verdana_100_4bpp(glyphs_verdana_100_4bpp, 62, 121, 100, 0, 0, 4, 1, 3, 4, unicodes_verdana_100_4bpp, kerning_verdana_100_4bpp, 78, 0, 0, 0);
 8007b8c:	4770      	bx	lr
	...

08007b90 <_Z24getFont_verdana_100_4bppv>:
{
 8007b90:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_100_4bpp(glyphs_verdana_100_4bpp, 62, 121, 100, 0, 0, 4, 1, 3, 4, unicodes_verdana_100_4bpp, kerning_verdana_100_4bpp, 78, 0, 0, 0);
 8007b92:	4d17      	ldr	r5, [pc, #92]	; (8007bf0 <_Z24getFont_verdana_100_4bppv+0x60>)
 8007b94:	782c      	ldrb	r4, [r5, #0]
 8007b96:	f3bf 8f5b 	dmb	ish
 8007b9a:	f014 0401 	ands.w	r4, r4, #1
{
 8007b9e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_100_4bpp(glyphs_verdana_100_4bpp, 62, 121, 100, 0, 0, 4, 1, 3, 4, unicodes_verdana_100_4bpp, kerning_verdana_100_4bpp, 78, 0, 0, 0);
 8007ba0:	d123      	bne.n	8007bea <_Z24getFont_verdana_100_4bppv+0x5a>
 8007ba2:	4628      	mov	r0, r5
 8007ba4:	f01e fd0e 	bl	80265c4 <__cxa_guard_acquire>
 8007ba8:	b1f8      	cbz	r0, 8007bea <_Z24getFont_verdana_100_4bppv+0x5a>
 8007baa:	234e      	movs	r3, #78	; 0x4e
 8007bac:	9309      	str	r3, [sp, #36]	; 0x24
 8007bae:	4b11      	ldr	r3, [pc, #68]	; (8007bf4 <_Z24getFont_verdana_100_4bppv+0x64>)
 8007bb0:	9308      	str	r3, [sp, #32]
 8007bb2:	4b11      	ldr	r3, [pc, #68]	; (8007bf8 <_Z24getFont_verdana_100_4bppv+0x68>)
 8007bb4:	9307      	str	r3, [sp, #28]
 8007bb6:	2203      	movs	r2, #3
 8007bb8:	2304      	movs	r3, #4
 8007bba:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007bbe:	2201      	movs	r2, #1
 8007bc0:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007bc4:	2364      	movs	r3, #100	; 0x64
 8007bc6:	490d      	ldr	r1, [pc, #52]	; (8007bfc <_Z24getFont_verdana_100_4bppv+0x6c>)
 8007bc8:	9300      	str	r3, [sp, #0]
 8007bca:	223e      	movs	r2, #62	; 0x3e
 8007bcc:	2379      	movs	r3, #121	; 0x79
 8007bce:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007bd2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007bd6:	480a      	ldr	r0, [pc, #40]	; (8007c00 <_Z24getFont_verdana_100_4bppv+0x70>)
 8007bd8:	940a      	str	r4, [sp, #40]	; 0x28
 8007bda:	f7fd fc0f 	bl	80053fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007bde:	4809      	ldr	r0, [pc, #36]	; (8007c04 <_Z24getFont_verdana_100_4bppv+0x74>)
 8007be0:	f01e fd3a 	bl	8026658 <atexit>
 8007be4:	4628      	mov	r0, r5
 8007be6:	f01e fcf9 	bl	80265dc <__cxa_guard_release>
    return verdana_100_4bpp;
}
 8007bea:	4805      	ldr	r0, [pc, #20]	; (8007c00 <_Z24getFont_verdana_100_4bppv+0x70>)
 8007bec:	b00f      	add	sp, #60	; 0x3c
 8007bee:	bd30      	pop	{r4, r5, pc}
 8007bf0:	20005dc0 	.word	0x20005dc0
 8007bf4:	0802ab08 	.word	0x0802ab08
 8007bf8:	0802b150 	.word	0x0802b150
 8007bfc:	902355d0 	.word	0x902355d0
 8007c00:	20005dc4 	.word	0x20005dc4
 8007c04:	08007b8d 	.word	0x08007b8d

08007c08 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 66, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007c08:	4770      	bx	lr
	...

08007c0c <_Z23getFont_verdana_10_4bppv>:
{
 8007c0c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 66, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007c0e:	4d17      	ldr	r5, [pc, #92]	; (8007c6c <_Z23getFont_verdana_10_4bppv+0x60>)
 8007c10:	782c      	ldrb	r4, [r5, #0]
 8007c12:	f3bf 8f5b 	dmb	ish
 8007c16:	f014 0401 	ands.w	r4, r4, #1
{
 8007c1a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 66, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007c1c:	d122      	bne.n	8007c64 <_Z23getFont_verdana_10_4bppv+0x58>
 8007c1e:	4628      	mov	r0, r5
 8007c20:	f01e fcd0 	bl	80265c4 <__cxa_guard_acquire>
 8007c24:	b1f0      	cbz	r0, 8007c64 <_Z23getFont_verdana_10_4bppv+0x58>
 8007c26:	233f      	movs	r3, #63	; 0x3f
 8007c28:	9309      	str	r3, [sp, #36]	; 0x24
 8007c2a:	4b11      	ldr	r3, [pc, #68]	; (8007c70 <_Z23getFont_verdana_10_4bppv+0x64>)
 8007c2c:	9308      	str	r3, [sp, #32]
 8007c2e:	4b11      	ldr	r3, [pc, #68]	; (8007c74 <_Z23getFont_verdana_10_4bppv+0x68>)
 8007c30:	9307      	str	r3, [sp, #28]
 8007c32:	2301      	movs	r3, #1
 8007c34:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007c38:	9304      	str	r3, [sp, #16]
 8007c3a:	2304      	movs	r3, #4
 8007c3c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007c40:	230a      	movs	r3, #10
 8007c42:	490d      	ldr	r1, [pc, #52]	; (8007c78 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007c44:	9300      	str	r3, [sp, #0]
 8007c46:	2242      	movs	r2, #66	; 0x42
 8007c48:	230c      	movs	r3, #12
 8007c4a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007c4e:	480b      	ldr	r0, [pc, #44]	; (8007c7c <_Z23getFont_verdana_10_4bppv+0x70>)
 8007c50:	940a      	str	r4, [sp, #40]	; 0x28
 8007c52:	9401      	str	r4, [sp, #4]
 8007c54:	f7fd fbd2 	bl	80053fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007c58:	4809      	ldr	r0, [pc, #36]	; (8007c80 <_Z23getFont_verdana_10_4bppv+0x74>)
 8007c5a:	f01e fcfd 	bl	8026658 <atexit>
 8007c5e:	4628      	mov	r0, r5
 8007c60:	f01e fcbc 	bl	80265dc <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007c64:	4805      	ldr	r0, [pc, #20]	; (8007c7c <_Z23getFont_verdana_10_4bppv+0x70>)
 8007c66:	b00f      	add	sp, #60	; 0x3c
 8007c68:	bd30      	pop	{r4, r5, pc}
 8007c6a:	bf00      	nop
 8007c6c:	20005df0 	.word	0x20005df0
 8007c70:	0802ad48 	.word	0x0802ad48
 8007c74:	0802b154 	.word	0x0802b154
 8007c78:	90235934 	.word	0x90235934
 8007c7c:	20005df4 	.word	0x20005df4
 8007c80:	08007c09 	.word	0x08007c09

08007c84 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_120_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_120_4bpp();

touchgfx::GeneratedFont& getFont_verdana_120_4bpp()
{
    static touchgfx::GeneratedFont verdana_120_4bpp(glyphs_verdana_120_4bpp, 28, 145, 120, 0, 0, 4, 1, 0, 1, unicodes_verdana_120_4bpp, kerning_verdana_120_4bpp, 63, 0, 0, 0);
 8007c84:	4770      	bx	lr
	...

08007c88 <_Z24getFont_verdana_120_4bppv>:
{
 8007c88:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_120_4bpp(glyphs_verdana_120_4bpp, 28, 145, 120, 0, 0, 4, 1, 0, 1, unicodes_verdana_120_4bpp, kerning_verdana_120_4bpp, 63, 0, 0, 0);
 8007c8a:	4d17      	ldr	r5, [pc, #92]	; (8007ce8 <_Z24getFont_verdana_120_4bppv+0x60>)
 8007c8c:	782c      	ldrb	r4, [r5, #0]
 8007c8e:	f3bf 8f5b 	dmb	ish
 8007c92:	f014 0401 	ands.w	r4, r4, #1
{
 8007c96:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_120_4bpp(glyphs_verdana_120_4bpp, 28, 145, 120, 0, 0, 4, 1, 0, 1, unicodes_verdana_120_4bpp, kerning_verdana_120_4bpp, 63, 0, 0, 0);
 8007c98:	d122      	bne.n	8007ce0 <_Z24getFont_verdana_120_4bppv+0x58>
 8007c9a:	4628      	mov	r0, r5
 8007c9c:	f01e fc92 	bl	80265c4 <__cxa_guard_acquire>
 8007ca0:	b1f0      	cbz	r0, 8007ce0 <_Z24getFont_verdana_120_4bppv+0x58>
 8007ca2:	233f      	movs	r3, #63	; 0x3f
 8007ca4:	9309      	str	r3, [sp, #36]	; 0x24
 8007ca6:	4b11      	ldr	r3, [pc, #68]	; (8007cec <_Z24getFont_verdana_120_4bppv+0x64>)
 8007ca8:	9308      	str	r3, [sp, #32]
 8007caa:	4b11      	ldr	r3, [pc, #68]	; (8007cf0 <_Z24getFont_verdana_120_4bppv+0x68>)
 8007cac:	9307      	str	r3, [sp, #28]
 8007cae:	2301      	movs	r3, #1
 8007cb0:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8007cb4:	9304      	str	r3, [sp, #16]
 8007cb6:	2304      	movs	r3, #4
 8007cb8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007cbc:	2378      	movs	r3, #120	; 0x78
 8007cbe:	490d      	ldr	r1, [pc, #52]	; (8007cf4 <_Z24getFont_verdana_120_4bppv+0x6c>)
 8007cc0:	9300      	str	r3, [sp, #0]
 8007cc2:	221c      	movs	r2, #28
 8007cc4:	2391      	movs	r3, #145	; 0x91
 8007cc6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007cca:	480b      	ldr	r0, [pc, #44]	; (8007cf8 <_Z24getFont_verdana_120_4bppv+0x70>)
 8007ccc:	940a      	str	r4, [sp, #40]	; 0x28
 8007cce:	9401      	str	r4, [sp, #4]
 8007cd0:	f7fd fb94 	bl	80053fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007cd4:	4809      	ldr	r0, [pc, #36]	; (8007cfc <_Z24getFont_verdana_120_4bppv+0x74>)
 8007cd6:	f01e fcbf 	bl	8026658 <atexit>
 8007cda:	4628      	mov	r0, r5
 8007cdc:	f01e fc7e 	bl	80265dc <__cxa_guard_release>
    return verdana_120_4bpp;
}
 8007ce0:	4805      	ldr	r0, [pc, #20]	; (8007cf8 <_Z24getFont_verdana_120_4bppv+0x70>)
 8007ce2:	b00f      	add	sp, #60	; 0x3c
 8007ce4:	bd30      	pop	{r4, r5, pc}
 8007ce6:	bf00      	nop
 8007ce8:	20005e20 	.word	0x20005e20
 8007cec:	0802ad64 	.word	0x0802ad64
 8007cf0:	0802b158 	.word	0x0802b158
 8007cf4:	90235cd0 	.word	0x90235cd0
 8007cf8:	20005e24 	.word	0x20005e24
 8007cfc:	08007c85 	.word	0x08007c85

08007d00 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 66, 18, 15, 0, 0, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8007d00:	4770      	bx	lr
	...

08007d04 <_Z23getFont_verdana_15_4bppv>:
{
 8007d04:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 66, 18, 15, 0, 0, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8007d06:	4d17      	ldr	r5, [pc, #92]	; (8007d64 <_Z23getFont_verdana_15_4bppv+0x60>)
 8007d08:	782c      	ldrb	r4, [r5, #0]
 8007d0a:	f3bf 8f5b 	dmb	ish
 8007d0e:	f014 0401 	ands.w	r4, r4, #1
{
 8007d12:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 66, 18, 15, 0, 0, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8007d14:	d122      	bne.n	8007d5c <_Z23getFont_verdana_15_4bppv+0x58>
 8007d16:	4628      	mov	r0, r5
 8007d18:	f01e fc54 	bl	80265c4 <__cxa_guard_acquire>
 8007d1c:	b1f0      	cbz	r0, 8007d5c <_Z23getFont_verdana_15_4bppv+0x58>
 8007d1e:	233f      	movs	r3, #63	; 0x3f
 8007d20:	9309      	str	r3, [sp, #36]	; 0x24
 8007d22:	4b11      	ldr	r3, [pc, #68]	; (8007d68 <_Z23getFont_verdana_15_4bppv+0x64>)
 8007d24:	9308      	str	r3, [sp, #32]
 8007d26:	4b11      	ldr	r3, [pc, #68]	; (8007d6c <_Z23getFont_verdana_15_4bppv+0x68>)
 8007d28:	9307      	str	r3, [sp, #28]
 8007d2a:	2301      	movs	r3, #1
 8007d2c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007d30:	9304      	str	r3, [sp, #16]
 8007d32:	2304      	movs	r3, #4
 8007d34:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007d38:	230f      	movs	r3, #15
 8007d3a:	490d      	ldr	r1, [pc, #52]	; (8007d70 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8007d3c:	9300      	str	r3, [sp, #0]
 8007d3e:	2242      	movs	r2, #66	; 0x42
 8007d40:	2312      	movs	r3, #18
 8007d42:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007d46:	480b      	ldr	r0, [pc, #44]	; (8007d74 <_Z23getFont_verdana_15_4bppv+0x70>)
 8007d48:	940a      	str	r4, [sp, #40]	; 0x28
 8007d4a:	9401      	str	r4, [sp, #4]
 8007d4c:	f7fd fb56 	bl	80053fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007d50:	4809      	ldr	r0, [pc, #36]	; (8007d78 <_Z23getFont_verdana_15_4bppv+0x74>)
 8007d52:	f01e fc81 	bl	8026658 <atexit>
 8007d56:	4628      	mov	r0, r5
 8007d58:	f01e fc40 	bl	80265dc <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8007d5c:	4805      	ldr	r0, [pc, #20]	; (8007d74 <_Z23getFont_verdana_15_4bppv+0x70>)
 8007d5e:	b00f      	add	sp, #60	; 0x3c
 8007d60:	bd30      	pop	{r4, r5, pc}
 8007d62:	bf00      	nop
 8007d64:	20005e50 	.word	0x20005e50
 8007d68:	0802adec 	.word	0x0802adec
 8007d6c:	0802b15c 	.word	0x0802b15c
 8007d70:	90235e58 	.word	0x90235e58
 8007d74:	20005e54 	.word	0x20005e54
 8007d78:	08007d01 	.word	0x08007d01

08007d7c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_180_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_180_4bpp();

touchgfx::GeneratedFont& getFont_verdana_180_4bpp()
{
    static touchgfx::GeneratedFont verdana_180_4bpp(glyphs_verdana_180_4bpp, 7, 183, 180, 0, 0, 4, 1, 0, 0, unicodes_verdana_180_4bpp, kerning_verdana_180_4bpp, 63, 0, 0, 0);
 8007d7c:	4770      	bx	lr
	...

08007d80 <_Z24getFont_verdana_180_4bppv>:
{
 8007d80:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_180_4bpp(glyphs_verdana_180_4bpp, 7, 183, 180, 0, 0, 4, 1, 0, 0, unicodes_verdana_180_4bpp, kerning_verdana_180_4bpp, 63, 0, 0, 0);
 8007d82:	4d17      	ldr	r5, [pc, #92]	; (8007de0 <_Z24getFont_verdana_180_4bppv+0x60>)
 8007d84:	782c      	ldrb	r4, [r5, #0]
 8007d86:	f3bf 8f5b 	dmb	ish
 8007d8a:	f014 0401 	ands.w	r4, r4, #1
{
 8007d8e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_180_4bpp(glyphs_verdana_180_4bpp, 7, 183, 180, 0, 0, 4, 1, 0, 0, unicodes_verdana_180_4bpp, kerning_verdana_180_4bpp, 63, 0, 0, 0);
 8007d90:	d122      	bne.n	8007dd8 <_Z24getFont_verdana_180_4bppv+0x58>
 8007d92:	4628      	mov	r0, r5
 8007d94:	f01e fc16 	bl	80265c4 <__cxa_guard_acquire>
 8007d98:	b1f0      	cbz	r0, 8007dd8 <_Z24getFont_verdana_180_4bppv+0x58>
 8007d9a:	233f      	movs	r3, #63	; 0x3f
 8007d9c:	9309      	str	r3, [sp, #36]	; 0x24
 8007d9e:	4b11      	ldr	r3, [pc, #68]	; (8007de4 <_Z24getFont_verdana_180_4bppv+0x64>)
 8007da0:	9308      	str	r3, [sp, #32]
 8007da2:	4b11      	ldr	r3, [pc, #68]	; (8007de8 <_Z24getFont_verdana_180_4bppv+0x68>)
 8007da4:	4911      	ldr	r1, [pc, #68]	; (8007dec <_Z24getFont_verdana_180_4bppv+0x6c>)
 8007da6:	4812      	ldr	r0, [pc, #72]	; (8007df0 <_Z24getFont_verdana_180_4bppv+0x70>)
 8007da8:	940a      	str	r4, [sp, #40]	; 0x28
 8007daa:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007dae:	2201      	movs	r2, #1
 8007db0:	2304      	movs	r3, #4
 8007db2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007db6:	23b4      	movs	r3, #180	; 0xb4
 8007db8:	9300      	str	r3, [sp, #0]
 8007dba:	2207      	movs	r2, #7
 8007dbc:	23b7      	movs	r3, #183	; 0xb7
 8007dbe:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007dc2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007dc6:	9405      	str	r4, [sp, #20]
 8007dc8:	f7fd fb18 	bl	80053fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007dcc:	4809      	ldr	r0, [pc, #36]	; (8007df4 <_Z24getFont_verdana_180_4bppv+0x74>)
 8007dce:	f01e fc43 	bl	8026658 <atexit>
 8007dd2:	4628      	mov	r0, r5
 8007dd4:	f01e fc02 	bl	80265dc <__cxa_guard_release>
    return verdana_180_4bpp;
}
 8007dd8:	4805      	ldr	r0, [pc, #20]	; (8007df0 <_Z24getFont_verdana_180_4bppv+0x70>)
 8007dda:	b00f      	add	sp, #60	; 0x3c
 8007ddc:	bd30      	pop	{r4, r5, pc}
 8007dde:	bf00      	nop
 8007de0:	20005e80 	.word	0x20005e80
 8007de4:	0802ae70 	.word	0x0802ae70
 8007de8:	0802b160 	.word	0x0802b160
 8007dec:	902361f4 	.word	0x902361f4
 8007df0:	20005e84 	.word	0x20005e84
 8007df4:	08007d7d 	.word	0x08007d7d

08007df8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 67, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007df8:	4770      	bx	lr
	...

08007dfc <_Z23getFont_verdana_20_4bppv>:
{
 8007dfc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 67, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007dfe:	4d17      	ldr	r5, [pc, #92]	; (8007e5c <_Z23getFont_verdana_20_4bppv+0x60>)
 8007e00:	782c      	ldrb	r4, [r5, #0]
 8007e02:	f3bf 8f5b 	dmb	ish
 8007e06:	f014 0401 	ands.w	r4, r4, #1
{
 8007e0a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 67, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007e0c:	d122      	bne.n	8007e54 <_Z23getFont_verdana_20_4bppv+0x58>
 8007e0e:	4628      	mov	r0, r5
 8007e10:	f01e fbd8 	bl	80265c4 <__cxa_guard_acquire>
 8007e14:	b1f0      	cbz	r0, 8007e54 <_Z23getFont_verdana_20_4bppv+0x58>
 8007e16:	233f      	movs	r3, #63	; 0x3f
 8007e18:	9309      	str	r3, [sp, #36]	; 0x24
 8007e1a:	4b11      	ldr	r3, [pc, #68]	; (8007e60 <_Z23getFont_verdana_20_4bppv+0x64>)
 8007e1c:	9308      	str	r3, [sp, #32]
 8007e1e:	4b11      	ldr	r3, [pc, #68]	; (8007e64 <_Z23getFont_verdana_20_4bppv+0x68>)
 8007e20:	9307      	str	r3, [sp, #28]
 8007e22:	2301      	movs	r3, #1
 8007e24:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007e28:	9304      	str	r3, [sp, #16]
 8007e2a:	2304      	movs	r3, #4
 8007e2c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007e30:	2314      	movs	r3, #20
 8007e32:	490d      	ldr	r1, [pc, #52]	; (8007e68 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8007e34:	9300      	str	r3, [sp, #0]
 8007e36:	2243      	movs	r2, #67	; 0x43
 8007e38:	2318      	movs	r3, #24
 8007e3a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007e3e:	480b      	ldr	r0, [pc, #44]	; (8007e6c <_Z23getFont_verdana_20_4bppv+0x70>)
 8007e40:	940a      	str	r4, [sp, #40]	; 0x28
 8007e42:	9401      	str	r4, [sp, #4]
 8007e44:	f7fd fada 	bl	80053fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007e48:	4809      	ldr	r0, [pc, #36]	; (8007e70 <_Z23getFont_verdana_20_4bppv+0x74>)
 8007e4a:	f01e fc05 	bl	8026658 <atexit>
 8007e4e:	4628      	mov	r0, r5
 8007e50:	f01e fbc4 	bl	80265dc <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8007e54:	4805      	ldr	r0, [pc, #20]	; (8007e6c <_Z23getFont_verdana_20_4bppv+0x70>)
 8007e56:	b00f      	add	sp, #60	; 0x3c
 8007e58:	bd30      	pop	{r4, r5, pc}
 8007e5a:	bf00      	nop
 8007e5c:	20005eb0 	.word	0x20005eb0
 8007e60:	0802ae74 	.word	0x0802ae74
 8007e64:	0802b164 	.word	0x0802b164
 8007e68:	90236258 	.word	0x90236258
 8007e6c:	20005eb4 	.word	0x20005eb4
 8007e70:	08007df9 	.word	0x08007df9

08007e74 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_30_4bpp();

touchgfx::GeneratedFont& getFont_verdana_30_4bpp()
{
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 64, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8007e74:	4770      	bx	lr
	...

08007e78 <_Z23getFont_verdana_30_4bppv>:
{
 8007e78:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 64, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8007e7a:	4d17      	ldr	r5, [pc, #92]	; (8007ed8 <_Z23getFont_verdana_30_4bppv+0x60>)
 8007e7c:	782c      	ldrb	r4, [r5, #0]
 8007e7e:	f3bf 8f5b 	dmb	ish
 8007e82:	f014 0401 	ands.w	r4, r4, #1
{
 8007e86:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 64, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8007e88:	d122      	bne.n	8007ed0 <_Z23getFont_verdana_30_4bppv+0x58>
 8007e8a:	4628      	mov	r0, r5
 8007e8c:	f01e fb9a 	bl	80265c4 <__cxa_guard_acquire>
 8007e90:	b1f0      	cbz	r0, 8007ed0 <_Z23getFont_verdana_30_4bppv+0x58>
 8007e92:	233f      	movs	r3, #63	; 0x3f
 8007e94:	9309      	str	r3, [sp, #36]	; 0x24
 8007e96:	4b11      	ldr	r3, [pc, #68]	; (8007edc <_Z23getFont_verdana_30_4bppv+0x64>)
 8007e98:	9308      	str	r3, [sp, #32]
 8007e9a:	4b11      	ldr	r3, [pc, #68]	; (8007ee0 <_Z23getFont_verdana_30_4bppv+0x68>)
 8007e9c:	9307      	str	r3, [sp, #28]
 8007e9e:	2301      	movs	r3, #1
 8007ea0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007ea4:	9304      	str	r3, [sp, #16]
 8007ea6:	2304      	movs	r3, #4
 8007ea8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007eac:	231e      	movs	r3, #30
 8007eae:	490d      	ldr	r1, [pc, #52]	; (8007ee4 <_Z23getFont_verdana_30_4bppv+0x6c>)
 8007eb0:	9300      	str	r3, [sp, #0]
 8007eb2:	2240      	movs	r2, #64	; 0x40
 8007eb4:	2324      	movs	r3, #36	; 0x24
 8007eb6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007eba:	480b      	ldr	r0, [pc, #44]	; (8007ee8 <_Z23getFont_verdana_30_4bppv+0x70>)
 8007ebc:	940a      	str	r4, [sp, #40]	; 0x28
 8007ebe:	9401      	str	r4, [sp, #4]
 8007ec0:	f7fd fa9c 	bl	80053fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007ec4:	4809      	ldr	r0, [pc, #36]	; (8007eec <_Z23getFont_verdana_30_4bppv+0x74>)
 8007ec6:	f01e fbc7 	bl	8026658 <atexit>
 8007eca:	4628      	mov	r0, r5
 8007ecc:	f01e fb86 	bl	80265dc <__cxa_guard_release>
    return verdana_30_4bpp;
}
 8007ed0:	4805      	ldr	r0, [pc, #20]	; (8007ee8 <_Z23getFont_verdana_30_4bppv+0x70>)
 8007ed2:	b00f      	add	sp, #60	; 0x3c
 8007ed4:	bd30      	pop	{r4, r5, pc}
 8007ed6:	bf00      	nop
 8007ed8:	20005ee0 	.word	0x20005ee0
 8007edc:	0802af90 	.word	0x0802af90
 8007ee0:	0802b168 	.word	0x0802b168
 8007ee4:	90236604 	.word	0x90236604
 8007ee8:	20005ee4 	.word	0x20005ee4
 8007eec:	08007e75 	.word	0x08007e75

08007ef0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007ef0:	4770      	bx	lr
	...

08007ef4 <_Z23getFont_verdana_40_4bppv>:
{
 8007ef4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007ef6:	4d17      	ldr	r5, [pc, #92]	; (8007f54 <_Z23getFont_verdana_40_4bppv+0x60>)
 8007ef8:	782c      	ldrb	r4, [r5, #0]
 8007efa:	f3bf 8f5b 	dmb	ish
 8007efe:	f014 0401 	ands.w	r4, r4, #1
{
 8007f02:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007f04:	d122      	bne.n	8007f4c <_Z23getFont_verdana_40_4bppv+0x58>
 8007f06:	4628      	mov	r0, r5
 8007f08:	f01e fb5c 	bl	80265c4 <__cxa_guard_acquire>
 8007f0c:	b1f0      	cbz	r0, 8007f4c <_Z23getFont_verdana_40_4bppv+0x58>
 8007f0e:	233f      	movs	r3, #63	; 0x3f
 8007f10:	9309      	str	r3, [sp, #36]	; 0x24
 8007f12:	4b11      	ldr	r3, [pc, #68]	; (8007f58 <_Z23getFont_verdana_40_4bppv+0x64>)
 8007f14:	9308      	str	r3, [sp, #32]
 8007f16:	4b11      	ldr	r3, [pc, #68]	; (8007f5c <_Z23getFont_verdana_40_4bppv+0x68>)
 8007f18:	4911      	ldr	r1, [pc, #68]	; (8007f60 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007f1a:	4812      	ldr	r0, [pc, #72]	; (8007f64 <_Z23getFont_verdana_40_4bppv+0x70>)
 8007f1c:	940a      	str	r4, [sp, #40]	; 0x28
 8007f1e:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007f22:	2201      	movs	r2, #1
 8007f24:	2304      	movs	r3, #4
 8007f26:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007f2a:	2328      	movs	r3, #40	; 0x28
 8007f2c:	9300      	str	r3, [sp, #0]
 8007f2e:	220b      	movs	r2, #11
 8007f30:	2329      	movs	r3, #41	; 0x29
 8007f32:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007f36:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007f3a:	9405      	str	r4, [sp, #20]
 8007f3c:	f7fd fa5e 	bl	80053fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007f40:	4809      	ldr	r0, [pc, #36]	; (8007f68 <_Z23getFont_verdana_40_4bppv+0x74>)
 8007f42:	f01e fb89 	bl	8026658 <atexit>
 8007f46:	4628      	mov	r0, r5
 8007f48:	f01e fb48 	bl	80265dc <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8007f4c:	4805      	ldr	r0, [pc, #20]	; (8007f64 <_Z23getFont_verdana_40_4bppv+0x70>)
 8007f4e:	b00f      	add	sp, #60	; 0x3c
 8007f50:	bd30      	pop	{r4, r5, pc}
 8007f52:	bf00      	nop
 8007f54:	20005f10 	.word	0x20005f10
 8007f58:	0802b114 	.word	0x0802b114
 8007f5c:	0802b16c 	.word	0x0802b16c
 8007f60:	90236984 	.word	0x90236984
 8007f64:	20005f14 	.word	0x20005f14
 8007f68:	08007ef1 	.word	0x08007ef1

08007f6c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_57_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_57_4bpp();

touchgfx::GeneratedFont& getFont_verdana_57_4bpp()
{
    static touchgfx::GeneratedFont verdana_57_4bpp(glyphs_verdana_57_4bpp, 25, 58, 57, 0, 0, 4, 1, 0, 1, unicodes_verdana_57_4bpp, kerning_verdana_57_4bpp, 63, 0, 0, 0);
 8007f6c:	4770      	bx	lr
	...

08007f70 <_Z23getFont_verdana_57_4bppv>:
{
 8007f70:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_57_4bpp(glyphs_verdana_57_4bpp, 25, 58, 57, 0, 0, 4, 1, 0, 1, unicodes_verdana_57_4bpp, kerning_verdana_57_4bpp, 63, 0, 0, 0);
 8007f72:	4d17      	ldr	r5, [pc, #92]	; (8007fd0 <_Z23getFont_verdana_57_4bppv+0x60>)
 8007f74:	782c      	ldrb	r4, [r5, #0]
 8007f76:	f3bf 8f5b 	dmb	ish
 8007f7a:	f014 0401 	ands.w	r4, r4, #1
{
 8007f7e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_57_4bpp(glyphs_verdana_57_4bpp, 25, 58, 57, 0, 0, 4, 1, 0, 1, unicodes_verdana_57_4bpp, kerning_verdana_57_4bpp, 63, 0, 0, 0);
 8007f80:	d122      	bne.n	8007fc8 <_Z23getFont_verdana_57_4bppv+0x58>
 8007f82:	4628      	mov	r0, r5
 8007f84:	f01e fb1e 	bl	80265c4 <__cxa_guard_acquire>
 8007f88:	b1f0      	cbz	r0, 8007fc8 <_Z23getFont_verdana_57_4bppv+0x58>
 8007f8a:	233f      	movs	r3, #63	; 0x3f
 8007f8c:	9309      	str	r3, [sp, #36]	; 0x24
 8007f8e:	4b11      	ldr	r3, [pc, #68]	; (8007fd4 <_Z23getFont_verdana_57_4bppv+0x64>)
 8007f90:	9308      	str	r3, [sp, #32]
 8007f92:	4b11      	ldr	r3, [pc, #68]	; (8007fd8 <_Z23getFont_verdana_57_4bppv+0x68>)
 8007f94:	9307      	str	r3, [sp, #28]
 8007f96:	2301      	movs	r3, #1
 8007f98:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8007f9c:	9304      	str	r3, [sp, #16]
 8007f9e:	2304      	movs	r3, #4
 8007fa0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007fa4:	2339      	movs	r3, #57	; 0x39
 8007fa6:	490d      	ldr	r1, [pc, #52]	; (8007fdc <_Z23getFont_verdana_57_4bppv+0x6c>)
 8007fa8:	9300      	str	r3, [sp, #0]
 8007faa:	2219      	movs	r2, #25
 8007fac:	233a      	movs	r3, #58	; 0x3a
 8007fae:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007fb2:	480b      	ldr	r0, [pc, #44]	; (8007fe0 <_Z23getFont_verdana_57_4bppv+0x70>)
 8007fb4:	940a      	str	r4, [sp, #40]	; 0x28
 8007fb6:	9401      	str	r4, [sp, #4]
 8007fb8:	f7fd fa20 	bl	80053fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007fbc:	4809      	ldr	r0, [pc, #36]	; (8007fe4 <_Z23getFont_verdana_57_4bppv+0x74>)
 8007fbe:	f01e fb4b 	bl	8026658 <atexit>
 8007fc2:	4628      	mov	r0, r5
 8007fc4:	f01e fb0a 	bl	80265dc <__cxa_guard_release>
    return verdana_57_4bpp;
}
 8007fc8:	4805      	ldr	r0, [pc, #20]	; (8007fe0 <_Z23getFont_verdana_57_4bppv+0x70>)
 8007fca:	b00f      	add	sp, #60	; 0x3c
 8007fcc:	bd30      	pop	{r4, r5, pc}
 8007fce:	bf00      	nop
 8007fd0:	20005f40 	.word	0x20005f40
 8007fd4:	0802b118 	.word	0x0802b118
 8007fd8:	0802b170 	.word	0x0802b170
 8007fdc:	90236a20 	.word	0x90236a20
 8007fe0:	20005f44 	.word	0x20005f44
 8007fe4:	08007f6d 	.word	0x08007f6d

08007fe8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8007fe8:	2000      	movs	r0, #0
 8007fea:	4770      	bx	lr

08007fec <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8007fec:	2000      	movs	r0, #0
 8007fee:	4770      	bx	lr

08007ff0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007ff0:	b40e      	push	{r1, r2, r3}
 8007ff2:	b503      	push	{r0, r1, lr}
 8007ff4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007ff6:	2100      	movs	r1, #0
{
 8007ff8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8007ffc:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007ffe:	f00d ff09 	bl	8015e14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008002:	b002      	add	sp, #8
 8008004:	f85d eb04 	ldr.w	lr, [sp], #4
 8008008:	b003      	add	sp, #12
 800800a:	4770      	bx	lr

0800800c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800800c:	b40c      	push	{r2, r3}
 800800e:	b507      	push	{r0, r1, r2, lr}
 8008010:	ab04      	add	r3, sp, #16
 8008012:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8008016:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8008018:	f00d fefc 	bl	8015e14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800801c:	b003      	add	sp, #12
 800801e:	f85d eb04 	ldr.w	lr, [sp], #4
 8008022:	b002      	add	sp, #8
 8008024:	4770      	bx	lr
	...

08008028 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8008028:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800802a:	b510      	push	{r4, lr}
 800802c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800802e:	b373      	cbz	r3, 800808e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008030:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008032:	b92b      	cbnz	r3, 8008040 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008034:	4b18      	ldr	r3, [pc, #96]	; (8008098 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8008036:	4a19      	ldr	r2, [pc, #100]	; (800809c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008038:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800803a:	4819      	ldr	r0, [pc, #100]	; (80080a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800803c:	f01e faee 	bl	802661c <__assert_func>
            return buffer[pos];
 8008040:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008042:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008046:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008048:	b30b      	cbz	r3, 800808e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800804a:	f00f fae0 	bl	801760e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800804e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008050:	2b01      	cmp	r3, #1
 8008052:	d803      	bhi.n	800805c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008054:	4b13      	ldr	r3, [pc, #76]	; (80080a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008056:	4a14      	ldr	r2, [pc, #80]	; (80080a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008058:	21cb      	movs	r1, #203	; 0xcb
 800805a:	e7ee      	b.n	800803a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800805c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800805e:	1c53      	adds	r3, r2, #1
 8008060:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008062:	2b09      	cmp	r3, #9
 8008064:	4619      	mov	r1, r3
 8008066:	bf88      	it	hi
 8008068:	f1a3 010a 	subhi.w	r1, r3, #10
 800806c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008070:	f640 103f 	movw	r0, #2367	; 0x93f
 8008074:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008076:	4281      	cmp	r1, r0
 8008078:	d109      	bne.n	800808e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800807a:	2b0a      	cmp	r3, #10
 800807c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008080:	bf28      	it	cs
 8008082:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008084:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008088:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800808a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800808c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800808e:	4620      	mov	r0, r4
}
 8008090:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008094:	f00f b9be 	b.w	8017414 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008098:	08029740 	.word	0x08029740
 800809c:	08029749 	.word	0x08029749
 80080a0:	080297f4 	.word	0x080297f4
 80080a4:	0802983e 	.word	0x0802983e
 80080a8:	0802984c 	.word	0x0802984c

080080ac <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80080ac:	f00f b979 	b.w	80173a2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080080b0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80080b0:	b510      	push	{r4, lr}
 80080b2:	b086      	sub	sp, #24
 80080b4:	ac02      	add	r4, sp, #8
 80080b6:	e884 0006 	stmia.w	r4, {r1, r2}
 80080ba:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80080bc:	ab0a      	add	r3, sp, #40	; 0x28
 80080be:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80080c0:	9301      	str	r3, [sp, #4]
 80080c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80080c4:	9300      	str	r3, [sp, #0]
 80080c6:	4621      	mov	r1, r4
 80080c8:	9b08      	ldr	r3, [sp, #32]
 80080ca:	f00c fa67 	bl	801459c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80080ce:	b006      	add	sp, #24
 80080d0:	bd10      	pop	{r4, pc}
	...

080080d4 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80080d4:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80080d6:	bb18      	cbnz	r0, 8008120 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80080d8:	4b12      	ldr	r3, [pc, #72]	; (8008124 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80080da:	4813      	ldr	r0, [pc, #76]	; (8008128 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80080dc:	681b      	ldr	r3, [r3, #0]
 80080de:	4913      	ldr	r1, [pc, #76]	; (800812c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80080e0:	b1b3      	cbz	r3, 8008110 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80080e2:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80080e4:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80080e6:	441a      	add	r2, r3
 80080e8:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80080ea:	685a      	ldr	r2, [r3, #4]
 80080ec:	441a      	add	r2, r3
 80080ee:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80080f0:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80080f2:	4b0f      	ldr	r3, [pc, #60]	; (8008130 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80080f4:	2200      	movs	r2, #0
 80080f6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80080f8:	f000 f838 	bl	800816c <_ZN17TypedTextDatabase8getFontsEv>
 80080fc:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80080fe:	f000 f833 	bl	8008168 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8008102:	4b0c      	ldr	r3, [pc, #48]	; (8008134 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008104:	601c      	str	r4, [r3, #0]
        fonts = f;
 8008106:	4b0c      	ldr	r3, [pc, #48]	; (8008138 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8008108:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800810a:	4b0c      	ldr	r3, [pc, #48]	; (800813c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800810c:	8018      	strh	r0, [r3, #0]
    }
}
 800810e:	e007      	b.n	8008120 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008110:	4b0b      	ldr	r3, [pc, #44]	; (8008140 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008112:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008114:	4b0b      	ldr	r3, [pc, #44]	; (8008144 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8008116:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008118:	4b0b      	ldr	r3, [pc, #44]	; (8008148 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800811a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800811c:	2c00      	cmp	r4, #0
 800811e:	d1e8      	bne.n	80080f2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008120:	bd38      	pop	{r3, r4, r5, pc}
 8008122:	bf00      	nop
 8008124:	20005f70 	.word	0x20005f70
 8008128:	20005f74 	.word	0x20005f74
 800812c:	20005f78 	.word	0x20005f78
 8008130:	20005f7c 	.word	0x20005f7c
 8008134:	2000ef74 	.word	0x2000ef74
 8008138:	2000ef7c 	.word	0x2000ef7c
 800813c:	2000ef78 	.word	0x2000ef78
 8008140:	90236d84 	.word	0x90236d84
 8008144:	90236b80 	.word	0x90236b80
 8008148:	902371f4 	.word	0x902371f4

0800814c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800814c:	4b04      	ldr	r3, [pc, #16]	; (8008160 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800814e:	681b      	ldr	r3, [r3, #0]
 8008150:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008154:	4b03      	ldr	r3, [pc, #12]	; (8008164 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008156:	681b      	ldr	r3, [r3, #0]
}
 8008158:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800815c:	4770      	bx	lr
 800815e:	bf00      	nop
 8008160:	20005f78 	.word	0x20005f78
 8008164:	20005f74 	.word	0x20005f74

08008168 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008168:	2081      	movs	r0, #129	; 0x81
 800816a:	4770      	bx	lr

0800816c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800816c:	4800      	ldr	r0, [pc, #0]	; (8008170 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800816e:	4770      	bx	lr
 8008170:	20005f80 	.word	0x20005f80

08008174 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 8:
        touchgfx_fonts[8] = &(getFont_verdana_57_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008174:	b510      	push	{r4, lr}
    &(getFont_verdana_30_4bpp()),
 8008176:	f7ff fe7f 	bl	8007e78 <_Z23getFont_verdana_30_4bppv>
};
 800817a:	4c0d      	ldr	r4, [pc, #52]	; (80081b0 <_GLOBAL__sub_I_touchgfx_fonts+0x3c>)
 800817c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_10_4bpp()),
 800817e:	f7ff fd45 	bl	8007c0c <_Z23getFont_verdana_10_4bppv>
};
 8008182:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_100_4bpp()),
 8008184:	f7ff fd04 	bl	8007b90 <_Z24getFont_verdana_100_4bppv>
};
 8008188:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_40_4bpp()),
 800818a:	f7ff feb3 	bl	8007ef4 <_Z23getFont_verdana_40_4bppv>
};
 800818e:	60e0      	str	r0, [r4, #12]
    &(getFont_verdana_20_4bpp()),
 8008190:	f7ff fe34 	bl	8007dfc <_Z23getFont_verdana_20_4bppv>
};
 8008194:	6120      	str	r0, [r4, #16]
    &(getFont_verdana_15_4bpp()),
 8008196:	f7ff fdb5 	bl	8007d04 <_Z23getFont_verdana_15_4bppv>
};
 800819a:	6160      	str	r0, [r4, #20]
    &(getFont_verdana_120_4bpp()),
 800819c:	f7ff fd74 	bl	8007c88 <_Z24getFont_verdana_120_4bppv>
};
 80081a0:	61a0      	str	r0, [r4, #24]
    &(getFont_verdana_180_4bpp()),
 80081a2:	f7ff fded 	bl	8007d80 <_Z24getFont_verdana_180_4bppv>
};
 80081a6:	61e0      	str	r0, [r4, #28]
    &(getFont_verdana_57_4bpp())
 80081a8:	f7ff fee2 	bl	8007f70 <_Z23getFont_verdana_57_4bppv>
};
 80081ac:	6220      	str	r0, [r4, #32]
} // namespace TypedTextDatabase
 80081ae:	bd10      	pop	{r4, pc}
 80081b0:	20005f80 	.word	0x20005f80

080081b4 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 80081b4:	4a07      	ldr	r2, [pc, #28]	; (80081d4 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 80081b6:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 80081b8:	2200      	movs	r2, #0
 80081ba:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80081be:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80081c2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80081c6:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80081ca:	f44f 7280 	mov.w	r2, #256	; 0x100
 80081ce:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 80081d0:	4770      	bx	lr
 80081d2:	bf00      	nop
 80081d4:	0802a610 	.word	0x0802a610

080081d8 <_ZN13ModelListener11gearChangedEv>:
    virtual void gearChanged() {};
 80081d8:	4770      	bx	lr

080081da <_ZN13ModelListener11infoChangedEv>:
    virtual void infoChanged() {};
 80081da:	4770      	bx	lr

080081dc <_ZN13ModelListener19debugMessageChangedEv>:
    virtual void debugMessageChanged() {};
 80081dc:	4770      	bx	lr

080081de <_ZN26CompetitionScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CompetitionScreenPresenter() {}
 80081de:	4770      	bx	lr

080081e0 <_ZThn4_N26CompetitionScreenPresenterD1Ev>:
 80081e0:	3804      	subs	r0, #4
 80081e2:	4770      	bx	lr

080081e4 <_ZN26CompetitionScreenPresenter8activateEv>:

}

void CompetitionScreenPresenter::activate()
{
	missionChanged();
 80081e4:	6803      	ldr	r3, [r0, #0]
 80081e6:	691b      	ldr	r3, [r3, #16]
 80081e8:	4718      	bx	r3

080081ea <_ZN26CompetitionScreenPresenter10deactivateEv>:
}

void CompetitionScreenPresenter::deactivate()
{

}
 80081ea:	4770      	bx	lr

080081ec <_ZN26CompetitionScreenPresenterD0Ev>:
 80081ec:	b510      	push	{r4, lr}
 80081ee:	2110      	movs	r1, #16
 80081f0:	4604      	mov	r4, r0
 80081f2:	f01e f9e5 	bl	80265c0 <_ZdlPvj>
 80081f6:	4620      	mov	r0, r4
 80081f8:	bd10      	pop	{r4, pc}

080081fa <_ZThn4_N26CompetitionScreenPresenterD0Ev>:
 80081fa:	f1a0 0004 	sub.w	r0, r0, #4
 80081fe:	e7f5      	b.n	80081ec <_ZN26CompetitionScreenPresenterD0Ev>

08008200 <_ZN26CompetitionScreenPresenter14missionChangedEv>:
    void requestChassisReset();

    void requestMission(MmrMission missionType);
    void commonAfterRequestMission(MmrMission missionType);

    const char* getMission() { return mission; }
 8008200:	6881      	ldr	r1, [r0, #8]

void CompetitionScreenPresenter::missionChanged() {
	view.setMission(model->getMission());
 8008202:	68c0      	ldr	r0, [r0, #12]
 8008204:	3108      	adds	r1, #8
 8008206:	f000 b837 	b.w	8008278 <_ZN21CompetitionScreenView10setMissionEPKc>

0800820a <_ZThn4_N26CompetitionScreenPresenter14missionChangedEv>:

    virtual void missionChanged();
 800820a:	f1a0 0004 	sub.w	r0, r0, #4
 800820e:	f7ff bff7 	b.w	8008200 <_ZN26CompetitionScreenPresenter14missionChangedEv>
	...

08008214 <_ZN26CompetitionScreenPresenterC1ER21CompetitionScreenView>:
CompetitionScreenPresenter::CompetitionScreenPresenter(CompetitionScreenView& v)
 8008214:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8008216:	2200      	movs	r2, #0
 8008218:	6082      	str	r2, [r0, #8]
    : view(v)
 800821a:	4a04      	ldr	r2, [pc, #16]	; (800822c <_ZN26CompetitionScreenPresenterC1ER21CompetitionScreenView+0x18>)
 800821c:	60c1      	str	r1, [r0, #12]
 800821e:	f102 0408 	add.w	r4, r2, #8
 8008222:	3224      	adds	r2, #36	; 0x24
 8008224:	6004      	str	r4, [r0, #0]
 8008226:	6042      	str	r2, [r0, #4]
}
 8008228:	bd10      	pop	{r4, pc}
 800822a:	bf00      	nop
 800822c:	08029920 	.word	0x08029920

08008230 <_ZN21CompetitionScreenView14tearDownScreenEv>:
}

void CompetitionScreenView::tearDownScreen()
{
    CompetitionScreenViewBase::tearDownScreen();
}
 8008230:	4770      	bx	lr
	...

08008234 <_ZN21CompetitionScreenViewD1Ev>:

class CompetitionScreenView : public CompetitionScreenViewBase
{
public:
    CompetitionScreenView();
    virtual ~CompetitionScreenView() {}
 8008234:	b510      	push	{r4, lr}
 8008236:	4b03      	ldr	r3, [pc, #12]	; (8008244 <_ZN21CompetitionScreenViewD1Ev+0x10>)
 8008238:	6003      	str	r3, [r0, #0]
 800823a:	4604      	mov	r4, r0
 800823c:	f7fa fcaf 	bl	8002b9e <_ZN25CompetitionScreenViewBaseD1Ev>
 8008240:	4620      	mov	r0, r4
 8008242:	bd10      	pop	{r4, pc}
 8008244:	08029964 	.word	0x08029964

08008248 <_ZN21CompetitionScreenViewD0Ev>:
 8008248:	b510      	push	{r4, lr}
 800824a:	4604      	mov	r4, r0
 800824c:	f7ff fff2 	bl	8008234 <_ZN21CompetitionScreenViewD1Ev>
 8008250:	4620      	mov	r0, r4
 8008252:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8008256:	f01e f9b3 	bl	80265c0 <_ZdlPvj>
 800825a:	4620      	mov	r0, r4
 800825c:	bd10      	pop	{r4, pc}
	...

08008260 <_ZN21CompetitionScreenViewC1Ev>:
CompetitionScreenView::CompetitionScreenView() { }
 8008260:	b510      	push	{r4, lr}
 8008262:	4604      	mov	r4, r0
 8008264:	f7fa fd7c 	bl	8002d60 <_ZN25CompetitionScreenViewBaseC1Ev>
 8008268:	4b01      	ldr	r3, [pc, #4]	; (8008270 <_ZN21CompetitionScreenViewC1Ev+0x10>)
 800826a:	6023      	str	r3, [r4, #0]
 800826c:	4620      	mov	r0, r4
 800826e:	bd10      	pop	{r4, pc}
 8008270:	08029964 	.word	0x08029964

08008274 <_ZN21CompetitionScreenView11setupScreenEv>:
    CompetitionScreenViewBase::setupScreen();
 8008274:	f7fa bc94 	b.w	8002ba0 <_ZN25CompetitionScreenViewBase11setupScreenEv>

08008278 <_ZN21CompetitionScreenView10setMissionEPKc>:

void CompetitionScreenView::setMission(const char *mission) {
 8008278:	b510      	push	{r4, lr}
	Unicode::strncpy(txtMissionBuffer, mission, TXTMISSION_SIZE);
 800827a:	220f      	movs	r2, #15
void CompetitionScreenView::setMission(const char *mission) {
 800827c:	4604      	mov	r4, r0
	Unicode::strncpy(txtMissionBuffer, mission, TXTMISSION_SIZE);
 800827e:	f500 7090 	add.w	r0, r0, #288	; 0x120
 8008282:	f00f fc0c 	bl	8017a9e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
	txtMission.invalidate();
 8008286:	f104 00d4 	add.w	r0, r4, #212	; 0xd4
}
 800828a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtMission.invalidate();
 800828e:	f00d beeb 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>

08008292 <_ZN13ModelListener14missionChangedEv>:
    virtual void missionChanged() {};
 8008292:	4770      	bx	lr

08008294 <_ZN21DriverScreenPresenterD1Ev>:
    virtual void deactivate();

    virtual void gearChanged();
    virtual void infoChanged();

    virtual ~DriverScreenPresenter() {}
 8008294:	4770      	bx	lr

08008296 <_ZThn4_N21DriverScreenPresenterD1Ev>:
 8008296:	3804      	subs	r0, #4
 8008298:	4770      	bx	lr

0800829a <_ZN21DriverScreenPresenter8activateEv>:
{

}

void DriverScreenPresenter::activate()
{
 800829a:	b510      	push	{r4, lr}
	infoChanged();
 800829c:	6803      	ldr	r3, [r0, #0]
{
 800829e:	4604      	mov	r4, r0
	infoChanged();
 80082a0:	695b      	ldr	r3, [r3, #20]
 80082a2:	4798      	blx	r3
	gearChanged();
 80082a4:	6823      	ldr	r3, [r4, #0]
 80082a6:	4620      	mov	r0, r4
 80082a8:	691b      	ldr	r3, [r3, #16]
}
 80082aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	gearChanged();
 80082ae:	4718      	bx	r3

080082b0 <_ZN21DriverScreenPresenter10deactivateEv>:

void DriverScreenPresenter::deactivate()
{

}
 80082b0:	4770      	bx	lr

080082b2 <_ZN21DriverScreenPresenterD0Ev>:
 80082b2:	b510      	push	{r4, lr}
 80082b4:	2110      	movs	r1, #16
 80082b6:	4604      	mov	r4, r0
 80082b8:	f01e f982 	bl	80265c0 <_ZdlPvj>
 80082bc:	4620      	mov	r0, r4
 80082be:	bd10      	pop	{r4, pc}

080082c0 <_ZThn4_N21DriverScreenPresenterD0Ev>:
 80082c0:	f1a0 0004 	sub.w	r0, r0, #4
 80082c4:	e7f5      	b.n	80082b2 <_ZN21DriverScreenPresenterD0Ev>

080082c6 <_ZN21DriverScreenPresenter11gearChangedEv>:
    int getGear() { return gear; }
 80082c6:	6883      	ldr	r3, [r0, #8]

void DriverScreenPresenter::gearChanged() {
	view.setGear(model->getGear());
 80082c8:	68c0      	ldr	r0, [r0, #12]
 80082ca:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
 80082ce:	f000 b8a3 	b.w	8008418 <_ZN16DriverScreenView7setGearEi>

080082d2 <_ZThn4_N21DriverScreenPresenter11gearChangedEv>:
    virtual void gearChanged();
 80082d2:	f1a0 0004 	sub.w	r0, r0, #4
 80082d6:	f7ff bff6 	b.w	80082c6 <_ZN21DriverScreenPresenter11gearChangedEv>

080082da <_ZN21DriverScreenPresenter11infoChangedEv>:
 80082da:	6883      	ldr	r3, [r0, #8]
}

void DriverScreenPresenter::infoChanged() {
 80082dc:	b510      	push	{r4, lr}
 80082de:	4604      	mov	r4, r0
	view.setGear(model->getGear());
 80082e0:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
 80082e4:	68c0      	ldr	r0, [r0, #12]
 80082e6:	f000 f897 	bl	8008418 <_ZN16DriverScreenView7setGearEi>
    int getRpm() { return rpm; }
 80082ea:	68a3      	ldr	r3, [r4, #8]

	view.setRpm(model->getRpm());
 80082ec:	68e0      	ldr	r0, [r4, #12]
 80082ee:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 80082f2:	f000 f8a9 	bl	8008448 <_ZN16DriverScreenView6setRpmEi>
    int getLap() { return lap; }
 80082f6:	68a3      	ldr	r3, [r4, #8]
	view.setLap(model->getLap());
 80082f8:	68e0      	ldr	r0, [r4, #12]
 80082fa:	f8d3 10c0 	ldr.w	r1, [r3, #192]	; 0xc0
 80082fe:	f000 f8b5 	bl	800846c <_ZN16DriverScreenView6setLapEi>
    int getSpeed() { return speed; }
 8008302:	68a3      	ldr	r3, [r4, #8]
	view.setSpeed(model->getSpeed());
 8008304:	68e0      	ldr	r0, [r4, #12]
 8008306:	f8d3 10a4 	ldr.w	r1, [r3, #164]	; 0xa4
 800830a:	f000 f8c1 	bl	8008490 <_ZN16DriverScreenView8setSpeedEi>
    int getRES() { return RES; }
 800830e:	68a3      	ldr	r3, [r4, #8]

	view.setRES(model->getRES());
 8008310:	68e0      	ldr	r0, [r4, #12]
 8008312:	f8d3 10d0 	ldr.w	r1, [r3, #208]	; 0xd0
 8008316:	f000 f8cd 	bl	80084b4 <_ZN16DriverScreenView6setRESEi>
    bool getLC() { return LC; }
 800831a:	68a3      	ldr	r3, [r4, #8]
	view.setLC(model->getLC());
 800831c:	68e0      	ldr	r0, [r4, #12]
 800831e:	f893 10d4 	ldrb.w	r1, [r3, #212]	; 0xd4
 8008322:	f000 f8eb 	bl	80084fc <_ZN16DriverScreenView5setLCEb>
    bool getCLT() { return CLT; }
 8008326:	68a3      	ldr	r3, [r4, #8]
	view.setCLT(model->getCLT());
 8008328:	68e0      	ldr	r0, [r4, #12]
 800832a:	f893 10d5 	ldrb.w	r1, [r3, #213]	; 0xd5
 800832e:	f000 f8ff 	bl	8008530 <_ZN16DriverScreenView6setCLTEb>
    int getT_water() { return T_water; }
 8008332:	68a3      	ldr	r3, [r4, #8]

	view.setTmot(model->getT_water());
 8008334:	68e0      	ldr	r0, [r4, #12]
 8008336:	f8d3 10ac 	ldr.w	r1, [r3, #172]	; 0xac
 800833a:	f000 f913 	bl	8008564 <_ZN16DriverScreenView7setTmotEi>
    int getT_oil() { return T_oil; }
 800833e:	68a3      	ldr	r3, [r4, #8]
	view.setToil(model->getT_oil());
 8008340:	68e0      	ldr	r0, [r4, #12]
 8008342:	f8d3 10b0 	ldr.w	r1, [r3, #176]	; 0xb0
 8008346:	f000 f91f 	bl	8008588 <_ZN16DriverScreenView7setToilEi>
    float getOrinTemperature() { return orinTemperature; }
 800834a:	68a3      	ldr	r3, [r4, #8]
	view.setTorin(model->getOrinTemperature());
 800834c:	68e0      	ldr	r0, [r4, #12]
 800834e:	edd3 7a31 	vldr	s15, [r3, #196]	; 0xc4
 8008352:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008356:	ee17 1a90 	vmov	r1, s15
 800835a:	f000 f927 	bl	80085ac <_ZN16DriverScreenView8setTorinEi>
    float getP_oil() { return P_oil; }
 800835e:	68a3      	ldr	r3, [r4, #8]

	view.setPoil(model->getP_oil());
 8008360:	68e0      	ldr	r0, [r4, #12]
 8008362:	ed93 0a32 	vldr	s0, [r3, #200]	; 0xc8
 8008366:	f000 f933 	bl	80085d0 <_ZN16DriverScreenView7setPoilEf>
    float getP_fuel() { return P_fuel; }
 800836a:	68a3      	ldr	r3, [r4, #8]
	view.setPfuel(model->getP_fuel());
 800836c:	68e0      	ldr	r0, [r4, #12]
 800836e:	ed93 0a33 	vldr	s0, [r3, #204]	; 0xcc
 8008372:	f000 f941 	bl	80085f8 <_ZN16DriverScreenView8setPfuelEf>
    int getFrontBrakePerc() { return frontBrakePerc; }
 8008376:	68a3      	ldr	r3, [r4, #8]
	view.setPbrake(model->getFrontBrakePerc());
 8008378:	68e0      	ldr	r0, [r4, #12]
 800837a:	f8d3 10b8 	ldr.w	r1, [r3, #184]	; 0xb8
 800837e:	f000 f94f 	bl	8008620 <_ZN16DriverScreenView9setPbrakeEi>
    int getThrottle_perc() { return throttle_perc; }
 8008382:	68a3      	ldr	r3, [r4, #8]

	view.setTPS(model->getThrottle_perc());
 8008384:	68e0      	ldr	r0, [r4, #12]
 8008386:	f8d3 10b4 	ldr.w	r1, [r3, #180]	; 0xb4
 800838a:	f000 f95b 	bl	8008644 <_ZN16DriverScreenView6setTPSEi>
    float getBattery_v() { return battery_v; }
 800838e:	68a3      	ldr	r3, [r4, #8]

	view.setBat12(model->getBattery_v());
 8008390:	68e0      	ldr	r0, [r4, #12]
 8008392:	ed93 0a36 	vldr	s0, [r3, #216]	; 0xd8
 8008396:	f000 f967 	bl	8008668 <_ZN16DriverScreenView8setBat12Ef>
    float getVoltage24v() { return voltage24v; }
 800839a:	68a3      	ldr	r3, [r4, #8]
	view.setBat24(model->getVoltage24v());
 800839c:	68e0      	ldr	r0, [r4, #12]
 800839e:	ed93 0a37 	vldr	s0, [r3, #220]	; 0xdc
}
 80083a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	view.setBat24(model->getVoltage24v());
 80083a6:	f000 b973 	b.w	8008690 <_ZN16DriverScreenView8setBat24Ef>

080083aa <_ZThn4_N21DriverScreenPresenter11infoChangedEv>:
    virtual void infoChanged();
 80083aa:	f1a0 0004 	sub.w	r0, r0, #4
 80083ae:	f7ff bf94 	b.w	80082da <_ZN21DriverScreenPresenter11infoChangedEv>
	...

080083b4 <_ZN21DriverScreenPresenterC1ER16DriverScreenView>:
DriverScreenPresenter::DriverScreenPresenter(DriverScreenView& v)
 80083b4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80083b6:	2200      	movs	r2, #0
 80083b8:	6082      	str	r2, [r0, #8]
    : view(v)
 80083ba:	4a04      	ldr	r2, [pc, #16]	; (80083cc <_ZN21DriverScreenPresenterC1ER16DriverScreenView+0x18>)
 80083bc:	60c1      	str	r1, [r0, #12]
 80083be:	f102 0408 	add.w	r4, r2, #8
 80083c2:	3228      	adds	r2, #40	; 0x28
 80083c4:	6004      	str	r4, [r0, #0]
 80083c6:	6042      	str	r2, [r0, #4]
}
 80083c8:	bd10      	pop	{r4, pc}
 80083ca:	bf00      	nop
 80083cc:	08029990 	.word	0x08029990

080083d0 <_ZN16DriverScreenView14tearDownScreenEv>:
    DriverScreenViewBase::setupScreen();
}

void DriverScreenView::tearDownScreen() {
    DriverScreenViewBase::tearDownScreen();
}
 80083d0:	4770      	bx	lr
	...

080083d4 <_ZN16DriverScreenViewD1Ev>:

class DriverScreenView : public DriverScreenViewBase
{
public:
    DriverScreenView();
    virtual ~DriverScreenView() {}
 80083d4:	b510      	push	{r4, lr}
 80083d6:	4b03      	ldr	r3, [pc, #12]	; (80083e4 <_ZN16DriverScreenViewD1Ev+0x10>)
 80083d8:	6003      	str	r3, [r0, #0]
 80083da:	4604      	mov	r4, r0
 80083dc:	f7fa fdb8 	bl	8002f50 <_ZN20DriverScreenViewBaseD1Ev>
 80083e0:	4620      	mov	r0, r4
 80083e2:	bd10      	pop	{r4, pc}
 80083e4:	080299e8 	.word	0x080299e8

080083e8 <_ZN16DriverScreenViewD0Ev>:
 80083e8:	b510      	push	{r4, lr}
 80083ea:	4604      	mov	r4, r0
 80083ec:	f7ff fff2 	bl	80083d4 <_ZN16DriverScreenViewD1Ev>
 80083f0:	4620      	mov	r0, r4
 80083f2:	f640 411c 	movw	r1, #3100	; 0xc1c
 80083f6:	f01e f8e3 	bl	80265c0 <_ZdlPvj>
 80083fa:	4620      	mov	r0, r4
 80083fc:	bd10      	pop	{r4, pc}
	...

08008400 <_ZN16DriverScreenViewC1Ev>:
DriverScreenView::DriverScreenView() {}
 8008400:	b510      	push	{r4, lr}
 8008402:	4604      	mov	r4, r0
 8008404:	f7fa fe3c 	bl	8003080 <_ZN20DriverScreenViewBaseC1Ev>
 8008408:	4b01      	ldr	r3, [pc, #4]	; (8008410 <_ZN16DriverScreenViewC1Ev+0x10>)
 800840a:	6023      	str	r3, [r4, #0]
 800840c:	4620      	mov	r0, r4
 800840e:	bd10      	pop	{r4, pc}
 8008410:	080299e8 	.word	0x080299e8

08008414 <_ZN16DriverScreenView11setupScreenEv>:
    DriverScreenViewBase::setupScreen();
 8008414:	f7fa bd9d 	b.w	8002f52 <_ZN20DriverScreenViewBase11setupScreenEv>

08008418 <_ZN16DriverScreenView7setGearEi>:

void DriverScreenView::setGear(int gear) {
 8008418:	b510      	push	{r4, lr}
	if (gear == 0) {
 800841a:	460b      	mov	r3, r1
void DriverScreenView::setGear(int gear) {
 800841c:	4604      	mov	r4, r0
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%c", 'N');
 800841e:	f600 3098 	addw	r0, r0, #2968	; 0xb98
	if (gear == 0) {
 8008422:	b951      	cbnz	r1, 800843a <_ZN16DriverScreenView7setGearEi+0x22>
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%c", 'N');
 8008424:	4a06      	ldr	r2, [pc, #24]	; (8008440 <_ZN16DriverScreenView7setGearEi+0x28>)
 8008426:	234e      	movs	r3, #78	; 0x4e
	}
	else {
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%d", gear);
 8008428:	2102      	movs	r1, #2
 800842a:	f00f fea5 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	}

	txtGear.invalidate();
 800842e:	f204 405c 	addw	r0, r4, #1116	; 0x45c
}
 8008432:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtGear.invalidate();
 8008436:	f00d be17 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%d", gear);
 800843a:	4a02      	ldr	r2, [pc, #8]	; (8008444 <_ZN16DriverScreenView7setGearEi+0x2c>)
 800843c:	e7f4      	b.n	8008428 <_ZN16DriverScreenView7setGearEi+0x10>
 800843e:	bf00      	nop
 8008440:	080299d0 	.word	0x080299d0
 8008444:	080299d3 	.word	0x080299d3

08008448 <_ZN16DriverScreenView6setRpmEi>:

void DriverScreenView::setRpm(int rpm) {
 8008448:	b510      	push	{r4, lr}
 800844a:	460b      	mov	r3, r1
 800844c:	4604      	mov	r4, r0
    Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%d", rpm);
 800844e:	4a06      	ldr	r2, [pc, #24]	; (8008468 <_ZN16DriverScreenView6setRpmEi+0x20>)
 8008450:	2106      	movs	r1, #6
 8008452:	f600 309c 	addw	r0, r0, #2972	; 0xb9c
 8008456:	f00f fe8f 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtRpm.invalidate();
 800845a:	f504 6095 	add.w	r0, r4, #1192	; 0x4a8
}
 800845e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtRpm.invalidate();
 8008462:	f00d be01 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008466:	bf00      	nop
 8008468:	080299d3 	.word	0x080299d3

0800846c <_ZN16DriverScreenView6setLapEi>:

void DriverScreenView::setLap(int lap) {
 800846c:	b510      	push	{r4, lr}
 800846e:	460b      	mov	r3, r1
 8008470:	4604      	mov	r4, r0
    Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%d", lap);
 8008472:	4a06      	ldr	r2, [pc, #24]	; (800848c <_ZN16DriverScreenView6setLapEi+0x20>)
 8008474:	2103      	movs	r1, #3
 8008476:	f600 30f4 	addw	r0, r0, #3060	; 0xbf4
 800847a:	f00f fe7d 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtLap.invalidate();
 800847e:	f504 6030 	add.w	r0, r4, #2816	; 0xb00
}
 8008482:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtLap.invalidate();
 8008486:	f00d bdef 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 800848a:	bf00      	nop
 800848c:	080299d3 	.word	0x080299d3

08008490 <_ZN16DriverScreenView8setSpeedEi>:

void DriverScreenView::setSpeed(int speed) {
 8008490:	b510      	push	{r4, lr}
 8008492:	460b      	mov	r3, r1
 8008494:	4604      	mov	r4, r0
    Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%d", speed);
 8008496:	4a06      	ldr	r2, [pc, #24]	; (80084b0 <_ZN16DriverScreenView8setSpeedEi+0x20>)
 8008498:	2108      	movs	r1, #8
 800849a:	f600 30fa 	addw	r0, r0, #3066	; 0xbfa
 800849e:	f00f fe6b 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtSpeed.invalidate();
 80084a2:	f604 304c 	addw	r0, r4, #2892	; 0xb4c
}
 80084a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtSpeed.invalidate();
 80084aa:	f00d bddd 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 80084ae:	bf00      	nop
 80084b0:	080299d3 	.word	0x080299d3

080084b4 <_ZN16DriverScreenView6setRESEi>:

void DriverScreenView::setRES(int resVal) {
	switch (resVal) {
 80084b4:	2901      	cmp	r1, #1
void DriverScreenView::setRES(int resVal) {
 80084b6:	b510      	push	{r4, lr}
 80084b8:	4604      	mov	r4, r0
	switch (resVal) {
 80084ba:	d008      	beq.n	80084ce <_ZN16DriverScreenView6setRESEi+0x1a>
 80084bc:	2903      	cmp	r1, #3
 80084be:	d018      	beq.n	80084f2 <_ZN16DriverScreenView6setRESEi+0x3e>
 80084c0:	b969      	cbnz	r1, 80084de <_ZN16DriverScreenView6setRESEi+0x2a>
 80084c2:	4b0d      	ldr	r3, [pc, #52]	; (80084f8 <_ZN16DriverScreenView6setRESEi+0x44>)
 80084c4:	f8c4 3248 	str.w	r3, [r4, #584]	; 0x248
        color = newColor;
 80084c8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80084cc:	e005      	b.n	80084da <_ZN16DriverScreenView6setRESEi+0x26>
 80084ce:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80084d2:	f8c0 3248 	str.w	r3, [r0, #584]	; 0x248
 80084d6:	f04f 33ff 	mov.w	r3, #4294967295
 80084da:	f8c4 35b8 	str.w	r3, [r4, #1464]	; 0x5b8
		boxRES.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
		labelRES.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
		break;
	}

	boxRES.invalidate();
 80084de:	f504 7008 	add.w	r0, r4, #544	; 0x220
 80084e2:	f00d fdc1 	bl	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelRES.invalidate();
 80084e6:	f504 60b1 	add.w	r0, r4, #1416	; 0x588
}
 80084ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelRES.invalidate();
 80084ee:	f00d bdbb 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 80084f2:	f04f 23ff 	mov.w	r3, #4278255360	; 0xff00ff00
 80084f6:	e7e5      	b.n	80084c4 <_ZN16DriverScreenView6setRESEi+0x10>
 80084f8:	ffff0000 	.word	0xffff0000

080084fc <_ZN16DriverScreenView5setLCEb>:

void DriverScreenView::setLC(bool isLcOn) {
 80084fc:	b510      	push	{r4, lr}
 80084fe:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008502:	4604      	mov	r4, r0
	if (isLcOn) {
 8008504:	b179      	cbz	r1, 8008526 <_ZN16DriverScreenView5setLCEb+0x2a>
 8008506:	f04f 22ff 	mov.w	r2, #4278255360	; 0xff00ff00
 800850a:	f8c0 2178 	str.w	r2, [r0, #376]	; 0x178
	else {
		boxLC.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
		labelLC.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
	}

	boxLC.invalidate();
 800850e:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8008512:	f8c4 3570 	str.w	r3, [r4, #1392]	; 0x570
 8008516:	f00d fda7 	bl	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelLC.invalidate();
 800851a:	f504 60a8 	add.w	r0, r4, #1344	; 0x540
}
 800851e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelLC.invalidate();
 8008522:	f00d bda1 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008526:	f8c0 3178 	str.w	r3, [r0, #376]	; 0x178
 800852a:	f04f 33ff 	mov.w	r3, #4294967295
 800852e:	e7ee      	b.n	800850e <_ZN16DriverScreenView5setLCEb+0x12>

08008530 <_ZN16DriverScreenView6setCLTEb>:

void DriverScreenView::setCLT(bool isCltPulled) {
 8008530:	b510      	push	{r4, lr}
 8008532:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008536:	4604      	mov	r4, r0
	if (isCltPulled) {
 8008538:	b179      	cbz	r1, 800855a <_ZN16DriverScreenView6setCLTEb+0x2a>
 800853a:	f04f 22ff 	mov.w	r2, #4278255360	; 0xff00ff00
 800853e:	f8c0 21e0 	str.w	r2, [r0, #480]	; 0x1e0
	else {
		boxCLT.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
		labelCLT.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
	}

	boxCLT.invalidate();
 8008542:	f504 70dc 	add.w	r0, r4, #440	; 0x1b8
 8008546:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 800854a:	f00d fd8d 	bl	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelCLT.invalidate();
 800854e:	f504 60ba 	add.w	r0, r4, #1488	; 0x5d0
}
 8008552:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelCLT.invalidate();
 8008556:	f00d bd87 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 800855a:	f8c0 31e0 	str.w	r3, [r0, #480]	; 0x1e0
 800855e:	f04f 33ff 	mov.w	r3, #4294967295
 8008562:	e7ee      	b.n	8008542 <_ZN16DriverScreenView6setCLTEb+0x12>

08008564 <_ZN16DriverScreenView7setTmotEi>:


void DriverScreenView::setTmot(int motTemp) {
 8008564:	b510      	push	{r4, lr}
 8008566:	460b      	mov	r3, r1
 8008568:	4604      	mov	r4, r0
    Unicode::snprintf(txtTmotBuffer, TXTTMOT_SIZE, "%d", motTemp);
 800856a:	4a06      	ldr	r2, [pc, #24]	; (8008584 <_ZN16DriverScreenView7setTmotEi+0x20>)
 800856c:	2104      	movs	r1, #4
 800856e:	f600 30a8 	addw	r0, r0, #2984	; 0xba8
 8008572:	f00f fe01 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtTmot.invalidate();
 8008576:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
}
 800857a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtTmot.invalidate();
 800857e:	f00d bd73 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008582:	bf00      	nop
 8008584:	080299d3 	.word	0x080299d3

08008588 <_ZN16DriverScreenView7setToilEi>:

void DriverScreenView::setToil(int oilTemp) {
 8008588:	b510      	push	{r4, lr}
 800858a:	460b      	mov	r3, r1
 800858c:	4604      	mov	r4, r0
    Unicode::snprintf(txtToilBuffer, TXTTOIL_SIZE, "%d", oilTemp);
 800858e:	4a06      	ldr	r2, [pc, #24]	; (80085a8 <_ZN16DriverScreenView7setToilEi+0x20>)
 8008590:	2104      	movs	r1, #4
 8008592:	f600 30e4 	addw	r0, r0, #3044	; 0xbe4
 8008596:	f00f fdef 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtToil.invalidate();
 800859a:	f604 2068 	addw	r0, r4, #2664	; 0xa68
}
 800859e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtToil.invalidate();
 80085a2:	f00d bd61 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 80085a6:	bf00      	nop
 80085a8:	080299d3 	.word	0x080299d3

080085ac <_ZN16DriverScreenView8setTorinEi>:

void DriverScreenView::setTorin(int orinTemp) {
 80085ac:	b510      	push	{r4, lr}
 80085ae:	460b      	mov	r3, r1
 80085b0:	4604      	mov	r4, r0
    Unicode::snprintf(txtTorinBuffer, TXTTORIN_SIZE, "%d", orinTemp);
 80085b2:	4a06      	ldr	r2, [pc, #24]	; (80085cc <_ZN16DriverScreenView8setTorinEi+0x20>)
 80085b4:	2104      	movs	r1, #4
 80085b6:	f600 30ec 	addw	r0, r0, #3052	; 0xbec
 80085ba:	f00f fddd 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtTorin.invalidate();
 80085be:	f604 20b4 	addw	r0, r4, #2740	; 0xab4
}
 80085c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtTorin.invalidate();
 80085c6:	f00d bd4f 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 80085ca:	bf00      	nop
 80085cc:	080299d3 	.word	0x080299d3

080085d0 <_ZN16DriverScreenView7setPoilEf>:

void DriverScreenView::setPoil(float oilPressure) {
 80085d0:	b513      	push	{r0, r1, r4, lr}
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80085d2:	4a08      	ldr	r2, [pc, #32]	; (80085f4 <_ZN16DriverScreenView7setPoilEf+0x24>)
 80085d4:	ed8d 0a01 	vstr	s0, [sp, #4]
 80085d8:	4604      	mov	r4, r0
 80085da:	ab01      	add	r3, sp, #4
 80085dc:	2105      	movs	r1, #5
 80085de:	f500 603b 	add.w	r0, r0, #2992	; 0xbb0
 80085e2:	f00f ffb5 	bl	8018550 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(txtPoilBuffer, TXTPOIL_SIZE, "%.2f", oilPressure);
    txtPoil.invalidate();
 80085e6:	f504 600a 	add.w	r0, r4, #2208	; 0x8a0
}
 80085ea:	b002      	add	sp, #8
 80085ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtPoil.invalidate();
 80085f0:	f00d bd3a 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 80085f4:	080299d6 	.word	0x080299d6

080085f8 <_ZN16DriverScreenView8setPfuelEf>:

void DriverScreenView::setPfuel(float fuelPressure) {
 80085f8:	b513      	push	{r0, r1, r4, lr}
 80085fa:	4a08      	ldr	r2, [pc, #32]	; (800861c <_ZN16DriverScreenView8setPfuelEf+0x24>)
 80085fc:	ed8d 0a01 	vstr	s0, [sp, #4]
 8008600:	4604      	mov	r4, r0
 8008602:	ab01      	add	r3, sp, #4
 8008604:	2104      	movs	r1, #4
 8008606:	f600 30d2 	addw	r0, r0, #3026	; 0xbd2
 800860a:	f00f ffa1 	bl	8018550 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(txtPfuelBuffer, TXTPFUEL_SIZE, "%.1f", fuelPressure);
    txtPfuel.invalidate();
 800860e:	f504 601d 	add.w	r0, r4, #2512	; 0x9d0
}
 8008612:	b002      	add	sp, #8
 8008614:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtPfuel.invalidate();
 8008618:	f00d bd26 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 800861c:	080299db 	.word	0x080299db

08008620 <_ZN16DriverScreenView9setPbrakeEi>:

void DriverScreenView::setPbrake(int brakePressure) {
 8008620:	b510      	push	{r4, lr}
 8008622:	460b      	mov	r3, r1
 8008624:	4604      	mov	r4, r0
    Unicode::snprintf(txtPbrakeBuffer, TXTPBRAKE_SIZE, "%d", brakePressure);
 8008626:	4a06      	ldr	r2, [pc, #24]	; (8008640 <_ZN16DriverScreenView9setPbrakeEi+0x20>)
 8008628:	2104      	movs	r1, #4
 800862a:	f500 603c 	add.w	r0, r0, #3008	; 0xbc0
 800862e:	f00f fda3 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtPbrake.invalidate();
 8008632:	f604 1038 	addw	r0, r4, #2360	; 0x938
}
 8008636:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtPbrake.invalidate();
 800863a:	f00d bd15 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 800863e:	bf00      	nop
 8008640:	080299d3 	.word	0x080299d3

08008644 <_ZN16DriverScreenView6setTPSEi>:

void DriverScreenView::setTPS(int tpsPercentage) {
 8008644:	b510      	push	{r4, lr}
 8008646:	460b      	mov	r3, r1
 8008648:	4604      	mov	r4, r0
    Unicode::snprintf(txtTPSBuffer, TXTTPS_SIZE, "%d", tpsPercentage);
 800864a:	4a06      	ldr	r2, [pc, #24]	; (8008664 <_ZN16DriverScreenView6setTPSEi+0x20>)
 800864c:	2103      	movs	r1, #3
 800864e:	f600 30ba 	addw	r0, r0, #3002	; 0xbba
 8008652:	f00f fd91 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtTPS.invalidate();
 8008656:	f604 00ec 	addw	r0, r4, #2284	; 0x8ec
}
 800865a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtTPS.invalidate();
 800865e:	f00d bd03 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008662:	bf00      	nop
 8008664:	080299d3 	.word	0x080299d3

08008668 <_ZN16DriverScreenView8setBat12Ef>:

void DriverScreenView::setBat12(float voltage) {
 8008668:	b513      	push	{r0, r1, r4, lr}
 800866a:	4a08      	ldr	r2, [pc, #32]	; (800868c <_ZN16DriverScreenView8setBat12Ef+0x24>)
 800866c:	ed8d 0a01 	vstr	s0, [sp, #4]
 8008670:	4604      	mov	r4, r0
 8008672:	ab01      	add	r3, sp, #4
 8008674:	2105      	movs	r1, #5
 8008676:	f600 30da 	addw	r0, r0, #3034	; 0xbda
 800867a:	f00f ff69 	bl	8018550 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(txtBat12Buffer, TXTBAT12_SIZE, "%.1f", voltage);
    txtBat12.invalidate();
 800867e:	f604 201c 	addw	r0, r4, #2588	; 0xa1c
}
 8008682:	b002      	add	sp, #8
 8008684:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtBat12.invalidate();
 8008688:	f00d bcee 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 800868c:	080299db 	.word	0x080299db

08008690 <_ZN16DriverScreenView8setBat24Ef>:

void DriverScreenView::setBat24(float voltage) {
 8008690:	b513      	push	{r0, r1, r4, lr}
 8008692:	4a08      	ldr	r2, [pc, #32]	; (80086b4 <_ZN16DriverScreenView8setBat24Ef+0x24>)
 8008694:	ed8d 0a01 	vstr	s0, [sp, #4]
 8008698:	4604      	mov	r4, r0
 800869a:	ab01      	add	r3, sp, #4
 800869c:	2105      	movs	r1, #5
 800869e:	f600 30c8 	addw	r0, r0, #3016	; 0xbc8
 80086a2:	f00f ff55 	bl	8018550 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(txtBat24Buffer, TXTBAT24_SIZE, "%.1f", voltage);
    txtBat24.invalidate();
 80086a6:	f604 1084 	addw	r0, r4, #2436	; 0x984
}
 80086aa:	b002      	add	sp, #8
 80086ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtBat24.invalidate();
 80086b0:	f00d bcda 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 80086b4:	080299db 	.word	0x080299db

080086b8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80086b8:	4770      	bx	lr

080086ba <_ZN19FrontendApplicationD0Ev>:
 80086ba:	b510      	push	{r4, lr}
 80086bc:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80086c0:	4604      	mov	r4, r0
 80086c2:	f01d ff7d 	bl	80265c0 <_ZdlPvj>
 80086c6:	4620      	mov	r0, r4
 80086c8:	bd10      	pop	{r4, pc}

080086ca <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80086ca:	b510      	push	{r4, lr}
 80086cc:	4604      	mov	r4, r0
    {
        model.tick();
 80086ce:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80086d2:	f000 fbd9 	bl	8008e88 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80086d6:	4620      	mov	r0, r4
    }
 80086d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80086dc:	f00c bca0 	b.w	8015020 <_ZN8touchgfx11Application15handleTickEventEv>

080086e0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80086e0:	b510      	push	{r4, lr}
 80086e2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80086e4:	f7fb ffe6 	bl	80046b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80086e8:	4b01      	ldr	r3, [pc, #4]	; (80086f0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80086ea:	6023      	str	r3, [r4, #0]
{

}
 80086ec:	4620      	mov	r0, r4
 80086ee:	bd10      	pop	{r4, pc}
 80086f0:	08029a1c 	.word	0x08029a1c

080086f4 <_ZN24MainInfotaimentPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainInfotaimentPresenter() {};
 80086f4:	4770      	bx	lr

080086f6 <_ZThn4_N24MainInfotaimentPresenterD1Ev>:
 80086f6:	3804      	subs	r0, #4
 80086f8:	4770      	bx	lr

080086fa <_ZN24MainInfotaimentPresenter8activateEv>:
{
	view.setRES(3);
}

void MainInfotaimentPresenter::activate()
{
 80086fa:	b510      	push	{r4, lr}
	infoChanged();
 80086fc:	6803      	ldr	r3, [r0, #0]
{
 80086fe:	4604      	mov	r4, r0
	infoChanged();
 8008700:	695b      	ldr	r3, [r3, #20]
 8008702:	4798      	blx	r3
	debugMessageChanged();
 8008704:	6823      	ldr	r3, [r4, #0]
 8008706:	4620      	mov	r0, r4
 8008708:	699b      	ldr	r3, [r3, #24]
}
 800870a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	debugMessageChanged();
 800870e:	4718      	bx	r3

08008710 <_ZN24MainInfotaimentPresenter10deactivateEv>:

void MainInfotaimentPresenter::deactivate()
{
	
}
 8008710:	4770      	bx	lr

08008712 <_ZN24MainInfotaimentPresenterD0Ev>:
 8008712:	b510      	push	{r4, lr}
 8008714:	2110      	movs	r1, #16
 8008716:	4604      	mov	r4, r0
 8008718:	f01d ff52 	bl	80265c0 <_ZdlPvj>
 800871c:	4620      	mov	r0, r4
 800871e:	bd10      	pop	{r4, pc}

08008720 <_ZThn4_N24MainInfotaimentPresenterD0Ev>:
 8008720:	f1a0 0004 	sub.w	r0, r0, #4
 8008724:	e7f5      	b.n	8008712 <_ZN24MainInfotaimentPresenterD0Ev>

08008726 <_ZN24MainInfotaimentPresenter11gearChangedEv>:
    int getGear() { return gear; }
 8008726:	6883      	ldr	r3, [r0, #8]

void MainInfotaimentPresenter::gearChanged()
{
	view.setGear(model->getGear());
 8008728:	68c0      	ldr	r0, [r0, #12]
 800872a:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
 800872e:	f000 b8ad 	b.w	800888c <_ZN19MainInfotaimentView7setGearEi>

08008732 <_ZThn4_N24MainInfotaimentPresenter11gearChangedEv>:

    //from model
    virtual void gearChanged();
 8008732:	f1a0 0004 	sub.w	r0, r0, #4
 8008736:	f7ff bff6 	b.w	8008726 <_ZN24MainInfotaimentPresenter11gearChangedEv>

0800873a <_ZN24MainInfotaimentPresenter11infoChangedEv>:
 800873a:	6883      	ldr	r3, [r0, #8]
}

void MainInfotaimentPresenter::infoChanged()
{
 800873c:	b510      	push	{r4, lr}
 800873e:	4604      	mov	r4, r0
	view.setGear(model->getGear());
 8008740:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
 8008744:	68c0      	ldr	r0, [r0, #12]
 8008746:	f000 f8a1 	bl	800888c <_ZN19MainInfotaimentView7setGearEi>
    int getSpeed() { return speed; }
 800874a:	68a3      	ldr	r3, [r4, #8]
	view.setSpeed(model->getSpeed());
 800874c:	68e0      	ldr	r0, [r4, #12]
 800874e:	f8d3 10a4 	ldr.w	r1, [r3, #164]	; 0xa4
 8008752:	f000 f8c9 	bl	80088e8 <_ZN19MainInfotaimentView8setSpeedEi>
    int getRpm() { return rpm; }
 8008756:	68a3      	ldr	r3, [r4, #8]
	view.setRpm(model->getRpm());
 8008758:	68e0      	ldr	r0, [r4, #12]
 800875a:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800875e:	f000 f973 	bl	8008a48 <_ZN19MainInfotaimentView6setRpmEi>
    int getT_water() { return T_water; }
 8008762:	68a3      	ldr	r3, [r4, #8]

	view.setT_Water(model->getT_water());
 8008764:	68e0      	ldr	r0, [r4, #12]
 8008766:	f8d3 10ac 	ldr.w	r1, [r3, #172]	; 0xac
 800876a:	f000 f9c3 	bl	8008af4 <_ZN19MainInfotaimentView10setT_WaterEi>
    int getT_oil() { return T_oil; }
 800876e:	68a3      	ldr	r3, [r4, #8]
	view.setT_Oil(model->getT_oil());
 8008770:	68e0      	ldr	r0, [r4, #12]
 8008772:	f8d3 10b0 	ldr.w	r1, [r3, #176]	; 0xb0
 8008776:	f000 f9e7 	bl	8008b48 <_ZN19MainInfotaimentView8setT_OilEi>
    float getP_oil() { return P_oil; }
 800877a:	68a3      	ldr	r3, [r4, #8]
	view.setP_Oil(model->getP_oil());
 800877c:	68e0      	ldr	r0, [r4, #12]
 800877e:	ed93 0a32 	vldr	s0, [r3, #200]	; 0xc8
 8008782:	f000 fa0b 	bl	8008b9c <_ZN19MainInfotaimentView8setP_OilEf>
    float getP_fuel() { return P_fuel; }
 8008786:	68a3      	ldr	r3, [r4, #8]
	view.setP_Fuel(model->getP_fuel());
 8008788:	68e0      	ldr	r0, [r4, #12]
 800878a:	ed93 0a33 	vldr	s0, [r3, #204]	; 0xcc
 800878e:	f000 f8bd 	bl	800890c <_ZN19MainInfotaimentView9setP_FuelEf>
    int getThrottle_perc() { return throttle_perc; }
 8008792:	68a3      	ldr	r3, [r4, #8]

	view.setThrottle_Perc(model->getThrottle_perc());
 8008794:	68e0      	ldr	r0, [r4, #12]
 8008796:	f8d3 10b4 	ldr.w	r1, [r3, #180]	; 0xb4
 800879a:	f000 f949 	bl	8008a30 <_ZN19MainInfotaimentView16setThrottle_PercEi>
    int getFrontBrakePerc() { return frontBrakePerc; }
 800879e:	68a3      	ldr	r3, [r4, #8]

	view.setFrontBrake_Perc(model->getFrontBrakePerc());
 80087a0:	68e0      	ldr	r0, [r4, #12]
 80087a2:	f8d3 10b8 	ldr.w	r1, [r3, #184]	; 0xb8
 80087a6:	f000 f947 	bl	8008a38 <_ZN19MainInfotaimentView18setFrontBrake_PercEi>
    int getRearBrakePerc() { return rearBrakePerc; }
 80087aa:	68a3      	ldr	r3, [r4, #8]
	view.setRearBrake_Perc(model->getRearBrakePerc());
 80087ac:	68e0      	ldr	r0, [r4, #12]
 80087ae:	f8d3 10bc 	ldr.w	r1, [r3, #188]	; 0xbc
 80087b2:	f000 f945 	bl	8008a40 <_ZN19MainInfotaimentView17setRearBrake_PercEi>
    int getRES() { return RES; }
 80087b6:	68a3      	ldr	r3, [r4, #8]

	view.setRES(model->getRES());
 80087b8:	68e0      	ldr	r0, [r4, #12]
 80087ba:	f8d3 10d0 	ldr.w	r1, [r3, #208]	; 0xd0
 80087be:	f000 f8bb 	bl	8008938 <_ZN19MainInfotaimentView6setRESEi>
    bool getLC() { return LC; }
 80087c2:	68a3      	ldr	r3, [r4, #8]
	view.setLC(model->getLC());
 80087c4:	68e0      	ldr	r0, [r4, #12]
 80087c6:	f893 10d4 	ldrb.w	r1, [r3, #212]	; 0xd4
 80087ca:	f000 f8d9 	bl	8008980 <_ZN19MainInfotaimentView5setLCEb>
    bool getCLT() { return CLT; }
 80087ce:	68a3      	ldr	r3, [r4, #8]
	view.setCLT(model->getCLT());
 80087d0:	68e0      	ldr	r0, [r4, #12]
 80087d2:	f893 10d5 	ldrb.w	r1, [r3, #213]	; 0xd5
 80087d6:	f000 f8ed 	bl	80089b4 <_ZN19MainInfotaimentView6setCLTEb>
    float getBattery_v() { return battery_v; }
 80087da:	68a3      	ldr	r3, [r4, #8]

	view.setBattery_V(model->getBattery_v());
 80087dc:	68e0      	ldr	r0, [r4, #12]
 80087de:	ed93 0a36 	vldr	s0, [r3, #216]	; 0xd8
 80087e2:	f000 fa89 	bl	8008cf8 <_ZN19MainInfotaimentView12setBattery_VEf>
    float getOrinTemperature() { return orinTemperature; }
 80087e6:	68a3      	ldr	r3, [r4, #8]

	view.setOrinTemperature(model->getOrinTemperature());
 80087e8:	68e0      	ldr	r0, [r4, #12]
 80087ea:	ed93 0a31 	vldr	s0, [r3, #196]	; 0xc4
 80087ee:	f000 fa11 	bl	8008c14 <_ZN19MainInfotaimentView18setOrinTemperatureEf>
    float getVoltage24v() { return voltage24v; }
 80087f2:	68a3      	ldr	r3, [r4, #8]
	view.setVoltage24v(model->getVoltage24v());
 80087f4:	68e0      	ldr	r0, [r4, #12]
 80087f6:	ed93 0a37 	vldr	s0, [r3, #220]	; 0xdc
 80087fa:	f000 fa41 	bl	8008c80 <_ZN19MainInfotaimentView13setVoltage24vEf>
    int getLap() { return lap; }
 80087fe:	68a3      	ldr	r3, [r4, #8]
	view.setLap(model->getLap());
 8008800:	68e0      	ldr	r0, [r4, #12]
 8008802:	f8d3 10c0 	ldr.w	r1, [r3, #192]	; 0xc0

	/* TODO: String variables */
}
 8008806:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	view.setLap(model->getLap());
 800880a:	f000 b8ed 	b.w	80089e8 <_ZN19MainInfotaimentView6setLapEi>

0800880e <_ZThn4_N24MainInfotaimentPresenter11infoChangedEv>:
    virtual void infoChanged();
 800880e:	f1a0 0004 	sub.w	r0, r0, #4
 8008812:	f7ff bf92 	b.w	800873a <_ZN24MainInfotaimentPresenter11infoChangedEv>

08008816 <_ZN24MainInfotaimentPresenter19debugMessageChangedEv>:

    const char* getDebugMessage() { return dbgMessage; }
 8008816:	6883      	ldr	r3, [r0, #8]


void MainInfotaimentPresenter::debugMessageChanged() {
	view.setDebugMessage(model->getDebugMessage());
 8008818:	68c0      	ldr	r0, [r0, #12]
 800881a:	6859      	ldr	r1, [r3, #4]
 800881c:	f000 b8f6 	b.w	8008a0c <_ZN19MainInfotaimentView15setDebugMessageEPKc>

08008820 <_ZThn4_N24MainInfotaimentPresenter19debugMessageChangedEv>:
    virtual void debugMessageChanged();
 8008820:	f1a0 0004 	sub.w	r0, r0, #4
 8008824:	f7ff bff7 	b.w	8008816 <_ZN24MainInfotaimentPresenter19debugMessageChangedEv>

08008828 <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView>:
MainInfotaimentPresenter::MainInfotaimentPresenter(MainInfotaimentView& v)
 8008828:	b510      	push	{r4, lr}
 800882a:	2200      	movs	r2, #0
 800882c:	6082      	str	r2, [r0, #8]
    : view(v)
 800882e:	4a04      	ldr	r2, [pc, #16]	; (8008840 <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView+0x18>)
 8008830:	60c1      	str	r1, [r0, #12]
 8008832:	f102 0408 	add.w	r4, r2, #8
 8008836:	322c      	adds	r2, #44	; 0x2c
 8008838:	6004      	str	r4, [r0, #0]
 800883a:	6042      	str	r2, [r0, #4]
}
 800883c:	bd10      	pop	{r4, pc}
 800883e:	bf00      	nop
 8008840:	08029a68 	.word	0x08029a68

08008844 <_ZN19MainInfotaimentView14tearDownScreenEv>:
}

void MainInfotaimentView::tearDownScreen()
{
  MainInfotaimentViewBase::tearDownScreen();
}
 8008844:	4770      	bx	lr
	...

08008848 <_ZN19MainInfotaimentViewD1Ev>:

class MainInfotaimentView : public MainInfotaimentViewBase
{
public:
    MainInfotaimentView();
    virtual ~MainInfotaimentView() {}
 8008848:	b510      	push	{r4, lr}
 800884a:	4b03      	ldr	r3, [pc, #12]	; (8008858 <_ZN19MainInfotaimentViewD1Ev+0x10>)
 800884c:	6003      	str	r3, [r0, #0]
 800884e:	4604      	mov	r4, r0
 8008850:	f7fc fe28 	bl	80054a4 <_ZN23MainInfotaimentViewBaseD1Ev>
 8008854:	4620      	mov	r0, r4
 8008856:	bd10      	pop	{r4, pc}
 8008858:	08029ad4 	.word	0x08029ad4

0800885c <_ZN19MainInfotaimentViewD0Ev>:
 800885c:	b510      	push	{r4, lr}
 800885e:	4604      	mov	r4, r0
 8008860:	f7ff fff2 	bl	8008848 <_ZN19MainInfotaimentViewD1Ev>
 8008864:	4620      	mov	r0, r4
 8008866:	f244 7198 	movw	r1, #18328	; 0x4798
 800886a:	f01d fea9 	bl	80265c0 <_ZdlPvj>
 800886e:	4620      	mov	r0, r4
 8008870:	bd10      	pop	{r4, pc}
	...

08008874 <_ZN19MainInfotaimentViewC1Ev>:
MainInfotaimentView::MainInfotaimentView()
 8008874:	b510      	push	{r4, lr}
 8008876:	4604      	mov	r4, r0
 8008878:	f7fc fe84 	bl	8005584 <_ZN23MainInfotaimentViewBaseC1Ev>
 800887c:	4b01      	ldr	r3, [pc, #4]	; (8008884 <_ZN19MainInfotaimentViewC1Ev+0x10>)
 800887e:	6023      	str	r3, [r4, #0]
}
 8008880:	4620      	mov	r0, r4
 8008882:	bd10      	pop	{r4, pc}
 8008884:	08029ad4 	.word	0x08029ad4

08008888 <_ZN19MainInfotaimentView11setupScreenEv>:
  MainInfotaimentViewBase::setupScreen();
 8008888:	f7fc bde8 	b.w	800545c <_ZN23MainInfotaimentViewBase11setupScreenEv>

0800888c <_ZN19MainInfotaimentView7setGearEi>:

void MainInfotaimentView::setGear(int gear)
{
 800888c:	b510      	push	{r4, lr}
 800888e:	4604      	mov	r4, r0
	//update text area

	if (!gear)
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%c", 'N');
 8008890:	f500 50b8 	add.w	r0, r0, #5888	; 0x1700
 8008894:	300c      	adds	r0, #12
	if (!gear)
 8008896:	460b      	mov	r3, r1
 8008898:	b9d9      	cbnz	r1, 80088d2 <_ZN19MainInfotaimentView7setGearEi+0x46>
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%c", 'N');
 800889a:	4a0f      	ldr	r2, [pc, #60]	; (80088d8 <_ZN19MainInfotaimentView7setGearEi+0x4c>)
 800889c:	234e      	movs	r3, #78	; 0x4e
	else
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%d", gear);
 800889e:	2102      	movs	r1, #2
 80088a0:	f00f fc6a 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%3d", 150);
 80088a4:	f504 50b8 	add.w	r0, r4, #5888	; 0x1700
 80088a8:	4a0c      	ldr	r2, [pc, #48]	; (80088dc <_ZN19MainInfotaimentView7setGearEi+0x50>)
 80088aa:	2396      	movs	r3, #150	; 0x96
 80088ac:	2104      	movs	r1, #4
 80088ae:	3010      	adds	r0, #16
 80088b0:	f00f fc62 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%4d", 4200);
 80088b4:	f504 50b8 	add.w	r0, r4, #5888	; 0x1700
 80088b8:	4a09      	ldr	r2, [pc, #36]	; (80088e0 <_ZN19MainInfotaimentView7setGearEi+0x54>)
 80088ba:	f241 0368 	movw	r3, #4200	; 0x1068
 80088be:	2107      	movs	r1, #7
 80088c0:	3018      	adds	r0, #24
 80088c2:	f00f fc59 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

  txtGear.invalidate();
 80088c6:	f104 006c 	add.w	r0, r4, #108	; 0x6c
}
 80088ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  txtGear.invalidate();
 80088ce:	f00d bbcb 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%d", gear);
 80088d2:	4a04      	ldr	r2, [pc, #16]	; (80088e4 <_ZN19MainInfotaimentView7setGearEi+0x58>)
 80088d4:	e7e3      	b.n	800889e <_ZN19MainInfotaimentView7setGearEi+0x12>
 80088d6:	bf00      	nop
 80088d8:	080299d0 	.word	0x080299d0
 80088dc:	08029aac 	.word	0x08029aac
 80088e0:	08029ab0 	.word	0x08029ab0
 80088e4:	080299d3 	.word	0x080299d3

080088e8 <_ZN19MainInfotaimentView8setSpeedEi>:

void MainInfotaimentView::setSpeed(int speed)
{
 80088e8:	b510      	push	{r4, lr}
 80088ea:	4604      	mov	r4, r0
	//update text area

	Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%3.3d", speed);
 80088ec:	f500 50b8 	add.w	r0, r0, #5888	; 0x1700
{
 80088f0:	460b      	mov	r3, r1
	Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%3.3d", speed);
 80088f2:	4a05      	ldr	r2, [pc, #20]	; (8008908 <_ZN19MainInfotaimentView8setSpeedEi+0x20>)
 80088f4:	2104      	movs	r1, #4
 80088f6:	3010      	adds	r0, #16
 80088f8:	f00f fc3e 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

  txtSpeed.invalidate();
 80088fc:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
}
 8008900:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  txtSpeed.invalidate();
 8008904:	f00d bbb0 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008908:	08029ab4 	.word	0x08029ab4

0800890c <_ZN19MainInfotaimentView9setP_FuelEf>:

	txtPOil.invalidate();
	imgOilPres.invalidate();
}

void MainInfotaimentView::setP_Fuel(float p_fuel) {
 800890c:	b513      	push	{r0, r1, r4, lr}
 800890e:	4604      	mov	r4, r0
 8008910:	f500 50c0 	add.w	r0, r0, #6144	; 0x1800
 8008914:	4a07      	ldr	r2, [pc, #28]	; (8008934 <_ZN19MainInfotaimentView9setP_FuelEf+0x28>)
 8008916:	ed8d 0a01 	vstr	s0, [sp, #4]
 800891a:	ab01      	add	r3, sp, #4
 800891c:	2106      	movs	r1, #6
 800891e:	3008      	adds	r0, #8
 8008920:	f00f fe16 	bl	8018550 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtPFuelBuffer, TXTPFUEL_SIZE, "%.2f", p_fuel);
	txtPFuel.invalidate();
 8008924:	f504 5099 	add.w	r0, r4, #4896	; 0x1320
 8008928:	3004      	adds	r0, #4
}
 800892a:	b002      	add	sp, #8
 800892c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPFuel.invalidate();
 8008930:	f00d bb9a 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008934:	080299d6 	.word	0x080299d6

08008938 <_ZN19MainInfotaimentView6setRESEi>:
  img24v.invalidate();
  txt24v.invalidate();
}

void MainInfotaimentView::setRES(int RES)
{
 8008938:	b510      	push	{r4, lr}
 800893a:	4604      	mov	r4, r0
	if(!RES)
 800893c:	b929      	cbnz	r1, 800894a <_ZN19MainInfotaimentView6setRESEi+0x12>
 800893e:	4b0f      	ldr	r3, [pc, #60]	; (800897c <_ZN19MainInfotaimentView6setRESEi+0x44>)
 8008940:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8008944:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008948:	e007      	b.n	800895a <_ZN19MainInfotaimentView6setRESEi+0x22>
	{
		/* Turn RES EMERGENCY MODE box */
		boxRES.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
		labelRES.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
	} else if(RES == 1)
 800894a:	2901      	cmp	r1, #1
 800894c:	d111      	bne.n	8008972 <_ZN19MainInfotaimentView6setRESEi+0x3a>
 800894e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008952:	f8c0 35d4 	str.w	r3, [r0, #1492]	; 0x5d4
 8008956:	f04f 33ff 	mov.w	r3, #4294967295
 800895a:	f8c4 37ac 	str.w	r3, [r4, #1964]	; 0x7ac
		/* Turn RES GO MODE box */
		boxRES.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
		labelRES.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
	}

	boxRES.invalidate();
 800895e:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 8008962:	f00d fb81 	bl	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelRES.invalidate();
 8008966:	f204 707c 	addw	r0, r4, #1916	; 0x77c
}
 800896a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelRES.invalidate();
 800896e:	f00d bb7b 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	} else if(RES == 3)
 8008972:	2903      	cmp	r1, #3
 8008974:	d1f3      	bne.n	800895e <_ZN19MainInfotaimentView6setRESEi+0x26>
 8008976:	f04f 23ff 	mov.w	r3, #4278255360	; 0xff00ff00
 800897a:	e7e1      	b.n	8008940 <_ZN19MainInfotaimentView6setRESEi+0x8>
 800897c:	ffff0000 	.word	0xffff0000

08008980 <_ZN19MainInfotaimentView5setLCEb>:

void MainInfotaimentView::setLC(bool LC)
{
 8008980:	b510      	push	{r4, lr}
 8008982:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008986:	4604      	mov	r4, r0
	if(!LC)
 8008988:	b979      	cbnz	r1, 80089aa <_ZN19MainInfotaimentView5setLCEb+0x2a>
 800898a:	f8c0 3c18 	str.w	r3, [r0, #3096]	; 0xc18
 800898e:	f04f 33ff 	mov.w	r3, #4294967295
		/* Turn on LC box */
    boxLC.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    labelLC.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
	}

	boxLC.invalidate();
 8008992:	f504 603f 	add.w	r0, r4, #3056	; 0xbf0
 8008996:	f8c4 3c54 	str.w	r3, [r4, #3156]	; 0xc54
 800899a:	f00d fb65 	bl	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelLC.invalidate();
 800899e:	f604 4024 	addw	r0, r4, #3108	; 0xc24
}
 80089a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelLC.invalidate();
 80089a6:	f00d bb5f 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 80089aa:	f04f 22ff 	mov.w	r2, #4278255360	; 0xff00ff00
 80089ae:	f8c0 2c18 	str.w	r2, [r0, #3096]	; 0xc18
 80089b2:	e7ee      	b.n	8008992 <_ZN19MainInfotaimentView5setLCEb+0x12>

080089b4 <_ZN19MainInfotaimentView6setCLTEb>:

void MainInfotaimentView::setCLT(bool CLT)
{
 80089b4:	b510      	push	{r4, lr}
 80089b6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80089ba:	4604      	mov	r4, r0
	if(!CLT)
 80089bc:	b979      	cbnz	r1, 80089de <_ZN19MainInfotaimentView6setCLTEb+0x2a>
 80089be:	f8c0 3c94 	str.w	r3, [r0, #3220]	; 0xc94
 80089c2:	f04f 33ff 	mov.w	r3, #4294967295
		/* Turn on CLT box */
    boxClutch.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    labelClutch.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
	}

	boxClutch.invalidate();
 80089c6:	f604 406c 	addw	r0, r4, #3180	; 0xc6c
 80089ca:	f8c4 3cd0 	str.w	r3, [r4, #3280]	; 0xcd0
 80089ce:	f00d fb4b 	bl	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelClutch.invalidate();
 80089d2:	f504 604a 	add.w	r0, r4, #3232	; 0xca0
}
 80089d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelClutch.invalidate();
 80089da:	f00d bb45 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 80089de:	f04f 22ff 	mov.w	r2, #4278255360	; 0xff00ff00
 80089e2:	f8c0 2c94 	str.w	r2, [r0, #3220]	; 0xc94
 80089e6:	e7ee      	b.n	80089c6 <_ZN19MainInfotaimentView6setCLTEb+0x12>

080089e8 <_ZN19MainInfotaimentView6setLapEi>:

	txtBattery_V.invalidate();
	imgBatteryV.invalidate();
}

void MainInfotaimentView::setLap(int lap) {
 80089e8:	b510      	push	{r4, lr}
 80089ea:	4604      	mov	r4, r0
	Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%d", lap);
 80089ec:	f500 50b9 	add.w	r0, r0, #5920	; 0x1720
void MainInfotaimentView::setLap(int lap) {
 80089f0:	460b      	mov	r3, r1
	Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%d", lap);
 80089f2:	4a05      	ldr	r2, [pc, #20]	; (8008a08 <_ZN19MainInfotaimentView6setLapEi+0x20>)
 80089f4:	2103      	movs	r1, #3
 80089f6:	3006      	adds	r0, #6
 80089f8:	f00f fbbe 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

  txtLap.invalidate();
 80089fc:	f504 60e6 	add.w	r0, r4, #1840	; 0x730
}
 8008a00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  txtLap.invalidate();
 8008a04:	f00d bb30 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008a08:	080299d3 	.word	0x080299d3

08008a0c <_ZN19MainInfotaimentView15setDebugMessageEPKc>:

/* TODO: String variables */


void MainInfotaimentView::setDebugMessage(const char* msg) {
 8008a0c:	b510      	push	{r4, lr}
 8008a0e:	4604      	mov	r4, r0
	if (msg == nullptr) {
		Unicode::strncpy(dbgTextAreaBuffer, "", DBGTEXTAREA_SIZE);
 8008a10:	f500 50c1 	add.w	r0, r0, #6176	; 0x1820
 8008a14:	3008      	adds	r0, #8
 8008a16:	2240      	movs	r2, #64	; 0x40
	if (msg == nullptr) {
 8008a18:	b901      	cbnz	r1, 8008a1c <_ZN19MainInfotaimentView15setDebugMessageEPKc+0x10>
		Unicode::strncpy(dbgTextAreaBuffer, "", DBGTEXTAREA_SIZE);
 8008a1a:	4904      	ldr	r1, [pc, #16]	; (8008a2c <_ZN19MainInfotaimentView15setDebugMessageEPKc+0x20>)
	} else {
		Unicode::strncpy(dbgTextAreaBuffer, msg, DBGTEXTAREA_SIZE);
 8008a1c:	f00f f83f 	bl	8017a9e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
	}

	dbgTextArea.invalidate();
 8008a20:	f504 50ac 	add.w	r0, r4, #5504	; 0x1580
 8008a24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	dbgTextArea.invalidate();
 8008a28:	f00d bb1e 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008a2c:	0802aa6b 	.word	0x0802aa6b

08008a30 <_ZN19MainInfotaimentView16setThrottle_PercEi>:
	progressThrottle.setValue(throttle_perc);
 8008a30:	f500 7033 	add.w	r0, r0, #716	; 0x2cc
 8008a34:	f006 bbf3 	b.w	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>

08008a38 <_ZN19MainInfotaimentView18setFrontBrake_PercEi>:
	progressBrakeFront.setValue(brake_perc);
 8008a38:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 8008a3c:	f006 bbef 	b.w	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>

08008a40 <_ZN19MainInfotaimentView17setRearBrake_PercEi>:
	progressBrakeRear.setValue(brake_perc);
 8008a40:	f500 6099 	add.w	r0, r0, #1224	; 0x4c8
 8008a44:	f006 bbeb 	b.w	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>

08008a48 <_ZN19MainInfotaimentView6setRpmEi>:
{
 8008a48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008a4c:	4605      	mov	r5, r0
	Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%5.5d", rpm);
 8008a4e:	f500 50b8 	add.w	r0, r0, #5888	; 0x1700
 8008a52:	460b      	mov	r3, r1
{
 8008a54:	460c      	mov	r4, r1
	Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%5.5d", rpm);
 8008a56:	4a26      	ldr	r2, [pc, #152]	; (8008af0 <_ZN19MainInfotaimentView6setRpmEi+0xa8>)
 8008a58:	2107      	movs	r1, #7
 8008a5a:	3018      	adds	r0, #24
 8008a5c:	f00f fb8c 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	if (rpm < 4500)
 8008a60:	f241 1393 	movw	r3, #4499	; 0x1193
 8008a64:	429c      	cmp	r4, r3
		progressRpmLow.setValue(0);
 8008a66:	f205 76c4 	addw	r6, r5, #1988	; 0x7c4
		progressRpmMed.setValue(0);
 8008a6a:	f605 08a8 	addw	r8, r5, #2216	; 0x8a8
		progressRpmHigh.setValue(0);
 8008a6e:	f605 178c 	addw	r7, r5, #2444	; 0x98c
	if (rpm < 4500)
 8008a72:	dc01      	bgt.n	8008a78 <_ZN19MainInfotaimentView6setRpmEi+0x30>
			progressRpmLow.setValue(0);
 8008a74:	2100      	movs	r1, #0
 8008a76:	e007      	b.n	8008a88 <_ZN19MainInfotaimentView6setRpmEi+0x40>
	} else if ((rpm >= 4500) && (rpm < 6000))
 8008a78:	f5a4 538c 	sub.w	r3, r4, #4480	; 0x1180
 8008a7c:	3b14      	subs	r3, #20
 8008a7e:	f240 52db 	movw	r2, #1499	; 0x5db
 8008a82:	4293      	cmp	r3, r2
 8008a84:	d805      	bhi.n	8008a92 <_ZN19MainInfotaimentView6setRpmEi+0x4a>
		progressRpmLow.setValue(100);
 8008a86:	2164      	movs	r1, #100	; 0x64
			progressRpmLow.setValue(0);
 8008a88:	4630      	mov	r0, r6
 8008a8a:	f006 fbc8 	bl	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>
			progressRpmMed.setValue(0);
 8008a8e:	2100      	movs	r1, #0
 8008a90:	e00b      	b.n	8008aaa <_ZN19MainInfotaimentView6setRpmEi+0x62>
	} else if ((rpm >= 6000) && (rpm < 9000))
 8008a92:	f5a4 53bb 	sub.w	r3, r4, #5984	; 0x1760
 8008a96:	3b10      	subs	r3, #16
 8008a98:	f640 31b7 	movw	r1, #2999	; 0xbb7
 8008a9c:	428b      	cmp	r3, r1
 8008a9e:	d811      	bhi.n	8008ac4 <_ZN19MainInfotaimentView6setRpmEi+0x7c>
		progressRpmLow.setValue(100);
 8008aa0:	2164      	movs	r1, #100	; 0x64
 8008aa2:	4630      	mov	r0, r6
 8008aa4:	f006 fbbb 	bl	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>
		progressRpmMed.setValue(100);
 8008aa8:	2164      	movs	r1, #100	; 0x64
			progressRpmMed.setValue(0);
 8008aaa:	4640      	mov	r0, r8
 8008aac:	f006 fbb7 	bl	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>
			progressRpmHigh.setValue(0);
 8008ab0:	2100      	movs	r1, #0
			progressRpmHigh.setValue(100);
 8008ab2:	4638      	mov	r0, r7
 8008ab4:	f006 fbb3 	bl	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>
  txtRpm.invalidate();
 8008ab8:	f505 70e8 	add.w	r0, r5, #464	; 0x1d0
}
 8008abc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  txtRpm.invalidate();
 8008ac0:	f00d bad2 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	} else if ((rpm >= 9000) && (rpm < 10500))
 8008ac4:	f5a4 540c 	sub.w	r4, r4, #8960	; 0x2300
 8008ac8:	3c28      	subs	r4, #40	; 0x28
 8008aca:	4294      	cmp	r4, r2
 8008acc:	d809      	bhi.n	8008ae2 <_ZN19MainInfotaimentView6setRpmEi+0x9a>
			progressRpmLow.setValue(100);
 8008ace:	2164      	movs	r1, #100	; 0x64
 8008ad0:	4630      	mov	r0, r6
 8008ad2:	f006 fba4 	bl	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>
			progressRpmMed.setValue(100);
 8008ad6:	2164      	movs	r1, #100	; 0x64
 8008ad8:	4640      	mov	r0, r8
 8008ada:	f006 fba0 	bl	800f21e <_ZN8touchgfx11BoxProgress8setValueEi>
			progressRpmHigh.setValue(100);
 8008ade:	2164      	movs	r1, #100	; 0x64
 8008ae0:	e7e7      	b.n	8008ab2 <_ZN19MainInfotaimentView6setRpmEi+0x6a>
		if (progressRpmLow.getValue() == 100)
 8008ae2:	4630      	mov	r0, r6
 8008ae4:	f006 fcdd 	bl	800f4a2 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8008ae8:	2864      	cmp	r0, #100	; 0x64
 8008aea:	d1f0      	bne.n	8008ace <_ZN19MainInfotaimentView6setRpmEi+0x86>
 8008aec:	e7c2      	b.n	8008a74 <_ZN19MainInfotaimentView6setRpmEi+0x2c>
 8008aee:	bf00      	nop
 8008af0:	08029aba 	.word	0x08029aba

08008af4 <_ZN19MainInfotaimentView10setT_WaterEi>:
{
 8008af4:	b573      	push	{r0, r1, r4, r5, r6, lr}
	if (t_water <= WATER_TEMP_LOW_VAL )
 8008af6:	2932      	cmp	r1, #50	; 0x32
		imgWaterTemp.setBitmap(touchgfx::Bitmap(BITMAP_WATER_LOW_ID));
 8008af8:	f500 549c 	add.w	r4, r0, #4992	; 0x1380
{
 8008afc:	4605      	mov	r5, r0
 8008afe:	460e      	mov	r6, r1
		imgWaterTemp.setBitmap(touchgfx::Bitmap(BITMAP_WATER_LOW_ID));
 8008b00:	f104 041c 	add.w	r4, r4, #28
	if (t_water <= WATER_TEMP_LOW_VAL )
 8008b04:	dc18      	bgt.n	8008b38 <_ZN19MainInfotaimentView10setT_WaterEi+0x44>
 8008b06:	2319      	movs	r3, #25
		imgWaterTemp.setBitmap(touchgfx::Bitmap(BITMAP_WATER_HIGH_ID));
 8008b08:	a901      	add	r1, sp, #4
 8008b0a:	4620      	mov	r0, r4
 8008b0c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008b10:	f009 fcc2 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
	Unicode::snprintf(txtTWaterBuffer, TXTTWATER_SIZE, "%3.3d", t_water);
 8008b14:	f505 50b9 	add.w	r0, r5, #5920	; 0x1720
 8008b18:	4a0a      	ldr	r2, [pc, #40]	; (8008b44 <_ZN19MainInfotaimentView10setT_WaterEi+0x50>)
 8008b1a:	4633      	mov	r3, r6
 8008b1c:	2104      	movs	r1, #4
 8008b1e:	300c      	adds	r0, #12
 8008b20:	f00f fb2a 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtTWater.invalidate();
 8008b24:	f605 20a4 	addw	r0, r5, #2724	; 0xaa4
 8008b28:	f00d fa9e 	bl	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	imgWaterTemp.invalidate();
 8008b2c:	4620      	mov	r0, r4
}
 8008b2e:	b002      	add	sp, #8
 8008b30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	imgWaterTemp.invalidate();
 8008b34:	f00d ba98 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if (t_water <= WATER_TEMP_OK_VAL )
 8008b38:	295e      	cmp	r1, #94	; 0x5e
 8008b3a:	bfd4      	ite	le
 8008b3c:	231a      	movle	r3, #26
 8008b3e:	2318      	movgt	r3, #24
 8008b40:	e7e2      	b.n	8008b08 <_ZN19MainInfotaimentView10setT_WaterEi+0x14>
 8008b42:	bf00      	nop
 8008b44:	08029ab4 	.word	0x08029ab4

08008b48 <_ZN19MainInfotaimentView8setT_OilEi>:
{
 8008b48:	b573      	push	{r0, r1, r4, r5, r6, lr}
	if (t_oil <= OIL_TEMP_LOW_VAL )
 8008b4a:	2932      	cmp	r1, #50	; 0x32
    imgOilTemp.setBitmap(touchgfx::Bitmap(BITMAP_OIL_TEMP_LOW_ID));
 8008b4c:	f500 549b 	add.w	r4, r0, #4960	; 0x1360
{
 8008b50:	4605      	mov	r5, r0
 8008b52:	460e      	mov	r6, r1
    imgOilTemp.setBitmap(touchgfx::Bitmap(BITMAP_OIL_TEMP_LOW_ID));
 8008b54:	f104 0410 	add.w	r4, r4, #16
	if (t_oil <= OIL_TEMP_LOW_VAL )
 8008b58:	dc18      	bgt.n	8008b8c <_ZN19MainInfotaimentView8setT_OilEi+0x44>
 8008b5a:	2313      	movs	r3, #19
    imgOilTemp.setBitmap(touchgfx::Bitmap(BITMAP_OIL_TEMP_HIGH_ID));
 8008b5c:	a901      	add	r1, sp, #4
 8008b5e:	4620      	mov	r0, r4
 8008b60:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008b64:	f009 fc98 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
	Unicode::snprintf(txtTOilBuffer, TXTTOIL_SIZE, "%3.3d", t_oil);
 8008b68:	f505 50b9 	add.w	r0, r5, #5920	; 0x1720
 8008b6c:	4a0a      	ldr	r2, [pc, #40]	; (8008b98 <_ZN19MainInfotaimentView8setT_OilEi+0x50>)
 8008b6e:	4633      	mov	r3, r6
 8008b70:	2104      	movs	r1, #4
 8008b72:	3014      	adds	r0, #20
 8008b74:	f00f fb00 	bl	8018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtTOil.invalidate();
 8008b78:	f605 3058 	addw	r0, r5, #2904	; 0xb58
 8008b7c:	f00d fa74 	bl	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	imgOilTemp.invalidate();
 8008b80:	4620      	mov	r0, r4
}
 8008b82:	b002      	add	sp, #8
 8008b84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	imgOilTemp.invalidate();
 8008b88:	f00d ba6e 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if (t_oil <= OIL_TEMP_OK_VAL )
 8008b8c:	2968      	cmp	r1, #104	; 0x68
 8008b8e:	bfd4      	ite	le
 8008b90:	2314      	movle	r3, #20
 8008b92:	2312      	movgt	r3, #18
 8008b94:	e7e2      	b.n	8008b5c <_ZN19MainInfotaimentView8setT_OilEi+0x14>
 8008b96:	bf00      	nop
 8008b98:	08029ab4 	.word	0x08029ab4

08008b9c <_ZN19MainInfotaimentView8setP_OilEf>:
{
 8008b9c:	b530      	push	{r4, r5, lr}
	if (p_oil <= OIL_PRESS_LOW_VAL )
 8008b9e:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
{
 8008ba2:	ed2d 8b02 	vpush	{d8}
	if (p_oil <= OIL_PRESS_LOW_VAL )
 8008ba6:	eeb4 0ae7 	vcmpe.f32	s0, s15
    	imgOilPres.setBitmap(touchgfx::Bitmap(BITMAP_OIL_PRES_LOW_ID));
 8008baa:	f500 5496 	add.w	r4, r0, #4800	; 0x12c0
	if (p_oil <= OIL_PRESS_LOW_VAL )
 8008bae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
{
 8008bb2:	b083      	sub	sp, #12
 8008bb4:	4605      	mov	r5, r0
 8008bb6:	eeb0 8a40 	vmov.f32	s16, s0
    	imgOilPres.setBitmap(touchgfx::Bitmap(BITMAP_OIL_PRES_LOW_ID));
 8008bba:	f104 0404 	add.w	r4, r4, #4
	if (p_oil <= OIL_PRESS_LOW_VAL )
 8008bbe:	d81c      	bhi.n	8008bfa <_ZN19MainInfotaimentView8setP_OilEf+0x5e>
 8008bc0:	2310      	movs	r3, #16
		imgOilPres.setBitmap(touchgfx::Bitmap(BITMAP_OIL_PRES_HIGH_ID));
 8008bc2:	a901      	add	r1, sp, #4
 8008bc4:	4620      	mov	r0, r4
 8008bc6:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008bca:	f009 fc65 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008bce:	f505 50b9 	add.w	r0, r5, #5920	; 0x1720
 8008bd2:	4a0f      	ldr	r2, [pc, #60]	; (8008c10 <_ZN19MainInfotaimentView8setP_OilEf+0x74>)
 8008bd4:	ed8d 8a01 	vstr	s16, [sp, #4]
 8008bd8:	ab01      	add	r3, sp, #4
 8008bda:	2106      	movs	r1, #6
 8008bdc:	301c      	adds	r0, #28
 8008bde:	f00f fcb7 	bl	8018550 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtPOil.invalidate();
 8008be2:	f605 30a4 	addw	r0, r5, #2980	; 0xba4
 8008be6:	f00d fa3f 	bl	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	imgOilPres.invalidate();
 8008bea:	4620      	mov	r0, r4
}
 8008bec:	b003      	add	sp, #12
 8008bee:	ecbd 8b02 	vpop	{d8}
 8008bf2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	imgOilPres.invalidate();
 8008bf6:	f00d ba37 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if (p_oil <= OIL_PRESS_OK_VAL )
 8008bfa:	eef1 7a0a 	vmov.f32	s15, #26	; 0x40d00000  6.5
 8008bfe:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8008c02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c06:	bf94      	ite	ls
 8008c08:	2311      	movls	r3, #17
 8008c0a:	230f      	movhi	r3, #15
 8008c0c:	e7d9      	b.n	8008bc2 <_ZN19MainInfotaimentView8setP_OilEf+0x26>
 8008c0e:	bf00      	nop
 8008c10:	080299d6 	.word	0x080299d6

08008c14 <_ZN19MainInfotaimentView18setOrinTemperatureEf>:
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 8008c14:	b530      	push	{r4, r5, lr}
  if (orinTemperature <= ORIN_T_OK_VAL)
 8008c16:	eddf 7a18 	vldr	s15, [pc, #96]	; 8008c78 <_ZN19MainInfotaimentView18setOrinTemperatureEf+0x64>
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 8008c1a:	ed2d 8b02 	vpush	{d8}
  if (orinTemperature <= ORIN_T_OK_VAL)
 8008c1e:	eeb4 0ae7 	vcmpe.f32	s0, s15
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_OK_ID));
 8008c22:	f500 559e 	add.w	r5, r0, #5056	; 0x13c0
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 8008c26:	b083      	sub	sp, #12
  if (orinTemperature <= ORIN_T_OK_VAL)
 8008c28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_OK_ID));
 8008c2c:	f105 0508 	add.w	r5, r5, #8
 8008c30:	bf94      	ite	ls
 8008c32:	2316      	movls	r3, #22
 8008c34:	2315      	movhi	r3, #21
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 8008c36:	4604      	mov	r4, r0
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_HIGH_ID));
 8008c38:	a901      	add	r1, sp, #4
 8008c3a:	4628      	mov	r0, r5
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 8008c3c:	eeb0 8a40 	vmov.f32	s16, s0
 8008c40:	f8ad 3004 	strh.w	r3, [sp, #4]
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_HIGH_ID));
 8008c44:	f009 fc28 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008c48:	f504 50c0 	add.w	r0, r4, #6144	; 0x1800
 8008c4c:	4a0b      	ldr	r2, [pc, #44]	; (8008c7c <_ZN19MainInfotaimentView18setOrinTemperatureEf+0x68>)
 8008c4e:	ed8d 8a01 	vstr	s16, [sp, #4]
 8008c52:	ab01      	add	r3, sp, #4
 8008c54:	2104      	movs	r1, #4
 8008c56:	3014      	adds	r0, #20
 8008c58:	f00f fc7a 	bl	8018550 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
  imgTOrin.invalidate();
 8008c5c:	4628      	mov	r0, r5
 8008c5e:	f00d fa03 	bl	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
  txtTOrin.invalidate();
 8008c62:	f504 50a1 	add.w	r0, r4, #5152	; 0x1420
 8008c66:	3008      	adds	r0, #8
}
 8008c68:	b003      	add	sp, #12
 8008c6a:	ecbd 8b02 	vpop	{d8}
 8008c6e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  txtTOrin.invalidate();
 8008c72:	f00d b9f9 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008c76:	bf00      	nop
 8008c78:	428c0000 	.word	0x428c0000
 8008c7c:	08029ac0 	.word	0x08029ac0

08008c80 <_ZN19MainInfotaimentView13setVoltage24vEf>:
void MainInfotaimentView::setVoltage24v(float voltage24v) {
 8008c80:	b530      	push	{r4, r5, lr}
  if (voltage24v <= VOLTAGE_24V_LOW_VAL)
 8008c82:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8008cf0 <_ZN19MainInfotaimentView13setVoltage24vEf+0x70>
void MainInfotaimentView::setVoltage24v(float voltage24v) {
 8008c86:	ed2d 8b02 	vpush	{d8}
  if (voltage24v <= VOLTAGE_24V_LOW_VAL)
 8008c8a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8008c8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
void MainInfotaimentView::setVoltage24v(float voltage24v) {
 8008c92:	b083      	sub	sp, #12
 8008c94:	4604      	mov	r4, r0
 8008c96:	eeb0 8a40 	vmov.f32	s16, s0
		img24v.setBitmap(touchgfx::Bitmap(BITMAP_24V_LOW_ID));
 8008c9a:	f500 55a5 	add.w	r5, r0, #5280	; 0x14a0
  if (voltage24v <= VOLTAGE_24V_LOW_VAL)
 8008c9e:	d81c      	bhi.n	8008cda <_ZN19MainInfotaimentView13setVoltage24vEf+0x5a>
 8008ca0:	2306      	movs	r3, #6
    img24v.setBitmap(touchgfx::Bitmap(BITMAP_24V_HIGH_ID));
 8008ca2:	a901      	add	r1, sp, #4
 8008ca4:	4628      	mov	r0, r5
 8008ca6:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008caa:	f009 fbf5 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008cae:	f504 50c0 	add.w	r0, r4, #6144	; 0x1800
 8008cb2:	4a10      	ldr	r2, [pc, #64]	; (8008cf4 <_ZN19MainInfotaimentView13setVoltage24vEf+0x74>)
 8008cb4:	ed8d 8a01 	vstr	s16, [sp, #4]
 8008cb8:	ab01      	add	r3, sp, #4
 8008cba:	2106      	movs	r1, #6
 8008cbc:	301c      	adds	r0, #28
 8008cbe:	f00f fc47 	bl	8018550 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
  img24v.invalidate();
 8008cc2:	4628      	mov	r0, r5
 8008cc4:	f00d f9d0 	bl	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
  txt24v.invalidate();
 8008cc8:	f504 50a8 	add.w	r0, r4, #5376	; 0x1500
}
 8008ccc:	b003      	add	sp, #12
 8008cce:	ecbd 8b02 	vpop	{d8}
 8008cd2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  txt24v.invalidate();
 8008cd6:	f00d b9c7 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
  else if (voltage24v <= VOLTAGE_24V_OK_VAL)  
 8008cda:	eef3 7a0b 	vmov.f32	s15, #59	; 0x41d80000  27.0
 8008cde:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8008ce2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008ce6:	bf94      	ite	ls
 8008ce8:	2307      	movls	r3, #7
 8008cea:	2305      	movhi	r3, #5
 8008cec:	e7d9      	b.n	8008ca2 <_ZN19MainInfotaimentView13setVoltage24vEf+0x22>
 8008cee:	bf00      	nop
 8008cf0:	41bc0000 	.word	0x41bc0000
 8008cf4:	08029ac4 	.word	0x08029ac4

08008cf8 <_ZN19MainInfotaimentView12setBattery_VEf>:
{
 8008cf8:	b530      	push	{r4, r5, lr}
	if (battery_v <= BATTERY_V_LOW_VAL )
 8008cfa:	eef2 7a07 	vmov.f32	s15, #39	; 0x41380000  11.5
{
 8008cfe:	ed2d 8b02 	vpush	{d8}
	if (battery_v <= BATTERY_V_LOW_VAL )
 8008d02:	eeb4 0ae7 	vcmpe.f32	s0, s15
    imgBatteryV.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_LOW_ID));
 8008d06:	f500 54a3 	add.w	r4, r0, #5216	; 0x1460
	if (battery_v <= BATTERY_V_LOW_VAL )
 8008d0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
{
 8008d0e:	b083      	sub	sp, #12
 8008d10:	4605      	mov	r5, r0
 8008d12:	eeb0 8a40 	vmov.f32	s16, s0
    imgBatteryV.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_LOW_ID));
 8008d16:	f104 0414 	add.w	r4, r4, #20
	if (battery_v <= BATTERY_V_LOW_VAL )
 8008d1a:	d81d      	bhi.n	8008d58 <_ZN19MainInfotaimentView12setBattery_VEf+0x60>
 8008d1c:	2306      	movs	r3, #6
    imgBatteryV.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_HIGH_ID));
 8008d1e:	a901      	add	r1, sp, #4
 8008d20:	4620      	mov	r0, r4
 8008d22:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008d26:	f009 fbb7 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008d2a:	f505 50bf 	add.w	r0, r5, #6112	; 0x17e0
 8008d2e:	4a14      	ldr	r2, [pc, #80]	; (8008d80 <_ZN19MainInfotaimentView12setBattery_VEf+0x88>)
 8008d30:	ed8d 8a01 	vstr	s16, [sp, #4]
 8008d34:	ab01      	add	r3, sp, #4
 8008d36:	2106      	movs	r1, #6
 8008d38:	301c      	adds	r0, #28
 8008d3a:	f00f fc09 	bl	8018550 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtBattery_V.invalidate();
 8008d3e:	f505 5093 	add.w	r0, r5, #4704	; 0x1260
 8008d42:	3018      	adds	r0, #24
 8008d44:	f00d f990 	bl	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	imgBatteryV.invalidate();
 8008d48:	4620      	mov	r0, r4
}
 8008d4a:	b003      	add	sp, #12
 8008d4c:	ecbd 8b02 	vpop	{d8}
 8008d50:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	imgBatteryV.invalidate();
 8008d54:	f00d b988 	b.w	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if (battery_v <= BATTERY_V_OK_VAL )
 8008d58:	ee10 0a10 	vmov	r0, s0
 8008d5c:	f7f7 fd2e 	bl	80007bc <__aeabi_f2d>
 8008d60:	a305      	add	r3, pc, #20	; (adr r3, 8008d78 <_ZN19MainInfotaimentView12setBattery_VEf+0x80>)
 8008d62:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d66:	f7f7 fdeb 	bl	8000940 <__aeabi_dcmple>
 8008d6a:	b108      	cbz	r0, 8008d70 <_ZN19MainInfotaimentView12setBattery_VEf+0x78>
 8008d6c:	2307      	movs	r3, #7
 8008d6e:	e7d6      	b.n	8008d1e <_ZN19MainInfotaimentView12setBattery_VEf+0x26>
 8008d70:	2305      	movs	r3, #5
 8008d72:	e7d4      	b.n	8008d1e <_ZN19MainInfotaimentView12setBattery_VEf+0x26>
 8008d74:	f3af 8000 	nop.w
 8008d78:	cccccccd 	.word	0xcccccccd
 8008d7c:	402ccccc 	.word	0x402ccccc
 8008d80:	08029ac4 	.word	0x08029ac4

08008d84 <_ZN22MissionSelectPresenterD1Ev>:

    void requestMission(MmrMission type);

    void requestChassisReset();

    virtual ~MissionSelectPresenter() {};
 8008d84:	4770      	bx	lr

08008d86 <_ZThn4_N22MissionSelectPresenterD1Ev>:
 8008d86:	3804      	subs	r0, #4
 8008d88:	4770      	bx	lr

08008d8a <_ZN22MissionSelectPresenter10deactivateEv>:


void MissionSelectPresenter::activate()
{

}
 8008d8a:	4770      	bx	lr

08008d8c <_ZN22MissionSelectPresenterD0Ev>:
 8008d8c:	b510      	push	{r4, lr}
 8008d8e:	2110      	movs	r1, #16
 8008d90:	4604      	mov	r4, r0
 8008d92:	f01d fc15 	bl	80265c0 <_ZdlPvj>
 8008d96:	4620      	mov	r0, r4
 8008d98:	bd10      	pop	{r4, pc}

08008d9a <_ZThn4_N22MissionSelectPresenterD0Ev>:
 8008d9a:	f1a0 0004 	sub.w	r0, r0, #4
 8008d9e:	e7f5      	b.n	8008d8c <_ZN22MissionSelectPresenterD0Ev>

08008da0 <_ZN22MissionSelectPresenterC1ER17MissionSelectView>:
MissionSelectPresenter::MissionSelectPresenter(MissionSelectView& v)
 8008da0:	b510      	push	{r4, lr}
 8008da2:	2200      	movs	r2, #0
 8008da4:	6082      	str	r2, [r0, #8]
    : view(v)
 8008da6:	4a04      	ldr	r2, [pc, #16]	; (8008db8 <_ZN22MissionSelectPresenterC1ER17MissionSelectView+0x18>)
 8008da8:	60c1      	str	r1, [r0, #12]
 8008daa:	f102 0408 	add.w	r4, r2, #8
 8008dae:	3220      	adds	r2, #32
 8008db0:	6004      	str	r4, [r0, #0]
 8008db2:	6042      	str	r2, [r0, #4]
}
 8008db4:	bd10      	pop	{r4, pc}
 8008db6:	bf00      	nop
 8008db8:	08029b00 	.word	0x08029b00

08008dbc <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>:

}

void MissionSelectPresenter::requestMission(MmrMission missionType)
{
    model->requestMission(missionType);
 8008dbc:	6880      	ldr	r0, [r0, #8]
 8008dbe:	f000 b8ed 	b.w	8008f9c <_ZN5Model14requestMissionE10MmrMission>

08008dc2 <_ZN22MissionSelectPresenter19requestChassisResetEv>:
}

void MissionSelectPresenter::requestChassisReset() {
    model->requestChassisReset();
 8008dc2:	6880      	ldr	r0, [r0, #8]
 8008dc4:	f000 b8c8 	b.w	8008f58 <_ZN5Model19requestChassisResetEv>

08008dc8 <_ZN17MissionSelectView14tearDownScreenEv>:

}

void MissionSelectView::tearDownScreen() {
    MissionSelectViewBase::tearDownScreen();
}
 8008dc8:	4770      	bx	lr

08008dca <_ZN17MissionSelectView21onChassisResetClickedEv>:
    presenter->requestChassisReset();
 8008dca:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008dcc:	f7ff bff9 	b.w	8008dc2 <_ZN22MissionSelectPresenter19requestChassisResetEv>

08008dd0 <_ZN17MissionSelectView16onIdleBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_IDLE);
 8008dd0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008dd2:	2100      	movs	r1, #0
 8008dd4:	f7ff bff2 	b.w	8008dbc <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008dd8 <_ZN17MissionSelectView24onAccelerationBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_ACCELERATION);
 8008dd8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008dda:	2101      	movs	r1, #1
 8008ddc:	f7ff bfee 	b.w	8008dbc <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008de0 <_ZN17MissionSelectView19onSkidpadBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_SKIDPAD);
 8008de0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008de2:	2102      	movs	r1, #2
 8008de4:	f7ff bfea 	b.w	8008dbc <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008de8 <_ZN17MissionSelectView21onAutocrossBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_AUTOCROSS);
 8008de8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008dea:	2103      	movs	r1, #3
 8008dec:	f7ff bfe6 	b.w	8008dbc <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008df0 <_ZN17MissionSelectView22onTrackdriveBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_TRACKDRIVE);
 8008df0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008df2:	2104      	movs	r1, #4
 8008df4:	f7ff bfe2 	b.w	8008dbc <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008df8 <_ZN17MissionSelectView19onEbsTestBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_EBS_TEST);
 8008df8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008dfa:	2105      	movs	r1, #5
 8008dfc:	f7ff bfde 	b.w	8008dbc <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008e00 <_ZN17MissionSelectView22onInspectionBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_INSPECTION);
 8008e00:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008e02:	2106      	movs	r1, #6
 8008e04:	f7ff bfda 	b.w	8008dbc <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008e08 <_ZN17MissionSelectView18onManualBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_MANUAL);
 8008e08:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008e0a:	2107      	movs	r1, #7
 8008e0c:	f7ff bfd6 	b.w	8008dbc <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008e10 <_ZN17MissionSelectView17onDebugBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_DEBUG);
 8008e10:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008e12:	2108      	movs	r1, #8
 8008e14:	f7ff bfd2 	b.w	8008dbc <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008e18 <_ZN17MissionSelectViewD1Ev>:
class MissionSelectView : public MissionSelectViewBase
{
public:
    MissionSelectView();
    
    virtual ~MissionSelectView() {}
 8008e18:	b510      	push	{r4, lr}
 8008e1a:	4b03      	ldr	r3, [pc, #12]	; (8008e28 <_ZN17MissionSelectViewD1Ev+0x10>)
 8008e1c:	6003      	str	r3, [r0, #0]
 8008e1e:	4604      	mov	r4, r0
 8008e20:	f7fe f9a0 	bl	8007164 <_ZN21MissionSelectViewBaseD1Ev>
 8008e24:	4620      	mov	r0, r4
 8008e26:	bd10      	pop	{r4, pc}
 8008e28:	08029b40 	.word	0x08029b40

08008e2c <_ZN17MissionSelectViewD0Ev>:
 8008e2c:	b510      	push	{r4, lr}
 8008e2e:	4604      	mov	r4, r0
 8008e30:	f7ff fff2 	bl	8008e18 <_ZN17MissionSelectViewD1Ev>
 8008e34:	4620      	mov	r0, r4
 8008e36:	f240 418c 	movw	r1, #1164	; 0x48c
 8008e3a:	f01d fbc1 	bl	80265c0 <_ZdlPvj>
 8008e3e:	4620      	mov	r0, r4
 8008e40:	bd10      	pop	{r4, pc}
	...

08008e44 <_ZN17MissionSelectViewC1Ev>:
MissionSelectView::MissionSelectView() {
 8008e44:	b510      	push	{r4, lr}
 8008e46:	4604      	mov	r4, r0
 8008e48:	f7fe fb48 	bl	80074dc <_ZN21MissionSelectViewBaseC1Ev>
 8008e4c:	4b01      	ldr	r3, [pc, #4]	; (8008e54 <_ZN17MissionSelectViewC1Ev+0x10>)
 8008e4e:	6023      	str	r3, [r4, #0]
}
 8008e50:	4620      	mov	r0, r4
 8008e52:	bd10      	pop	{r4, pc}
 8008e54:	08029b40 	.word	0x08029b40

08008e58 <_ZN17MissionSelectView11setupScreenEv>:
    MissionSelectViewBase::setupScreen();
 8008e58:	f7fe b985 	b.w	8007166 <_ZN21MissionSelectViewBase11setupScreenEv>

08008e5c <_ZN5ModelC1Ev>:
#include <gui/model/ModelListener.hpp>
#include <string.h>

displayInfo info;

Model::Model() : modelListener(0)
 8008e5c:	b538      	push	{r3, r4, r5, lr}
 8008e5e:	4604      	mov	r4, r0
 8008e60:	2500      	movs	r5, #0
 8008e62:	f840 5b17 	str.w	r5, [r0], #23
 8008e66:	4906      	ldr	r1, [pc, #24]	; (8008e80 <_ZN5ModelC1Ev+0x24>)
 8008e68:	2287      	movs	r2, #135	; 0x87
 8008e6a:	f01d fc55 	bl	8026718 <memcpy>
{
	dbgMessage = nullptr;
	strncpy(mission, "None", MAX_MISSION_LEN);
 8008e6e:	4905      	ldr	r1, [pc, #20]	; (8008e84 <_ZN5ModelC1Ev+0x28>)
	dbgMessage = nullptr;
 8008e70:	6065      	str	r5, [r4, #4]
	strncpy(mission, "None", MAX_MISSION_LEN);
 8008e72:	220f      	movs	r2, #15
 8008e74:	f104 0008 	add.w	r0, r4, #8
 8008e78:	f01e f886 	bl	8026f88 <strncpy>
}
 8008e7c:	4620      	mov	r0, r4
 8008e7e:	bd38      	pop	{r3, r4, r5, pc}
 8008e80:	080277bc 	.word	0x080277bc
 8008e84:	08029b94 	.word	0x08029b94

08008e88 <_ZN5Model4tickEv>:
extern osMessageQueueId_t dbgMsgQueue;
extern osMessageQueueId_t guiToMainMsgQueue;
extern osMessageQueueId_t mainToGuiMsgQueue;

void Model::tick()
{
 8008e88:	b570      	push	{r4, r5, r6, lr}
	osStatus_t status;
	
	status = osMessageQueueGet(mainToGuiMsgQueue, &info, NULL, 0);
 8008e8a:	4d2f      	ldr	r5, [pc, #188]	; (8008f48 <_ZN5Model4tickEv+0xc0>)
{
 8008e8c:	4604      	mov	r4, r0
	status = osMessageQueueGet(mainToGuiMsgQueue, &info, NULL, 0);
 8008e8e:	482f      	ldr	r0, [pc, #188]	; (8008f4c <_ZN5Model4tickEv+0xc4>)
 8008e90:	2300      	movs	r3, #0
 8008e92:	6800      	ldr	r0, [r0, #0]
 8008e94:	461a      	mov	r2, r3
 8008e96:	4629      	mov	r1, r5
 8008e98:	f004 f9cd 	bl	800d236 <osMessageQueueGet>
	if (status == osOK)
 8008e9c:	2800      	cmp	r0, #0
 8008e9e:	d143      	bne.n	8008f28 <_ZN5Model4tickEv+0xa0>
	{
		setGear(info.gear);
 8008ea0:	786b      	ldrb	r3, [r5, #1]
 8008ea2:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
		setSpeed(info.speed);
 8008ea6:	782b      	ldrb	r3, [r5, #0]
 8008ea8:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
		setRpm(info.rpm);
 8008eac:	886b      	ldrh	r3, [r5, #2]
 8008eae:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8

		setT_water(info.T_water);
 8008eb2:	792b      	ldrb	r3, [r5, #4]
 8008eb4:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
		setT_oil(info.T_oil);
 8008eb8:	796b      	ldrb	r3, [r5, #5]
 8008eba:	f8c4 30b0 	str.w	r3, [r4, #176]	; 0xb0
    void setP_oil(float recvP_oil) { P_oil= recvP_oil; }
 8008ebe:	68ab      	ldr	r3, [r5, #8]
 8008ec0:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
		setP_oil(info.P_oil);

		setThrottle_perc(info.throttle_perc);
 8008ec4:	79ab      	ldrb	r3, [r5, #6]
 8008ec6:	f8c4 30b4 	str.w	r3, [r4, #180]	; 0xb4
    void setRES(int recvRES) { RES = recvRES; }
 8008eca:	68eb      	ldr	r3, [r5, #12]
 8008ecc:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
    void setLC(bool recvLC) { LC= recvLC; }
 8008ed0:	8a2b      	ldrh	r3, [r5, #16]
 8008ed2:	f8a4 30d4 	strh.w	r3, [r4, #212]	; 0xd4
    void setBattery_v(float recvBattery_v) { battery_v = recvBattery_v; }
 8008ed6:	696b      	ldr	r3, [r5, #20]
 8008ed8:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
    void setOrinTemperature(float recvOrinTemperature) { orinTemperature = recvOrinTemperature; }
 8008edc:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8008ede:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
    void setVoltage24v(float recvVoltage24v) { voltage24v = recvVoltage24v; }
 8008ee2:	6a2b      	ldr	r3, [r5, #32]
 8008ee4:	f8c4 30dc 	str.w	r3, [r4, #220]	; 0xdc
		setBattery_v(info.battery_v);

		setOrinTemperature(info.orinTemperature);
		setVoltage24v(info.voltage24v);

		setRearBrakePerc(info.brakePressureRear * (100.0 / 160.0));
 8008ee8:	69e8      	ldr	r0, [r5, #28]
 8008eea:	f7f7 fc67 	bl	80007bc <__aeabi_f2d>
 8008eee:	4b18      	ldr	r3, [pc, #96]	; (8008f50 <_ZN5Model4tickEv+0xc8>)
 8008ef0:	2200      	movs	r2, #0
 8008ef2:	f7f7 f9d5 	bl	80002a0 <__aeabi_dmul>
 8008ef6:	f7f7 fd41 	bl	800097c <__aeabi_d2iz>
 8008efa:	f8c4 00bc 	str.w	r0, [r4, #188]	; 0xbc
		setFrontBrakePerc(info.brakePressureFront * (100.0 / 160.0));
 8008efe:	69a8      	ldr	r0, [r5, #24]
 8008f00:	f7f7 fc5c 	bl	80007bc <__aeabi_f2d>
 8008f04:	4b12      	ldr	r3, [pc, #72]	; (8008f50 <_ZN5Model4tickEv+0xc8>)
 8008f06:	2200      	movs	r2, #0
 8008f08:	f7f7 f9ca 	bl	80002a0 <__aeabi_dmul>
 8008f0c:	f7f7 fd36 	bl	800097c <__aeabi_d2iz>
    void setLap(int lap_recv) { lap = lap_recv; }
 8008f10:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8008f12:	f8c4 00b8 	str.w	r0, [r4, #184]	; 0xb8
		setLap(info.lap);
		setP_Fuel(info.P_fuel);

		/* TODO: String variables */

		modelListener->infoChanged();
 8008f16:	6820      	ldr	r0, [r4, #0]
 8008f18:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    void setP_Fuel(float recvP_fuel) { P_fuel = recvP_fuel; }
 8008f1c:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8008f1e:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8008f22:	6803      	ldr	r3, [r0, #0]
 8008f24:	68db      	ldr	r3, [r3, #12]
 8008f26:	4798      	blx	r3
	}

	status = osMessageQueueGet(dbgMsgQueue, &dbgMessage, NULL, 0);
 8008f28:	480a      	ldr	r0, [pc, #40]	; (8008f54 <_ZN5Model4tickEv+0xcc>)
 8008f2a:	2300      	movs	r3, #0
 8008f2c:	6800      	ldr	r0, [r0, #0]
 8008f2e:	461a      	mov	r2, r3
 8008f30:	1d21      	adds	r1, r4, #4
 8008f32:	f004 f980 	bl	800d236 <osMessageQueueGet>
	if (status == osOK)
 8008f36:	b928      	cbnz	r0, 8008f44 <_ZN5Model4tickEv+0xbc>
		modelListener->debugMessageChanged();
 8008f38:	6820      	ldr	r0, [r4, #0]
 8008f3a:	6803      	ldr	r3, [r0, #0]

}
 8008f3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		modelListener->debugMessageChanged();
 8008f40:	691b      	ldr	r3, [r3, #16]
 8008f42:	4718      	bx	r3
}
 8008f44:	bd70      	pop	{r4, r5, r6, pc}
 8008f46:	bf00      	nop
 8008f48:	20005fa4 	.word	0x20005fa4
 8008f4c:	20005d68 	.word	0x20005d68
 8008f50:	3fe40000 	.word	0x3fe40000
 8008f54:	20005b24 	.word	0x20005b24

08008f58 <_ZN5Model19requestChassisResetEv>:

  osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
  commonAfterRequestMission(missionType);
}

void Model::requestChassisReset() {
 8008f58:	b507      	push	{r0, r1, r2, lr}
  guiToMainMsg msg {
		.type = GUI_TO_MAIN_MSG_CHASSISRESET
	};

	osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008f5a:	4807      	ldr	r0, [pc, #28]	; (8008f78 <_ZN5Model19requestChassisResetEv+0x20>)
  guiToMainMsg msg {
 8008f5c:	2300      	movs	r3, #0
 8008f5e:	2202      	movs	r2, #2
 8008f60:	f88d 2004 	strb.w	r2, [sp, #4]
	osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008f64:	a901      	add	r1, sp, #4
 8008f66:	461a      	mov	r2, r3
 8008f68:	6800      	ldr	r0, [r0, #0]
  guiToMainMsg msg {
 8008f6a:	f88d 3005 	strb.w	r3, [sp, #5]
	osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008f6e:	f004 f932 	bl	800d1d6 <osMessageQueuePut>
}
 8008f72:	b003      	add	sp, #12
 8008f74:	f85d fb04 	ldr.w	pc, [sp], #4
 8008f78:	20005b2c 	.word	0x20005b2c

08008f7c <_ZN5Model25commonAfterRequestMissionE10MmrMission>:


#endif

void Model::commonAfterRequestMission(MmrMission missionType) {
	strncpy(mission, missionTranslation[missionType], MAX_MISSION_LEN),
 8008f7c:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
void Model::commonAfterRequestMission(MmrMission missionType) {
 8008f80:	b510      	push	{r4, lr}
	strncpy(mission, missionTranslation[missionType], MAX_MISSION_LEN),
 8008f82:	3117      	adds	r1, #23
void Model::commonAfterRequestMission(MmrMission missionType) {
 8008f84:	4604      	mov	r4, r0
	strncpy(mission, missionTranslation[missionType], MAX_MISSION_LEN),
 8008f86:	4401      	add	r1, r0
 8008f88:	220f      	movs	r2, #15
 8008f8a:	3008      	adds	r0, #8
 8008f8c:	f01d fffc 	bl	8026f88 <strncpy>
	modelListener->missionChanged();
 8008f90:	6820      	ldr	r0, [r4, #0]
 8008f92:	6803      	ldr	r3, [r0, #0]
}
 8008f94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	modelListener->missionChanged();
 8008f98:	695b      	ldr	r3, [r3, #20]
 8008f9a:	4718      	bx	r3

08008f9c <_ZN5Model14requestMissionE10MmrMission>:
void Model::requestMission(MmrMission missionType) {
 8008f9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008f9e:	4605      	mov	r5, r0
  osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008fa0:	4808      	ldr	r0, [pc, #32]	; (8008fc4 <_ZN5Model14requestMissionE10MmrMission+0x28>)
	msg.content.selectedMission = missionType;
 8008fa2:	f88d 1005 	strb.w	r1, [sp, #5]
	msg.type = GUI_TO_MAIN_MSG_MISSIONSELECT;
 8008fa6:	2300      	movs	r3, #0
void Model::requestMission(MmrMission missionType) {
 8008fa8:	460c      	mov	r4, r1
  osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008faa:	461a      	mov	r2, r3
 8008fac:	a901      	add	r1, sp, #4
 8008fae:	6800      	ldr	r0, [r0, #0]
	msg.type = GUI_TO_MAIN_MSG_MISSIONSELECT;
 8008fb0:	f88d 3004 	strb.w	r3, [sp, #4]
  osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008fb4:	f004 f90f 	bl	800d1d6 <osMessageQueuePut>
  commonAfterRequestMission(missionType);
 8008fb8:	4621      	mov	r1, r4
 8008fba:	4628      	mov	r0, r5
 8008fbc:	f7ff ffde 	bl	8008f7c <_ZN5Model25commonAfterRequestMissionE10MmrMission>
}
 8008fc0:	b003      	add	sp, #12
 8008fc2:	bd30      	pop	{r4, r5, pc}
 8008fc4:	20005b2c 	.word	0x20005b2c

08008fc8 <_ZN16StartupPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartupPresenter() {};
 8008fc8:	4770      	bx	lr

08008fca <_ZThn4_N16StartupPresenterD1Ev>:
 8008fca:	3804      	subs	r0, #4
 8008fcc:	4770      	bx	lr

08008fce <_ZN16StartupPresenter10deactivateEv>:
}

void StartupPresenter::activate()
{

}
 8008fce:	4770      	bx	lr

08008fd0 <_ZN16StartupPresenterD0Ev>:
 8008fd0:	b510      	push	{r4, lr}
 8008fd2:	2110      	movs	r1, #16
 8008fd4:	4604      	mov	r4, r0
 8008fd6:	f01d faf3 	bl	80265c0 <_ZdlPvj>
 8008fda:	4620      	mov	r0, r4
 8008fdc:	bd10      	pop	{r4, pc}

08008fde <_ZThn4_N16StartupPresenterD0Ev>:
 8008fde:	f1a0 0004 	sub.w	r0, r0, #4
 8008fe2:	e7f5      	b.n	8008fd0 <_ZN16StartupPresenterD0Ev>

08008fe4 <_ZN16StartupPresenterC1ER11StartupView>:
StartupPresenter::StartupPresenter(StartupView& v)
 8008fe4:	b510      	push	{r4, lr}
 8008fe6:	2200      	movs	r2, #0
 8008fe8:	6082      	str	r2, [r0, #8]
    : view(v)
 8008fea:	4a04      	ldr	r2, [pc, #16]	; (8008ffc <_ZN16StartupPresenterC1ER11StartupView+0x18>)
 8008fec:	60c1      	str	r1, [r0, #12]
 8008fee:	f102 0408 	add.w	r4, r2, #8
 8008ff2:	3220      	adds	r2, #32
 8008ff4:	6004      	str	r4, [r0, #0]
 8008ff6:	6042      	str	r2, [r0, #4]
}
 8008ff8:	bd10      	pop	{r4, pc}
 8008ffa:	bf00      	nop
 8008ffc:	08029b9c 	.word	0x08029b9c

08009000 <_ZN11StartupView14tearDownScreenEv>:
}

void StartupView::tearDownScreen()
{
    StartupViewBase::tearDownScreen();
}
 8009000:	4770      	bx	lr
	...

08009004 <_ZN11StartupViewD1Ev>:

class StartupView : public StartupViewBase
{
public:
    StartupView();
    virtual ~StartupView() {}
 8009004:	b510      	push	{r4, lr}
 8009006:	4b03      	ldr	r3, [pc, #12]	; (8009014 <_ZN11StartupViewD1Ev+0x10>)
 8009008:	6003      	str	r3, [r0, #0]
 800900a:	4604      	mov	r4, r0
 800900c:	f7fe fcee 	bl	80079ec <_ZN15StartupViewBaseD1Ev>
 8009010:	4620      	mov	r0, r4
 8009012:	bd10      	pop	{r4, pc}
 8009014:	08029bdc 	.word	0x08029bdc

08009018 <_ZN11StartupViewD0Ev>:
 8009018:	b510      	push	{r4, lr}
 800901a:	4604      	mov	r4, r0
 800901c:	f7ff fff2 	bl	8009004 <_ZN11StartupViewD1Ev>
 8009020:	4620      	mov	r0, r4
 8009022:	21e4      	movs	r1, #228	; 0xe4
 8009024:	f01d facc 	bl	80265c0 <_ZdlPvj>
 8009028:	4620      	mov	r0, r4
 800902a:	bd10      	pop	{r4, pc}

0800902c <_ZN11StartupViewC1Ev>:
StartupView::StartupView()
 800902c:	b510      	push	{r4, lr}
 800902e:	4604      	mov	r4, r0
 8009030:	f7fe fcfa 	bl	8007a28 <_ZN15StartupViewBaseC1Ev>
 8009034:	4b01      	ldr	r3, [pc, #4]	; (800903c <_ZN11StartupViewC1Ev+0x10>)
 8009036:	6023      	str	r3, [r4, #0]
}
 8009038:	4620      	mov	r0, r4
 800903a:	bd10      	pop	{r4, pc}
 800903c:	08029bdc 	.word	0x08029bdc

08009040 <_ZN11StartupView11setupScreenEv>:
    StartupViewBase::setupScreen();
 8009040:	f7fe bcd5 	b.w	80079ee <_ZN15StartupViewBase11setupScreenEv>

08009044 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8009044:	4770      	bx	lr

08009046 <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 8009046:	2000      	movs	r0, #0
 8009048:	4770      	bx	lr

0800904a <ft6x06_ReadID>:
{
 800904a:	b510      	push	{r4, lr}
 800904c:	4604      	mov	r4, r0
  TS_IO_Init();
 800904e:	f000 fa95 	bl	800957c <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8009052:	21a8      	movs	r1, #168	; 0xa8
 8009054:	b2e0      	uxtb	r0, r4
 8009056:	f000 faad 	bl	80095b4 <TS_IO_Read>
}
 800905a:	b280      	uxth	r0, r0
 800905c:	bd10      	pop	{r4, pc}
	...

08009060 <ft6x06_TS_DetectTouch>:
{
 8009060:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8009062:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8009064:	2102      	movs	r1, #2
 8009066:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8009068:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 800906c:	f000 faa2 	bl	80095b4 <TS_IO_Read>
 8009070:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8009074:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8009078:	f003 030f 	and.w	r3, r3, #15
 800907c:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8009080:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8009084:	2b02      	cmp	r3, #2
    nbTouch = 0;
 8009086:	bf88      	it	hi
 8009088:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 800908c:	4b04      	ldr	r3, [pc, #16]	; (80090a0 <ft6x06_TS_DetectTouch+0x40>)
 800908e:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8009092:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8009096:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8009098:	2200      	movs	r2, #0
 800909a:	709a      	strb	r2, [r3, #2]
}
 800909c:	b002      	add	sp, #8
 800909e:	bd10      	pop	{r4, pc}
 80090a0:	20005fd6 	.word	0x20005fd6

080090a4 <ft6x06_TS_GetXY>:
{
 80090a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80090a6:	4c15      	ldr	r4, [pc, #84]	; (80090fc <ft6x06_TS_GetXY+0x58>)
{
 80090a8:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80090aa:	78a3      	ldrb	r3, [r4, #2]
 80090ac:	7862      	ldrb	r2, [r4, #1]
 80090ae:	429a      	cmp	r2, r3
{
 80090b0:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80090b2:	d91f      	bls.n	80090f4 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 80090b4:	b303      	cbz	r3, 80090f8 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 80090b6:	2b01      	cmp	r3, #1
 80090b8:	bf14      	ite	ne
 80090ba:	2100      	movne	r1, #0
 80090bc:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 80090be:	2304      	movs	r3, #4
 80090c0:	eb0d 0203 	add.w	r2, sp, r3
 80090c4:	b2c0      	uxtb	r0, r0
 80090c6:	f000 fa93 	bl	80095f0 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 80090ca:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80090ce:	f89d 2005 	ldrb.w	r2, [sp, #5]
 80090d2:	021b      	lsls	r3, r3, #8
 80090d4:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80090d8:	4313      	orrs	r3, r2
 80090da:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 80090dc:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80090e0:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80090e4:	021b      	lsls	r3, r3, #8
 80090e6:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80090ea:	4313      	orrs	r3, r2
 80090ec:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 80090ee:	78a3      	ldrb	r3, [r4, #2]
 80090f0:	3301      	adds	r3, #1
 80090f2:	70a3      	strb	r3, [r4, #2]
}
 80090f4:	b002      	add	sp, #8
 80090f6:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 80090f8:	2103      	movs	r1, #3
 80090fa:	e7e0      	b.n	80090be <ft6x06_TS_GetXY+0x1a>
 80090fc:	20005fd6 	.word	0x20005fd6

08009100 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8009100:	2201      	movs	r2, #1
 8009102:	21a4      	movs	r1, #164	; 0xa4
 8009104:	b2c0      	uxtb	r0, r0
 8009106:	f000 ba3b 	b.w	8009580 <TS_IO_Write>

0800910a <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 800910a:	2200      	movs	r2, #0
 800910c:	21a4      	movs	r1, #164	; 0xa4
 800910e:	b2c0      	uxtb	r0, r0
 8009110:	f000 ba36 	b.w	8009580 <TS_IO_Write>

08009114 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8009114:	f7ff bff9 	b.w	800910a <ft6x06_TS_DisableIT>

08009118 <ft6x06_TS_ClearIT>:
 8009118:	4770      	bx	lr
	...

0800911c <ft6x06_Init>:
{  
 800911c:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 800911e:	4b09      	ldr	r3, [pc, #36]	; (8009144 <ft6x06_Init+0x28>)
 8009120:	781a      	ldrb	r2, [r3, #0]
 8009122:	4290      	cmp	r0, r2
 8009124:	d00a      	beq.n	800913c <ft6x06_Init+0x20>
 8009126:	7859      	ldrb	r1, [r3, #1]
 8009128:	4288      	cmp	r0, r1
 800912a:	d007      	beq.n	800913c <ft6x06_Init+0x20>
 800912c:	b10a      	cbz	r2, 8009132 <ft6x06_Init+0x16>
 800912e:	b929      	cbnz	r1, 800913c <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8009130:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8009132:	5498      	strb	r0, [r3, r2]
}
 8009134:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8009138:	f000 ba20 	b.w	800957c <TS_IO_Init>
}
 800913c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009140:	4770      	bx	lr
 8009142:	bf00      	nop
 8009144:	20005fd4 	.word	0x20005fd4

08009148 <NT35510_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t NT35510_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8009148:	b530      	push	{r4, r5, lr}
 800914a:	4604      	mov	r4, r0
 800914c:	b0b1      	sub	sp, #196	; 0xc4
  NT35510_IO_Delay(120);
 800914e:	2078      	movs	r0, #120	; 0x78
{
 8009150:	460d      	mov	r5, r1
  NT35510_IO_Delay(120);
 8009152:	f000 fa65 	bl	8009620 <NT35510_IO_Delay>

/* ************************************************************************** */
/* Proprietary Initialization                                                 */
/* ************************************************************************** */
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 8009156:	4ba3      	ldr	r3, [pc, #652]	; (80093e4 <NT35510_Init+0x29c>)
  const uint8_t nt35510_reg1[]  = {0x03, 0x03, 0x03, 0xB0};
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
 8009158:	4aa3      	ldr	r2, [pc, #652]	; (80093e8 <NT35510_Init+0x2a0>)
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 800915a:	6818      	ldr	r0, [r3, #0]
 800915c:	889b      	ldrh	r3, [r3, #4]
 800915e:	f8ad 30b4 	strh.w	r3, [sp, #180]	; 0xb4
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
 8009162:	4ba2      	ldr	r3, [pc, #648]	; (80093ec <NT35510_Init+0x2a4>)
  const uint8_t nt35510_reg3[]  = {0x03, 0x03, 0x03, 0xB1};
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 8009164:	49a2      	ldr	r1, [pc, #648]	; (80093f0 <NT35510_Init+0x2a8>)
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 8009166:	902c      	str	r0, [sp, #176]	; 0xb0
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
 8009168:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 800916c:	4ba1      	ldr	r3, [pc, #644]	; (80093f4 <NT35510_Init+0x2ac>)
  const uint8_t nt35510_reg5[]  = {0x00, 0x00, 0x02, 0xB2};
  const uint8_t nt35510_reg6[]  = {0x26, 0x26, 0x26, 0xB8};
 800916e:	48a2      	ldr	r0, [pc, #648]	; (80093f8 <NT35510_Init+0x2b0>)
  const uint8_t nt35510_reg7[]  = {0xBF, 0x01};
  const uint8_t nt35510_reg8[]  = {0x09, 0x09, 0x09, 0xB3};
  const uint8_t nt35510_reg9[]  = {0x36, 0x36, 0x36, 0xB9};
 8009170:	f8df c2a4 	ldr.w	ip, [pc, #676]	; 8009418 <NT35510_Init+0x2d0>
  const uint8_t nt35510_reg10[] = {0x08, 0x08, 0x08, 0xB5};
  const uint8_t nt35510_reg12[] = {0x26, 0x26, 0x26, 0xBA};
 8009174:	f8df e2a4 	ldr.w	lr, [pc, #676]	; 800941c <NT35510_Init+0x2d4>
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 8009178:	e9cd 1316 	strd	r1, r3, [sp, #88]	; 0x58
  const uint8_t nt35510_reg6[]  = {0x26, 0x26, 0x26, 0xB8};
 800917c:	4b9f      	ldr	r3, [pc, #636]	; (80093fc <NT35510_Init+0x2b4>)
 800917e:	e9cd 0318 	strd	r0, r3, [sp, #96]	; 0x60
  const uint8_t nt35510_reg7[]  = {0xBF, 0x01};
 8009182:	f240 13bf 	movw	r3, #447	; 0x1bf
 8009186:	f8ad 3004 	strh.w	r3, [sp, #4]
  const uint8_t nt35510_reg9[]  = {0x36, 0x36, 0x36, 0xB9};
 800918a:	4b9d      	ldr	r3, [pc, #628]	; (8009400 <NT35510_Init+0x2b8>)
 800918c:	e9cd c31a 	strd	ip, r3, [sp, #104]	; 0x68
  const uint8_t nt35510_reg12[] = {0x26, 0x26, 0x26, 0xBA};
 8009190:	4b9c      	ldr	r3, [pc, #624]	; (8009404 <NT35510_Init+0x2bc>)
 8009192:	e9cd e31c 	strd	lr, r3, [sp, #112]	; 0x70
  const uint8_t nt35510_reg13[] = {0x00, 0x80, 0x00, 0xBC};
 8009196:	4b9c      	ldr	r3, [pc, #624]	; (8009408 <NT35510_Init+0x2c0>)
 8009198:	931e      	str	r3, [sp, #120]	; 0x78
  const uint8_t nt35510_reg14[] = {0x00, 0x80, 0x00, 0xBD};
 800919a:	f103 7380 	add.w	r3, r3, #16777216	; 0x1000000
 800919e:	931f      	str	r3, [sp, #124]	; 0x7c
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 80091a0:	4b9a      	ldr	r3, [pc, #616]	; (800940c <NT35510_Init+0x2c4>)
 80091a2:	789a      	ldrb	r2, [r3, #2]
 80091a4:	f88d 2046 	strb.w	r2, [sp, #70]	; 0x46
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 80091a8:	f8b3 2007 	ldrh.w	r2, [r3, #7]
 80091ac:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 80091b0:	7ada      	ldrb	r2, [r3, #11]
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 80091b2:	8819      	ldrh	r1, [r3, #0]
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 80091b4:	f88d 204a 	strb.w	r2, [sp, #74]	; 0x4a
  const uint8_t nt35510_reg18[] = {0xB6, 0x03};
 80091b8:	f240 32b6 	movw	r2, #950	; 0x3b6
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 80091bc:	f8d3 0003 	ldr.w	r0, [r3, #3]
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 80091c0:	f8ad 1044 	strh.w	r1, [sp, #68]	; 0x44
  const uint8_t nt35510_reg18[] = {0xB6, 0x03};
 80091c4:	f8ad 2008 	strh.w	r2, [sp, #8]
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 80091c8:	f8b3 1009 	ldrh.w	r1, [r3, #9]
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 80091cc:	902e      	str	r0, [sp, #184]	; 0xb8
  const uint8_t nt35510_reg19[] = {0xB5, 0x51};
 80091ce:	f245 12b5 	movw	r2, #20917	; 0x51b5
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 80091d2:	f8ad 1048 	strh.w	r1, [sp, #72]	; 0x48
  const uint8_t nt35510_reg19[] = {0xB5, 0x51};
 80091d6:	f8ad 200c 	strh.w	r2, [sp, #12]
  const uint8_t nt35510_reg20[] = {0x00, 0x00, 0xB7};
 80091da:	8999      	ldrh	r1, [r3, #12]
 80091dc:	7b9a      	ldrb	r2, [r3, #14]
 80091de:	f88d 204e 	strb.w	r2, [sp, #78]	; 0x4e
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 80091e2:	4a8b      	ldr	r2, [pc, #556]	; (8009410 <NT35510_Init+0x2c8>)
  const uint8_t nt35510_reg20[] = {0x00, 0x00, 0xB7};
 80091e4:	f8ad 104c 	strh.w	r1, [sp, #76]	; 0x4c
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 80091e8:	6810      	ldr	r0, [r2, #0]
 80091ea:	7912      	ldrb	r2, [r2, #4]
 80091ec:	f88d 208c 	strb.w	r2, [sp, #140]	; 0x8c
  const uint8_t nt35510_reg22[] = {0x00, 0x00, 0x00, 0xBC};
  const uint8_t nt35510_reg23[] = {0x03, 0x00, 0x00, 0xCC};
 80091f0:	4a88      	ldr	r2, [pc, #544]	; (8009414 <NT35510_Init+0x2cc>)
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 80091f2:	9022      	str	r0, [sp, #136]	; 0x88
  const uint8_t nt35510_reg23[] = {0x03, 0x00, 0x00, 0xCC};
 80091f4:	f04f 413c 	mov.w	r1, #3154116608	; 0xbc000000
 80091f8:	e9cd 1220 	strd	r1, r2, [sp, #128]	; 0x80
  const uint8_t nt35510_reg24[] = {0xBA, 0x01};
 80091fc:	f44f 72dd 	mov.w	r2, #442	; 0x1ba
 8009200:	f8ad 2010 	strh.w	r2, [sp, #16]
  const uint8_t nt35510_madctl_portrait[] = {NT35510_CMD_MADCTL ,0x00};
 8009204:	2236      	movs	r2, #54	; 0x36
  const uint8_t nt35510_caset_portrait[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_CASET};
 8009206:	f8d3 000f 	ldr.w	r0, [r3, #15]
  const uint8_t nt35510_madctl_portrait[] = {NT35510_CMD_MADCTL ,0x00};
 800920a:	f8ad 2014 	strh.w	r2, [sp, #20]
  const uint8_t nt35510_caset_portrait[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_CASET};
 800920e:	7cda      	ldrb	r2, [r3, #19]
 8009210:	9024      	str	r0, [sp, #144]	; 0x90
 8009212:	f88d 2094 	strb.w	r2, [sp, #148]	; 0x94
  const uint8_t nt35510_raset_portrait[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_RASET};
 8009216:	6958      	ldr	r0, [r3, #20]
 8009218:	7e1a      	ldrb	r2, [r3, #24]
 800921a:	9026      	str	r0, [sp, #152]	; 0x98
 800921c:	f88d 209c 	strb.w	r2, [sp, #156]	; 0x9c
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 8009220:	f8d3 0019 	ldr.w	r0, [r3, #25]
 8009224:	9028      	str	r0, [sp, #160]	; 0xa0
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
 8009226:	f246 0236 	movw	r2, #24630	; 0x6036
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 800922a:	f8d3 001e 	ldr.w	r0, [r3, #30]
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
 800922e:	f8ad 2018 	strh.w	r2, [sp, #24]
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 8009232:	7f5a      	ldrb	r2, [r3, #29]
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 8009234:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 8009238:	f88d 30ac 	strb.w	r3, [sp, #172]	; 0xac
  const uint8_t nt35510_reg26[] = {NT35510_CMD_TEEON, 0x00};  /* Tear on */
 800923c:	2335      	movs	r3, #53	; 0x35
 800923e:	f8ad 301c 	strh.w	r3, [sp, #28]
  const uint8_t nt35510_reg27[] = {NT35510_CMD_SLPOUT, 0x00}; /* Sleep out */
 8009242:	2311      	movs	r3, #17
 8009244:	f8ad 3020 	strh.w	r3, [sp, #32]
  const uint8_t nt35510_reg30[] = {NT35510_CMD_DISPON, 0x00};
 8009248:	2329      	movs	r3, #41	; 0x29
 800924a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24

  const uint8_t nt35510_reg31[] = {NT35510_CMD_WRDISBV, 0x7F};
 800924e:	f647 7351 	movw	r3, #32593	; 0x7f51
 8009252:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
  const uint8_t nt35510_reg32[] = {NT35510_CMD_WRCTRLD, 0x2C};
 8009256:	f642 4353 	movw	r3, #11347	; 0x2c53
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 800925a:	f88d 20a4 	strb.w	r2, [sp, #164]	; 0xa4
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 800925e:	902a      	str	r0, [sp, #168]	; 0xa8
  const uint8_t nt35510_reg32[] = {NT35510_CMD_WRCTRLD, 0x2C};
 8009260:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
  const uint8_t nt35510_reg33[] = {NT35510_CMD_WRCABC, 0x02};
 8009264:	f240 2355 	movw	r3, #597	; 0x255
 8009268:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
  const uint8_t nt35510_reg34[] = {NT35510_CMD_WRCABCMB, 0xFF};
 800926c:	f64f 735e 	movw	r3, #65374	; 0xff5e
 8009270:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
  const uint8_t nt35510_reg35[] = {NT35510_CMD_RAMWR, 0x00};
 8009274:	232c      	movs	r3, #44	; 0x2c
 8009276:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
  const uint8_t nt35510_reg36[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB565};
 800927a:	f245 533a 	movw	r3, #21818	; 0x553a
 800927e:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};

  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 8009282:	a92c      	add	r1, sp, #176	; 0xb0
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};
 8009284:	f247 733a 	movw	r3, #30522	; 0x773a
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 8009288:	2005      	movs	r0, #5
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};
 800928a:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 800928e:	f7f7 ffb7 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg1);/* AVDD: 5.2V */
 8009292:	a914      	add	r1, sp, #80	; 0x50
 8009294:	2003      	movs	r0, #3
 8009296:	f7f7 ffb3 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg2);/* AVDD: Ratio */
 800929a:	a915      	add	r1, sp, #84	; 0x54
 800929c:	2003      	movs	r0, #3
 800929e:	f7f7 ffaf 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg3);/* AVEE: -5.2V */
 80092a2:	a916      	add	r1, sp, #88	; 0x58
 80092a4:	2003      	movs	r0, #3
 80092a6:	f7f7 ffab 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg4);/* AVEE: Ratio */
 80092aa:	a917      	add	r1, sp, #92	; 0x5c
 80092ac:	2003      	movs	r0, #3
 80092ae:	f7f7 ffa7 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg5);/* VCL: -2.5V */
 80092b2:	a918      	add	r1, sp, #96	; 0x60
 80092b4:	2003      	movs	r0, #3
 80092b6:	f7f7 ffa3 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg6);/* VCL: Ratio */
 80092ba:	a919      	add	r1, sp, #100	; 0x64
 80092bc:	2003      	movs	r0, #3
 80092be:	f7f7 ff9f 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg7);/* VGH: 15V (Free Pump) */
 80092c2:	a901      	add	r1, sp, #4
 80092c4:	2001      	movs	r0, #1
 80092c6:	f7f7 ff9b 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg8);
 80092ca:	a91a      	add	r1, sp, #104	; 0x68
 80092cc:	2003      	movs	r0, #3
 80092ce:	f7f7 ff97 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg9);/* VGH: Ratio */
 80092d2:	a91b      	add	r1, sp, #108	; 0x6c
 80092d4:	2003      	movs	r0, #3
 80092d6:	f7f7 ff93 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg10);/* VGL_REG: -10V */
 80092da:	a91c      	add	r1, sp, #112	; 0x70
 80092dc:	2003      	movs	r0, #3
 80092de:	f7f7 ff8f 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg12);/* VGLX: Ratio */
 80092e2:	a91d      	add	r1, sp, #116	; 0x74
 80092e4:	2003      	movs	r0, #3
 80092e6:	f7f7 ff8b 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg13);/* VGMP/VGSP: 4.5V/0V */
 80092ea:	a91e      	add	r1, sp, #120	; 0x78
 80092ec:	2003      	movs	r0, #3
 80092ee:	f7f7 ff87 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg14);/* VGMN/VGSN:-4.5V/0V */
 80092f2:	a91f      	add	r1, sp, #124	; 0x7c
 80092f4:	2003      	movs	r0, #3
 80092f6:	f7f7 ff83 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg15);/* VCOM: -1.325V */
 80092fa:	a911      	add	r1, sp, #68	; 0x44
 80092fc:	2002      	movs	r0, #2
 80092fe:	f7f7 ff7f 	bl	8001200 <DSI_IO_WriteCmd>

/* ************************************************************************** */
/* Proprietary DCS Initialization                                             */
/* ************************************************************************** */
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg16);/* LV2: Page 0 enable */
 8009302:	a92e      	add	r1, sp, #184	; 0xb8
 8009304:	2005      	movs	r0, #5
 8009306:	f7f7 ff7b 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg17);/* Display control */
 800930a:	a912      	add	r1, sp, #72	; 0x48
 800930c:	2002      	movs	r0, #2
 800930e:	f7f7 ff77 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg18);/* Src hold time */
 8009312:	a902      	add	r1, sp, #8
 8009314:	2001      	movs	r0, #1
 8009316:	f7f7 ff73 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg19);
 800931a:	a903      	add	r1, sp, #12
 800931c:	2001      	movs	r0, #1
 800931e:	f7f7 ff6f 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg20);/* Gate EQ control */
 8009322:	a913      	add	r1, sp, #76	; 0x4c
 8009324:	2002      	movs	r0, #2
 8009326:	f7f7 ff6b 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(4, (uint8_t *)nt35510_reg21);/* Src EQ control(Mode2) */
 800932a:	a922      	add	r1, sp, #136	; 0x88
 800932c:	2004      	movs	r0, #4
 800932e:	f7f7 ff67 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg22);/* Inv. mode(2-dot) */
 8009332:	a920      	add	r1, sp, #128	; 0x80
 8009334:	2003      	movs	r0, #3
 8009336:	f7f7 ff63 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg23);
 800933a:	a921      	add	r1, sp, #132	; 0x84
 800933c:	2003      	movs	r0, #3
 800933e:	f7f7 ff5f 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg24);
 8009342:	a904      	add	r1, sp, #16
 8009344:	2001      	movs	r0, #1
 8009346:	f7f7 ff5b 	bl	8001200 <DSI_IO_WriteCmd>
  /* Tear on */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg26);
 800934a:	a907      	add	r1, sp, #28
 800934c:	2000      	movs	r0, #0
 800934e:	f7f7 ff57 	bl	8001200 <DSI_IO_WriteCmd>
  /* Set Pixel color format to RGB888 */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg37);
 8009352:	2000      	movs	r0, #0
 8009354:	a910      	add	r1, sp, #64	; 0x40
 8009356:	f7f7 ff53 	bl	8001200 <DSI_IO_WriteCmd>
/* ************************************************************************** */
/* Standard DCS Initialization                                                */
/* ************************************************************************** */

  /* Add a delay, otherwise MADCTL not taken */
  NT35510_IO_Delay(200);
 800935a:	20c8      	movs	r0, #200	; 0xc8
 800935c:	f000 f960 	bl	8009620 <NT35510_IO_Delay>

  /* Configure orientation */
  if(orientation == NT35510_ORIENTATION_PORTRAIT)
 8009360:	2d00      	cmp	r5, #0
 8009362:	d134      	bne.n	80093ce <NT35510_Init+0x286>
  {
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_portrait);
 8009364:	a905      	add	r1, sp, #20
 8009366:	2001      	movs	r0, #1
 8009368:	f7f7 ff4a 	bl	8001200 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_portrait);
 800936c:	a924      	add	r1, sp, #144	; 0x90
 800936e:	2004      	movs	r0, #4
 8009370:	f7f7 ff46 	bl	8001200 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_portrait);
 8009374:	a926      	add	r1, sp, #152	; 0x98
  }
  else
  {
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_landscape);
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_landscape);
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_landscape);
 8009376:	2004      	movs	r0, #4
 8009378:	f7f7 ff42 	bl	8001200 <DSI_IO_WriteCmd>
  }

  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg27);
 800937c:	a908      	add	r1, sp, #32
 800937e:	2000      	movs	r0, #0
 8009380:	f7f7 ff3e 	bl	8001200 <DSI_IO_WriteCmd>
  /* Wait for sleep out exit */
  NT35510_IO_Delay(120);
 8009384:	2078      	movs	r0, #120	; 0x78
 8009386:	f000 f94b 	bl	8009620 <NT35510_IO_Delay>

  switch(ColorCoding)
 800938a:	2c02      	cmp	r4, #2
  {
    case NT35510_FORMAT_RBG565 :
      /* Set Pixel color format to RGB565 */
      DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg36);
 800938c:	bf0c      	ite	eq
 800938e:	a90f      	addeq	r1, sp, #60	; 0x3c
      break;
    case NT35510_FORMAT_RGB888 :
      /* Set Pixel color format to RGB888 */
      DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg37);
 8009390:	a910      	addne	r1, sp, #64	; 0x40
 8009392:	2001      	movs	r0, #1
 8009394:	f7f7 ff34 	bl	8001200 <DSI_IO_WriteCmd>
      break;
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg31);
 8009398:	a90a      	add	r1, sp, #40	; 0x28
 800939a:	2001      	movs	r0, #1
 800939c:	f7f7 ff30 	bl	8001200 <DSI_IO_WriteCmd>
  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg32);
 80093a0:	a90b      	add	r1, sp, #44	; 0x2c
 80093a2:	2001      	movs	r0, #1
 80093a4:	f7f7 ff2c 	bl	8001200 <DSI_IO_WriteCmd>
  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg33);
 80093a8:	a90c      	add	r1, sp, #48	; 0x30
 80093aa:	2001      	movs	r0, #1
 80093ac:	f7f7 ff28 	bl	8001200 <DSI_IO_WriteCmd>
  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg34);
 80093b0:	a90d      	add	r1, sp, #52	; 0x34
 80093b2:	2001      	movs	r0, #1
 80093b4:	f7f7 ff24 	bl	8001200 <DSI_IO_WriteCmd>
  /** CABC : Content Adaptive Backlight Control section end << */

  /* Display on */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg30);
 80093b8:	a909      	add	r1, sp, #36	; 0x24
 80093ba:	2000      	movs	r0, #0
 80093bc:	f7f7 ff20 	bl	8001200 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg35);
 80093c0:	a90e      	add	r1, sp, #56	; 0x38
 80093c2:	2000      	movs	r0, #0
 80093c4:	f7f7 ff1c 	bl	8001200 <DSI_IO_WriteCmd>

  return 0;
}
 80093c8:	2000      	movs	r0, #0
 80093ca:	b031      	add	sp, #196	; 0xc4
 80093cc:	bd30      	pop	{r4, r5, pc}
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_landscape);
 80093ce:	a906      	add	r1, sp, #24
 80093d0:	2001      	movs	r0, #1
 80093d2:	f7f7 ff15 	bl	8001200 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_landscape);
 80093d6:	a928      	add	r1, sp, #160	; 0xa0
 80093d8:	2004      	movs	r0, #4
 80093da:	f7f7 ff11 	bl	8001200 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_landscape);
 80093de:	a92a      	add	r1, sp, #168	; 0xa8
 80093e0:	e7c9      	b.n	8009376 <NT35510_Init+0x22e>
 80093e2:	bf00      	nop
 80093e4:	08029c08 	.word	0x08029c08
 80093e8:	b0030303 	.word	0xb0030303
 80093ec:	b6464646 	.word	0xb6464646
 80093f0:	b1030303 	.word	0xb1030303
 80093f4:	b7363636 	.word	0xb7363636
 80093f8:	b2020000 	.word	0xb2020000
 80093fc:	b8262626 	.word	0xb8262626
 8009400:	b9363636 	.word	0xb9363636
 8009404:	ba262626 	.word	0xba262626
 8009408:	bc008000 	.word	0xbc008000
 800940c:	08027843 	.word	0x08027843
 8009410:	08029c0f 	.word	0x08029c0f
 8009414:	cc000003 	.word	0xcc000003
 8009418:	b3090909 	.word	0xb3090909
 800941c:	b5080808 	.word	0xb5080808

08009420 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8009420:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8009422:	4d2f      	ldr	r5, [pc, #188]	; (80094e0 <I2C1_Init+0xc0>)
{
 8009424:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8009426:	4628      	mov	r0, r5
 8009428:	f002 f964 	bl	800b6f4 <HAL_I2C_GetState>
 800942c:	4604      	mov	r4, r0
 800942e:	2800      	cmp	r0, #0
 8009430:	d154      	bne.n	80094dc <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8009432:	4a2c      	ldr	r2, [pc, #176]	; (80094e4 <I2C1_Init+0xc4>)
 8009434:	4b2c      	ldr	r3, [pc, #176]	; (80094e8 <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8009436:	4e2d      	ldr	r6, [pc, #180]	; (80094ec <I2C1_Init+0xcc>)
 8009438:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800943a:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 800943e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 8009442:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8009446:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800944a:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 800944e:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8009450:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8009452:	f043 0302 	orr.w	r3, r3, #2
 8009456:	6333      	str	r3, [r6, #48]	; 0x30
 8009458:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 800945a:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800945c:	f003 0302 	and.w	r3, r3, #2
 8009460:	9301      	str	r3, [sp, #4]
 8009462:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8009464:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009468:	2312      	movs	r3, #18
 800946a:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 800946e:	2002      	movs	r0, #2
 8009470:	2304      	movs	r3, #4
 8009472:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8009476:	a903      	add	r1, sp, #12
 8009478:	481d      	ldr	r0, [pc, #116]	; (80094f0 <I2C1_Init+0xd0>)
 800947a:	f001 fb69 	bl	800ab50 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800947e:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8009482:	a903      	add	r1, sp, #12
 8009484:	481a      	ldr	r0, [pc, #104]	; (80094f0 <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8009486:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8009488:	f001 fb62 	bl	800ab50 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 800948c:	9402      	str	r4, [sp, #8]
 800948e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009490:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8009494:	6433      	str	r3, [r6, #64]	; 0x40
 8009496:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009498:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800949c:	9302      	str	r3, [sp, #8]
 800949e:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 80094a0:	6a33      	ldr	r3, [r6, #32]
 80094a2:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80094a6:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 80094a8:	6a33      	ldr	r3, [r6, #32]
 80094aa:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80094ae:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 80094b0:	4622      	mov	r2, r4
 80094b2:	2105      	movs	r1, #5
 80094b4:	201f      	movs	r0, #31
 80094b6:	f000 fd15 	bl	8009ee4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 80094ba:	201f      	movs	r0, #31
 80094bc:	f000 fd44 	bl	8009f48 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 80094c0:	4622      	mov	r2, r4
 80094c2:	2105      	movs	r1, #5
 80094c4:	2020      	movs	r0, #32
 80094c6:	f000 fd0d 	bl	8009ee4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 80094ca:	2020      	movs	r0, #32
 80094cc:	f000 fd3c 	bl	8009f48 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 80094d0:	4628      	mov	r0, r5
  }
}
 80094d2:	b008      	add	sp, #32
 80094d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 80094d8:	f001 beb2 	b.w	800b240 <HAL_I2C_Init>
}
 80094dc:	b008      	add	sp, #32
 80094de:	bd70      	pop	{r4, r5, r6, pc}
 80094e0:	20005fdc 	.word	0x20005fdc
 80094e4:	40005400 	.word	0x40005400
 80094e8:	00061a80 	.word	0x00061a80
 80094ec:	40023800 	.word	0x40023800
 80094f0:	40020400 	.word	0x40020400

080094f4 <BSP_PB_Init>:
{
 80094f4:	b510      	push	{r4, lr}
 80094f6:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 80094f8:	4b19      	ldr	r3, [pc, #100]	; (8009560 <BSP_PB_Init+0x6c>)
 80094fa:	2400      	movs	r4, #0
 80094fc:	9400      	str	r4, [sp, #0]
 80094fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009500:	f042 0201 	orr.w	r2, r2, #1
 8009504:	631a      	str	r2, [r3, #48]	; 0x30
 8009506:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009508:	f003 0301 	and.w	r3, r3, #1
 800950c:	9300      	str	r3, [sp, #0]
 800950e:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8009510:	b969      	cbnz	r1, 800952e <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8009512:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 8009514:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8009518:	2302      	movs	r3, #2
 800951a:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800951c:	4b11      	ldr	r3, [pc, #68]	; (8009564 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 800951e:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009520:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8009524:	a901      	add	r1, sp, #4
 8009526:	f001 fb13 	bl	800ab50 <HAL_GPIO_Init>
}
 800952a:	b006      	add	sp, #24
 800952c:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 800952e:	2901      	cmp	r1, #1
 8009530:	d1fb      	bne.n	800952a <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8009532:	2302      	movs	r3, #2
 8009534:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 8009536:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800953a:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800953c:	4b09      	ldr	r3, [pc, #36]	; (8009564 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 800953e:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009540:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8009544:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009546:	a901      	add	r1, sp, #4
 8009548:	f001 fb02 	bl	800ab50 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 800954c:	4622      	mov	r2, r4
 800954e:	210f      	movs	r1, #15
 8009550:	2006      	movs	r0, #6
 8009552:	f000 fcc7 	bl	8009ee4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8009556:	2006      	movs	r0, #6
 8009558:	f000 fcf6 	bl	8009f48 <HAL_NVIC_EnableIRQ>
}
 800955c:	e7e5      	b.n	800952a <BSP_PB_Init+0x36>
 800955e:	bf00      	nop
 8009560:	40023800 	.word	0x40023800
 8009564:	20000048 	.word	0x20000048

08009568 <BSP_PB_GetState>:
{
 8009568:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 800956a:	4b03      	ldr	r3, [pc, #12]	; (8009578 <BSP_PB_GetState+0x10>)
 800956c:	2101      	movs	r1, #1
 800956e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8009572:	f001 fc75 	bl	800ae60 <HAL_GPIO_ReadPin>
}
 8009576:	bd08      	pop	{r3, pc}
 8009578:	20000048 	.word	0x20000048

0800957c <TS_IO_Init>:
 800957c:	f7ff bf50 	b.w	8009420 <I2C1_Init>

08009580 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8009580:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8009582:	2301      	movs	r3, #1
 8009584:	f88d 2017 	strb.w	r2, [sp, #23]
 8009588:	2264      	movs	r2, #100	; 0x64
 800958a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800958e:	f10d 0217 	add.w	r2, sp, #23
 8009592:	9200      	str	r2, [sp, #0]
 8009594:	460a      	mov	r2, r1
 8009596:	4601      	mov	r1, r0
 8009598:	4805      	ldr	r0, [pc, #20]	; (80095b0 <TS_IO_Write+0x30>)
 800959a:	f001 ff13 	bl	800b3c4 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 800959e:	b120      	cbz	r0, 80095aa <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 80095a0:	4803      	ldr	r0, [pc, #12]	; (80095b0 <TS_IO_Write+0x30>)
 80095a2:	f001 fef5 	bl	800b390 <HAL_I2C_DeInit>
  I2C1_Init();
 80095a6:	f7ff ff3b 	bl	8009420 <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 80095aa:	b007      	add	sp, #28
 80095ac:	f85d fb04 	ldr.w	pc, [sp], #4
 80095b0:	20005fdc 	.word	0x20005fdc

080095b4 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 80095b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 80095b6:	2300      	movs	r3, #0
{
 80095b8:	460a      	mov	r2, r1
  uint8_t Value = 0;
 80095ba:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80095be:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80095c2:	2301      	movs	r3, #1
 80095c4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80095c8:	f10d 0117 	add.w	r1, sp, #23
 80095cc:	9100      	str	r1, [sp, #0]
 80095ce:	4601      	mov	r1, r0
 80095d0:	4806      	ldr	r0, [pc, #24]	; (80095ec <TS_IO_Read+0x38>)
 80095d2:	f001 ff87 	bl	800b4e4 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 80095d6:	b120      	cbz	r0, 80095e2 <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 80095d8:	4804      	ldr	r0, [pc, #16]	; (80095ec <TS_IO_Read+0x38>)
 80095da:	f001 fed9 	bl	800b390 <HAL_I2C_DeInit>
  I2C1_Init();
 80095de:	f7ff ff1f 	bl	8009420 <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 80095e2:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80095e6:	b007      	add	sp, #28
 80095e8:	f85d fb04 	ldr.w	pc, [sp], #4
 80095ec:	20005fdc 	.word	0x20005fdc

080095f0 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 80095f0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80095f2:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 80095f6:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80095fa:	9200      	str	r2, [sp, #0]
 80095fc:	2301      	movs	r3, #1
 80095fe:	460a      	mov	r2, r1
 8009600:	4601      	mov	r1, r0
 8009602:	4806      	ldr	r0, [pc, #24]	; (800961c <TS_IO_ReadMultiple+0x2c>)
 8009604:	f001 ff6e 	bl	800b4e4 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8009608:	4604      	mov	r4, r0
 800960a:	b120      	cbz	r0, 8009616 <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 800960c:	4803      	ldr	r0, [pc, #12]	; (800961c <TS_IO_ReadMultiple+0x2c>)
 800960e:	f001 febf 	bl	800b390 <HAL_I2C_DeInit>
  I2C1_Init();
 8009612:	f7ff ff05 	bl	8009420 <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8009616:	b2a0      	uxth	r0, r4
 8009618:	b004      	add	sp, #16
 800961a:	bd10      	pop	{r4, pc}
 800961c:	20005fdc 	.word	0x20005fdc

08009620 <NT35510_IO_Delay>:
 8009620:	f000 bc3a 	b.w	8009e98 <HAL_Delay>

08009624 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8009624:	b500      	push	{lr}
 8009626:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009628:	f44f 7280 	mov.w	r2, #256	; 0x100
 800962c:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800962e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8009632:	2205      	movs	r2, #5
 8009634:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8009636:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8009638:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 800963a:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 800963c:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009640:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009644:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8009648:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800964a:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 800964c:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 800964e:	2210      	movs	r2, #16
 8009650:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8009652:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8009656:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8009658:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800965a:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 800965c:	a906      	add	r1, sp, #24
 800965e:	466a      	mov	r2, sp
 8009660:	4804      	ldr	r0, [pc, #16]	; (8009674 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 8009662:	f002 fbc0 	bl	800bde6 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8009666:	3800      	subs	r0, #0
 8009668:	bf18      	it	ne
 800966a:	2001      	movne	r0, #1
 800966c:	b015      	add	sp, #84	; 0x54
 800966e:	f85d fb04 	ldr.w	pc, [sp], #4
 8009672:	bf00      	nop
 8009674:	20006030 	.word	0x20006030

08009678 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8009678:	b500      	push	{lr}
 800967a:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800967c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009680:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8009682:	2306      	movs	r3, #6
 8009684:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009686:	4817      	ldr	r0, [pc, #92]	; (80096e4 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8009688:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800968a:	f241 3288 	movw	r2, #5000	; 0x1388
 800968e:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009690:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009694:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8009698:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 800969a:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800969c:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800969e:	f002 fb5e 	bl	800bd5e <HAL_QSPI_Command>
 80096a2:	b9e0      	cbnz	r0, 80096de <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 80096a4:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 80096a6:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 80096aa:	2201      	movs	r2, #1
 80096ac:	2310      	movs	r3, #16
 80096ae:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 80096b2:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80096b6:	2305      	movs	r3, #5
 80096b8:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80096bc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 80096c0:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80096c2:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80096c4:	4807      	ldr	r0, [pc, #28]	; (80096e4 <QSPI_WriteEnable.constprop.0+0x6c>)
 80096c6:	f241 3388 	movw	r3, #5000	; 0x1388
 80096ca:	466a      	mov	r2, sp
 80096cc:	a906      	add	r1, sp, #24
 80096ce:	f002 fb8a 	bl	800bde6 <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 80096d2:	3800      	subs	r0, #0
 80096d4:	bf18      	it	ne
 80096d6:	2001      	movne	r0, #1
}
 80096d8:	b015      	add	sp, #84	; 0x54
 80096da:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 80096de:	2001      	movs	r0, #1
 80096e0:	e7fa      	b.n	80096d8 <QSPI_WriteEnable.constprop.0+0x60>
 80096e2:	bf00      	nop
 80096e4:	20006030 	.word	0x20006030

080096e8 <BSP_QSPI_EnableMemoryMappedMode>:
{
 80096e8:	b500      	push	{lr}
 80096ea:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80096ec:	f44f 7380 	mov.w	r3, #256	; 0x100
 80096f0:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 80096f2:	23eb      	movs	r3, #235	; 0xeb
 80096f4:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 80096f6:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80096fa:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 80096fc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8009700:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8009702:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8009706:	2300      	movs	r3, #0
 8009708:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 800970c:	220a      	movs	r2, #10
 800970e:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8009710:	a902      	add	r1, sp, #8
 8009712:	466a      	mov	r2, sp
 8009714:	4806      	ldr	r0, [pc, #24]	; (8009730 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009716:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009718:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 800971c:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800971e:	f002 fbb2 	bl	800be86 <HAL_QSPI_MemoryMapped>
}
 8009722:	3800      	subs	r0, #0
 8009724:	bf18      	it	ne
 8009726:	2001      	movne	r0, #1
 8009728:	b011      	add	sp, #68	; 0x44
 800972a:	f85d fb04 	ldr.w	pc, [sp], #4
 800972e:	bf00      	nop
 8009730:	20006030 	.word	0x20006030

08009734 <BSP_QSPI_MspInit>:
{
 8009734:	b570      	push	{r4, r5, r6, lr}
 8009736:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8009738:	4b2c      	ldr	r3, [pc, #176]	; (80097ec <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800973a:	482d      	ldr	r0, [pc, #180]	; (80097f0 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 800973c:	2400      	movs	r4, #0
 800973e:	9400      	str	r4, [sp, #0]
 8009740:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009742:	f042 0202 	orr.w	r2, r2, #2
 8009746:	639a      	str	r2, [r3, #56]	; 0x38
 8009748:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800974a:	f002 0202 	and.w	r2, r2, #2
 800974e:	9200      	str	r2, [sp, #0]
 8009750:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8009752:	699a      	ldr	r2, [r3, #24]
 8009754:	f042 0202 	orr.w	r2, r2, #2
 8009758:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 800975a:	699a      	ldr	r2, [r3, #24]
 800975c:	f022 0202 	bic.w	r2, r2, #2
 8009760:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8009762:	9401      	str	r4, [sp, #4]
 8009764:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009766:	f042 0202 	orr.w	r2, r2, #2
 800976a:	631a      	str	r2, [r3, #48]	; 0x30
 800976c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800976e:	f002 0202 	and.w	r2, r2, #2
 8009772:	9201      	str	r2, [sp, #4]
 8009774:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8009776:	9402      	str	r4, [sp, #8]
 8009778:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800977a:	f042 0220 	orr.w	r2, r2, #32
 800977e:	631a      	str	r2, [r3, #48]	; 0x30
 8009780:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009782:	f003 0320 	and.w	r3, r3, #32
 8009786:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8009788:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800978a:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 800978c:	2302      	movs	r3, #2
 800978e:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8009792:	2101      	movs	r1, #1
 8009794:	2303      	movs	r3, #3
 8009796:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800979a:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800979c:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800979e:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80097a0:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80097a2:	f001 f9d5 	bl	800ab50 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80097a6:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80097aa:	a903      	add	r1, sp, #12
 80097ac:	4811      	ldr	r0, [pc, #68]	; (80097f4 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80097ae:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80097b0:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80097b2:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80097b4:	f001 f9cc 	bl	800ab50 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80097b8:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80097bc:	a903      	add	r1, sp, #12
 80097be:	480d      	ldr	r0, [pc, #52]	; (80097f4 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80097c0:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80097c2:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80097c4:	f001 f9c4 	bl	800ab50 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80097c8:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80097ca:	a903      	add	r1, sp, #12
 80097cc:	4809      	ldr	r0, [pc, #36]	; (80097f4 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80097ce:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80097d0:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80097d2:	f001 f9bd 	bl	800ab50 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 80097d6:	4622      	mov	r2, r4
 80097d8:	210f      	movs	r1, #15
 80097da:	205b      	movs	r0, #91	; 0x5b
 80097dc:	f000 fb82 	bl	8009ee4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 80097e0:	205b      	movs	r0, #91	; 0x5b
 80097e2:	f000 fbb1 	bl	8009f48 <HAL_NVIC_EnableIRQ>
}
 80097e6:	b008      	add	sp, #32
 80097e8:	bd70      	pop	{r4, r5, r6, pc}
 80097ea:	bf00      	nop
 80097ec:	40023800 	.word	0x40023800
 80097f0:	40020400 	.word	0x40020400
 80097f4:	40021400 	.word	0x40021400

080097f8 <BSP_QSPI_Init>:
{
 80097f8:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 80097fa:	4c48      	ldr	r4, [pc, #288]	; (800991c <BSP_QSPI_Init+0x124>)
 80097fc:	4b48      	ldr	r3, [pc, #288]	; (8009920 <BSP_QSPI_Init+0x128>)
 80097fe:	6023      	str	r3, [r4, #0]
{
 8009800:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8009802:	4620      	mov	r0, r4
 8009804:	f002 fa98 	bl	800bd38 <HAL_QSPI_DeInit>
 8009808:	4605      	mov	r5, r0
 800980a:	b110      	cbz	r0, 8009812 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 800980c:	2001      	movs	r0, #1
}
 800980e:	b011      	add	sp, #68	; 0x44
 8009810:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8009812:	4601      	mov	r1, r0
 8009814:	4620      	mov	r0, r4
 8009816:	f7ff ff8d 	bl	8009734 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 800981a:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800981c:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 800981e:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8009822:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009824:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8009828:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 800982c:	fab3 f383 	clz	r3, r3
 8009830:	3b01      	subs	r3, #1
 8009832:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8009834:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8009836:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 800983a:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 800983e:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8009842:	f002 fa25 	bl	800bc90 <HAL_QSPI_Init>
 8009846:	2800      	cmp	r0, #0
 8009848:	d1e0      	bne.n	800980c <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800984a:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800984e:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009852:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8009856:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8009858:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 800985a:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800985c:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800985e:	f241 3288 	movw	r2, #5000	; 0x1388
 8009862:	a902      	add	r1, sp, #8
 8009864:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009866:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8009868:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800986a:	f002 fa78 	bl	800bd5e <HAL_QSPI_Command>
 800986e:	b108      	cbz	r0, 8009874 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8009870:	2004      	movs	r0, #4
 8009872:	e7cc      	b.n	800980e <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8009874:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009876:	f241 3288 	movw	r2, #5000	; 0x1388
 800987a:	a902      	add	r1, sp, #8
 800987c:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 800987e:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009880:	f002 fa6d 	bl	800bd5e <HAL_QSPI_Command>
 8009884:	2800      	cmp	r0, #0
 8009886:	d1f3      	bne.n	8009870 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8009888:	f241 3088 	movw	r0, #5000	; 0x1388
 800988c:	f7ff feca 	bl	8009624 <QSPI_AutoPollingMemReady.constprop.0>
 8009890:	2800      	cmp	r0, #0
 8009892:	d1ed      	bne.n	8009870 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009894:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8009898:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800989c:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80098a0:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 80098a2:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80098a4:	f241 3288 	movw	r2, #5000	; 0x1388
 80098a8:	a902      	add	r1, sp, #8
 80098aa:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80098ac:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80098ae:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80098b0:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80098b2:	f002 fa54 	bl	800bd5e <HAL_QSPI_Command>
 80098b6:	2800      	cmp	r0, #0
 80098b8:	d1da      	bne.n	8009870 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80098ba:	f241 3288 	movw	r2, #5000	; 0x1388
 80098be:	f10d 0107 	add.w	r1, sp, #7
 80098c2:	4620      	mov	r0, r4
 80098c4:	f002 fbc4 	bl	800c050 <HAL_QSPI_Receive>
 80098c8:	2800      	cmp	r0, #0
 80098ca:	d1d1      	bne.n	8009870 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 80098cc:	f7ff fed4 	bl	8009678 <QSPI_WriteEnable.constprop.0>
 80098d0:	2800      	cmp	r0, #0
 80098d2:	d1cd      	bne.n	8009870 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 80098d4:	2381      	movs	r3, #129	; 0x81
 80098d6:	9302      	str	r3, [sp, #8]
 80098d8:	22f0      	movs	r2, #240	; 0xf0
 80098da:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80098de:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80098e2:	210a      	movs	r1, #10
 80098e4:	fab2 f282 	clz	r2, r2
 80098e8:	fa01 f202 	lsl.w	r2, r1, r2
 80098ec:	f003 030f 	and.w	r3, r3, #15
 80098f0:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80098f2:	a902      	add	r1, sp, #8
 80098f4:	f241 3288 	movw	r2, #5000	; 0x1388
 80098f8:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80098fa:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80098fe:	f002 fa2e 	bl	800bd5e <HAL_QSPI_Command>
 8009902:	2800      	cmp	r0, #0
 8009904:	d1b4      	bne.n	8009870 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009906:	f241 3288 	movw	r2, #5000	; 0x1388
 800990a:	f10d 0107 	add.w	r1, sp, #7
 800990e:	4620      	mov	r0, r4
 8009910:	f002 fb42 	bl	800bf98 <HAL_QSPI_Transmit>
 8009914:	2800      	cmp	r0, #0
 8009916:	f43f af7a 	beq.w	800980e <BSP_QSPI_Init+0x16>
 800991a:	e7a9      	b.n	8009870 <BSP_QSPI_Init+0x78>
 800991c:	20006030 	.word	0x20006030
 8009920:	a0001000 	.word	0xa0001000

08009924 <BSP_QSPI_MspDeInit>:
{
 8009924:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8009926:	205b      	movs	r0, #91	; 0x5b
 8009928:	f000 fb1c 	bl	8009f64 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 800992c:	4814      	ldr	r0, [pc, #80]	; (8009980 <BSP_QSPI_MspDeInit+0x5c>)
 800992e:	2140      	movs	r1, #64	; 0x40
 8009930:	f001 f9f4 	bl	800ad1c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8009934:	4813      	ldr	r0, [pc, #76]	; (8009984 <BSP_QSPI_MspDeInit+0x60>)
 8009936:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800993a:	f001 f9ef 	bl	800ad1c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 800993e:	4811      	ldr	r0, [pc, #68]	; (8009984 <BSP_QSPI_MspDeInit+0x60>)
 8009940:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009944:	f001 f9ea 	bl	800ad1c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8009948:	480e      	ldr	r0, [pc, #56]	; (8009984 <BSP_QSPI_MspDeInit+0x60>)
 800994a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800994e:	f001 f9e5 	bl	800ad1c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 8009952:	480c      	ldr	r0, [pc, #48]	; (8009984 <BSP_QSPI_MspDeInit+0x60>)
 8009954:	2180      	movs	r1, #128	; 0x80
 8009956:	f001 f9e1 	bl	800ad1c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 800995a:	480a      	ldr	r0, [pc, #40]	; (8009984 <BSP_QSPI_MspDeInit+0x60>)
 800995c:	2140      	movs	r1, #64	; 0x40
 800995e:	f001 f9dd 	bl	800ad1c <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 8009962:	4b09      	ldr	r3, [pc, #36]	; (8009988 <BSP_QSPI_MspDeInit+0x64>)
 8009964:	699a      	ldr	r2, [r3, #24]
 8009966:	f042 0202 	orr.w	r2, r2, #2
 800996a:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 800996c:	699a      	ldr	r2, [r3, #24]
 800996e:	f022 0202 	bic.w	r2, r2, #2
 8009972:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 8009974:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009976:	f022 0202 	bic.w	r2, r2, #2
 800997a:	639a      	str	r2, [r3, #56]	; 0x38
}
 800997c:	bd08      	pop	{r3, pc}
 800997e:	bf00      	nop
 8009980:	40020400 	.word	0x40020400
 8009984:	40021400 	.word	0x40021400
 8009988:	40023800 	.word	0x40023800

0800998c <BSP_QSPI_DeInit>:
{
 800998c:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 800998e:	4d08      	ldr	r5, [pc, #32]	; (80099b0 <BSP_QSPI_DeInit+0x24>)
 8009990:	4b08      	ldr	r3, [pc, #32]	; (80099b4 <BSP_QSPI_DeInit+0x28>)
 8009992:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8009994:	4628      	mov	r0, r5
 8009996:	f002 f9cf 	bl	800bd38 <HAL_QSPI_DeInit>
 800999a:	4604      	mov	r4, r0
 800999c:	b928      	cbnz	r0, 80099aa <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 800999e:	4601      	mov	r1, r0
 80099a0:	4628      	mov	r0, r5
 80099a2:	f7ff ffbf 	bl	8009924 <BSP_QSPI_MspDeInit>
}
 80099a6:	4620      	mov	r0, r4
 80099a8:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 80099aa:	2401      	movs	r4, #1
 80099ac:	e7fb      	b.n	80099a6 <BSP_QSPI_DeInit+0x1a>
 80099ae:	bf00      	nop
 80099b0:	20006030 	.word	0x20006030
 80099b4:	a0001000 	.word	0xa0001000

080099b8 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 80099b8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 80099bc:	4c21      	ldr	r4, [pc, #132]	; (8009a44 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80099be:	4d22      	ldr	r5, [pc, #136]	; (8009a48 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80099c0:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 80099c2:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80099c6:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80099c8:	4621      	mov	r1, r4
{
 80099ca:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80099cc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80099d0:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80099d2:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80099d6:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 80099da:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80099de:	f002 ffdb 	bl	800c998 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 80099e2:	4630      	mov	r0, r6
 80099e4:	f000 fa58 	bl	8009e98 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 80099e8:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80099ea:	4621      	mov	r1, r4
 80099ec:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80099f0:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80099f2:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80099f6:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80099fa:	f002 ffcd 	bl	800c998 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80099fe:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009a00:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a04:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 8009a06:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a08:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009a0c:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8009a0e:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a12:	f002 ffc1 	bl	800c998 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8009a16:	f44f 730c 	mov.w	r3, #560	; 0x230
 8009a1a:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8009a1c:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009a1e:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a22:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8009a24:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 8009a26:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a28:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009a2c:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8009a2e:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a30:	f002 ffb2 	bl	800c998 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8009a34:	4649      	mov	r1, r9
 8009a36:	4628      	mov	r0, r5
}
 8009a38:	b003      	add	sp, #12
 8009a3a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8009a3e:	f002 bfc9 	b.w	800c9d4 <HAL_SDRAM_ProgramRefreshRate>
 8009a42:	bf00      	nop
 8009a44:	2000607c 	.word	0x2000607c
 8009a48:	20006168 	.word	0x20006168

08009a4c <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8009a4c:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8009a4e:	4606      	mov	r6, r0
{
 8009a50:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8009a52:	2800      	cmp	r0, #0
 8009a54:	f000 80bd 	beq.w	8009bd2 <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8009a58:	4b5f      	ldr	r3, [pc, #380]	; (8009bd8 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8009a5a:	4860      	ldr	r0, [pc, #384]	; (8009bdc <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8009a5c:	4c60      	ldr	r4, [pc, #384]	; (8009be0 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 8009a5e:	2500      	movs	r5, #0
 8009a60:	9500      	str	r5, [sp, #0]
 8009a62:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009a64:	f042 0201 	orr.w	r2, r2, #1
 8009a68:	639a      	str	r2, [r3, #56]	; 0x38
 8009a6a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009a6c:	f002 0201 	and.w	r2, r2, #1
 8009a70:	9200      	str	r2, [sp, #0]
 8009a72:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8009a74:	9501      	str	r5, [sp, #4]
 8009a76:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009a78:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8009a7c:	631a      	str	r2, [r3, #48]	; 0x30
 8009a7e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009a80:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8009a84:	9201      	str	r2, [sp, #4]
 8009a86:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8009a88:	9502      	str	r5, [sp, #8]
 8009a8a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009a8c:	f042 0204 	orr.w	r2, r2, #4
 8009a90:	631a      	str	r2, [r3, #48]	; 0x30
 8009a92:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009a94:	f002 0204 	and.w	r2, r2, #4
 8009a98:	9202      	str	r2, [sp, #8]
 8009a9a:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8009a9c:	9503      	str	r5, [sp, #12]
 8009a9e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009aa0:	f042 0208 	orr.w	r2, r2, #8
 8009aa4:	631a      	str	r2, [r3, #48]	; 0x30
 8009aa6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009aa8:	f002 0208 	and.w	r2, r2, #8
 8009aac:	9203      	str	r2, [sp, #12]
 8009aae:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8009ab0:	9504      	str	r5, [sp, #16]
 8009ab2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009ab4:	f042 0210 	orr.w	r2, r2, #16
 8009ab8:	631a      	str	r2, [r3, #48]	; 0x30
 8009aba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009abc:	f002 0210 	and.w	r2, r2, #16
 8009ac0:	9204      	str	r2, [sp, #16]
 8009ac2:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8009ac4:	9505      	str	r5, [sp, #20]
 8009ac6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009ac8:	f042 0220 	orr.w	r2, r2, #32
 8009acc:	631a      	str	r2, [r3, #48]	; 0x30
 8009ace:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009ad0:	f002 0220 	and.w	r2, r2, #32
 8009ad4:	9205      	str	r2, [sp, #20]
 8009ad6:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8009ad8:	9506      	str	r5, [sp, #24]
 8009ada:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009adc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009ae0:	631a      	str	r2, [r3, #48]	; 0x30
 8009ae2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009ae4:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8009ae8:	9206      	str	r2, [sp, #24]
 8009aea:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8009aec:	9507      	str	r5, [sp, #28]
 8009aee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009af0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8009af4:	631a      	str	r2, [r3, #48]	; 0x30
 8009af6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009af8:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8009afc:	9207      	str	r2, [sp, #28]
 8009afe:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8009b00:	9508      	str	r5, [sp, #32]
 8009b02:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009b04:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009b08:	631a      	str	r2, [r3, #48]	; 0x30
 8009b0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b0c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009b10:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8009b12:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8009b14:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 8009b16:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8009b18:	2301      	movs	r3, #1
 8009b1a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8009b1e:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8009b20:	220c      	movs	r2, #12
 8009b22:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8009b24:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8009b26:	f001 f813 	bl	800ab50 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8009b2a:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8009b2e:	482d      	ldr	r0, [pc, #180]	; (8009be4 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8009b30:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8009b32:	a909      	add	r1, sp, #36	; 0x24
 8009b34:	f001 f80c 	bl	800ab50 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8009b38:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8009b3c:	482a      	ldr	r0, [pc, #168]	; (8009be8 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8009b3e:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8009b40:	a909      	add	r1, sp, #36	; 0x24
 8009b42:	f001 f805 	bl	800ab50 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8009b46:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8009b4a:	4828      	ldr	r0, [pc, #160]	; (8009bec <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8009b4c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8009b4e:	a909      	add	r1, sp, #36	; 0x24
 8009b50:	f000 fffe 	bl	800ab50 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8009b54:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8009b58:	4825      	ldr	r0, [pc, #148]	; (8009bf0 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8009b5a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8009b5c:	a909      	add	r1, sp, #36	; 0x24
 8009b5e:	f000 fff7 	bl	800ab50 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8009b62:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8009b66:	4823      	ldr	r0, [pc, #140]	; (8009bf4 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8009b68:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8009b6a:	a909      	add	r1, sp, #36	; 0x24
 8009b6c:	f000 fff0 	bl	800ab50 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8009b70:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8009b74:	4820      	ldr	r0, [pc, #128]	; (8009bf8 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8009b76:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8009b78:	a909      	add	r1, sp, #36	; 0x24
 8009b7a:	f000 ffe9 	bl	800ab50 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8009b7e:	2280      	movs	r2, #128	; 0x80
 8009b80:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009b84:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8009b88:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8009b8c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8009b90:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 8009b94:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 8009b98:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8009b9c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8009ba0:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8009ba4:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 8009ba6:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 8009baa:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8009bac:	4b13      	ldr	r3, [pc, #76]	; (8009bfc <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8009bae:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8009bb0:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8009bb2:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8009bb4:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8009bb6:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 8009bb8:	f000 fa8e 	bl	800a0d8 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 8009bbc:	4620      	mov	r0, r4
 8009bbe:	f000 fa0b 	bl	8009fd8 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 8009bc2:	2038      	movs	r0, #56	; 0x38
 8009bc4:	462a      	mov	r2, r5
 8009bc6:	2105      	movs	r1, #5
 8009bc8:	f000 f98c 	bl	8009ee4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 8009bcc:	2038      	movs	r0, #56	; 0x38
 8009bce:	f000 f9bb 	bl	8009f48 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8009bd2:	b00e      	add	sp, #56	; 0x38
 8009bd4:	bd70      	pop	{r4, r5, r6, pc}
 8009bd6:	bf00      	nop
 8009bd8:	40023800 	.word	0x40023800
 8009bdc:	40020800 	.word	0x40020800
 8009be0:	20006108 	.word	0x20006108
 8009be4:	40020c00 	.word	0x40020c00
 8009be8:	40021000 	.word	0x40021000
 8009bec:	40021400 	.word	0x40021400
 8009bf0:	40021800 	.word	0x40021800
 8009bf4:	40021c00 	.word	0x40021c00
 8009bf8:	40022000 	.word	0x40022000
 8009bfc:	40026410 	.word	0x40026410

08009c00 <BSP_SDRAM_Init>:
{
 8009c00:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009c02:	4c19      	ldr	r4, [pc, #100]	; (8009c68 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8009c04:	4d19      	ldr	r5, [pc, #100]	; (8009c6c <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009c06:	4b1a      	ldr	r3, [pc, #104]	; (8009c70 <BSP_SDRAM_Init+0x70>)
 8009c08:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8009c0a:	2107      	movs	r1, #7
 8009c0c:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8009c0e:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8009c10:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8009c14:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8009c18:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8009c1c:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8009c1e:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8009c20:	2340      	movs	r3, #64	; 0x40
 8009c22:	2220      	movs	r2, #32
 8009c24:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8009c28:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8009c2a:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8009c2e:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8009c32:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8009c36:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8009c3a:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8009c3e:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8009c40:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8009c44:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8009c46:	f7ff ff01 	bl	8009a4c <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8009c4a:	4629      	mov	r1, r5
 8009c4c:	4620      	mov	r0, r4
 8009c4e:	f002 fe75 	bl	800c93c <HAL_SDRAM_Init>
 8009c52:	4c08      	ldr	r4, [pc, #32]	; (8009c74 <BSP_SDRAM_Init+0x74>)
 8009c54:	3800      	subs	r0, #0
 8009c56:	bf18      	it	ne
 8009c58:	2001      	movne	r0, #1
 8009c5a:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8009c5c:	f240 5069 	movw	r0, #1385	; 0x569
 8009c60:	f7ff feaa 	bl	80099b8 <BSP_SDRAM_Initialization_sequence>
}
 8009c64:	7820      	ldrb	r0, [r4, #0]
 8009c66:	bd38      	pop	{r3, r4, r5, pc}
 8009c68:	20006168 	.word	0x20006168
 8009c6c:	2000608c 	.word	0x2000608c
 8009c70:	a0000140 	.word	0xa0000140
 8009c74:	2000004d 	.word	0x2000004d

08009c78 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8009c78:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8009c7a:	b148      	cbz	r0, 8009c90 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8009c7c:	2038      	movs	r0, #56	; 0x38
 8009c7e:	f000 f971 	bl	8009f64 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 8009c82:	4804      	ldr	r0, [pc, #16]	; (8009c94 <BSP_SDRAM_MspDeInit+0x1c>)
 8009c84:	4b04      	ldr	r3, [pc, #16]	; (8009c98 <BSP_SDRAM_MspDeInit+0x20>)
 8009c86:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8009c88:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8009c8c:	f000 ba24 	b.w	800a0d8 <HAL_DMA_DeInit>
}
 8009c90:	bd08      	pop	{r3, pc}
 8009c92:	bf00      	nop
 8009c94:	200060a8 	.word	0x200060a8
 8009c98:	40026410 	.word	0x40026410

08009c9c <BSP_SDRAM_DeInit>:
{
 8009c9c:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009c9e:	4c07      	ldr	r4, [pc, #28]	; (8009cbc <BSP_SDRAM_DeInit+0x20>)
 8009ca0:	4b07      	ldr	r3, [pc, #28]	; (8009cc0 <BSP_SDRAM_DeInit+0x24>)
 8009ca2:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 8009ca4:	4620      	mov	r0, r4
 8009ca6:	f002 fe69 	bl	800c97c <HAL_SDRAM_DeInit>
 8009caa:	4d06      	ldr	r5, [pc, #24]	; (8009cc4 <BSP_SDRAM_DeInit+0x28>)
 8009cac:	4601      	mov	r1, r0
 8009cae:	b918      	cbnz	r0, 8009cb8 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8009cb0:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 8009cb2:	4620      	mov	r0, r4
 8009cb4:	f7ff ffe0 	bl	8009c78 <BSP_SDRAM_MspDeInit>
}
 8009cb8:	7828      	ldrb	r0, [r5, #0]
 8009cba:	bd38      	pop	{r3, r4, r5, pc}
 8009cbc:	20006168 	.word	0x20006168
 8009cc0:	a0000140 	.word	0xa0000140
 8009cc4:	2000004c 	.word	0x2000004c

08009cc8 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 8009cc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 8009ccc:	4d16      	ldr	r5, [pc, #88]	; (8009d28 <BSP_TS_Init+0x60>)
 8009cce:	4c17      	ldr	r4, [pc, #92]	; (8009d2c <BSP_TS_Init+0x64>)
 8009cd0:	682b      	ldr	r3, [r5, #0]
{
 8009cd2:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8009cd4:	7820      	ldrb	r0, [r4, #0]
{
 8009cd6:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8009cd8:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8009cda:	686b      	ldr	r3, [r5, #4]
 8009cdc:	2054      	movs	r0, #84	; 0x54
 8009cde:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 8009ce0:	b2c0      	uxtb	r0, r0
 8009ce2:	2811      	cmp	r0, #17
 8009ce4:	d00a      	beq.n	8009cfc <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8009ce6:	686b      	ldr	r3, [r5, #4]
 8009ce8:	2070      	movs	r0, #112	; 0x70
 8009cea:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8009cec:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8009cee:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8009cf0:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8009cf2:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8009cf4:	d004      	beq.n	8009d00 <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8009cf6:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 8009cf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8009cfc:	2354      	movs	r3, #84	; 0x54
 8009cfe:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8009d00:	4b0b      	ldr	r3, [pc, #44]	; (8009d30 <BSP_TS_Init+0x68>)
 8009d02:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8009d34 <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 8009d06:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8009d08:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8009d0c:	42be      	cmp	r6, r7
 8009d0e:	bf34      	ite	cc
 8009d10:	2601      	movcc	r6, #1
 8009d12:	260c      	movcs	r6, #12
 8009d14:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8009d16:	68ab      	ldr	r3, [r5, #8]
 8009d18:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8009d1a:	f8d8 3000 	ldr.w	r3, [r8]
 8009d1e:	7820      	ldrb	r0, [r4, #0]
 8009d20:	68db      	ldr	r3, [r3, #12]
 8009d22:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8009d24:	2000      	movs	r0, #0
 8009d26:	e7e7      	b.n	8009cf8 <BSP_TS_Init+0x30>
 8009d28:	20000020 	.word	0x20000020
 8009d2c:	2000619c 	.word	0x2000619c
 8009d30:	200061b4 	.word	0x200061b4
 8009d34:	200061b0 	.word	0x200061b0

08009d38 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8009d38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8009d3c:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8009e1c <BSP_TS_GetState+0xe4>
 8009d40:	4a33      	ldr	r2, [pc, #204]	; (8009e10 <BSP_TS_GetState+0xd8>)
 8009d42:	f8db 3000 	ldr.w	r3, [fp]
{
 8009d46:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8009d48:	691b      	ldr	r3, [r3, #16]
 8009d4a:	7810      	ldrb	r0, [r2, #0]
{
 8009d4c:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8009d4e:	4798      	blx	r3
 8009d50:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8009d52:	b158      	cbz	r0, 8009d6c <BSP_TS_GetState+0x34>
 8009d54:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8009e20 <BSP_TS_GetState+0xe8>
 8009d58:	4f2e      	ldr	r7, [pc, #184]	; (8009e14 <BSP_TS_GetState+0xdc>)
 8009d5a:	f106 0a02 	add.w	sl, r6, #2
 8009d5e:	ad03      	add	r5, sp, #12
 8009d60:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8009d62:	f04f 0900 	mov.w	r9, #0
 8009d66:	7833      	ldrb	r3, [r6, #0]
 8009d68:	454b      	cmp	r3, r9
 8009d6a:	d803      	bhi.n	8009d74 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8009d6c:	2000      	movs	r0, #0
 8009d6e:	b005      	add	sp, #20
 8009d70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8009d74:	f8db 3000 	ldr.w	r3, [fp]
 8009d78:	4825      	ldr	r0, [pc, #148]	; (8009e10 <BSP_TS_GetState+0xd8>)
 8009d7a:	695b      	ldr	r3, [r3, #20]
 8009d7c:	7800      	ldrb	r0, [r0, #0]
 8009d7e:	9101      	str	r1, [sp, #4]
 8009d80:	462a      	mov	r2, r5
 8009d82:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8009d84:	4b24      	ldr	r3, [pc, #144]	; (8009e18 <BSP_TS_GetState+0xe0>)
 8009d86:	9901      	ldr	r1, [sp, #4]
 8009d88:	781b      	ldrb	r3, [r3, #0]
 8009d8a:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8009d8e:	bf1f      	itttt	ne
 8009d90:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8009d92:	8828      	ldrhne	r0, [r5, #0]
 8009d94:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 8009d96:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 8009d98:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 8009d9a:	bf41      	itttt	mi
 8009d9c:	880a      	ldrhmi	r2, [r1, #0]
 8009d9e:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8009da2:	3203      	addmi	r2, #3
 8009da4:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 8009da6:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8009da8:	bf48      	it	mi
 8009daa:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8009dac:	f8d8 2000 	ldr.w	r2, [r8]
 8009db0:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8009db4:	bf42      	ittt	mi
 8009db6:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 8009dba:	3301      	addmi	r3, #1
 8009dbc:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8009dbe:	b293      	uxth	r3, r2
 8009dc0:	4290      	cmp	r0, r2
 8009dc2:	bf8c      	ite	hi
 8009dc4:	1ac3      	subhi	r3, r0, r3
 8009dc6:	1a1b      	subls	r3, r3, r0
 8009dc8:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8009dca:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8009dce:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8009dd0:	683b      	ldr	r3, [r7, #0]
 8009dd2:	b29c      	uxth	r4, r3
 8009dd4:	429a      	cmp	r2, r3
 8009dd6:	bf88      	it	hi
 8009dd8:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 8009dda:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8009ddc:	bf98      	it	ls
 8009dde:	1aa4      	subls	r4, r4, r2
 8009de0:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8009de2:	441c      	add	r4, r3
 8009de4:	46c4      	mov	ip, r8
 8009de6:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8009de8:	bfc8      	it	gt
 8009dea:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8009dee:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8009df2:	bfc8      	it	gt
 8009df4:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 8009df6:	46be      	mov	lr, r7
 8009df8:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 8009dfc:	f8de 3000 	ldr.w	r3, [lr]
 8009e00:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8009e04:	f108 0804 	add.w	r8, r8, #4
 8009e08:	3704      	adds	r7, #4
 8009e0a:	f109 0901 	add.w	r9, r9, #1
 8009e0e:	e7aa      	b.n	8009d66 <BSP_TS_GetState+0x2e>
 8009e10:	2000619c 	.word	0x2000619c
 8009e14:	200061a8 	.word	0x200061a8
 8009e18:	200061b4 	.word	0x200061b4
 8009e1c:	200061b0 	.word	0x200061b0
 8009e20:	200061a0 	.word	0x200061a0

08009e24 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009e24:	4b05      	ldr	r3, [pc, #20]	; (8009e3c <SystemInit+0x18>)
 8009e26:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8009e2a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8009e2e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009e32:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8009e36:	609a      	str	r2, [r3, #8]
#endif
}
 8009e38:	4770      	bx	lr
 8009e3a:	bf00      	nop
 8009e3c:	e000ed00 	.word	0xe000ed00

08009e40 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009e40:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009e42:	4b0b      	ldr	r3, [pc, #44]	; (8009e70 <HAL_Init+0x30>)
 8009e44:	681a      	ldr	r2, [r3, #0]
 8009e46:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009e4a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009e4c:	681a      	ldr	r2, [r3, #0]
 8009e4e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009e52:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009e54:	681a      	ldr	r2, [r3, #0]
 8009e56:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009e5a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009e5c:	2003      	movs	r0, #3
 8009e5e:	f000 f82f 	bl	8009ec0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8009e62:	2000      	movs	r0, #0
 8009e64:	f7f8 fd3a 	bl	80028dc <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009e68:	f7f8 fa90 	bl	800238c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009e6c:	2000      	movs	r0, #0
 8009e6e:	bd08      	pop	{r3, pc}
 8009e70:	40023c00 	.word	0x40023c00

08009e74 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009e74:	4a03      	ldr	r2, [pc, #12]	; (8009e84 <HAL_IncTick+0x10>)
 8009e76:	4b04      	ldr	r3, [pc, #16]	; (8009e88 <HAL_IncTick+0x14>)
 8009e78:	6811      	ldr	r1, [r2, #0]
 8009e7a:	781b      	ldrb	r3, [r3, #0]
 8009e7c:	440b      	add	r3, r1
 8009e7e:	6013      	str	r3, [r2, #0]
}
 8009e80:	4770      	bx	lr
 8009e82:	bf00      	nop
 8009e84:	200061b8 	.word	0x200061b8
 8009e88:	20000054 	.word	0x20000054

08009e8c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009e8c:	4b01      	ldr	r3, [pc, #4]	; (8009e94 <HAL_GetTick+0x8>)
 8009e8e:	6818      	ldr	r0, [r3, #0]
}
 8009e90:	4770      	bx	lr
 8009e92:	bf00      	nop
 8009e94:	200061b8 	.word	0x200061b8

08009e98 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009e98:	b538      	push	{r3, r4, r5, lr}
 8009e9a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009e9c:	f7ff fff6 	bl	8009e8c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009ea0:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8009ea2:	bf1c      	itt	ne
 8009ea4:	4b05      	ldrne	r3, [pc, #20]	; (8009ebc <HAL_Delay+0x24>)
 8009ea6:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8009ea8:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8009eaa:	bf18      	it	ne
 8009eac:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009eae:	f7ff ffed 	bl	8009e8c <HAL_GetTick>
 8009eb2:	1b43      	subs	r3, r0, r5
 8009eb4:	42a3      	cmp	r3, r4
 8009eb6:	d3fa      	bcc.n	8009eae <HAL_Delay+0x16>
  {
  }
}
 8009eb8:	bd38      	pop	{r3, r4, r5, pc}
 8009eba:	bf00      	nop
 8009ebc:	20000054 	.word	0x20000054

08009ec0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009ec0:	4907      	ldr	r1, [pc, #28]	; (8009ee0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8009ec2:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009ec4:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009ec8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009eca:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009ecc:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009ed0:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009ed2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009ed4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8009ed8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8009edc:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8009ede:	4770      	bx	lr
 8009ee0:	e000ed00 	.word	0xe000ed00

08009ee4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009ee4:	4b16      	ldr	r3, [pc, #88]	; (8009f40 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009ee6:	b530      	push	{r4, r5, lr}
 8009ee8:	68dc      	ldr	r4, [r3, #12]
 8009eea:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009eee:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009ef2:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009ef4:	2d04      	cmp	r5, #4
 8009ef6:	bf28      	it	cs
 8009ef8:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009efa:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009efc:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009f00:	bf8c      	ite	hi
 8009f02:	3c03      	subhi	r4, #3
 8009f04:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009f06:	fa03 f505 	lsl.w	r5, r3, r5
 8009f0a:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8009f0e:	40a3      	lsls	r3, r4
 8009f10:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009f14:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8009f16:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009f18:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f1c:	bfac      	ite	ge
 8009f1e:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f22:	4a08      	ldrlt	r2, [pc, #32]	; (8009f44 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f24:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f28:	bfb8      	it	lt
 8009f2a:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f2e:	b2db      	uxtb	r3, r3
 8009f30:	bfaa      	itet	ge
 8009f32:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f36:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f38:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8009f3c:	bd30      	pop	{r4, r5, pc}
 8009f3e:	bf00      	nop
 8009f40:	e000ed00 	.word	0xe000ed00
 8009f44:	e000ed14 	.word	0xe000ed14

08009f48 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009f48:	2800      	cmp	r0, #0
 8009f4a:	db08      	blt.n	8009f5e <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009f4c:	0942      	lsrs	r2, r0, #5
 8009f4e:	2301      	movs	r3, #1
 8009f50:	f000 001f 	and.w	r0, r0, #31
 8009f54:	fa03 f000 	lsl.w	r0, r3, r0
 8009f58:	4b01      	ldr	r3, [pc, #4]	; (8009f60 <HAL_NVIC_EnableIRQ+0x18>)
 8009f5a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009f5e:	4770      	bx	lr
 8009f60:	e000e100 	.word	0xe000e100

08009f64 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009f64:	2800      	cmp	r0, #0
 8009f66:	db0d      	blt.n	8009f84 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009f68:	0943      	lsrs	r3, r0, #5
 8009f6a:	2201      	movs	r2, #1
 8009f6c:	f000 001f 	and.w	r0, r0, #31
 8009f70:	fa02 f000 	lsl.w	r0, r2, r0
 8009f74:	3320      	adds	r3, #32
 8009f76:	4a04      	ldr	r2, [pc, #16]	; (8009f88 <HAL_NVIC_DisableIRQ+0x24>)
 8009f78:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8009f7c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8009f80:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8009f84:	4770      	bx	lr
 8009f86:	bf00      	nop
 8009f88:	e000e100 	.word	0xe000e100

08009f8c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8009f8c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009f8e:	4604      	mov	r4, r0
 8009f90:	b150      	cbz	r0, 8009fa8 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009f92:	7943      	ldrb	r3, [r0, #5]
 8009f94:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009f98:	b913      	cbnz	r3, 8009fa0 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8009f9a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8009f9c:	f7f8 fa16 	bl	80023cc <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009fa0:	2301      	movs	r3, #1
 8009fa2:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009fa4:	2000      	movs	r0, #0
}
 8009fa6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009fa8:	2001      	movs	r0, #1
 8009faa:	e7fc      	b.n	8009fa6 <HAL_CRC_Init+0x1a>

08009fac <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009fac:	6803      	ldr	r3, [r0, #0]
{
 8009fae:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009fb0:	4c08      	ldr	r4, [pc, #32]	; (8009fd4 <DMA_CalcBaseAndBitshift+0x28>)
{
 8009fb2:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009fb4:	b2d9      	uxtb	r1, r3
 8009fb6:	3910      	subs	r1, #16
 8009fb8:	2018      	movs	r0, #24
 8009fba:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009fbe:	5c20      	ldrb	r0, [r4, r0]
 8009fc0:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009fc2:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8009fc6:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 8009fca:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009fcc:	bf88      	it	hi
 8009fce:	3004      	addhi	r0, #4
 8009fd0:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8009fd2:	bd10      	pop	{r4, pc}
 8009fd4:	08029c2d 	.word	0x08029c2d

08009fd8 <HAL_DMA_Init>:
{
 8009fd8:	b570      	push	{r4, r5, r6, lr}
 8009fda:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009fdc:	f7ff ff56 	bl	8009e8c <HAL_GetTick>
 8009fe0:	4605      	mov	r5, r0
  if(hdma == NULL)
 8009fe2:	2c00      	cmp	r4, #0
 8009fe4:	d073      	beq.n	800a0ce <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8009fe6:	2302      	movs	r3, #2
 8009fe8:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8009fec:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8009fee:	2300      	movs	r3, #0
 8009ff0:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8009ff4:	6813      	ldr	r3, [r2, #0]
 8009ff6:	f023 0301 	bic.w	r3, r3, #1
 8009ffa:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8009ffc:	6821      	ldr	r1, [r4, #0]
 8009ffe:	680b      	ldr	r3, [r1, #0]
 800a000:	07d8      	lsls	r0, r3, #31
 800a002:	d42f      	bmi.n	800a064 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 800a004:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800a006:	4d33      	ldr	r5, [pc, #204]	; (800a0d4 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800a008:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800a00a:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800a00c:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 800a010:	4313      	orrs	r3, r2
 800a012:	68e2      	ldr	r2, [r4, #12]
 800a014:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800a016:	6922      	ldr	r2, [r4, #16]
 800a018:	4313      	orrs	r3, r2
 800a01a:	6962      	ldr	r2, [r4, #20]
 800a01c:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800a01e:	69e2      	ldr	r2, [r4, #28]
 800a020:	4303      	orrs	r3, r0
 800a022:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 800a024:	6a22      	ldr	r2, [r4, #32]
 800a026:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800a028:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a02a:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800a02c:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800a030:	bf02      	ittt	eq
 800a032:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 800a036:	4335      	orreq	r5, r6
 800a038:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 800a03a:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 800a03c:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800a03e:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800a040:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 800a044:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800a048:	d133      	bne.n	800a0b2 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 800a04a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800a04c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 800a04e:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800a050:	b37d      	cbz	r5, 800a0b2 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800a052:	b990      	cbnz	r0, 800a07a <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 800a054:	2a01      	cmp	r2, #1
 800a056:	d021      	beq.n	800a09c <HAL_DMA_Init+0xc4>
 800a058:	f032 0202 	bics.w	r2, r2, #2
 800a05c:	d129      	bne.n	800a0b2 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800a05e:	01ea      	lsls	r2, r5, #7
 800a060:	d527      	bpl.n	800a0b2 <HAL_DMA_Init+0xda>
 800a062:	e01e      	b.n	800a0a2 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800a064:	f7ff ff12 	bl	8009e8c <HAL_GetTick>
 800a068:	1b40      	subs	r0, r0, r5
 800a06a:	2805      	cmp	r0, #5
 800a06c:	d9c6      	bls.n	8009ffc <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800a06e:	2320      	movs	r3, #32
 800a070:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800a072:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 800a074:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 800a078:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800a07a:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 800a07e:	d114      	bne.n	800a0aa <HAL_DMA_Init+0xd2>
    switch (tmp)
 800a080:	2a03      	cmp	r2, #3
 800a082:	d816      	bhi.n	800a0b2 <HAL_DMA_Init+0xda>
 800a084:	a001      	add	r0, pc, #4	; (adr r0, 800a08c <HAL_DMA_Init+0xb4>)
 800a086:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800a08a:	bf00      	nop
 800a08c:	0800a0a3 	.word	0x0800a0a3
 800a090:	0800a05f 	.word	0x0800a05f
 800a094:	0800a0a3 	.word	0x0800a0a3
 800a098:	0800a09d 	.word	0x0800a09d
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800a09c:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 800a0a0:	d107      	bne.n	800a0b2 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800a0a2:	2340      	movs	r3, #64	; 0x40
 800a0a4:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800a0a6:	2001      	movs	r0, #1
 800a0a8:	e7e4      	b.n	800a074 <HAL_DMA_Init+0x9c>
    switch (tmp)
 800a0aa:	2a02      	cmp	r2, #2
 800a0ac:	d9f9      	bls.n	800a0a2 <HAL_DMA_Init+0xca>
 800a0ae:	2a03      	cmp	r2, #3
 800a0b0:	d0d5      	beq.n	800a05e <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 800a0b2:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800a0b4:	4620      	mov	r0, r4
 800a0b6:	f7ff ff79 	bl	8009fac <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800a0ba:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800a0bc:	233f      	movs	r3, #63	; 0x3f
 800a0be:	4093      	lsls	r3, r2
 800a0c0:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800a0c2:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 800a0c4:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800a0c6:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 800a0c8:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 800a0cc:	e7d4      	b.n	800a078 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 800a0ce:	2001      	movs	r0, #1
 800a0d0:	e7d2      	b.n	800a078 <HAL_DMA_Init+0xa0>
 800a0d2:	bf00      	nop
 800a0d4:	f010803f 	.word	0xf010803f

0800a0d8 <HAL_DMA_DeInit>:
{
 800a0d8:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 800a0da:	4605      	mov	r5, r0
 800a0dc:	b320      	cbz	r0, 800a128 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 800a0de:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a0e2:	2b02      	cmp	r3, #2
 800a0e4:	b2dc      	uxtb	r4, r3
 800a0e6:	d01d      	beq.n	800a124 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 800a0e8:	6803      	ldr	r3, [r0, #0]
 800a0ea:	681a      	ldr	r2, [r3, #0]
 800a0ec:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 800a0f0:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 800a0f2:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 800a0f4:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 800a0f6:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 800a0f8:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 800a0fa:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 800a0fc:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 800a0fe:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 800a100:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800a102:	f7ff ff53 	bl	8009fac <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800a106:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 800a108:	233f      	movs	r3, #63	; 0x3f
 800a10a:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 800a10c:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 800a110:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 800a114:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800a118:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800a11a:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 800a11c:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 800a120:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 800a124:	4620      	mov	r0, r4
 800a126:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800a128:	2401      	movs	r4, #1
 800a12a:	e7fb      	b.n	800a124 <HAL_DMA_DeInit+0x4c>

0800a12c <HAL_DMA_Abort>:
{
 800a12c:	b570      	push	{r4, r5, r6, lr}
 800a12e:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800a130:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 800a132:	f7ff feab 	bl	8009e8c <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800a136:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 800a13a:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 800a13c:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800a13e:	d006      	beq.n	800a14e <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800a140:	2380      	movs	r3, #128	; 0x80
 800a142:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 800a144:	2300      	movs	r3, #0
 800a146:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 800a14a:	2001      	movs	r0, #1
}
 800a14c:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800a14e:	6823      	ldr	r3, [r4, #0]
 800a150:	681a      	ldr	r2, [r3, #0]
 800a152:	f022 0216 	bic.w	r2, r2, #22
 800a156:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 800a158:	695a      	ldr	r2, [r3, #20]
 800a15a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800a15e:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800a160:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a162:	b90a      	cbnz	r2, 800a168 <HAL_DMA_Abort+0x3c>
 800a164:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800a166:	b11a      	cbz	r2, 800a170 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 800a168:	681a      	ldr	r2, [r3, #0]
 800a16a:	f022 0208 	bic.w	r2, r2, #8
 800a16e:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 800a170:	681a      	ldr	r2, [r3, #0]
 800a172:	f022 0201 	bic.w	r2, r2, #1
 800a176:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800a178:	6823      	ldr	r3, [r4, #0]
 800a17a:	681b      	ldr	r3, [r3, #0]
 800a17c:	f013 0301 	ands.w	r3, r3, #1
 800a180:	d10a      	bne.n	800a198 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800a182:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 800a184:	223f      	movs	r2, #63	; 0x3f
 800a186:	408a      	lsls	r2, r1
 800a188:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800a18a:	2201      	movs	r2, #1
 800a18c:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 800a190:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 800a194:	4618      	mov	r0, r3
 800a196:	e7d9      	b.n	800a14c <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800a198:	f7ff fe78 	bl	8009e8c <HAL_GetTick>
 800a19c:	1b40      	subs	r0, r0, r5
 800a19e:	2805      	cmp	r0, #5
 800a1a0:	d9ea      	bls.n	800a178 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800a1a2:	2320      	movs	r3, #32
 800a1a4:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800a1a6:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 800a1a8:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800a1aa:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 800a1ae:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 800a1b2:	e7cb      	b.n	800a14c <HAL_DMA_Abort+0x20>

0800a1b4 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800a1b4:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800a1b6:	4604      	mov	r4, r0
 800a1b8:	b330      	cbz	r0, 800a208 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800a1ba:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800a1be:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a1c2:	b91b      	cbnz	r3, 800a1cc <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800a1c4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800a1c8:	f7f8 f918 	bl	80023fc <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800a1cc:	6822      	ldr	r2, [r4, #0]
 800a1ce:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800a1d0:	2302      	movs	r3, #2
 800a1d2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800a1d6:	6813      	ldr	r3, [r2, #0]
 800a1d8:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800a1dc:	430b      	orrs	r3, r1
 800a1de:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800a1e0:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800a1e2:	68a1      	ldr	r1, [r4, #8]
 800a1e4:	f023 0307 	bic.w	r3, r3, #7
 800a1e8:	430b      	orrs	r3, r1
 800a1ea:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800a1ec:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a1ee:	68e1      	ldr	r1, [r4, #12]
 800a1f0:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800a1f4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800a1f8:	430b      	orrs	r3, r1
 800a1fa:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800a1fc:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800a1fe:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800a200:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800a202:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800a206:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a208:	2001      	movs	r0, #1
 800a20a:	e7fc      	b.n	800a206 <HAL_DMA2D_Init+0x52>

0800a20c <HAL_DMA2D_LineEventCallback>:
 800a20c:	4770      	bx	lr

0800a20e <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800a20e:	4770      	bx	lr

0800a210 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800a210:	6803      	ldr	r3, [r0, #0]
{
 800a212:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800a214:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800a216:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800a218:	07f2      	lsls	r2, r6, #31
{
 800a21a:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800a21c:	d514      	bpl.n	800a248 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800a21e:	05e9      	lsls	r1, r5, #23
 800a220:	d512      	bpl.n	800a248 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800a222:	681a      	ldr	r2, [r3, #0]
 800a224:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800a228:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800a22a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800a22c:	f042 0201 	orr.w	r2, r2, #1
 800a230:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800a232:	2201      	movs	r2, #1
 800a234:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800a236:	2304      	movs	r3, #4
 800a238:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a23c:	2300      	movs	r3, #0
 800a23e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800a242:	6943      	ldr	r3, [r0, #20]
 800a244:	b103      	cbz	r3, 800a248 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800a246:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800a248:	06b2      	lsls	r2, r6, #26
 800a24a:	d516      	bpl.n	800a27a <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 800a24c:	04ab      	lsls	r3, r5, #18
 800a24e:	d514      	bpl.n	800a27a <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800a250:	6823      	ldr	r3, [r4, #0]
 800a252:	681a      	ldr	r2, [r3, #0]
 800a254:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a258:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800a25a:	2220      	movs	r2, #32
 800a25c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800a25e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a260:	f043 0302 	orr.w	r3, r3, #2
 800a264:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800a266:	2304      	movs	r3, #4
 800a268:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a26c:	2300      	movs	r3, #0
 800a26e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800a272:	6963      	ldr	r3, [r4, #20]
 800a274:	b10b      	cbz	r3, 800a27a <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800a276:	4620      	mov	r0, r4
 800a278:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800a27a:	0730      	lsls	r0, r6, #28
 800a27c:	d516      	bpl.n	800a2ac <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800a27e:	0529      	lsls	r1, r5, #20
 800a280:	d514      	bpl.n	800a2ac <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800a282:	6823      	ldr	r3, [r4, #0]
 800a284:	681a      	ldr	r2, [r3, #0]
 800a286:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a28a:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800a28c:	2208      	movs	r2, #8
 800a28e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800a290:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a292:	f043 0304 	orr.w	r3, r3, #4
 800a296:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800a298:	2304      	movs	r3, #4
 800a29a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a29e:	2300      	movs	r3, #0
 800a2a0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800a2a4:	6963      	ldr	r3, [r4, #20]
 800a2a6:	b10b      	cbz	r3, 800a2ac <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800a2a8:	4620      	mov	r0, r4
 800a2aa:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800a2ac:	0772      	lsls	r2, r6, #29
 800a2ae:	d50b      	bpl.n	800a2c8 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800a2b0:	056b      	lsls	r3, r5, #21
 800a2b2:	d509      	bpl.n	800a2c8 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800a2b4:	6823      	ldr	r3, [r4, #0]
 800a2b6:	681a      	ldr	r2, [r3, #0]
 800a2b8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a2bc:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800a2be:	2204      	movs	r2, #4
 800a2c0:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800a2c2:	4620      	mov	r0, r4
 800a2c4:	f7ff ffa2 	bl	800a20c <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800a2c8:	07b0      	lsls	r0, r6, #30
 800a2ca:	d514      	bpl.n	800a2f6 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800a2cc:	05a9      	lsls	r1, r5, #22
 800a2ce:	d512      	bpl.n	800a2f6 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800a2d0:	6823      	ldr	r3, [r4, #0]
 800a2d2:	681a      	ldr	r2, [r3, #0]
 800a2d4:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800a2d8:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800a2da:	2202      	movs	r2, #2
 800a2dc:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800a2de:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a2e0:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800a2e2:	2301      	movs	r3, #1
 800a2e4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a2e8:	2300      	movs	r3, #0
 800a2ea:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 800a2ee:	6923      	ldr	r3, [r4, #16]
 800a2f0:	b10b      	cbz	r3, 800a2f6 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800a2f2:	4620      	mov	r0, r4
 800a2f4:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800a2f6:	06f2      	lsls	r2, r6, #27
 800a2f8:	d513      	bpl.n	800a322 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800a2fa:	04eb      	lsls	r3, r5, #19
 800a2fc:	d511      	bpl.n	800a322 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800a2fe:	6823      	ldr	r3, [r4, #0]
 800a300:	681a      	ldr	r2, [r3, #0]
 800a302:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800a306:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800a308:	2210      	movs	r2, #16
 800a30a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800a30c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a30e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800a310:	2301      	movs	r3, #1
 800a312:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a316:	2300      	movs	r3, #0
 800a318:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800a31c:	4620      	mov	r0, r4
 800a31e:	f7ff ff76 	bl	800a20e <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800a322:	bd70      	pop	{r4, r5, r6, pc}

0800a324 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800a324:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800a326:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800a32a:	2b01      	cmp	r3, #1
 800a32c:	f04f 0302 	mov.w	r3, #2
 800a330:	d02b      	beq.n	800a38a <HAL_DMA2D_ConfigLayer+0x66>
 800a332:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800a334:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800a338:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800a33c:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800a340:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800a344:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800a346:	4f18      	ldr	r7, [pc, #96]	; (800a3a8 <HAL_DMA2D_ConfigLayer+0x84>)
 800a348:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a34c:	3c09      	subs	r4, #9
 800a34e:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800a350:	bf9c      	itt	ls
 800a352:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800a356:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800a358:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800a35c:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800a35e:	bf88      	it	hi
 800a360:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800a364:	b999      	cbnz	r1, 800a38e <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800a366:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800a368:	4039      	ands	r1, r7
 800a36a:	430a      	orrs	r2, r1
 800a36c:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a36e:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800a370:	6982      	ldr	r2, [r0, #24]
 800a372:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a374:	d803      	bhi.n	800a37e <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800a376:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800a378:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 800a37c:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800a37e:	2301      	movs	r3, #1
 800a380:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800a384:	2300      	movs	r3, #0
 800a386:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800a38a:	4618      	mov	r0, r3

  return HAL_OK;
}
 800a38c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800a38e:	69d9      	ldr	r1, [r3, #28]
 800a390:	4039      	ands	r1, r7
 800a392:	430a      	orrs	r2, r1
 800a394:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800a396:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a398:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800a39a:	6992      	ldr	r2, [r2, #24]
 800a39c:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800a39e:	bf9c      	itt	ls
 800a3a0:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800a3a4:	621d      	strls	r5, [r3, #32]
 800a3a6:	e7ea      	b.n	800a37e <HAL_DMA2D_ConfigLayer+0x5a>
 800a3a8:	00fcfff0 	.word	0x00fcfff0

0800a3ac <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 800a3ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3b0:	4607      	mov	r7, r0
 800a3b2:	460d      	mov	r5, r1
 800a3b4:	4614      	mov	r4, r2
 800a3b6:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 800a3b8:	f7ff fd68 	bl	8009e8c <HAL_GetTick>
 800a3bc:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800a3be:	683b      	ldr	r3, [r7, #0]
 800a3c0:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 800a3c2:	07d2      	lsls	r2, r2, #31
 800a3c4:	d50a      	bpl.n	800a3dc <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800a3c6:	9906      	ldr	r1, [sp, #24]
 800a3c8:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 800a3cc:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800a3d0:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800a3d4:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 800a3d6:	2000      	movs	r0, #0
}
 800a3d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a3dc:	f7ff fd56 	bl	8009e8c <HAL_GetTick>
 800a3e0:	eba0 0008 	sub.w	r0, r0, r8
 800a3e4:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a3e8:	d9e9      	bls.n	800a3be <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 800a3ea:	2003      	movs	r0, #3
 800a3ec:	e7f4      	b.n	800a3d8 <DSI_ShortWrite+0x2c>

0800a3ee <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a3ee:	7c03      	ldrb	r3, [r0, #16]
 800a3f0:	2b01      	cmp	r3, #1
 800a3f2:	d05d      	beq.n	800a4b0 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 800a3f4:	6803      	ldr	r3, [r0, #0]
 800a3f6:	2200      	movs	r2, #0
 800a3f8:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800a3fc:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 800a400:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800a402:	bf48      	it	mi
 800a404:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 800a408:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800a40a:	bf42      	ittt	mi
 800a40c:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 800a410:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 800a414:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 800a418:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 800a41a:	bf42      	ittt	mi
 800a41c:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 800a420:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 800a424:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 800a428:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 800a42a:	bf42      	ittt	mi
 800a42c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a430:	f042 0201 	orrmi.w	r2, r2, #1
 800a434:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 800a438:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 800a43a:	bf42      	ittt	mi
 800a43c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a440:	f042 0202 	orrmi.w	r2, r2, #2
 800a444:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 800a448:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 800a44a:	bf42      	ittt	mi
 800a44c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a450:	f042 020c 	orrmi.w	r2, r2, #12
 800a454:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 800a458:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 800a45a:	bf42      	ittt	mi
 800a45c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a460:	f042 0210 	orrmi.w	r2, r2, #16
 800a464:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 800a468:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 800a46a:	bf42      	ittt	mi
 800a46c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a470:	f042 0220 	orrmi.w	r2, r2, #32
 800a474:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 800a478:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 800a47a:	bf42      	ittt	mi
 800a47c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a480:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800a484:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 800a488:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 800a48a:	bf42      	ittt	mi
 800a48c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a490:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800a494:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 800a498:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800a49a:	bf42      	ittt	mi
 800a49c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a4a0:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 800a4a4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 800a4a8:	2300      	movs	r3, #0
 800a4aa:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a4ac:	4618      	mov	r0, r3
 800a4ae:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a4b0:	2002      	movs	r0, #2
}
 800a4b2:	4770      	bx	lr

0800a4b4 <HAL_DSI_Init>:
{
 800a4b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a4b6:	460d      	mov	r5, r1
  if (hdsi == NULL)
 800a4b8:	4604      	mov	r4, r0
 800a4ba:	2800      	cmp	r0, #0
 800a4bc:	f000 80a9 	beq.w	800a612 <HAL_DSI_Init+0x15e>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 800a4c0:	7c43      	ldrb	r3, [r0, #17]
 800a4c2:	b90b      	cbnz	r3, 800a4c8 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 800a4c4:	f7f7 ffbc 	bl	8002440 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 800a4c8:	2303      	movs	r3, #3
 800a4ca:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 800a4cc:	2300      	movs	r3, #0
 800a4ce:	9300      	str	r3, [sp, #0]
 800a4d0:	6823      	ldr	r3, [r4, #0]
 800a4d2:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800a4d6:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800a4da:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800a4de:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 800a4e2:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800a4e6:	9300      	str	r3, [sp, #0]
 800a4e8:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 800a4ea:	f7ff fccf 	bl	8009e8c <HAL_GetTick>
 800a4ee:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 800a4f0:	6822      	ldr	r2, [r4, #0]
 800a4f2:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800a4f6:	04d9      	lsls	r1, r3, #19
 800a4f8:	d57a      	bpl.n	800a5f0 <HAL_DSI_Init+0x13c>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800a4fa:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a4fe:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 800a502:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 800a506:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800a50a:	e9d5 0300 	ldrd	r0, r3, [r5]
 800a50e:	02db      	lsls	r3, r3, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800a510:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 800a514:	68a8      	ldr	r0, [r5, #8]
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800a516:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800a51a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800a51e:	430b      	orrs	r3, r1
 800a520:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 800a524:	2300      	movs	r3, #0
 800a526:	9301      	str	r3, [sp, #4]
 800a528:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a52c:	f043 0301 	orr.w	r3, r3, #1
 800a530:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 800a534:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a538:	f003 0301 	and.w	r3, r3, #1
 800a53c:	9301      	str	r3, [sp, #4]
  HAL_Delay(1);
 800a53e:	2001      	movs	r0, #1
  __HAL_DSI_PLL_ENABLE(hdsi);
 800a540:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 800a542:	f7ff fca9 	bl	8009e98 <HAL_Delay>
  tickstart = HAL_GetTick();
 800a546:	f7ff fca1 	bl	8009e8c <HAL_GetTick>
 800a54a:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800a54c:	6823      	ldr	r3, [r4, #0]
 800a54e:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a552:	05d2      	lsls	r2, r2, #23
 800a554:	d556      	bpl.n	800a604 <HAL_DSI_Init+0x150>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800a556:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800a55a:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800a55c:	f042 0206 	orr.w	r2, r2, #6
 800a560:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 800a564:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800a568:	f022 0203 	bic.w	r2, r2, #3
 800a56c:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800a570:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800a574:	430a      	orrs	r2, r1
 800a576:	f042 0201 	orr.w	r2, r2, #1
 800a57a:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800a57e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800a582:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800a584:	f022 0203 	bic.w	r2, r2, #3
 800a588:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800a58c:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800a590:	430a      	orrs	r2, r1
 800a592:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800a596:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800a598:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800a59a:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800a59e:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800a5a0:	689a      	ldr	r2, [r3, #8]
 800a5a2:	430a      	orrs	r2, r1
 800a5a4:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800a5a6:	686a      	ldr	r2, [r5, #4]
 800a5a8:	491b      	ldr	r1, [pc, #108]	; (800a618 <HAL_DSI_Init+0x164>)
 800a5aa:	2a01      	cmp	r2, #1
 800a5ac:	bf38      	it	cc
 800a5ae:	2201      	movcc	r2, #1
 800a5b0:	434a      	muls	r2, r1
 800a5b2:	68a9      	ldr	r1, [r5, #8]
 800a5b4:	f001 0103 	and.w	r1, r1, #3
 800a5b8:	408a      	lsls	r2, r1
 800a5ba:	6829      	ldr	r1, [r5, #0]
 800a5bc:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 800a5c0:	4341      	muls	r1, r0
 800a5c2:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 800a5c6:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800a5ca:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a5ce:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800a5d2:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800a5d6:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800a5d8:	430a      	orrs	r2, r1
 800a5da:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800a5de:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800a5e2:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 800a5e6:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 800a5e8:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 800a5ea:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 800a5ec:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800a5ee:	e007      	b.n	800a600 <HAL_DSI_Init+0x14c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a5f0:	f7ff fc4c 	bl	8009e8c <HAL_GetTick>
 800a5f4:	1b80      	subs	r0, r0, r6
 800a5f6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a5fa:	f67f af79 	bls.w	800a4f0 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800a5fe:	2003      	movs	r0, #3
}
 800a600:	b002      	add	sp, #8
 800a602:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a604:	f7ff fc42 	bl	8009e8c <HAL_GetTick>
 800a608:	1b80      	subs	r0, r0, r6
 800a60a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a60e:	d99d      	bls.n	800a54c <HAL_DSI_Init+0x98>
 800a610:	e7f5      	b.n	800a5fe <HAL_DSI_Init+0x14a>
    return HAL_ERROR;
 800a612:	2001      	movs	r0, #1
 800a614:	e7f4      	b.n	800a600 <HAL_DSI_Init+0x14c>
 800a616:	bf00      	nop
 800a618:	003d0900 	.word	0x003d0900

0800a61c <HAL_DSI_ErrorCallback>:
 800a61c:	4770      	bx	lr

0800a61e <HAL_DSI_IRQHandler>:
{
  uint32_t ErrorStatus0;
  uint32_t ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800a61e:	6803      	ldr	r3, [r0, #0]
 800a620:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a624:	07d1      	lsls	r1, r2, #31
{
 800a626:	b510      	push	{r4, lr}
 800a628:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800a62a:	d508      	bpl.n	800a63e <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 800a62c:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a630:	07d2      	lsls	r2, r2, #31
 800a632:	d504      	bpl.n	800a63e <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 800a634:	2201      	movs	r2, #1
 800a636:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800a63a:	f7f6 fe35 	bl	80012a8 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800a63e:	6823      	ldr	r3, [r4, #0]
 800a640:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a644:	0791      	lsls	r1, r2, #30
 800a646:	d509      	bpl.n	800a65c <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 800a648:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a64c:	0792      	lsls	r2, r2, #30
 800a64e:	d505      	bpl.n	800a65c <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 800a650:	2202      	movs	r2, #2
 800a652:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 800a656:	4620      	mov	r0, r4
 800a658:	f7f6 fe5a 	bl	8001310 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 800a65c:	69a3      	ldr	r3, [r4, #24]
 800a65e:	2b00      	cmp	r3, #0
 800a660:	d04e      	beq.n	800a700 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 800a662:	6821      	ldr	r1, [r4, #0]
 800a664:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800a668:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 800a66c:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800a670:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800a672:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800a676:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800a678:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800a67a:	b119      	cbz	r1, 800a684 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 800a67c:	6961      	ldr	r1, [r4, #20]
 800a67e:	f041 0101 	orr.w	r1, r1, #1
 800a682:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 800a684:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 800a688:	bf1e      	ittt	ne
 800a68a:	6962      	ldrne	r2, [r4, #20]
 800a68c:	f042 0202 	orrne.w	r2, r2, #2
 800a690:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 800a692:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 800a694:	bf42      	ittt	mi
 800a696:	6962      	ldrmi	r2, [r4, #20]
 800a698:	f042 0204 	orrmi.w	r2, r2, #4
 800a69c:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800a69e:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 800a6a0:	bf42      	ittt	mi
 800a6a2:	6962      	ldrmi	r2, [r4, #20]
 800a6a4:	f042 0208 	orrmi.w	r2, r2, #8
 800a6a8:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800a6aa:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800a6ae:	bf1e      	ittt	ne
 800a6b0:	6962      	ldrne	r2, [r4, #20]
 800a6b2:	f042 0210 	orrne.w	r2, r2, #16
 800a6b6:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 800a6b8:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 800a6ba:	bf42      	ittt	mi
 800a6bc:	6962      	ldrmi	r2, [r4, #20]
 800a6be:	f042 0220 	orrmi.w	r2, r2, #32
 800a6c2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 800a6c4:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 800a6c6:	bf42      	ittt	mi
 800a6c8:	6962      	ldrmi	r2, [r4, #20]
 800a6ca:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800a6ce:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 800a6d0:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800a6d2:	bf42      	ittt	mi
 800a6d4:	6962      	ldrmi	r2, [r4, #20]
 800a6d6:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800a6da:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 800a6dc:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800a6de:	bf42      	ittt	mi
 800a6e0:	6962      	ldrmi	r2, [r4, #20]
 800a6e2:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 800a6e6:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 800a6e8:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 800a6ec:	bf1e      	ittt	ne
 800a6ee:	6963      	ldrne	r3, [r4, #20]
 800a6f0:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800a6f4:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800a6f6:	6963      	ldr	r3, [r4, #20]
 800a6f8:	b113      	cbz	r3, 800a700 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 800a6fa:	4620      	mov	r0, r4
 800a6fc:	f7ff ff8e 	bl	800a61c <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 800a700:	bd10      	pop	{r4, pc}

0800a702 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a702:	7c03      	ldrb	r3, [r0, #16]
 800a704:	2b01      	cmp	r3, #1
 800a706:	d00b      	beq.n	800a720 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 800a708:	6803      	ldr	r3, [r0, #0]
 800a70a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a70c:	f022 0203 	bic.w	r2, r2, #3
 800a710:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800a712:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a714:	4311      	orrs	r1, r2
 800a716:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a718:	2300      	movs	r3, #0
 800a71a:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a71c:	4618      	mov	r0, r3
 800a71e:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a720:	2002      	movs	r0, #2
}
 800a722:	4770      	bx	lr

0800a724 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 800a724:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a726:	7c03      	ldrb	r3, [r0, #16]
 800a728:	2b01      	cmp	r3, #1
 800a72a:	d06a      	beq.n	800a802 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800a72c:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800a72e:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800a730:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a732:	f042 0201 	orr.w	r2, r2, #1
 800a736:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 800a738:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800a73c:	f022 0201 	bic.w	r2, r2, #1
 800a740:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 800a744:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800a748:	f042 0201 	orr.w	r2, r2, #1
 800a74c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 800a750:	68da      	ldr	r2, [r3, #12]
 800a752:	f022 0203 	bic.w	r2, r2, #3
 800a756:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800a758:	68da      	ldr	r2, [r3, #12]
 800a75a:	4322      	orrs	r2, r4
 800a75c:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800a75e:	695a      	ldr	r2, [r3, #20]
 800a760:	f022 0207 	bic.w	r2, r2, #7
 800a764:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800a766:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 800a76a:	432a      	orrs	r2, r5
 800a76c:	694d      	ldr	r5, [r1, #20]
 800a76e:	695c      	ldr	r4, [r3, #20]
 800a770:	432a      	orrs	r2, r5
 800a772:	4322      	orrs	r2, r4
 800a774:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800a776:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800a778:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800a77a:	f022 020f 	bic.w	r2, r2, #15
 800a77e:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800a780:	691c      	ldr	r4, [r3, #16]
 800a782:	432c      	orrs	r4, r5
 800a784:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 800a786:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800a78a:	f024 040e 	bic.w	r4, r4, #14
 800a78e:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800a792:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800a796:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800a798:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 800a79c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 800a7a0:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800a7a2:	0c12      	lsrs	r2, r2, #16
 800a7a4:	0412      	lsls	r2, r2, #16
 800a7a6:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800a7a8:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800a7aa:	4322      	orrs	r2, r4
 800a7ac:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800a7ae:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800a7b2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800a7b6:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800a7ba:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 800a7be:	432a      	orrs	r2, r5
 800a7c0:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800a7c2:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800a7c6:	432a      	orrs	r2, r5
 800a7c8:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800a7ca:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800a7cc:	432a      	orrs	r2, r5
 800a7ce:	4322      	orrs	r2, r4
 800a7d0:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 800a7d4:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800a7d6:	f022 0201 	bic.w	r2, r2, #1
 800a7da:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800a7dc:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800a7de:	430a      	orrs	r2, r1
 800a7e0:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800a7e2:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a7e6:	f042 0201 	orr.w	r2, r2, #1
 800a7ea:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800a7ee:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a7f2:	f042 0202 	orr.w	r2, r2, #2
 800a7f6:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a7fa:	2300      	movs	r3, #0
 800a7fc:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a7fe:	4618      	mov	r0, r3
}
 800a800:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a802:	2002      	movs	r0, #2
 800a804:	e7fc      	b.n	800a800 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

0800a808 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 800a808:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a80a:	7c03      	ldrb	r3, [r0, #16]
 800a80c:	2b01      	cmp	r3, #1
 800a80e:	d02a      	beq.n	800a866 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 800a810:	6802      	ldr	r2, [r0, #0]
 800a812:	4b16      	ldr	r3, [pc, #88]	; (800a86c <HAL_DSI_ConfigCommand+0x64>)
 800a814:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800a816:	4023      	ands	r3, r4
 800a818:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800a81a:	e9d1 3500 	ldrd	r3, r5, [r1]
 800a81e:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 800a820:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800a822:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 800a824:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800a826:	68cd      	ldr	r5, [r1, #12]
 800a828:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800a82a:	690d      	ldr	r5, [r1, #16]
 800a82c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800a82e:	694d      	ldr	r5, [r1, #20]
 800a830:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800a832:	698d      	ldr	r5, [r1, #24]
 800a834:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800a836:	69cd      	ldr	r5, [r1, #28]
 800a838:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800a83a:	6a0d      	ldr	r5, [r1, #32]
 800a83c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 800a83e:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800a840:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 800a842:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800a844:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800a846:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800a848:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 800a84a:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800a84c:	4323      	orrs	r3, r4
 800a84e:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 800a850:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800a852:	f023 0302 	bic.w	r3, r3, #2
 800a856:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800a858:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800a85a:	430b      	orrs	r3, r1
 800a85c:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a85e:	2300      	movs	r3, #0
 800a860:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a862:	4618      	mov	r0, r3
}
 800a864:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a866:	2002      	movs	r0, #2
 800a868:	e7fc      	b.n	800a864 <HAL_DSI_ConfigCommand+0x5c>
 800a86a:	bf00      	nop
 800a86c:	fef080ff 	.word	0xfef080ff

0800a870 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a870:	7c03      	ldrb	r3, [r0, #16]
 800a872:	2b01      	cmp	r3, #1
 800a874:	d00b      	beq.n	800a88e <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800a876:	6803      	ldr	r3, [r0, #0]
 800a878:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a87a:	f022 021f 	bic.w	r2, r2, #31
 800a87e:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 800a880:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a882:	4311      	orrs	r1, r2
 800a884:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a886:	2300      	movs	r3, #0
 800a888:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a88a:	4618      	mov	r0, r3
 800a88c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a88e:	2002      	movs	r0, #2
}
 800a890:	4770      	bx	lr

0800a892 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 800a892:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a894:	7c03      	ldrb	r3, [r0, #16]
 800a896:	2b01      	cmp	r3, #1
 800a898:	d035      	beq.n	800a906 <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800a89a:	e9d1 2400 	ldrd	r2, r4, [r1]
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800a89e:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800a8a0:	4294      	cmp	r4, r2
 800a8a2:	bf38      	it	cc
 800a8a4:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800a8a6:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800a8aa:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 800a8ae:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800a8b2:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800a8b6:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800a8ba:	4322      	orrs	r2, r4
 800a8bc:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 800a8c0:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 800a8c4:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 800a8c8:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 800a8cc:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 800a8d0:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800a8d2:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 800a8d6:	690d      	ldr	r5, [r1, #16]
 800a8d8:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800a8dc:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800a8de:	432a      	orrs	r2, r5
 800a8e0:	4322      	orrs	r2, r4
 800a8e2:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800a8e6:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800a8ea:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800a8ee:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800a8f2:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800a8f6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800a8fa:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a8fe:	2300      	movs	r3, #0
 800a900:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a902:	4618      	mov	r0, r3
}
 800a904:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a906:	2002      	movs	r0, #2
 800a908:	e7fc      	b.n	800a904 <HAL_DSI_ConfigPhyTimer+0x72>
	...

0800a90c <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 800a90c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a90e:	7c03      	ldrb	r3, [r0, #16]
 800a910:	2b01      	cmp	r3, #1
 800a912:	d05c      	beq.n	800a9ce <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800a914:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800a916:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800a918:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800a91a:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800a91c:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800a920:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800a922:	689a      	ldr	r2, [r3, #8]
 800a924:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800a928:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800a92a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800a92c:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800a92e:	b292      	uxth	r2, r2
 800a930:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800a932:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800a934:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800a938:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800a93a:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800a93c:	4a25      	ldr	r2, [pc, #148]	; (800a9d4 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 800a93e:	4014      	ands	r4, r2
 800a940:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800a942:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800a944:	432c      	orrs	r4, r5
 800a946:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800a948:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800a94a:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800a94c:	4014      	ands	r4, r2
 800a94e:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800a950:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800a952:	432c      	orrs	r4, r5
 800a954:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800a956:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800a95a:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800a95c:	4014      	ands	r4, r2
 800a95e:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800a962:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800a966:	432c      	orrs	r4, r5
 800a968:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800a96c:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800a970:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800a972:	4014      	ands	r4, r2
 800a974:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800a978:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800a97c:	432c      	orrs	r4, r5
 800a97e:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800a982:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800a986:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 800a98a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800a98e:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800a992:	698d      	ldr	r5, [r1, #24]
 800a994:	432c      	orrs	r4, r5
 800a996:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800a99a:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800a99e:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800a9a0:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800a9a2:	4014      	ands	r4, r2
 800a9a4:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800a9a8:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 800a9ac:	432c      	orrs	r4, r5
 800a9ae:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800a9b2:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800a9b6:	4022      	ands	r2, r4
 800a9b8:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800a9bc:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800a9c0:	430a      	orrs	r2, r1
 800a9c2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a9c6:	2300      	movs	r3, #0
 800a9c8:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a9ca:	4618      	mov	r0, r3
}
 800a9cc:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a9ce:	2002      	movs	r0, #2
 800a9d0:	e7fc      	b.n	800a9cc <HAL_DSI_ConfigHostTimeouts+0xc0>
 800a9d2:	bf00      	nop
 800a9d4:	ffff0000 	.word	0xffff0000

0800a9d8 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a9d8:	7c03      	ldrb	r3, [r0, #16]
 800a9da:	2b01      	cmp	r3, #1
{
 800a9dc:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800a9de:	d01c      	beq.n	800aa1a <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 800a9e0:	6802      	ldr	r2, [r0, #0]
 800a9e2:	2300      	movs	r3, #0
 800a9e4:	9300      	str	r3, [sp, #0]
 800a9e6:	6851      	ldr	r1, [r2, #4]
 800a9e8:	f041 0101 	orr.w	r1, r1, #1
 800a9ec:	6051      	str	r1, [r2, #4]
 800a9ee:	6851      	ldr	r1, [r2, #4]
 800a9f0:	f001 0101 	and.w	r1, r1, #1
 800a9f4:	9100      	str	r1, [sp, #0]
 800a9f6:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800a9f8:	9301      	str	r3, [sp, #4]
 800a9fa:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800a9fe:	f041 0108 	orr.w	r1, r1, #8
 800aa02:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800aa06:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800aa0a:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800aa0c:	f002 0208 	and.w	r2, r2, #8
 800aa10:	9201      	str	r2, [sp, #4]
 800aa12:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 800aa14:	4618      	mov	r0, r3
}
 800aa16:	b002      	add	sp, #8
 800aa18:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800aa1a:	2002      	movs	r0, #2
 800aa1c:	e7fb      	b.n	800aa16 <HAL_DSI_Start+0x3e>

0800aa1e <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800aa1e:	7c03      	ldrb	r3, [r0, #16]
 800aa20:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800aa22:	bf1f      	itttt	ne
 800aa24:	6802      	ldrne	r2, [r0, #0]
 800aa26:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 800aa2a:	f043 0304 	orrne.w	r3, r3, #4
 800aa2e:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800aa32:	bf1d      	ittte	ne
 800aa34:	2300      	movne	r3, #0
 800aa36:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 800aa38:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 800aa3a:	2002      	moveq	r0, #2
}
 800aa3c:	4770      	bx	lr

0800aa3e <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800aa3e:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 800aa40:	7c05      	ldrb	r5, [r0, #16]
 800aa42:	2d01      	cmp	r5, #1
{
 800aa44:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800aa46:	d009      	beq.n	800aa5c <HAL_DSI_ShortWrite+0x1e>
 800aa48:	2501      	movs	r5, #1
 800aa4a:	7405      	strb	r5, [r0, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 800aa4c:	9d06      	ldr	r5, [sp, #24]
 800aa4e:	9500      	str	r5, [sp, #0]
 800aa50:	f7ff fcac 	bl	800a3ac <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800aa54:	2300      	movs	r3, #0
 800aa56:	7423      	strb	r3, [r4, #16]

  return status;
}
 800aa58:	b003      	add	sp, #12
 800aa5a:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800aa5c:	2002      	movs	r0, #2
 800aa5e:	e7fb      	b.n	800aa58 <HAL_DSI_ShortWrite+0x1a>

0800aa60 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 800aa60:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa64:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800aa66:	7c03      	ldrb	r3, [r0, #16]
 800aa68:	2b01      	cmp	r3, #1
{
 800aa6a:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 800aa6e:	4606      	mov	r6, r0
 800aa70:	460f      	mov	r7, r1
 800aa72:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 800aa74:	d053      	beq.n	800ab1e <HAL_DSI_LongWrite+0xbe>
 800aa76:	2301      	movs	r3, #1
 800aa78:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 800aa7a:	f7ff fa07 	bl	8009e8c <HAL_GetTick>
 800aa7e:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800aa80:	6831      	ldr	r1, [r6, #0]
 800aa82:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 800aa84:	f013 0a01 	ands.w	sl, r3, #1
 800aa88:	d01a      	beq.n	800aac0 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800aa8a:	2c03      	cmp	r4, #3
 800aa8c:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 800aa8e:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800aa92:	bf28      	it	cs
 800aa94:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 800aa96:	4282      	cmp	r2, r0
 800aa98:	d11e      	bne.n	800aad8 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 800aa9a:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 800aa9c:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 800aaa0:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 800aaa2:	bb1b      	cbnz	r3, 800aaec <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 800aaa4:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800aaa6:	0222      	lsls	r2, r4, #8
 800aaa8:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 800aaac:	b292      	uxth	r2, r2
 800aaae:	0224      	lsls	r4, r4, #8
 800aab0:	4315      	orrs	r5, r2
 800aab2:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800aab6:	432c      	orrs	r4, r5
 800aab8:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 800aaba:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 800aabc:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 800aabe:	e009      	b.n	800aad4 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800aac0:	f7ff f9e4 	bl	8009e8c <HAL_GetTick>
 800aac4:	eba0 000b 	sub.w	r0, r0, fp
 800aac8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800aacc:	d9d8      	bls.n	800aa80 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 800aace:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 800aad2:	2003      	movs	r0, #3
}
 800aad4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800aad8:	f818 3002 	ldrb.w	r3, [r8, r2]
 800aadc:	3201      	adds	r2, #1
 800aade:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 800aae2:	fa03 f30c 	lsl.w	r3, r3, ip
 800aae6:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 800aaea:	e7d4      	b.n	800aa96 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800aaec:	2b04      	cmp	r3, #4
    fifoword = 0U;
 800aaee:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800aaf2:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 800aaf4:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800aaf6:	bf28      	it	cs
 800aaf8:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800aafc:	f812 8000 	ldrb.w	r8, [r2, r0]
 800ab00:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 800ab04:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ab06:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 800ab0a:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ab0c:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 800ab10:	d1f4      	bne.n	800aafc <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 800ab12:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 800ab16:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800ab1a:	4472      	add	r2, lr
 800ab1c:	e7c1      	b.n	800aaa2 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 800ab1e:	2002      	movs	r0, #2
 800ab20:	e7d8      	b.n	800aad4 <HAL_DSI_LongWrite+0x74>

0800ab22 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800ab22:	7c03      	ldrb	r3, [r0, #16]
 800ab24:	2b01      	cmp	r3, #1
 800ab26:	d010      	beq.n	800ab4a <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 800ab28:	6803      	ldr	r3, [r0, #0]
 800ab2a:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800ab2e:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 800ab32:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800ab36:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800ab3a:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 800ab3e:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800ab42:	2300      	movs	r3, #0
 800ab44:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800ab46:	4618      	mov	r0, r3
 800ab48:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800ab4a:	2002      	movs	r0, #2
}
 800ab4c:	4770      	bx	lr
	...

0800ab50 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800ab50:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ab54:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 800ad18 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800ab58:	4a6d      	ldr	r2, [pc, #436]	; (800ad10 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ab5a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800ab5c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800ab5e:	2401      	movs	r4, #1
 800ab60:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800ab62:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 800ab66:	43ac      	bics	r4, r5
 800ab68:	f040 80b9 	bne.w	800acde <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800ab6c:	684d      	ldr	r5, [r1, #4]
 800ab6e:	f005 0403 	and.w	r4, r5, #3
 800ab72:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ab76:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800ab78:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ab7a:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800ab7e:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ab80:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800ab84:	d834      	bhi.n	800abf0 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800ab86:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ab88:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 800ab8c:	68cf      	ldr	r7, [r1, #12]
 800ab8e:	fa07 f708 	lsl.w	r7, r7, r8
 800ab92:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800ab96:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800ab98:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800ab9a:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800ab9e:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800aba2:	409f      	lsls	r7, r3
 800aba4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800aba8:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800abaa:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800abac:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800abb0:	688f      	ldr	r7, [r1, #8]
 800abb2:	fa07 f708 	lsl.w	r7, r7, r8
 800abb6:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800abba:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800abbc:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800abbe:	d119      	bne.n	800abf4 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 800abc0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800abc4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800abc8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800abcc:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800abd0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800abd4:	f04f 0e0f 	mov.w	lr, #15
 800abd8:	fa0e fe0b 	lsl.w	lr, lr, fp
 800abdc:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800abe0:	690f      	ldr	r7, [r1, #16]
 800abe2:	fa07 f70b 	lsl.w	r7, r7, fp
 800abe6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800abea:	f8ca 7020 	str.w	r7, [sl, #32]
 800abee:	e001      	b.n	800abf4 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800abf0:	2c03      	cmp	r4, #3
 800abf2:	d1da      	bne.n	800abaa <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800abf4:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800abf6:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800abfa:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800abfc:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800abfe:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 800ac02:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800ac04:	d06b      	beq.n	800acde <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ac06:	f04f 0a00 	mov.w	sl, #0
 800ac0a:	f8cd a004 	str.w	sl, [sp, #4]
 800ac0e:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ac12:	4c40      	ldr	r4, [pc, #256]	; (800ad14 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ac14:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 800ac18:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 800ac1c:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 800ac20:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 800ac24:	9601      	str	r6, [sp, #4]
 800ac26:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800ac28:	f023 0603 	bic.w	r6, r3, #3
 800ac2c:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 800ac30:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800ac34:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800ac38:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800ac3c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800ac40:	270f      	movs	r7, #15
 800ac42:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ac46:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800ac48:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ac4c:	d04e      	beq.n	800acec <HAL_GPIO_Init+0x19c>
 800ac4e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac52:	42a0      	cmp	r0, r4
 800ac54:	d04c      	beq.n	800acf0 <HAL_GPIO_Init+0x1a0>
 800ac56:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac5a:	42a0      	cmp	r0, r4
 800ac5c:	d04a      	beq.n	800acf4 <HAL_GPIO_Init+0x1a4>
 800ac5e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac62:	42a0      	cmp	r0, r4
 800ac64:	d048      	beq.n	800acf8 <HAL_GPIO_Init+0x1a8>
 800ac66:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac6a:	42a0      	cmp	r0, r4
 800ac6c:	d046      	beq.n	800acfc <HAL_GPIO_Init+0x1ac>
 800ac6e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac72:	42a0      	cmp	r0, r4
 800ac74:	d044      	beq.n	800ad00 <HAL_GPIO_Init+0x1b0>
 800ac76:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac7a:	42a0      	cmp	r0, r4
 800ac7c:	d042      	beq.n	800ad04 <HAL_GPIO_Init+0x1b4>
 800ac7e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac82:	42a0      	cmp	r0, r4
 800ac84:	d040      	beq.n	800ad08 <HAL_GPIO_Init+0x1b8>
 800ac86:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac8a:	42a0      	cmp	r0, r4
 800ac8c:	d03e      	beq.n	800ad0c <HAL_GPIO_Init+0x1bc>
 800ac8e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac92:	42a0      	cmp	r0, r4
 800ac94:	bf0c      	ite	eq
 800ac96:	2409      	moveq	r4, #9
 800ac98:	240a      	movne	r4, #10
 800ac9a:	fa04 f40e 	lsl.w	r4, r4, lr
 800ac9e:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800aca0:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 800aca2:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800aca4:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800aca8:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 800acaa:	bf54      	ite	pl
 800acac:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800acae:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 800acb2:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800acb4:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800acb6:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 800acb8:	bf54      	ite	pl
 800acba:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800acbc:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 800acc0:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 800acc2:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800acc4:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 800acc6:	bf54      	ite	pl
 800acc8:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800acca:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 800acce:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800acd0:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800acd2:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800acd4:	bf54      	ite	pl
 800acd6:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800acd8:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 800acdc:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800acde:	3301      	adds	r3, #1
 800ace0:	2b10      	cmp	r3, #16
 800ace2:	f47f af3b 	bne.w	800ab5c <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800ace6:	b003      	add	sp, #12
 800ace8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800acec:	4654      	mov	r4, sl
 800acee:	e7d4      	b.n	800ac9a <HAL_GPIO_Init+0x14a>
 800acf0:	2401      	movs	r4, #1
 800acf2:	e7d2      	b.n	800ac9a <HAL_GPIO_Init+0x14a>
 800acf4:	2402      	movs	r4, #2
 800acf6:	e7d0      	b.n	800ac9a <HAL_GPIO_Init+0x14a>
 800acf8:	2403      	movs	r4, #3
 800acfa:	e7ce      	b.n	800ac9a <HAL_GPIO_Init+0x14a>
 800acfc:	2404      	movs	r4, #4
 800acfe:	e7cc      	b.n	800ac9a <HAL_GPIO_Init+0x14a>
 800ad00:	2405      	movs	r4, #5
 800ad02:	e7ca      	b.n	800ac9a <HAL_GPIO_Init+0x14a>
 800ad04:	2406      	movs	r4, #6
 800ad06:	e7c8      	b.n	800ac9a <HAL_GPIO_Init+0x14a>
 800ad08:	2407      	movs	r4, #7
 800ad0a:	e7c6      	b.n	800ac9a <HAL_GPIO_Init+0x14a>
 800ad0c:	2408      	movs	r4, #8
 800ad0e:	e7c4      	b.n	800ac9a <HAL_GPIO_Init+0x14a>
 800ad10:	40013c00 	.word	0x40013c00
 800ad14:	40020000 	.word	0x40020000
 800ad18:	40023800 	.word	0x40023800

0800ad1c <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800ad1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800ad20:	4c4a      	ldr	r4, [pc, #296]	; (800ae4c <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800ad22:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800ae54 <HAL_GPIO_DeInit+0x138>
 800ad26:	f8df a130 	ldr.w	sl, [pc, #304]	; 800ae58 <HAL_GPIO_DeInit+0x13c>
 800ad2a:	f8df b130 	ldr.w	fp, [pc, #304]	; 800ae5c <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ad2e:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 800ad30:	2301      	movs	r3, #1
 800ad32:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 800ad36:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 800ad3a:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 800ad3e:	d16e      	bne.n	800ae1e <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 800ad40:	f022 0503 	bic.w	r5, r2, #3
 800ad44:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800ad48:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800ad4c:	4b40      	ldr	r3, [pc, #256]	; (800ae50 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 800ad4e:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800ad52:	f002 0c03 	and.w	ip, r2, #3
 800ad56:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800ad5a:	260f      	movs	r6, #15
 800ad5c:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800ad60:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800ad62:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800ad66:	d05f      	beq.n	800ae28 <HAL_GPIO_DeInit+0x10c>
 800ad68:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ad6c:	4298      	cmp	r0, r3
 800ad6e:	d05d      	beq.n	800ae2c <HAL_GPIO_DeInit+0x110>
 800ad70:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ad74:	4298      	cmp	r0, r3
 800ad76:	d05b      	beq.n	800ae30 <HAL_GPIO_DeInit+0x114>
 800ad78:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ad7c:	4298      	cmp	r0, r3
 800ad7e:	d059      	beq.n	800ae34 <HAL_GPIO_DeInit+0x118>
 800ad80:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ad84:	4298      	cmp	r0, r3
 800ad86:	d057      	beq.n	800ae38 <HAL_GPIO_DeInit+0x11c>
 800ad88:	4548      	cmp	r0, r9
 800ad8a:	d057      	beq.n	800ae3c <HAL_GPIO_DeInit+0x120>
 800ad8c:	4550      	cmp	r0, sl
 800ad8e:	d057      	beq.n	800ae40 <HAL_GPIO_DeInit+0x124>
 800ad90:	4558      	cmp	r0, fp
 800ad92:	d057      	beq.n	800ae44 <HAL_GPIO_DeInit+0x128>
 800ad94:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ad98:	4298      	cmp	r0, r3
 800ad9a:	d055      	beq.n	800ae48 <HAL_GPIO_DeInit+0x12c>
 800ad9c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ada0:	4298      	cmp	r0, r3
 800ada2:	bf0c      	ite	eq
 800ada4:	2309      	moveq	r3, #9
 800ada6:	230a      	movne	r3, #10
 800ada8:	fa03 f30c 	lsl.w	r3, r3, ip
 800adac:	4543      	cmp	r3, r8
 800adae:	d113      	bne.n	800add8 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800adb0:	6823      	ldr	r3, [r4, #0]
 800adb2:	ea23 0307 	bic.w	r3, r3, r7
 800adb6:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 800adb8:	6863      	ldr	r3, [r4, #4]
 800adba:	ea23 0307 	bic.w	r3, r3, r7
 800adbe:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 800adc0:	68e3      	ldr	r3, [r4, #12]
 800adc2:	ea23 0307 	bic.w	r3, r3, r7
 800adc6:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 800adc8:	68a3      	ldr	r3, [r4, #8]
 800adca:	ea23 0307 	bic.w	r3, r3, r7
 800adce:	60a3      	str	r3, [r4, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 800add0:	68ab      	ldr	r3, [r5, #8]
 800add2:	ea23 0306 	bic.w	r3, r3, r6
 800add6:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800add8:	6805      	ldr	r5, [r0, #0]
 800adda:	2603      	movs	r6, #3
 800addc:	0053      	lsls	r3, r2, #1
 800adde:	fa06 f303 	lsl.w	r3, r6, r3
 800ade2:	ea25 0503 	bic.w	r5, r5, r3
 800ade6:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800ade8:	fa22 f506 	lsr.w	r5, r2, r6
 800adec:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800adf0:	f002 0c07 	and.w	ip, r2, #7
 800adf4:	6a2e      	ldr	r6, [r5, #32]
 800adf6:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800adfa:	270f      	movs	r7, #15
 800adfc:	fa07 f70c 	lsl.w	r7, r7, ip
 800ae00:	ea26 0707 	bic.w	r7, r6, r7
 800ae04:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800ae06:	68c5      	ldr	r5, [r0, #12]
 800ae08:	ea25 0503 	bic.w	r5, r5, r3
 800ae0c:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800ae0e:	6845      	ldr	r5, [r0, #4]
 800ae10:	ea25 050e 	bic.w	r5, r5, lr
 800ae14:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ae16:	6885      	ldr	r5, [r0, #8]
 800ae18:	ea25 0303 	bic.w	r3, r5, r3
 800ae1c:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ae1e:	3201      	adds	r2, #1
 800ae20:	2a10      	cmp	r2, #16
 800ae22:	d185      	bne.n	800ad30 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 800ae24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800ae28:	2300      	movs	r3, #0
 800ae2a:	e7bd      	b.n	800ada8 <HAL_GPIO_DeInit+0x8c>
 800ae2c:	2301      	movs	r3, #1
 800ae2e:	e7bb      	b.n	800ada8 <HAL_GPIO_DeInit+0x8c>
 800ae30:	2302      	movs	r3, #2
 800ae32:	e7b9      	b.n	800ada8 <HAL_GPIO_DeInit+0x8c>
 800ae34:	2303      	movs	r3, #3
 800ae36:	e7b7      	b.n	800ada8 <HAL_GPIO_DeInit+0x8c>
 800ae38:	2304      	movs	r3, #4
 800ae3a:	e7b5      	b.n	800ada8 <HAL_GPIO_DeInit+0x8c>
 800ae3c:	2305      	movs	r3, #5
 800ae3e:	e7b3      	b.n	800ada8 <HAL_GPIO_DeInit+0x8c>
 800ae40:	2306      	movs	r3, #6
 800ae42:	e7b1      	b.n	800ada8 <HAL_GPIO_DeInit+0x8c>
 800ae44:	2307      	movs	r3, #7
 800ae46:	e7af      	b.n	800ada8 <HAL_GPIO_DeInit+0x8c>
 800ae48:	2308      	movs	r3, #8
 800ae4a:	e7ad      	b.n	800ada8 <HAL_GPIO_DeInit+0x8c>
 800ae4c:	40013c00 	.word	0x40013c00
 800ae50:	40020000 	.word	0x40020000
 800ae54:	40021400 	.word	0x40021400
 800ae58:	40021800 	.word	0x40021800
 800ae5c:	40021c00 	.word	0x40021c00

0800ae60 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800ae60:	6903      	ldr	r3, [r0, #16]
 800ae62:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800ae64:	bf14      	ite	ne
 800ae66:	2001      	movne	r0, #1
 800ae68:	2000      	moveq	r0, #0
 800ae6a:	4770      	bx	lr

0800ae6c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800ae6c:	b10a      	cbz	r2, 800ae72 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800ae6e:	6181      	str	r1, [r0, #24]
  }
}
 800ae70:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800ae72:	0409      	lsls	r1, r1, #16
 800ae74:	e7fb      	b.n	800ae6e <HAL_GPIO_WritePin+0x2>

0800ae76 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800ae76:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800ae78:	ea01 0203 	and.w	r2, r1, r3
 800ae7c:	ea21 0103 	bic.w	r1, r1, r3
 800ae80:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800ae84:	6181      	str	r1, [r0, #24]
}
 800ae86:	4770      	bx	lr

0800ae88 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ae88:	6801      	ldr	r1, [r0, #0]
 800ae8a:	694b      	ldr	r3, [r1, #20]
 800ae8c:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800ae90:	f04f 0200 	mov.w	r2, #0
 800ae94:	d010      	beq.n	800aeb8 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800ae96:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800ae9a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800ae9c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800ae9e:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800aea0:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800aea4:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800aea8:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800aeaa:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800aeae:	f043 0304 	orr.w	r3, r3, #4
 800aeb2:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800aeb4:	2001      	movs	r0, #1
 800aeb6:	4770      	bx	lr
  }
  return HAL_OK;
 800aeb8:	4618      	mov	r0, r3
}
 800aeba:	4770      	bx	lr

0800aebc <I2C_WaitOnFlagUntilTimeout>:
{
 800aebc:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800aec0:	4606      	mov	r6, r0
 800aec2:	460f      	mov	r7, r1
 800aec4:	4691      	mov	r9, r2
 800aec6:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aec8:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800aecc:	6833      	ldr	r3, [r6, #0]
 800aece:	f1ba 0f01 	cmp.w	sl, #1
 800aed2:	bf0c      	ite	eq
 800aed4:	695c      	ldreq	r4, [r3, #20]
 800aed6:	699c      	ldrne	r4, [r3, #24]
 800aed8:	ea27 0404 	bic.w	r4, r7, r4
 800aedc:	b2a4      	uxth	r4, r4
 800aede:	fab4 f484 	clz	r4, r4
 800aee2:	0964      	lsrs	r4, r4, #5
 800aee4:	45a1      	cmp	r9, r4
 800aee6:	d001      	beq.n	800aeec <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800aee8:	2000      	movs	r0, #0
 800aeea:	e017      	b.n	800af1c <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800aeec:	1c6a      	adds	r2, r5, #1
 800aeee:	d0ee      	beq.n	800aece <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aef0:	f7fe ffcc 	bl	8009e8c <HAL_GetTick>
 800aef4:	9b08      	ldr	r3, [sp, #32]
 800aef6:	1ac0      	subs	r0, r0, r3
 800aef8:	42a8      	cmp	r0, r5
 800aefa:	d801      	bhi.n	800af00 <I2C_WaitOnFlagUntilTimeout+0x44>
 800aefc:	2d00      	cmp	r5, #0
 800aefe:	d1e5      	bne.n	800aecc <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800af00:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800af02:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800af04:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800af06:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800af0a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800af0e:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800af10:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800af14:	f042 0220 	orr.w	r2, r2, #32
 800af18:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 800af1a:	2001      	movs	r0, #1
}
 800af1c:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800af20 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800af20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af24:	4604      	mov	r4, r0
 800af26:	460f      	mov	r7, r1
 800af28:	4616      	mov	r6, r2
 800af2a:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800af2c:	6825      	ldr	r5, [r4, #0]
 800af2e:	6968      	ldr	r0, [r5, #20]
 800af30:	ea27 0000 	bic.w	r0, r7, r0
 800af34:	b280      	uxth	r0, r0
 800af36:	b1b8      	cbz	r0, 800af68 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800af38:	696b      	ldr	r3, [r5, #20]
 800af3a:	055a      	lsls	r2, r3, #21
 800af3c:	d516      	bpl.n	800af6c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af3e:	682b      	ldr	r3, [r5, #0]
 800af40:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800af44:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800af46:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800af4a:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800af4c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800af4e:	2300      	movs	r3, #0
 800af50:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800af52:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800af56:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800af5a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800af5c:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800af60:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800af62:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800af66:	2001      	movs	r0, #1
}
 800af68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800af6c:	1c73      	adds	r3, r6, #1
 800af6e:	d0de      	beq.n	800af2e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800af70:	f7fe ff8c 	bl	8009e8c <HAL_GetTick>
 800af74:	eba0 0008 	sub.w	r0, r0, r8
 800af78:	42b0      	cmp	r0, r6
 800af7a:	d801      	bhi.n	800af80 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 800af7c:	2e00      	cmp	r6, #0
 800af7e:	d1d5      	bne.n	800af2c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800af80:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800af82:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800af84:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800af86:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800af8a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800af8e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800af90:	f042 0220 	orr.w	r2, r2, #32
 800af94:	e7e4      	b.n	800af60 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800af96 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800af96:	b570      	push	{r4, r5, r6, lr}
 800af98:	4604      	mov	r4, r0
 800af9a:	460d      	mov	r5, r1
 800af9c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800af9e:	6821      	ldr	r1, [r4, #0]
 800afa0:	694b      	ldr	r3, [r1, #20]
 800afa2:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800afa6:	d001      	beq.n	800afac <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800afa8:	2000      	movs	r0, #0
 800afaa:	e010      	b.n	800afce <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800afac:	694a      	ldr	r2, [r1, #20]
 800afae:	06d2      	lsls	r2, r2, #27
 800afb0:	d50e      	bpl.n	800afd0 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800afb2:	f06f 0210 	mvn.w	r2, #16
 800afb6:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800afb8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800afba:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800afbc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800afc0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800afc4:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800afc6:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800afc8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 800afcc:	2001      	movs	r0, #1
}
 800afce:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800afd0:	f7fe ff5c 	bl	8009e8c <HAL_GetTick>
 800afd4:	1b80      	subs	r0, r0, r6
 800afd6:	42a8      	cmp	r0, r5
 800afd8:	d801      	bhi.n	800afde <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800afda:	2d00      	cmp	r5, #0
 800afdc:	d1df      	bne.n	800af9e <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800afde:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 800afe0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800afe2:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800afe4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800afe8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800afec:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800afee:	f042 0220 	orr.w	r2, r2, #32
 800aff2:	e7e8      	b.n	800afc6 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800aff4 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800aff4:	b570      	push	{r4, r5, r6, lr}
 800aff6:	4604      	mov	r4, r0
 800aff8:	460d      	mov	r5, r1
 800affa:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800affc:	6823      	ldr	r3, [r4, #0]
 800affe:	695b      	ldr	r3, [r3, #20]
 800b000:	075b      	lsls	r3, r3, #29
 800b002:	d501      	bpl.n	800b008 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800b004:	2000      	movs	r0, #0
}
 800b006:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800b008:	4620      	mov	r0, r4
 800b00a:	f7ff ff3d 	bl	800ae88 <I2C_IsAcknowledgeFailed>
 800b00e:	b9a8      	cbnz	r0, 800b03c <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800b010:	1c6a      	adds	r2, r5, #1
 800b012:	d0f3      	beq.n	800affc <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b014:	f7fe ff3a 	bl	8009e8c <HAL_GetTick>
 800b018:	1b80      	subs	r0, r0, r6
 800b01a:	42a8      	cmp	r0, r5
 800b01c:	d801      	bhi.n	800b022 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800b01e:	2d00      	cmp	r5, #0
 800b020:	d1ec      	bne.n	800affc <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800b022:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800b024:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800b026:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800b028:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b02c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b030:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b032:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b036:	f042 0220 	orr.w	r2, r2, #32
 800b03a:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800b03c:	2001      	movs	r0, #1
 800b03e:	e7e2      	b.n	800b006 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800b040 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800b040:	b570      	push	{r4, r5, r6, lr}
 800b042:	4604      	mov	r4, r0
 800b044:	460d      	mov	r5, r1
 800b046:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b048:	6823      	ldr	r3, [r4, #0]
 800b04a:	695b      	ldr	r3, [r3, #20]
 800b04c:	061b      	lsls	r3, r3, #24
 800b04e:	d501      	bpl.n	800b054 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800b050:	2000      	movs	r0, #0
}
 800b052:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800b054:	4620      	mov	r0, r4
 800b056:	f7ff ff17 	bl	800ae88 <I2C_IsAcknowledgeFailed>
 800b05a:	b9a8      	cbnz	r0, 800b088 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800b05c:	1c6a      	adds	r2, r5, #1
 800b05e:	d0f3      	beq.n	800b048 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b060:	f7fe ff14 	bl	8009e8c <HAL_GetTick>
 800b064:	1b80      	subs	r0, r0, r6
 800b066:	42a8      	cmp	r0, r5
 800b068:	d801      	bhi.n	800b06e <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800b06a:	2d00      	cmp	r5, #0
 800b06c:	d1ec      	bne.n	800b048 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800b06e:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800b070:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800b072:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800b074:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b078:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b07c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b07e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b082:	f042 0220 	orr.w	r2, r2, #32
 800b086:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800b088:	2001      	movs	r0, #1
 800b08a:	e7e2      	b.n	800b052 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

0800b08c <I2C_RequestMemoryWrite>:
{
 800b08c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b090:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b092:	6802      	ldr	r2, [r0, #0]
{
 800b094:	b085      	sub	sp, #20
 800b096:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800b09a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b09c:	6813      	ldr	r3, [r2, #0]
 800b09e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b0a2:	6013      	str	r3, [r2, #0]
{
 800b0a4:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b0a6:	463b      	mov	r3, r7
 800b0a8:	f8cd 8000 	str.w	r8, [sp]
 800b0ac:	2200      	movs	r2, #0
 800b0ae:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800b0b2:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b0b4:	f7ff ff02 	bl	800aebc <I2C_WaitOnFlagUntilTimeout>
 800b0b8:	6823      	ldr	r3, [r4, #0]
 800b0ba:	b138      	cbz	r0, 800b0cc <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b0bc:	681b      	ldr	r3, [r3, #0]
 800b0be:	05db      	lsls	r3, r3, #23
 800b0c0:	d502      	bpl.n	800b0c8 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800b0c2:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b0c6:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800b0c8:	2003      	movs	r0, #3
 800b0ca:	e00a      	b.n	800b0e2 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800b0cc:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800b0d0:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800b0d2:	4919      	ldr	r1, [pc, #100]	; (800b138 <I2C_RequestMemoryWrite+0xac>)
 800b0d4:	4643      	mov	r3, r8
 800b0d6:	463a      	mov	r2, r7
 800b0d8:	4620      	mov	r0, r4
 800b0da:	f7ff ff21 	bl	800af20 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800b0de:	b118      	cbz	r0, 800b0e8 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800b0e0:	2001      	movs	r0, #1
}
 800b0e2:	b005      	add	sp, #20
 800b0e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b0e8:	6823      	ldr	r3, [r4, #0]
 800b0ea:	9003      	str	r0, [sp, #12]
 800b0ec:	695a      	ldr	r2, [r3, #20]
 800b0ee:	9203      	str	r2, [sp, #12]
 800b0f0:	699b      	ldr	r3, [r3, #24]
 800b0f2:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b0f4:	4642      	mov	r2, r8
 800b0f6:	4639      	mov	r1, r7
 800b0f8:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b0fa:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b0fc:	f7ff ffa0 	bl	800b040 <I2C_WaitOnTXEFlagUntilTimeout>
 800b100:	b140      	cbz	r0, 800b114 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b102:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b104:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b106:	bf01      	itttt	eq
 800b108:	6822      	ldreq	r2, [r4, #0]
 800b10a:	6813      	ldreq	r3, [r2, #0]
 800b10c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800b110:	6013      	streq	r3, [r2, #0]
 800b112:	e7e5      	b.n	800b0e0 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800b114:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b118:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800b11a:	d102      	bne.n	800b122 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800b11c:	b2ed      	uxtb	r5, r5
 800b11e:	611d      	str	r5, [r3, #16]
 800b120:	e7df      	b.n	800b0e2 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800b122:	0a2a      	lsrs	r2, r5, #8
 800b124:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b126:	4639      	mov	r1, r7
 800b128:	4642      	mov	r2, r8
 800b12a:	4620      	mov	r0, r4
 800b12c:	f7ff ff88 	bl	800b040 <I2C_WaitOnTXEFlagUntilTimeout>
 800b130:	2800      	cmp	r0, #0
 800b132:	d1e6      	bne.n	800b102 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800b134:	6823      	ldr	r3, [r4, #0]
 800b136:	e7f1      	b.n	800b11c <I2C_RequestMemoryWrite+0x90>
 800b138:	00010002 	.word	0x00010002

0800b13c <I2C_RequestMemoryRead>:
{
 800b13c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b140:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b142:	6803      	ldr	r3, [r0, #0]
{
 800b144:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b146:	681a      	ldr	r2, [r3, #0]
 800b148:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b14c:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b14e:	681a      	ldr	r2, [r3, #0]
{
 800b150:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b154:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b158:	601a      	str	r2, [r3, #0]
{
 800b15a:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b15c:	463b      	mov	r3, r7
 800b15e:	f8cd 8000 	str.w	r8, [sp]
 800b162:	2200      	movs	r2, #0
 800b164:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800b168:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b16a:	f7ff fea7 	bl	800aebc <I2C_WaitOnFlagUntilTimeout>
 800b16e:	6823      	ldr	r3, [r4, #0]
 800b170:	b148      	cbz	r0, 800b186 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b172:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b174:	05db      	lsls	r3, r3, #23
 800b176:	d502      	bpl.n	800b17e <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800b178:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b17c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800b17e:	2003      	movs	r0, #3
}
 800b180:	b004      	add	sp, #16
 800b182:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800b186:	fa5f f986 	uxtb.w	r9, r6
 800b18a:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800b18e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800b190:	492a      	ldr	r1, [pc, #168]	; (800b23c <I2C_RequestMemoryRead+0x100>)
 800b192:	4643      	mov	r3, r8
 800b194:	463a      	mov	r2, r7
 800b196:	4620      	mov	r0, r4
 800b198:	f7ff fec2 	bl	800af20 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800b19c:	b108      	cbz	r0, 800b1a2 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800b19e:	2001      	movs	r0, #1
 800b1a0:	e7ee      	b.n	800b180 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b1a2:	6823      	ldr	r3, [r4, #0]
 800b1a4:	9003      	str	r0, [sp, #12]
 800b1a6:	695a      	ldr	r2, [r3, #20]
 800b1a8:	9203      	str	r2, [sp, #12]
 800b1aa:	699b      	ldr	r3, [r3, #24]
 800b1ac:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b1ae:	4642      	mov	r2, r8
 800b1b0:	4639      	mov	r1, r7
 800b1b2:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b1b4:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b1b6:	f7ff ff43 	bl	800b040 <I2C_WaitOnTXEFlagUntilTimeout>
 800b1ba:	b140      	cbz	r0, 800b1ce <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b1bc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b1be:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b1c0:	bf01      	itttt	eq
 800b1c2:	6822      	ldreq	r2, [r4, #0]
 800b1c4:	6813      	ldreq	r3, [r2, #0]
 800b1c6:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800b1ca:	6013      	streq	r3, [r2, #0]
 800b1cc:	e7e7      	b.n	800b19e <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800b1ce:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b1d2:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800b1d4:	d11a      	bne.n	800b20c <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800b1d6:	b2ed      	uxtb	r5, r5
 800b1d8:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b1da:	4642      	mov	r2, r8
 800b1dc:	4639      	mov	r1, r7
 800b1de:	4620      	mov	r0, r4
 800b1e0:	f7ff ff2e 	bl	800b040 <I2C_WaitOnTXEFlagUntilTimeout>
 800b1e4:	2800      	cmp	r0, #0
 800b1e6:	d1e9      	bne.n	800b1bc <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b1e8:	6822      	ldr	r2, [r4, #0]
 800b1ea:	6813      	ldr	r3, [r2, #0]
 800b1ec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b1f0:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b1f2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800b1f6:	4602      	mov	r2, r0
 800b1f8:	f8cd 8000 	str.w	r8, [sp]
 800b1fc:	463b      	mov	r3, r7
 800b1fe:	4620      	mov	r0, r4
 800b200:	f7ff fe5c 	bl	800aebc <I2C_WaitOnFlagUntilTimeout>
 800b204:	6822      	ldr	r2, [r4, #0]
 800b206:	b160      	cbz	r0, 800b222 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b208:	6813      	ldr	r3, [r2, #0]
 800b20a:	e7b3      	b.n	800b174 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800b20c:	0a2a      	lsrs	r2, r5, #8
 800b20e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b210:	4639      	mov	r1, r7
 800b212:	4642      	mov	r2, r8
 800b214:	4620      	mov	r0, r4
 800b216:	f7ff ff13 	bl	800b040 <I2C_WaitOnTXEFlagUntilTimeout>
 800b21a:	2800      	cmp	r0, #0
 800b21c:	d1ce      	bne.n	800b1bc <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800b21e:	6823      	ldr	r3, [r4, #0]
 800b220:	e7d9      	b.n	800b1d6 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800b222:	f049 0301 	orr.w	r3, r9, #1
 800b226:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800b228:	4904      	ldr	r1, [pc, #16]	; (800b23c <I2C_RequestMemoryRead+0x100>)
 800b22a:	4643      	mov	r3, r8
 800b22c:	463a      	mov	r2, r7
 800b22e:	4620      	mov	r0, r4
 800b230:	f7ff fe76 	bl	800af20 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800b234:	3800      	subs	r0, #0
 800b236:	bf18      	it	ne
 800b238:	2001      	movne	r0, #1
 800b23a:	e7a1      	b.n	800b180 <I2C_RequestMemoryRead+0x44>
 800b23c:	00010002 	.word	0x00010002

0800b240 <HAL_I2C_Init>:
{
 800b240:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800b242:	4604      	mov	r4, r0
 800b244:	b908      	cbnz	r0, 800b24a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800b246:	2001      	movs	r0, #1
}
 800b248:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800b24a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b24e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b252:	b91b      	cbnz	r3, 800b25c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800b254:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800b258:	f7f7 f92e 	bl	80024b8 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800b25c:	2324      	movs	r3, #36	; 0x24
 800b25e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800b262:	6823      	ldr	r3, [r4, #0]
 800b264:	681a      	ldr	r2, [r3, #0]
 800b266:	f022 0201 	bic.w	r2, r2, #1
 800b26a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800b26c:	681a      	ldr	r2, [r3, #0]
 800b26e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b272:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800b274:	681a      	ldr	r2, [r3, #0]
 800b276:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800b27a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800b27c:	f001 f814 	bl	800c2a8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800b280:	4b3f      	ldr	r3, [pc, #252]	; (800b380 <HAL_I2C_Init+0x140>)
 800b282:	6865      	ldr	r5, [r4, #4]
 800b284:	429d      	cmp	r5, r3
 800b286:	bf94      	ite	ls
 800b288:	4b3e      	ldrls	r3, [pc, #248]	; (800b384 <HAL_I2C_Init+0x144>)
 800b28a:	4b3f      	ldrhi	r3, [pc, #252]	; (800b388 <HAL_I2C_Init+0x148>)
 800b28c:	4298      	cmp	r0, r3
 800b28e:	bf8c      	ite	hi
 800b290:	2300      	movhi	r3, #0
 800b292:	2301      	movls	r3, #1
 800b294:	2b00      	cmp	r3, #0
 800b296:	d1d6      	bne.n	800b246 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b298:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800b29a:	4e39      	ldr	r6, [pc, #228]	; (800b380 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b29c:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800b29e:	493b      	ldr	r1, [pc, #236]	; (800b38c <HAL_I2C_Init+0x14c>)
 800b2a0:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b2a4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800b2a8:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800b2aa:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b2ac:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800b2ae:	bf88      	it	hi
 800b2b0:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 800b2b4:	6a13      	ldr	r3, [r2, #32]
 800b2b6:	bf88      	it	hi
 800b2b8:	4371      	mulhi	r1, r6
 800b2ba:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800b2be:	bf84      	itt	hi
 800b2c0:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 800b2c4:	fbb1 f1f6 	udivhi	r1, r1, r6
 800b2c8:	3101      	adds	r1, #1
 800b2ca:	4319      	orrs	r1, r3
 800b2cc:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b2ce:	69d1      	ldr	r1, [r2, #28]
 800b2d0:	1e43      	subs	r3, r0, #1
 800b2d2:	482b      	ldr	r0, [pc, #172]	; (800b380 <HAL_I2C_Init+0x140>)
 800b2d4:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800b2d8:	4285      	cmp	r5, r0
 800b2da:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800b2de:	d832      	bhi.n	800b346 <HAL_I2C_Init+0x106>
 800b2e0:	006d      	lsls	r5, r5, #1
 800b2e2:	f640 70fc 	movw	r0, #4092	; 0xffc
 800b2e6:	fbb3 f3f5 	udiv	r3, r3, r5
 800b2ea:	3301      	adds	r3, #1
 800b2ec:	4203      	tst	r3, r0
 800b2ee:	d042      	beq.n	800b376 <HAL_I2C_Init+0x136>
 800b2f0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b2f4:	430b      	orrs	r3, r1
 800b2f6:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800b2f8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800b2fc:	6811      	ldr	r1, [r2, #0]
 800b2fe:	4303      	orrs	r3, r0
 800b300:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800b304:	430b      	orrs	r3, r1
 800b306:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800b308:	6891      	ldr	r1, [r2, #8]
 800b30a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800b30e:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800b312:	4303      	orrs	r3, r0
 800b314:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800b318:	430b      	orrs	r3, r1
 800b31a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800b31c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800b320:	68d1      	ldr	r1, [r2, #12]
 800b322:	4303      	orrs	r3, r0
 800b324:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800b328:	430b      	orrs	r3, r1
 800b32a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800b32c:	6813      	ldr	r3, [r2, #0]
 800b32e:	f043 0301 	orr.w	r3, r3, #1
 800b332:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b334:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800b336:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b338:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800b33a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800b33e:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800b340:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800b344:	e780      	b.n	800b248 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b346:	68a0      	ldr	r0, [r4, #8]
 800b348:	b950      	cbnz	r0, 800b360 <HAL_I2C_Init+0x120>
 800b34a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800b34e:	fbb3 f3f5 	udiv	r3, r3, r5
 800b352:	3301      	adds	r3, #1
 800b354:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b358:	b17b      	cbz	r3, 800b37a <HAL_I2C_Init+0x13a>
 800b35a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800b35e:	e7c9      	b.n	800b2f4 <HAL_I2C_Init+0xb4>
 800b360:	2019      	movs	r0, #25
 800b362:	4345      	muls	r5, r0
 800b364:	fbb3 f3f5 	udiv	r3, r3, r5
 800b368:	3301      	adds	r3, #1
 800b36a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b36e:	b123      	cbz	r3, 800b37a <HAL_I2C_Init+0x13a>
 800b370:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800b374:	e7be      	b.n	800b2f4 <HAL_I2C_Init+0xb4>
 800b376:	2304      	movs	r3, #4
 800b378:	e7bc      	b.n	800b2f4 <HAL_I2C_Init+0xb4>
 800b37a:	2301      	movs	r3, #1
 800b37c:	e7ba      	b.n	800b2f4 <HAL_I2C_Init+0xb4>
 800b37e:	bf00      	nop
 800b380:	000186a0 	.word	0x000186a0
 800b384:	001e847f 	.word	0x001e847f
 800b388:	003d08ff 	.word	0x003d08ff
 800b38c:	000f4240 	.word	0x000f4240

0800b390 <HAL_I2C_DeInit>:
{
 800b390:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800b392:	4604      	mov	r4, r0
 800b394:	b198      	cbz	r0, 800b3be <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800b396:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800b398:	2324      	movs	r3, #36	; 0x24
 800b39a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800b39e:	6813      	ldr	r3, [r2, #0]
 800b3a0:	f023 0301 	bic.w	r3, r3, #1
 800b3a4:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800b3a6:	f7f7 f8cb 	bl	8002540 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800b3aa:	2000      	movs	r0, #0
 800b3ac:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 800b3ae:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 800b3b2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800b3b6:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b3b8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 800b3bc:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b3be:	2001      	movs	r0, #1
 800b3c0:	e7fc      	b.n	800b3bc <HAL_I2C_DeInit+0x2c>
	...

0800b3c4 <HAL_I2C_Mem_Write>:
{
 800b3c4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b3c8:	4604      	mov	r4, r0
 800b3ca:	4699      	mov	r9, r3
 800b3cc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800b3ce:	460f      	mov	r7, r1
 800b3d0:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b3d2:	f7fe fd5b 	bl	8009e8c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b3d6:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b3da:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800b3dc:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b3de:	d003      	beq.n	800b3e8 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800b3e0:	2002      	movs	r0, #2
}
 800b3e2:	b003      	add	sp, #12
 800b3e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800b3e8:	9000      	str	r0, [sp, #0]
 800b3ea:	493c      	ldr	r1, [pc, #240]	; (800b4dc <HAL_I2C_Mem_Write+0x118>)
 800b3ec:	2319      	movs	r3, #25
 800b3ee:	2201      	movs	r2, #1
 800b3f0:	4620      	mov	r0, r4
 800b3f2:	f7ff fd63 	bl	800aebc <I2C_WaitOnFlagUntilTimeout>
 800b3f6:	2800      	cmp	r0, #0
 800b3f8:	d1f2      	bne.n	800b3e0 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800b3fa:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800b3fe:	2b01      	cmp	r3, #1
 800b400:	d0ee      	beq.n	800b3e0 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b402:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800b404:	2301      	movs	r3, #1
 800b406:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b40a:	6803      	ldr	r3, [r0, #0]
 800b40c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800b40e:	bf5e      	ittt	pl
 800b410:	6803      	ldrpl	r3, [r0, #0]
 800b412:	f043 0301 	orrpl.w	r3, r3, #1
 800b416:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b418:	6803      	ldr	r3, [r0, #0]
 800b41a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b41e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800b420:	2321      	movs	r3, #33	; 0x21
 800b422:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b426:	2340      	movs	r3, #64	; 0x40
 800b428:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b42c:	2300      	movs	r3, #0
 800b42e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800b430:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b432:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800b434:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800b438:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b43a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b43c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b43e:	4b28      	ldr	r3, [pc, #160]	; (800b4e0 <HAL_I2C_Mem_Write+0x11c>)
 800b440:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b442:	e9cd 6500 	strd	r6, r5, [sp]
 800b446:	464b      	mov	r3, r9
 800b448:	4642      	mov	r2, r8
 800b44a:	4639      	mov	r1, r7
 800b44c:	4620      	mov	r0, r4
 800b44e:	f7ff fe1d 	bl	800b08c <I2C_RequestMemoryWrite>
 800b452:	2800      	cmp	r0, #0
 800b454:	d02a      	beq.n	800b4ac <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800b456:	2001      	movs	r0, #1
 800b458:	e7c3      	b.n	800b3e2 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b45a:	f7ff fdf1 	bl	800b040 <I2C_WaitOnTXEFlagUntilTimeout>
 800b45e:	b140      	cbz	r0, 800b472 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b460:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b462:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b464:	bf01      	itttt	eq
 800b466:	6822      	ldreq	r2, [r4, #0]
 800b468:	6813      	ldreq	r3, [r2, #0]
 800b46a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800b46e:	6013      	streq	r3, [r2, #0]
 800b470:	e7f1      	b.n	800b456 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b472:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b474:	6827      	ldr	r7, [r4, #0]
 800b476:	461a      	mov	r2, r3
 800b478:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b47c:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800b47e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b480:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800b482:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800b484:	3a01      	subs	r2, #1
 800b486:	b292      	uxth	r2, r2
 800b488:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b48a:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800b48c:	1e48      	subs	r0, r1, #1
 800b48e:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b490:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800b492:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b494:	d50a      	bpl.n	800b4ac <HAL_I2C_Mem_Write+0xe8>
 800b496:	b148      	cbz	r0, 800b4ac <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b498:	785a      	ldrb	r2, [r3, #1]
 800b49a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800b49c:	3302      	adds	r3, #2
 800b49e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b4a0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b4a2:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800b4a4:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800b4a6:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800b4a8:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800b4aa:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800b4ac:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b4ae:	462a      	mov	r2, r5
 800b4b0:	4631      	mov	r1, r6
 800b4b2:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800b4b4:	2b00      	cmp	r3, #0
 800b4b6:	d1d0      	bne.n	800b45a <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b4b8:	f7ff fd9c 	bl	800aff4 <I2C_WaitOnBTFFlagUntilTimeout>
 800b4bc:	2800      	cmp	r0, #0
 800b4be:	d1cf      	bne.n	800b460 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b4c0:	6822      	ldr	r2, [r4, #0]
 800b4c2:	6813      	ldr	r3, [r2, #0]
 800b4c4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800b4c8:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b4ca:	2320      	movs	r3, #32
 800b4cc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800b4d0:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b4d4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800b4d8:	e783      	b.n	800b3e2 <HAL_I2C_Mem_Write+0x1e>
 800b4da:	bf00      	nop
 800b4dc:	00100002 	.word	0x00100002
 800b4e0:	ffff0000 	.word	0xffff0000

0800b4e4 <HAL_I2C_Mem_Read>:
{
 800b4e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b4e8:	4604      	mov	r4, r0
 800b4ea:	b087      	sub	sp, #28
 800b4ec:	4699      	mov	r9, r3
 800b4ee:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800b4f0:	460d      	mov	r5, r1
 800b4f2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b4f4:	f7fe fcca 	bl	8009e8c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b4f8:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b4fc:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800b4fe:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b500:	d004      	beq.n	800b50c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800b502:	2502      	movs	r5, #2
}
 800b504:	4628      	mov	r0, r5
 800b506:	b007      	add	sp, #28
 800b508:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800b50c:	9000      	str	r0, [sp, #0]
 800b50e:	4976      	ldr	r1, [pc, #472]	; (800b6e8 <HAL_I2C_Mem_Read+0x204>)
 800b510:	2319      	movs	r3, #25
 800b512:	2201      	movs	r2, #1
 800b514:	4620      	mov	r0, r4
 800b516:	f7ff fcd1 	bl	800aebc <I2C_WaitOnFlagUntilTimeout>
 800b51a:	2800      	cmp	r0, #0
 800b51c:	d1f1      	bne.n	800b502 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800b51e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800b522:	2b01      	cmp	r3, #1
 800b524:	d0ed      	beq.n	800b502 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b526:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800b528:	2301      	movs	r3, #1
 800b52a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b52e:	6803      	ldr	r3, [r0, #0]
 800b530:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800b532:	bf5e      	ittt	pl
 800b534:	6803      	ldrpl	r3, [r0, #0]
 800b536:	f043 0301 	orrpl.w	r3, r3, #1
 800b53a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b53c:	6803      	ldr	r3, [r0, #0]
 800b53e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b542:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800b544:	2322      	movs	r3, #34	; 0x22
 800b546:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b54a:	2340      	movs	r3, #64	; 0x40
 800b54c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b550:	2300      	movs	r3, #0
 800b552:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800b554:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b556:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800b558:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b55c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b55e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b560:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b562:	4b62      	ldr	r3, [pc, #392]	; (800b6ec <HAL_I2C_Mem_Read+0x208>)
 800b564:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b566:	4629      	mov	r1, r5
 800b568:	e9cd 7600 	strd	r7, r6, [sp]
 800b56c:	464b      	mov	r3, r9
 800b56e:	4642      	mov	r2, r8
 800b570:	4620      	mov	r0, r4
 800b572:	f7ff fde3 	bl	800b13c <I2C_RequestMemoryRead>
 800b576:	4605      	mov	r5, r0
 800b578:	b108      	cbz	r0, 800b57e <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800b57a:	2501      	movs	r5, #1
 800b57c:	e7c2      	b.n	800b504 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800b57e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b580:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800b582:	b9b2      	cbnz	r2, 800b5b2 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b584:	9002      	str	r0, [sp, #8]
 800b586:	695a      	ldr	r2, [r3, #20]
 800b588:	9202      	str	r2, [sp, #8]
 800b58a:	699a      	ldr	r2, [r3, #24]
 800b58c:	9202      	str	r2, [sp, #8]
 800b58e:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b590:	681a      	ldr	r2, [r3, #0]
 800b592:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b596:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b598:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800b6f0 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800b59c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b59e:	2b00      	cmp	r3, #0
 800b5a0:	d12c      	bne.n	800b5fc <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800b5a2:	2220      	movs	r2, #32
 800b5a4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800b5a8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b5ac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800b5b0:	e7a8      	b.n	800b504 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800b5b2:	2a01      	cmp	r2, #1
 800b5b4:	d10a      	bne.n	800b5cc <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5b6:	681a      	ldr	r2, [r3, #0]
 800b5b8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5bc:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5be:	9003      	str	r0, [sp, #12]
 800b5c0:	695a      	ldr	r2, [r3, #20]
 800b5c2:	9203      	str	r2, [sp, #12]
 800b5c4:	699a      	ldr	r2, [r3, #24]
 800b5c6:	9203      	str	r2, [sp, #12]
 800b5c8:	9a03      	ldr	r2, [sp, #12]
 800b5ca:	e7e1      	b.n	800b590 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800b5cc:	2a02      	cmp	r2, #2
 800b5ce:	d10e      	bne.n	800b5ee <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5d0:	681a      	ldr	r2, [r3, #0]
 800b5d2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5d6:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b5d8:	681a      	ldr	r2, [r3, #0]
 800b5da:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b5de:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5e0:	9004      	str	r0, [sp, #16]
 800b5e2:	695a      	ldr	r2, [r3, #20]
 800b5e4:	9204      	str	r2, [sp, #16]
 800b5e6:	699b      	ldr	r3, [r3, #24]
 800b5e8:	9304      	str	r3, [sp, #16]
 800b5ea:	9b04      	ldr	r3, [sp, #16]
 800b5ec:	e7d4      	b.n	800b598 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5ee:	9005      	str	r0, [sp, #20]
 800b5f0:	695a      	ldr	r2, [r3, #20]
 800b5f2:	9205      	str	r2, [sp, #20]
 800b5f4:	699b      	ldr	r3, [r3, #24]
 800b5f6:	9305      	str	r3, [sp, #20]
 800b5f8:	9b05      	ldr	r3, [sp, #20]
 800b5fa:	e7cd      	b.n	800b598 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800b5fc:	2b03      	cmp	r3, #3
 800b5fe:	d856      	bhi.n	800b6ae <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800b600:	2b01      	cmp	r3, #1
 800b602:	d115      	bne.n	800b630 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b604:	4632      	mov	r2, r6
 800b606:	4639      	mov	r1, r7
 800b608:	4620      	mov	r0, r4
 800b60a:	f7ff fcc4 	bl	800af96 <I2C_WaitOnRXNEFlagUntilTimeout>
 800b60e:	2800      	cmp	r0, #0
 800b610:	d1b3      	bne.n	800b57a <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b612:	6823      	ldr	r3, [r4, #0]
 800b614:	691a      	ldr	r2, [r3, #16]
 800b616:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b618:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b61a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b61c:	3301      	adds	r3, #1
 800b61e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b620:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b622:	3b01      	subs	r3, #1
 800b624:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b626:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b628:	3b01      	subs	r3, #1
 800b62a:	b29b      	uxth	r3, r3
 800b62c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b62e:	e7b5      	b.n	800b59c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800b630:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b632:	9600      	str	r6, [sp, #0]
 800b634:	463b      	mov	r3, r7
 800b636:	f04f 0200 	mov.w	r2, #0
 800b63a:	4641      	mov	r1, r8
 800b63c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800b63e:	d119      	bne.n	800b674 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b640:	f7ff fc3c 	bl	800aebc <I2C_WaitOnFlagUntilTimeout>
 800b644:	2800      	cmp	r0, #0
 800b646:	d198      	bne.n	800b57a <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b648:	6823      	ldr	r3, [r4, #0]
 800b64a:	681a      	ldr	r2, [r3, #0]
 800b64c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b650:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b652:	691a      	ldr	r2, [r3, #16]
 800b654:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b656:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b658:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b65a:	1c53      	adds	r3, r2, #1
 800b65c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b65e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b660:	3b01      	subs	r3, #1
 800b662:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b664:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b666:	3b01      	subs	r3, #1
 800b668:	b29b      	uxth	r3, r3
 800b66a:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b66c:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b66e:	691b      	ldr	r3, [r3, #16]
 800b670:	7053      	strb	r3, [r2, #1]
 800b672:	e7d2      	b.n	800b61a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b674:	f7ff fc22 	bl	800aebc <I2C_WaitOnFlagUntilTimeout>
 800b678:	2800      	cmp	r0, #0
 800b67a:	f47f af7e 	bne.w	800b57a <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b67e:	6823      	ldr	r3, [r4, #0]
 800b680:	681a      	ldr	r2, [r3, #0]
 800b682:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b686:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b688:	691a      	ldr	r2, [r3, #16]
 800b68a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b68c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b68e:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b690:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800b692:	3301      	adds	r3, #1
 800b694:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b696:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b698:	3b01      	subs	r3, #1
 800b69a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b69c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b69e:	3b01      	subs	r3, #1
 800b6a0:	b29b      	uxth	r3, r3
 800b6a2:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b6a4:	4602      	mov	r2, r0
 800b6a6:	463b      	mov	r3, r7
 800b6a8:	4641      	mov	r1, r8
 800b6aa:	4620      	mov	r0, r4
 800b6ac:	e7c8      	b.n	800b640 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b6ae:	4632      	mov	r2, r6
 800b6b0:	4639      	mov	r1, r7
 800b6b2:	4620      	mov	r0, r4
 800b6b4:	f7ff fc6f 	bl	800af96 <I2C_WaitOnRXNEFlagUntilTimeout>
 800b6b8:	2800      	cmp	r0, #0
 800b6ba:	f47f af5e 	bne.w	800b57a <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6be:	6823      	ldr	r3, [r4, #0]
 800b6c0:	691a      	ldr	r2, [r3, #16]
 800b6c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b6c4:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800b6c6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b6c8:	1c53      	adds	r3, r2, #1
 800b6ca:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800b6cc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b6ce:	3b01      	subs	r3, #1
 800b6d0:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800b6d2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b6d4:	3b01      	subs	r3, #1
 800b6d6:	b29b      	uxth	r3, r3
 800b6d8:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b6da:	6823      	ldr	r3, [r4, #0]
 800b6dc:	6959      	ldr	r1, [r3, #20]
 800b6de:	0749      	lsls	r1, r1, #29
 800b6e0:	f57f af5c 	bpl.w	800b59c <HAL_I2C_Mem_Read+0xb8>
 800b6e4:	e7c3      	b.n	800b66e <HAL_I2C_Mem_Read+0x18a>
 800b6e6:	bf00      	nop
 800b6e8:	00100002 	.word	0x00100002
 800b6ec:	ffff0000 	.word	0xffff0000
 800b6f0:	00010004 	.word	0x00010004

0800b6f4 <HAL_I2C_GetState>:
  return hi2c->State;
 800b6f4:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 800b6f8:	4770      	bx	lr

0800b6fa <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b6fa:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b6fc:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b700:	01d2      	lsls	r2, r2, #7
 800b702:	3284      	adds	r2, #132	; 0x84
 800b704:	1883      	adds	r3, r0, r2
{
 800b706:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b70a:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b70c:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b70e:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b710:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b714:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800b718:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b71a:	68c5      	ldr	r5, [r0, #12]
 800b71c:	f10c 0701 	add.w	r7, ip, #1
 800b720:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b724:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b728:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b72a:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b72c:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b730:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b732:	68c5      	ldr	r5, [r0, #12]
 800b734:	68ce      	ldr	r6, [r1, #12]
 800b736:	f3c5 050a 	ubfx	r5, r5, #0, #11
 800b73a:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b73c:	689d      	ldr	r5, [r3, #8]
 800b73e:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800b742:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b744:	68c7      	ldr	r7, [r0, #12]
 800b746:	688d      	ldr	r5, [r1, #8]
 800b748:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800b74c:	3501      	adds	r5, #1
 800b74e:	443d      	add	r5, r7
 800b750:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800b754:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b756:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b758:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b75a:	f025 0507 	bic.w	r5, r5, #7
 800b75e:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b760:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b764:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b766:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b768:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b76c:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b770:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b774:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800b778:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800b77c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800b780:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800b784:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b786:	695d      	ldr	r5, [r3, #20]
 800b788:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800b78c:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b78e:	694d      	ldr	r5, [r1, #20]
 800b790:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b792:	69dd      	ldr	r5, [r3, #28]
 800b794:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 800b798:	f025 0507 	bic.w	r5, r5, #7
 800b79c:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b79e:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800b7a2:	433d      	orrs	r5, r7
 800b7a4:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b7a6:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b7a8:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b7aa:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b7ae:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b7b0:	b31e      	cbz	r6, 800b7fa <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b7b2:	2e01      	cmp	r6, #1
 800b7b4:	d023      	beq.n	800b7fe <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800b7b6:	1eb5      	subs	r5, r6, #2
 800b7b8:	2d02      	cmp	r5, #2
 800b7ba:	d922      	bls.n	800b802 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800b7bc:	2e07      	cmp	r6, #7
 800b7be:	bf0c      	ite	eq
 800b7c0:	2502      	moveq	r5, #2
 800b7c2:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b7c4:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 800b7c6:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 800b7ca:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b7cc:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b7d0:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b7d2:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b7d4:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b7d6:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b7d8:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b7da:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800b7de:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b7e0:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800b7e2:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 800b7e6:	f024 0407 	bic.w	r4, r4, #7
 800b7ea:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b7ec:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b7ee:	5883      	ldr	r3, [r0, r2]
 800b7f0:	f043 0301 	orr.w	r3, r3, #1
 800b7f4:	5083      	str	r3, [r0, r2]
}
 800b7f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800b7fa:	2504      	movs	r5, #4
 800b7fc:	e7e2      	b.n	800b7c4 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800b7fe:	2503      	movs	r5, #3
 800b800:	e7e0      	b.n	800b7c4 <LTDC_SetConfig+0xca>
    tmp = 2U;
 800b802:	2502      	movs	r5, #2
 800b804:	e7de      	b.n	800b7c4 <LTDC_SetConfig+0xca>
	...

0800b808 <HAL_LTDC_Init>:
{
 800b808:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800b80a:	4604      	mov	r4, r0
 800b80c:	2800      	cmp	r0, #0
 800b80e:	d063      	beq.n	800b8d8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b810:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b814:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b818:	b91b      	cbnz	r3, 800b822 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800b81a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800b81e:	f7f6 fead 	bl	800257c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b822:	2302      	movs	r3, #2
 800b824:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b828:	6823      	ldr	r3, [r4, #0]
 800b82a:	699a      	ldr	r2, [r3, #24]
 800b82c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800b830:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b832:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800b836:	4302      	orrs	r2, r0
 800b838:	68e0      	ldr	r0, [r4, #12]
 800b83a:	6999      	ldr	r1, [r3, #24]
 800b83c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b83e:	6920      	ldr	r0, [r4, #16]
 800b840:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b842:	430a      	orrs	r2, r1
 800b844:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b846:	689a      	ldr	r2, [r3, #8]
 800b848:	4924      	ldr	r1, [pc, #144]	; (800b8dc <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b84a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b84c:	400a      	ands	r2, r1
 800b84e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b850:	689a      	ldr	r2, [r3, #8]
 800b852:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b856:	69a0      	ldr	r0, [r4, #24]
 800b858:	4302      	orrs	r2, r0
 800b85a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b85c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b85e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b860:	400a      	ands	r2, r1
 800b862:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b864:	68da      	ldr	r2, [r3, #12]
 800b866:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b86a:	6a20      	ldr	r0, [r4, #32]
 800b86c:	4302      	orrs	r2, r0
 800b86e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b870:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b872:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b874:	400a      	ands	r2, r1
 800b876:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b878:	691a      	ldr	r2, [r3, #16]
 800b87a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b87e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b880:	4302      	orrs	r2, r0
 800b882:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b884:	695a      	ldr	r2, [r3, #20]
 800b886:	4011      	ands	r1, r2
 800b888:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b88a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b88c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b88e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b892:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b894:	430a      	orrs	r2, r1
 800b896:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b898:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b89a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b89e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b8a2:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800b8a6:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b8a8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800b8aa:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800b8ae:	430a      	orrs	r2, r1
 800b8b0:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800b8b4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b8b8:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b8ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b8bc:	f042 0206 	orr.w	r2, r2, #6
 800b8c0:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800b8c2:	699a      	ldr	r2, [r3, #24]
 800b8c4:	f042 0201 	orr.w	r2, r2, #1
 800b8c8:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b8ca:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800b8cc:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b8ce:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800b8d2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800b8d6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800b8d8:	2001      	movs	r0, #1
 800b8da:	e7fc      	b.n	800b8d6 <HAL_LTDC_Init+0xce>
 800b8dc:	f000f800 	.word	0xf000f800

0800b8e0 <HAL_LTDC_ErrorCallback>:
 800b8e0:	4770      	bx	lr

0800b8e2 <HAL_LTDC_LineEventCallback>:
 800b8e2:	4770      	bx	lr

0800b8e4 <HAL_LTDC_ReloadEventCallback>:
 800b8e4:	4770      	bx	lr

0800b8e6 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b8e6:	6803      	ldr	r3, [r0, #0]
{
 800b8e8:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b8ea:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800b8ec:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b8ee:	0772      	lsls	r2, r6, #29
{
 800b8f0:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b8f2:	d514      	bpl.n	800b91e <HAL_LTDC_IRQHandler+0x38>
 800b8f4:	0769      	lsls	r1, r5, #29
 800b8f6:	d512      	bpl.n	800b91e <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800b8f8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b8fa:	f022 0204 	bic.w	r2, r2, #4
 800b8fe:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800b900:	2204      	movs	r2, #4
 800b902:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800b904:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800b908:	f043 0301 	orr.w	r3, r3, #1
 800b90c:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800b910:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b912:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b916:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b91a:	f7ff ffe1 	bl	800b8e0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800b91e:	07b2      	lsls	r2, r6, #30
 800b920:	d516      	bpl.n	800b950 <HAL_LTDC_IRQHandler+0x6a>
 800b922:	07ab      	lsls	r3, r5, #30
 800b924:	d514      	bpl.n	800b950 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800b926:	6823      	ldr	r3, [r4, #0]
 800b928:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b92a:	f022 0202 	bic.w	r2, r2, #2
 800b92e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b930:	2202      	movs	r2, #2
 800b932:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b934:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b938:	4313      	orrs	r3, r2
 800b93a:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b93e:	2304      	movs	r3, #4
 800b940:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b944:	2300      	movs	r3, #0
 800b946:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b94a:	4620      	mov	r0, r4
 800b94c:	f7ff ffc8 	bl	800b8e0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800b950:	07f0      	lsls	r0, r6, #31
 800b952:	d510      	bpl.n	800b976 <HAL_LTDC_IRQHandler+0x90>
 800b954:	07e9      	lsls	r1, r5, #31
 800b956:	d50e      	bpl.n	800b976 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b958:	6823      	ldr	r3, [r4, #0]
 800b95a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b95c:	f022 0201 	bic.w	r2, r2, #1
 800b960:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b962:	2201      	movs	r2, #1
 800b964:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b966:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b968:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b96c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b970:	4620      	mov	r0, r4
 800b972:	f7ff ffb6 	bl	800b8e2 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800b976:	0732      	lsls	r2, r6, #28
 800b978:	d511      	bpl.n	800b99e <HAL_LTDC_IRQHandler+0xb8>
 800b97a:	072b      	lsls	r3, r5, #28
 800b97c:	d50f      	bpl.n	800b99e <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b97e:	6823      	ldr	r3, [r4, #0]
 800b980:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b982:	f022 0208 	bic.w	r2, r2, #8
 800b986:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b988:	2208      	movs	r2, #8
 800b98a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800b98c:	2301      	movs	r3, #1
 800b98e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b992:	2300      	movs	r3, #0
 800b994:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800b998:	4620      	mov	r0, r4
 800b99a:	f7ff ffa3 	bl	800b8e4 <HAL_LTDC_ReloadEventCallback>
}
 800b99e:	bd70      	pop	{r4, r5, r6, pc}

0800b9a0 <HAL_LTDC_ConfigLayer>:
{
 800b9a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800b9a4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b9a8:	2b01      	cmp	r3, #1
{
 800b9aa:	4606      	mov	r6, r0
 800b9ac:	460f      	mov	r7, r1
 800b9ae:	4694      	mov	ip, r2
 800b9b0:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800b9b4:	d01f      	beq.n	800b9f6 <HAL_LTDC_ConfigLayer+0x56>
 800b9b6:	f04f 0801 	mov.w	r8, #1
 800b9ba:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b9be:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b9c2:	2434      	movs	r4, #52	; 0x34
 800b9c4:	460d      	mov	r5, r1
 800b9c6:	fb04 6402 	mla	r4, r4, r2, r6
 800b9ca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b9cc:	3438      	adds	r4, #56	; 0x38
 800b9ce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b9d0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b9d2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b9d4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b9d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b9d8:	682b      	ldr	r3, [r5, #0]
 800b9da:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800b9dc:	4630      	mov	r0, r6
 800b9de:	4662      	mov	r2, ip
 800b9e0:	4639      	mov	r1, r7
 800b9e2:	f7ff fe8a 	bl	800b6fa <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b9e6:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800b9e8:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b9ea:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b9ee:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b9f2:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800b9f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800b9fc <HAL_LTDC_SetPitch>:
{
 800b9fc:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800b9fe:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800ba02:	2b01      	cmp	r3, #1
 800ba04:	f04f 0302 	mov.w	r3, #2
 800ba08:	d02c      	beq.n	800ba64 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800ba0a:	2434      	movs	r4, #52	; 0x34
 800ba0c:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ba10:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800ba14:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800ba16:	b33c      	cbz	r4, 800ba68 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800ba18:	2c01      	cmp	r4, #1
 800ba1a:	d027      	beq.n	800ba6c <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800ba1c:	1ea5      	subs	r5, r4, #2
 800ba1e:	429d      	cmp	r5, r3
 800ba20:	d902      	bls.n	800ba28 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800ba22:	2c07      	cmp	r4, #7
 800ba24:	bf18      	it	ne
 800ba26:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800ba28:	6804      	ldr	r4, [r0, #0]
 800ba2a:	01d2      	lsls	r2, r2, #7
 800ba2c:	3284      	adds	r2, #132	; 0x84
 800ba2e:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 800ba30:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800ba32:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 800ba34:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 800ba38:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 800ba3c:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800ba3e:	4c0c      	ldr	r4, [pc, #48]	; (800ba70 <HAL_LTDC_SetPitch+0x74>)
 800ba40:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800ba42:	f045 0501 	orr.w	r5, r5, #1
 800ba46:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 800ba48:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 800ba4a:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800ba4e:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800ba50:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ba52:	f043 0301 	orr.w	r3, r3, #1
 800ba56:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 800ba58:	2301      	movs	r3, #1
 800ba5a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800ba5e:	2300      	movs	r3, #0
 800ba60:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800ba64:	4618      	mov	r0, r3
 800ba66:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 800ba68:	2304      	movs	r3, #4
 800ba6a:	e7dd      	b.n	800ba28 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 800ba6c:	2303      	movs	r3, #3
 800ba6e:	e7db      	b.n	800ba28 <HAL_LTDC_SetPitch+0x2c>
 800ba70:	40016800 	.word	0x40016800

0800ba74 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800ba74:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800ba76:	2300      	movs	r3, #0
 800ba78:	9301      	str	r3, [sp, #4]
 800ba7a:	4b18      	ldr	r3, [pc, #96]	; (800badc <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800ba7c:	4d18      	ldr	r5, [pc, #96]	; (800bae0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800ba7e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800ba80:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800ba84:	641a      	str	r2, [r3, #64]	; 0x40
 800ba86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ba88:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800ba8c:	9301      	str	r3, [sp, #4]
 800ba8e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800ba90:	4b14      	ldr	r3, [pc, #80]	; (800bae4 <HAL_PWREx_EnableOverDrive+0x70>)
 800ba92:	2201      	movs	r2, #1
 800ba94:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 800ba96:	f7fe f9f9 	bl	8009e8c <HAL_GetTick>
 800ba9a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800ba9c:	686b      	ldr	r3, [r5, #4]
 800ba9e:	03da      	lsls	r2, r3, #15
 800baa0:	d50b      	bpl.n	800baba <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800baa2:	4b10      	ldr	r3, [pc, #64]	; (800bae4 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800baa4:	4d0e      	ldr	r5, [pc, #56]	; (800bae0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800baa6:	2201      	movs	r2, #1
 800baa8:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 800baaa:	f7fe f9ef 	bl	8009e8c <HAL_GetTick>
 800baae:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800bab0:	686b      	ldr	r3, [r5, #4]
 800bab2:	039b      	lsls	r3, r3, #14
 800bab4:	d50a      	bpl.n	800bacc <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800bab6:	2000      	movs	r0, #0
 800bab8:	e006      	b.n	800bac8 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800baba:	f7fe f9e7 	bl	8009e8c <HAL_GetTick>
 800babe:	1b00      	subs	r0, r0, r4
 800bac0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800bac4:	d9ea      	bls.n	800ba9c <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800bac6:	2003      	movs	r0, #3
}
 800bac8:	b003      	add	sp, #12
 800baca:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800bacc:	f7fe f9de 	bl	8009e8c <HAL_GetTick>
 800bad0:	1b00      	subs	r0, r0, r4
 800bad2:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800bad6:	d9eb      	bls.n	800bab0 <HAL_PWREx_EnableOverDrive+0x3c>
 800bad8:	e7f5      	b.n	800bac6 <HAL_PWREx_EnableOverDrive+0x52>
 800bada:	bf00      	nop
 800badc:	40023800 	.word	0x40023800
 800bae0:	40007000 	.word	0x40007000
 800bae4:	420e0000 	.word	0x420e0000

0800bae8 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 800bae8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 800baec:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 800baee:	b13e      	cbz	r6, 800bb00 <QSPI_Config+0x18>
 800baf0:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800baf4:	bf1f      	itttt	ne
 800baf6:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 800baf8:	6804      	ldrne	r4, [r0, #0]
 800bafa:	f103 33ff 	addne.w	r3, r3, #4294967295
 800bafe:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800bb00:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bb04:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800bb08:	f1b9 0f00 	cmp.w	r9, #0
 800bb0c:	d04f      	beq.n	800bbae <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb0e:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800bb10:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb12:	f8d1 a000 	ldr.w	sl, [r1]
 800bb16:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 800bb1a:	ea46 0909 	orr.w	r9, r6, r9
 800bb1e:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 800bb22:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 800bb26:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800bb2a:	b335      	cbz	r5, 800bb7a <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800bb2c:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb2e:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800bb30:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bb32:	ea49 0505 	orr.w	r5, r9, r5
 800bb36:	b19f      	cbz	r7, 800bb60 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb38:	ea4a 0307 	orr.w	r3, sl, r7
 800bb3c:	4323      	orrs	r3, r4
 800bb3e:	ea43 0308 	orr.w	r3, r3, r8
 800bb42:	68cc      	ldr	r4, [r1, #12]
 800bb44:	ea43 030e 	orr.w	r3, r3, lr
 800bb48:	4333      	orrs	r3, r6
 800bb4a:	4323      	orrs	r3, r4
 800bb4c:	ea43 030c 	orr.w	r3, r3, ip
 800bb50:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800bb52:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb56:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800bb58:	d00d      	beq.n	800bb76 <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800bb5a:	684b      	ldr	r3, [r1, #4]
 800bb5c:	6183      	str	r3, [r0, #24]
 800bb5e:	e00a      	b.n	800bb76 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb60:	ea4a 0304 	orr.w	r3, sl, r4
 800bb64:	ea43 0308 	orr.w	r3, r3, r8
 800bb68:	ea43 030e 	orr.w	r3, r3, lr
 800bb6c:	4333      	orrs	r3, r6
 800bb6e:	ea43 030c 	orr.w	r3, r3, ip
 800bb72:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb74:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 800bb76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bb7a:	b16f      	cbz	r7, 800bb98 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb7c:	ea4a 0307 	orr.w	r3, sl, r7
 800bb80:	4323      	orrs	r3, r4
 800bb82:	ea43 0308 	orr.w	r3, r3, r8
 800bb86:	68cc      	ldr	r4, [r1, #12]
 800bb88:	ea43 030e 	orr.w	r3, r3, lr
 800bb8c:	4323      	orrs	r3, r4
 800bb8e:	ea43 030c 	orr.w	r3, r3, ip
 800bb92:	ea43 0309 	orr.w	r3, r3, r9
 800bb96:	e7dc      	b.n	800bb52 <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb98:	ea4a 0304 	orr.w	r3, sl, r4
 800bb9c:	ea43 0308 	orr.w	r3, r3, r8
 800bba0:	ea43 030e 	orr.w	r3, r3, lr
 800bba4:	ea43 030c 	orr.w	r3, r3, ip
 800bba8:	ea43 0309 	orr.w	r3, r3, r9
 800bbac:	e7e2      	b.n	800bb74 <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800bbae:	b345      	cbz	r5, 800bc02 <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800bbb0:	6804      	ldr	r4, [r0, #0]
 800bbb2:	688b      	ldr	r3, [r1, #8]
 800bbb4:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bbb6:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bbba:	694e      	ldr	r6, [r1, #20]
 800bbbc:	6908      	ldr	r0, [r1, #16]
 800bbbe:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 800bbc2:	ea43 0502 	orr.w	r5, r3, r2
 800bbc6:	04b6      	lsls	r6, r6, #18
 800bbc8:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bbcc:	b187      	cbz	r7, 800bbf0 <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bbce:	4338      	orrs	r0, r7
 800bbd0:	ea40 0008 	orr.w	r0, r0, r8
 800bbd4:	4303      	orrs	r3, r0
 800bbd6:	68c8      	ldr	r0, [r1, #12]
 800bbd8:	ea43 030c 	orr.w	r3, r3, ip
 800bbdc:	4303      	orrs	r3, r0
 800bbde:	4333      	orrs	r3, r6
 800bbe0:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800bbe2:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bbe6:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800bbe8:	d0c5      	beq.n	800bb76 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800bbea:	684b      	ldr	r3, [r1, #4]
 800bbec:	61a3      	str	r3, [r4, #24]
 800bbee:	e7c2      	b.n	800bb76 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bbf0:	ea40 0008 	orr.w	r0, r0, r8
 800bbf4:	4303      	orrs	r3, r0
 800bbf6:	ea43 030c 	orr.w	r3, r3, ip
 800bbfa:	4333      	orrs	r3, r6
 800bbfc:	432b      	orrs	r3, r5
 800bbfe:	6163      	str	r3, [r4, #20]
 800bc00:	e7b9      	b.n	800bb76 <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bc02:	b17f      	cbz	r7, 800bc24 <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bc04:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 800bc06:	6800      	ldr	r0, [r0, #0]
 800bc08:	ea46 0307 	orr.w	r3, r6, r7
 800bc0c:	4313      	orrs	r3, r2
 800bc0e:	4323      	orrs	r3, r4
 800bc10:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 800bc12:	4323      	orrs	r3, r4
 800bc14:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 800bc16:	4323      	orrs	r3, r4
 800bc18:	68cc      	ldr	r4, [r1, #12]
 800bc1a:	4323      	orrs	r3, r4
 800bc1c:	694c      	ldr	r4, [r1, #20]
 800bc1e:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800bc22:	e796      	b.n	800bb52 <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800bc24:	2e00      	cmp	r6, #0
 800bc26:	d0a6      	beq.n	800bb76 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bc28:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800bc2a:	6800      	ldr	r0, [r0, #0]
 800bc2c:	4333      	orrs	r3, r6
 800bc2e:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 800bc30:	431a      	orrs	r2, r3
 800bc32:	4332      	orrs	r2, r6
 800bc34:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 800bc36:	694b      	ldr	r3, [r1, #20]
 800bc38:	4332      	orrs	r2, r6
 800bc3a:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 800bc3e:	6142      	str	r2, [r0, #20]
}
 800bc40:	e799      	b.n	800bb76 <QSPI_Config+0x8e>

0800bc42 <QSPI_WaitFlagStateUntilTimeout>:
{
 800bc42:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc46:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800bc4a:	4604      	mov	r4, r0
 800bc4c:	460e      	mov	r6, r1
 800bc4e:	4615      	mov	r5, r2
 800bc50:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800bc52:	6822      	ldr	r2, [r4, #0]
 800bc54:	6893      	ldr	r3, [r2, #8]
 800bc56:	4233      	tst	r3, r6
 800bc58:	bf14      	ite	ne
 800bc5a:	2301      	movne	r3, #1
 800bc5c:	2300      	moveq	r3, #0
 800bc5e:	42ab      	cmp	r3, r5
 800bc60:	d101      	bne.n	800bc66 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 800bc62:	2000      	movs	r0, #0
 800bc64:	e012      	b.n	800bc8c <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800bc66:	f1b8 3fff 	cmp.w	r8, #4294967295
 800bc6a:	d0f3      	beq.n	800bc54 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bc6c:	f7fe f90e 	bl	8009e8c <HAL_GetTick>
 800bc70:	1bc0      	subs	r0, r0, r7
 800bc72:	4540      	cmp	r0, r8
 800bc74:	d802      	bhi.n	800bc7c <QSPI_WaitFlagStateUntilTimeout+0x3a>
 800bc76:	f1b8 0f00 	cmp.w	r8, #0
 800bc7a:	d1ea      	bne.n	800bc52 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800bc7c:	2304      	movs	r3, #4
 800bc7e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800bc82:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800bc84:	f043 0301 	orr.w	r3, r3, #1
 800bc88:	6463      	str	r3, [r4, #68]	; 0x44
 800bc8a:	2001      	movs	r0, #1
}
 800bc8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bc90 <HAL_QSPI_Init>:
{
 800bc90:	b530      	push	{r4, r5, lr}
 800bc92:	b085      	sub	sp, #20
 800bc94:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800bc96:	f7fe f8f9 	bl	8009e8c <HAL_GetTick>
 800bc9a:	4603      	mov	r3, r0
  if(hqspi == NULL)
 800bc9c:	2c00      	cmp	r4, #0
 800bc9e:	d047      	beq.n	800bd30 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 800bca0:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bca4:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 800bca8:	b94a      	cbnz	r2, 800bcbe <HAL_QSPI_Init+0x2e>
 800bcaa:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 800bcac:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 800bcb0:	4620      	mov	r0, r4
 800bcb2:	f7f6 fc95 	bl	80025e0 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800bcb6:	f241 3288 	movw	r2, #5000	; 0x1388
 800bcba:	9b03      	ldr	r3, [sp, #12]
 800bcbc:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 800bcbe:	6820      	ldr	r0, [r4, #0]
 800bcc0:	68a1      	ldr	r1, [r4, #8]
 800bcc2:	6802      	ldr	r2, [r0, #0]
 800bcc4:	3901      	subs	r1, #1
 800bcc6:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 800bcca:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800bcce:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800bcd0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800bcd2:	9200      	str	r2, [sp, #0]
 800bcd4:	2120      	movs	r1, #32
 800bcd6:	2200      	movs	r2, #0
 800bcd8:	4620      	mov	r0, r4
 800bcda:	f7ff ffb2 	bl	800bc42 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 800bcde:	bb10      	cbnz	r0, 800bd26 <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 800bce0:	69e5      	ldr	r5, [r4, #28]
 800bce2:	68e3      	ldr	r3, [r4, #12]
 800bce4:	6822      	ldr	r2, [r4, #0]
 800bce6:	432b      	orrs	r3, r5
 800bce8:	6a25      	ldr	r5, [r4, #32]
 800bcea:	6811      	ldr	r1, [r2, #0]
 800bcec:	432b      	orrs	r3, r5
 800bcee:	6865      	ldr	r5, [r4, #4]
 800bcf0:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800bcf4:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 800bcf8:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 800bcfc:	430b      	orrs	r3, r1
 800bcfe:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800bd00:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800bd04:	430b      	orrs	r3, r1
 800bd06:	6921      	ldr	r1, [r4, #16]
 800bd08:	6855      	ldr	r5, [r2, #4]
 800bd0a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bd0e:	4909      	ldr	r1, [pc, #36]	; (800bd34 <HAL_QSPI_Init+0xa4>)
 800bd10:	4029      	ands	r1, r5
 800bd12:	430b      	orrs	r3, r1
 800bd14:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800bd16:	6813      	ldr	r3, [r2, #0]
 800bd18:	f043 0301 	orr.w	r3, r3, #1
 800bd1c:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800bd1e:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bd20:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800bd22:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bd26:	2300      	movs	r3, #0
 800bd28:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bd2c:	b005      	add	sp, #20
 800bd2e:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 800bd30:	2001      	movs	r0, #1
 800bd32:	e7fb      	b.n	800bd2c <HAL_QSPI_Init+0x9c>
 800bd34:	ffe0f8fe 	.word	0xffe0f8fe

0800bd38 <HAL_QSPI_DeInit>:
{
 800bd38:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800bd3a:	4604      	mov	r4, r0
 800bd3c:	b168      	cbz	r0, 800bd5a <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 800bd3e:	6802      	ldr	r2, [r0, #0]
 800bd40:	6813      	ldr	r3, [r2, #0]
 800bd42:	f023 0301 	bic.w	r3, r3, #1
 800bd46:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800bd48:	f7f6 fca4 	bl	8002694 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bd4c:	2000      	movs	r0, #0
 800bd4e:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 800bd50:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bd54:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 800bd58:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800bd5a:	2001      	movs	r0, #1
 800bd5c:	e7fc      	b.n	800bd58 <HAL_QSPI_DeInit+0x20>

0800bd5e <HAL_QSPI_Command>:
{
 800bd5e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bd62:	4604      	mov	r4, r0
 800bd64:	b085      	sub	sp, #20
 800bd66:	4617      	mov	r7, r2
 800bd68:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800bd6a:	f7fe f88f 	bl	8009e8c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800bd6e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800bd72:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bd74:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bd76:	d034      	beq.n	800bde2 <HAL_QSPI_Command+0x84>
 800bd78:	2201      	movs	r2, #1
 800bd7a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bd7e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bd82:	2a01      	cmp	r2, #1
 800bd84:	fa5f f882 	uxtb.w	r8, r2
 800bd88:	f04f 0602 	mov.w	r6, #2
 800bd8c:	d127      	bne.n	800bdde <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bd8e:	2200      	movs	r2, #0
 800bd90:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800bd92:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 800bd94:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800bd98:	9700      	str	r7, [sp, #0]
 800bd9a:	2120      	movs	r1, #32
 800bd9c:	4620      	mov	r0, r4
 800bd9e:	f7ff ff50 	bl	800bc42 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800bda2:	4605      	mov	r5, r0
 800bda4:	b9a0      	cbnz	r0, 800bdd0 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800bda6:	4602      	mov	r2, r0
 800bda8:	4649      	mov	r1, r9
 800bdaa:	4620      	mov	r0, r4
 800bdac:	f7ff fe9c 	bl	800bae8 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 800bdb0:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 800bdb4:	9b03      	ldr	r3, [sp, #12]
 800bdb6:	b94a      	cbnz	r2, 800bdcc <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800bdb8:	9700      	str	r7, [sp, #0]
 800bdba:	4642      	mov	r2, r8
 800bdbc:	4631      	mov	r1, r6
 800bdbe:	4620      	mov	r0, r4
 800bdc0:	f7ff ff3f 	bl	800bc42 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800bdc4:	4605      	mov	r5, r0
 800bdc6:	b918      	cbnz	r0, 800bdd0 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800bdc8:	6823      	ldr	r3, [r4, #0]
 800bdca:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800bdcc:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bdd0:	2300      	movs	r3, #0
 800bdd2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bdd6:	4628      	mov	r0, r5
 800bdd8:	b005      	add	sp, #20
 800bdda:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 800bdde:	4635      	mov	r5, r6
 800bde0:	e7f6      	b.n	800bdd0 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 800bde2:	2502      	movs	r5, #2
 800bde4:	e7f7      	b.n	800bdd6 <HAL_QSPI_Command+0x78>

0800bde6 <HAL_QSPI_AutoPolling>:
{
 800bde6:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800bdea:	4604      	mov	r4, r0
 800bdec:	4615      	mov	r5, r2
 800bdee:	461e      	mov	r6, r3
 800bdf0:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800bdf2:	f7fe f84b 	bl	8009e8c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800bdf6:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800bdfa:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bdfc:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bdfe:	d040      	beq.n	800be82 <HAL_QSPI_AutoPolling+0x9c>
 800be00:	2201      	movs	r2, #1
 800be02:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800be06:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800be0a:	2a01      	cmp	r2, #1
 800be0c:	b2d7      	uxtb	r7, r2
 800be0e:	d136      	bne.n	800be7e <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800be10:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800be12:	2200      	movs	r2, #0
 800be14:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800be16:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800be18:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800be1c:	9600      	str	r6, [sp, #0]
 800be1e:	2120      	movs	r1, #32
 800be20:	4620      	mov	r0, r4
 800be22:	f7ff ff0e 	bl	800bc42 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800be26:	bb20      	cbnz	r0, 800be72 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800be28:	6821      	ldr	r1, [r4, #0]
 800be2a:	682a      	ldr	r2, [r5, #0]
 800be2c:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800be2e:	686a      	ldr	r2, [r5, #4]
 800be30:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800be32:	68aa      	ldr	r2, [r5, #8]
 800be34:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800be36:	680a      	ldr	r2, [r1, #0]
 800be38:	6928      	ldr	r0, [r5, #16]
 800be3a:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800be3e:	4302      	orrs	r2, r0
 800be40:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800be44:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 800be46:	68ea      	ldr	r2, [r5, #12]
 800be48:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800be4c:	4641      	mov	r1, r8
 800be4e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800be52:	4620      	mov	r0, r4
 800be54:	f7ff fe48 	bl	800bae8 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800be58:	9b03      	ldr	r3, [sp, #12]
 800be5a:	9600      	str	r6, [sp, #0]
 800be5c:	463a      	mov	r2, r7
 800be5e:	2108      	movs	r1, #8
 800be60:	4620      	mov	r0, r4
 800be62:	f7ff feee 	bl	800bc42 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800be66:	b920      	cbnz	r0, 800be72 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800be68:	6823      	ldr	r3, [r4, #0]
 800be6a:	2208      	movs	r2, #8
 800be6c:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800be6e:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800be72:	2300      	movs	r3, #0
 800be74:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800be78:	b004      	add	sp, #16
 800be7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 800be7e:	2002      	movs	r0, #2
 800be80:	e7f7      	b.n	800be72 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 800be82:	2002      	movs	r0, #2
 800be84:	e7f8      	b.n	800be78 <HAL_QSPI_AutoPolling+0x92>

0800be86 <HAL_QSPI_MemoryMapped>:
{
 800be86:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800be88:	4604      	mov	r4, r0
 800be8a:	4616      	mov	r6, r2
 800be8c:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800be8e:	f7fd fffd 	bl	8009e8c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800be92:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800be96:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800be98:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800be9a:	d032      	beq.n	800bf02 <HAL_QSPI_MemoryMapped+0x7c>
 800be9c:	2201      	movs	r2, #1
 800be9e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bea2:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bea6:	2a01      	cmp	r2, #1
 800bea8:	d129      	bne.n	800befe <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800beaa:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800beac:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800beae:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800beb0:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800beb4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800beb6:	9100      	str	r1, [sp, #0]
 800beb8:	4620      	mov	r0, r4
 800beba:	2120      	movs	r1, #32
 800bebc:	f7ff fec1 	bl	800bc42 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800bec0:	4605      	mov	r5, r0
 800bec2:	b9b0      	cbnz	r0, 800bef2 <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800bec4:	6823      	ldr	r3, [r4, #0]
 800bec6:	6872      	ldr	r2, [r6, #4]
 800bec8:	6818      	ldr	r0, [r3, #0]
 800beca:	f020 0008 	bic.w	r0, r0, #8
 800bece:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800bed0:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800bed2:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800bed4:	d107      	bne.n	800bee6 <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 800bed6:	6832      	ldr	r2, [r6, #0]
 800bed8:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 800beda:	2210      	movs	r2, #16
 800bedc:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 800bede:	681a      	ldr	r2, [r3, #0]
 800bee0:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800bee4:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 800bee6:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 800beea:	4639      	mov	r1, r7
 800beec:	4620      	mov	r0, r4
 800beee:	f7ff fdfb 	bl	800bae8 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800bef2:	2300      	movs	r3, #0
 800bef4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bef8:	4628      	mov	r0, r5
 800befa:	b003      	add	sp, #12
 800befc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 800befe:	2502      	movs	r5, #2
 800bf00:	e7f7      	b.n	800bef2 <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 800bf02:	2502      	movs	r5, #2
 800bf04:	e7f8      	b.n	800bef8 <HAL_QSPI_MemoryMapped+0x72>

0800bf06 <HAL_QSPI_Abort>:
{
 800bf06:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bf08:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800bf0a:	f7fd ffbf 	bl	8009e8c <HAL_GetTick>
 800bf0e:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800bf10:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 800bf14:	f010 0002 	ands.w	r0, r0, #2
 800bf18:	d03a      	beq.n	800bf90 <HAL_QSPI_Abort+0x8a>
    __HAL_UNLOCK(hqspi);
 800bf1a:	2200      	movs	r2, #0
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800bf1c:	6821      	ldr	r1, [r4, #0]
    __HAL_UNLOCK(hqspi);
 800bf1e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800bf22:	680a      	ldr	r2, [r1, #0]
 800bf24:	f012 0204 	ands.w	r2, r2, #4
 800bf28:	d034      	beq.n	800bf94 <HAL_QSPI_Abort+0x8e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800bf2a:	680a      	ldr	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800bf2c:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800bf2e:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800bf30:	f022 0204 	bic.w	r2, r2, #4
 800bf34:	600a      	str	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800bf36:	f7fe f8f9 	bl	800a12c <HAL_DMA_Abort>
      if(status != HAL_OK)
 800bf3a:	9b03      	ldr	r3, [sp, #12]
 800bf3c:	b118      	cbz	r0, 800bf46 <HAL_QSPI_Abort+0x40>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 800bf3e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800bf40:	f042 0204 	orr.w	r2, r2, #4
 800bf44:	6462      	str	r2, [r4, #68]	; 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 800bf46:	6822      	ldr	r2, [r4, #0]
 800bf48:	6891      	ldr	r1, [r2, #8]
 800bf4a:	0689      	lsls	r1, r1, #26
 800bf4c:	d51d      	bpl.n	800bf8a <HAL_QSPI_Abort+0x84>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800bf4e:	6811      	ldr	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800bf50:	9303      	str	r3, [sp, #12]
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800bf52:	f041 0102 	orr.w	r1, r1, #2
 800bf56:	6011      	str	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800bf58:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800bf5a:	9200      	str	r2, [sp, #0]
 800bf5c:	2102      	movs	r1, #2
 800bf5e:	2201      	movs	r2, #1
 800bf60:	4620      	mov	r0, r4
 800bf62:	f7ff fe6e 	bl	800bc42 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800bf66:	9b03      	ldr	r3, [sp, #12]
 800bf68:	b990      	cbnz	r0, 800bf90 <HAL_QSPI_Abort+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800bf6a:	6822      	ldr	r2, [r4, #0]
 800bf6c:	2102      	movs	r1, #2
 800bf6e:	60d1      	str	r1, [r2, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800bf70:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800bf72:	9200      	str	r2, [sp, #0]
 800bf74:	2120      	movs	r1, #32
 800bf76:	4602      	mov	r2, r0
 800bf78:	4620      	mov	r0, r4
 800bf7a:	f7ff fe62 	bl	800bc42 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800bf7e:	b938      	cbnz	r0, 800bf90 <HAL_QSPI_Abort+0x8a>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800bf80:	6822      	ldr	r2, [r4, #0]
 800bf82:	6953      	ldr	r3, [r2, #20]
 800bf84:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 800bf88:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 800bf8a:	2301      	movs	r3, #1
 800bf8c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 800bf90:	b004      	add	sp, #16
 800bf92:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef status = HAL_OK;
 800bf94:	4610      	mov	r0, r2
 800bf96:	e7d6      	b.n	800bf46 <HAL_QSPI_Abort+0x40>

0800bf98 <HAL_QSPI_Transmit>:
{
 800bf98:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bf9a:	4604      	mov	r4, r0
 800bf9c:	b085      	sub	sp, #20
 800bf9e:	4616      	mov	r6, r2
 800bfa0:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800bfa2:	f7fd ff73 	bl	8009e8c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800bfa6:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 800bfaa:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 800bfac:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bfae:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bfb0:	d04c      	beq.n	800c04c <HAL_QSPI_Transmit+0xb4>
 800bfb2:	2201      	movs	r2, #1
 800bfb4:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bfb8:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bfbc:	2a01      	cmp	r2, #1
 800bfbe:	b2d0      	uxtb	r0, r2
 800bfc0:	d142      	bne.n	800c048 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bfc2:	2200      	movs	r2, #0
 800bfc4:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800bfc6:	2f00      	cmp	r7, #0
 800bfc8:	d039      	beq.n	800c03e <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 800bfca:	2212      	movs	r2, #18
 800bfcc:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800bfd0:	692a      	ldr	r2, [r5, #16]
 800bfd2:	3201      	adds	r2, #1
 800bfd4:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800bfd6:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 800bfd8:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800bfda:	3201      	adds	r2, #1
 800bfdc:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800bfde:	696a      	ldr	r2, [r5, #20]
 800bfe0:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 800bfe4:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 800bfe6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bfe8:	b9a2      	cbnz	r2, 800c014 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800bfea:	9600      	str	r6, [sp, #0]
 800bfec:	2201      	movs	r2, #1
 800bfee:	2102      	movs	r1, #2
 800bff0:	4620      	mov	r0, r4
 800bff2:	f7ff fe26 	bl	800bc42 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800bff6:	b928      	cbnz	r0, 800c004 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800bff8:	6823      	ldr	r3, [r4, #0]
 800bffa:	2202      	movs	r2, #2
 800bffc:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800bffe:	4620      	mov	r0, r4
 800c000:	f7ff ff81 	bl	800bf06 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800c004:	2301      	movs	r3, #1
 800c006:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800c00a:	2300      	movs	r3, #0
 800c00c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800c010:	b005      	add	sp, #20
 800c012:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 800c014:	9600      	str	r6, [sp, #0]
 800c016:	2201      	movs	r2, #1
 800c018:	2104      	movs	r1, #4
 800c01a:	4620      	mov	r0, r4
 800c01c:	9303      	str	r3, [sp, #12]
 800c01e:	f7ff fe10 	bl	800bc42 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800c022:	2800      	cmp	r0, #0
 800c024:	d1ee      	bne.n	800c004 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800c026:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800c028:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800c02a:	7812      	ldrb	r2, [r2, #0]
 800c02c:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 800c030:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c032:	3201      	adds	r2, #1
 800c034:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800c036:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c038:	3a01      	subs	r2, #1
 800c03a:	62e2      	str	r2, [r4, #44]	; 0x2c
 800c03c:	e7d3      	b.n	800bfe6 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800c03e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c040:	f043 0308 	orr.w	r3, r3, #8
 800c044:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800c046:	e7e0      	b.n	800c00a <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 800c048:	2002      	movs	r0, #2
 800c04a:	e7de      	b.n	800c00a <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 800c04c:	2002      	movs	r0, #2
 800c04e:	e7df      	b.n	800c010 <HAL_QSPI_Transmit+0x78>

0800c050 <HAL_QSPI_Receive>:
{
 800c050:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c052:	4604      	mov	r4, r0
 800c054:	b085      	sub	sp, #20
 800c056:	4616      	mov	r6, r2
 800c058:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800c05a:	f7fd ff17 	bl	8009e8c <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800c05e:	6825      	ldr	r5, [r4, #0]
 800c060:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 800c064:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800c068:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800c06a:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800c06c:	d050      	beq.n	800c110 <HAL_QSPI_Receive+0xc0>
 800c06e:	2201      	movs	r2, #1
 800c070:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800c074:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800c078:	2a01      	cmp	r2, #1
 800c07a:	b2d0      	uxtb	r0, r2
 800c07c:	d146      	bne.n	800c10c <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800c07e:	2200      	movs	r2, #0
 800c080:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800c082:	2f00      	cmp	r7, #0
 800c084:	d03d      	beq.n	800c102 <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 800c086:	2222      	movs	r2, #34	; 0x22
 800c088:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800c08c:	692a      	ldr	r2, [r5, #16]
 800c08e:	3201      	adds	r2, #1
 800c090:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800c092:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 800c094:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800c096:	3201      	adds	r2, #1
 800c098:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800c09a:	6969      	ldr	r1, [r5, #20]
 800c09c:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 800c0a0:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800c0a4:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800c0a6:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 800c0aa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c0ac:	b9a2      	cbnz	r2, 800c0d8 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800c0ae:	9600      	str	r6, [sp, #0]
 800c0b0:	2201      	movs	r2, #1
 800c0b2:	2102      	movs	r1, #2
 800c0b4:	4620      	mov	r0, r4
 800c0b6:	f7ff fdc4 	bl	800bc42 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 800c0ba:	b928      	cbnz	r0, 800c0c8 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800c0bc:	6823      	ldr	r3, [r4, #0]
 800c0be:	2202      	movs	r2, #2
 800c0c0:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800c0c2:	4620      	mov	r0, r4
 800c0c4:	f7ff ff1f 	bl	800bf06 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800c0c8:	2301      	movs	r3, #1
 800c0ca:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800c0ce:	2300      	movs	r3, #0
 800c0d0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800c0d4:	b005      	add	sp, #20
 800c0d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 800c0d8:	9600      	str	r6, [sp, #0]
 800c0da:	2201      	movs	r2, #1
 800c0dc:	2106      	movs	r1, #6
 800c0de:	4620      	mov	r0, r4
 800c0e0:	9303      	str	r3, [sp, #12]
 800c0e2:	f7ff fdae 	bl	800bc42 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 800c0e6:	2800      	cmp	r0, #0
 800c0e8:	d1ee      	bne.n	800c0c8 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 800c0ea:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c0ec:	f895 1020 	ldrb.w	r1, [r5, #32]
 800c0f0:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 800c0f2:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800c0f4:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 800c0f6:	3201      	adds	r2, #1
 800c0f8:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800c0fa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c0fc:	3a01      	subs	r2, #1
 800c0fe:	63a2      	str	r2, [r4, #56]	; 0x38
 800c100:	e7d3      	b.n	800c0aa <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800c102:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c104:	f043 0308 	orr.w	r3, r3, #8
 800c108:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800c10a:	e7e0      	b.n	800c0ce <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 800c10c:	2002      	movs	r0, #2
 800c10e:	e7de      	b.n	800c0ce <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 800c110:	2002      	movs	r0, #2
 800c112:	e7df      	b.n	800c0d4 <HAL_QSPI_Receive+0x84>

0800c114 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c114:	4913      	ldr	r1, [pc, #76]	; (800c164 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800c116:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c118:	688b      	ldr	r3, [r1, #8]
 800c11a:	f003 030c 	and.w	r3, r3, #12
 800c11e:	2b04      	cmp	r3, #4
 800c120:	d01c      	beq.n	800c15c <HAL_RCC_GetSysClockFreq+0x48>
 800c122:	2b08      	cmp	r3, #8
 800c124:	d11c      	bne.n	800c160 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c126:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c128:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c12a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c12c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c130:	bf14      	ite	ne
 800c132:	480d      	ldrne	r0, [pc, #52]	; (800c168 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c134:	480d      	ldreq	r0, [pc, #52]	; (800c16c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c136:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c13a:	bf18      	it	ne
 800c13c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c13e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c142:	fba1 0100 	umull	r0, r1, r1, r0
 800c146:	f7f4 fc41 	bl	80009cc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c14a:	4b06      	ldr	r3, [pc, #24]	; (800c164 <HAL_RCC_GetSysClockFreq+0x50>)
 800c14c:	685b      	ldr	r3, [r3, #4]
 800c14e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c152:	3301      	adds	r3, #1
 800c154:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c156:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c15a:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c15c:	4802      	ldr	r0, [pc, #8]	; (800c168 <HAL_RCC_GetSysClockFreq+0x54>)
 800c15e:	e7fc      	b.n	800c15a <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800c160:	4802      	ldr	r0, [pc, #8]	; (800c16c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800c162:	e7fa      	b.n	800c15a <HAL_RCC_GetSysClockFreq+0x46>
 800c164:	40023800 	.word	0x40023800
 800c168:	007a1200 	.word	0x007a1200
 800c16c:	00f42400 	.word	0x00f42400

0800c170 <HAL_RCC_ClockConfig>:
{
 800c170:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c174:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800c176:	4604      	mov	r4, r0
 800c178:	b910      	cbnz	r0, 800c180 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800c17a:	2001      	movs	r0, #1
}
 800c17c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c180:	4b44      	ldr	r3, [pc, #272]	; (800c294 <HAL_RCC_ClockConfig+0x124>)
 800c182:	681a      	ldr	r2, [r3, #0]
 800c184:	f002 020f 	and.w	r2, r2, #15
 800c188:	428a      	cmp	r2, r1
 800c18a:	d328      	bcc.n	800c1de <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c18c:	6822      	ldr	r2, [r4, #0]
 800c18e:	0797      	lsls	r7, r2, #30
 800c190:	d42d      	bmi.n	800c1ee <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c192:	07d0      	lsls	r0, r2, #31
 800c194:	d441      	bmi.n	800c21a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c196:	4b3f      	ldr	r3, [pc, #252]	; (800c294 <HAL_RCC_ClockConfig+0x124>)
 800c198:	681a      	ldr	r2, [r3, #0]
 800c19a:	f002 020f 	and.w	r2, r2, #15
 800c19e:	42aa      	cmp	r2, r5
 800c1a0:	d866      	bhi.n	800c270 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c1a2:	6822      	ldr	r2, [r4, #0]
 800c1a4:	0751      	lsls	r1, r2, #29
 800c1a6:	d46c      	bmi.n	800c282 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c1a8:	0713      	lsls	r3, r2, #28
 800c1aa:	d507      	bpl.n	800c1bc <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c1ac:	4a3a      	ldr	r2, [pc, #232]	; (800c298 <HAL_RCC_ClockConfig+0x128>)
 800c1ae:	6921      	ldr	r1, [r4, #16]
 800c1b0:	6893      	ldr	r3, [r2, #8]
 800c1b2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c1b6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c1ba:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c1bc:	f7ff ffaa 	bl	800c114 <HAL_RCC_GetSysClockFreq>
 800c1c0:	4b35      	ldr	r3, [pc, #212]	; (800c298 <HAL_RCC_ClockConfig+0x128>)
 800c1c2:	4a36      	ldr	r2, [pc, #216]	; (800c29c <HAL_RCC_ClockConfig+0x12c>)
 800c1c4:	689b      	ldr	r3, [r3, #8]
 800c1c6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800c1ca:	5cd3      	ldrb	r3, [r2, r3]
 800c1cc:	40d8      	lsrs	r0, r3
 800c1ce:	4b34      	ldr	r3, [pc, #208]	; (800c2a0 <HAL_RCC_ClockConfig+0x130>)
 800c1d0:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800c1d2:	4b34      	ldr	r3, [pc, #208]	; (800c2a4 <HAL_RCC_ClockConfig+0x134>)
 800c1d4:	6818      	ldr	r0, [r3, #0]
 800c1d6:	f7f6 fb81 	bl	80028dc <HAL_InitTick>
  return HAL_OK;
 800c1da:	2000      	movs	r0, #0
 800c1dc:	e7ce      	b.n	800c17c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c1de:	b2ca      	uxtb	r2, r1
 800c1e0:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c1e2:	681b      	ldr	r3, [r3, #0]
 800c1e4:	f003 030f 	and.w	r3, r3, #15
 800c1e8:	428b      	cmp	r3, r1
 800c1ea:	d1c6      	bne.n	800c17a <HAL_RCC_ClockConfig+0xa>
 800c1ec:	e7ce      	b.n	800c18c <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c1ee:	4b2a      	ldr	r3, [pc, #168]	; (800c298 <HAL_RCC_ClockConfig+0x128>)
 800c1f0:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c1f4:	bf1e      	ittt	ne
 800c1f6:	6899      	ldrne	r1, [r3, #8]
 800c1f8:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800c1fc:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c1fe:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c200:	bf42      	ittt	mi
 800c202:	6899      	ldrmi	r1, [r3, #8]
 800c204:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 800c208:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c20a:	4923      	ldr	r1, [pc, #140]	; (800c298 <HAL_RCC_ClockConfig+0x128>)
 800c20c:	68a0      	ldr	r0, [r4, #8]
 800c20e:	688b      	ldr	r3, [r1, #8]
 800c210:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800c214:	4303      	orrs	r3, r0
 800c216:	608b      	str	r3, [r1, #8]
 800c218:	e7bb      	b.n	800c192 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c21a:	6862      	ldr	r2, [r4, #4]
 800c21c:	4b1e      	ldr	r3, [pc, #120]	; (800c298 <HAL_RCC_ClockConfig+0x128>)
 800c21e:	2a01      	cmp	r2, #1
 800c220:	d11c      	bne.n	800c25c <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c222:	681b      	ldr	r3, [r3, #0]
 800c224:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c228:	d0a7      	beq.n	800c17a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c22a:	4e1b      	ldr	r6, [pc, #108]	; (800c298 <HAL_RCC_ClockConfig+0x128>)
 800c22c:	68b3      	ldr	r3, [r6, #8]
 800c22e:	f023 0303 	bic.w	r3, r3, #3
 800c232:	4313      	orrs	r3, r2
 800c234:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c236:	f7fd fe29 	bl	8009e8c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c23a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c23e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c240:	68b3      	ldr	r3, [r6, #8]
 800c242:	6862      	ldr	r2, [r4, #4]
 800c244:	f003 030c 	and.w	r3, r3, #12
 800c248:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c24c:	d0a3      	beq.n	800c196 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c24e:	f7fd fe1d 	bl	8009e8c <HAL_GetTick>
 800c252:	1bc0      	subs	r0, r0, r7
 800c254:	4540      	cmp	r0, r8
 800c256:	d9f3      	bls.n	800c240 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 800c258:	2003      	movs	r0, #3
 800c25a:	e78f      	b.n	800c17c <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c25c:	1e91      	subs	r1, r2, #2
 800c25e:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c260:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c262:	d802      	bhi.n	800c26a <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c264:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800c268:	e7de      	b.n	800c228 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c26a:	f013 0f02 	tst.w	r3, #2
 800c26e:	e7db      	b.n	800c228 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c270:	b2ea      	uxtb	r2, r5
 800c272:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c274:	681b      	ldr	r3, [r3, #0]
 800c276:	f003 030f 	and.w	r3, r3, #15
 800c27a:	42ab      	cmp	r3, r5
 800c27c:	f47f af7d 	bne.w	800c17a <HAL_RCC_ClockConfig+0xa>
 800c280:	e78f      	b.n	800c1a2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c282:	4905      	ldr	r1, [pc, #20]	; (800c298 <HAL_RCC_ClockConfig+0x128>)
 800c284:	68e0      	ldr	r0, [r4, #12]
 800c286:	688b      	ldr	r3, [r1, #8]
 800c288:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800c28c:	4303      	orrs	r3, r0
 800c28e:	608b      	str	r3, [r1, #8]
 800c290:	e78a      	b.n	800c1a8 <HAL_RCC_ClockConfig+0x38>
 800c292:	bf00      	nop
 800c294:	40023c00 	.word	0x40023c00
 800c298:	40023800 	.word	0x40023800
 800c29c:	08029c15 	.word	0x08029c15
 800c2a0:	20000050 	.word	0x20000050
 800c2a4:	20000058 	.word	0x20000058

0800c2a8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c2a8:	4b04      	ldr	r3, [pc, #16]	; (800c2bc <HAL_RCC_GetPCLK1Freq+0x14>)
 800c2aa:	4a05      	ldr	r2, [pc, #20]	; (800c2c0 <HAL_RCC_GetPCLK1Freq+0x18>)
 800c2ac:	689b      	ldr	r3, [r3, #8]
 800c2ae:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c2b2:	5cd3      	ldrb	r3, [r2, r3]
 800c2b4:	4a03      	ldr	r2, [pc, #12]	; (800c2c4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c2b6:	6810      	ldr	r0, [r2, #0]
}
 800c2b8:	40d8      	lsrs	r0, r3
 800c2ba:	4770      	bx	lr
 800c2bc:	40023800 	.word	0x40023800
 800c2c0:	08029c25 	.word	0x08029c25
 800c2c4:	20000050 	.word	0x20000050

0800c2c8 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c2c8:	230f      	movs	r3, #15
 800c2ca:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c2cc:	4b0b      	ldr	r3, [pc, #44]	; (800c2fc <HAL_RCC_GetClockConfig+0x34>)
 800c2ce:	689a      	ldr	r2, [r3, #8]
 800c2d0:	f002 0203 	and.w	r2, r2, #3
 800c2d4:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c2d6:	689a      	ldr	r2, [r3, #8]
 800c2d8:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c2dc:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c2de:	689a      	ldr	r2, [r3, #8]
 800c2e0:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c2e4:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c2e6:	689b      	ldr	r3, [r3, #8]
 800c2e8:	08db      	lsrs	r3, r3, #3
 800c2ea:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800c2ee:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c2f0:	4b03      	ldr	r3, [pc, #12]	; (800c300 <HAL_RCC_GetClockConfig+0x38>)
 800c2f2:	681b      	ldr	r3, [r3, #0]
 800c2f4:	f003 030f 	and.w	r3, r3, #15
 800c2f8:	600b      	str	r3, [r1, #0]
}
 800c2fa:	4770      	bx	lr
 800c2fc:	40023800 	.word	0x40023800
 800c300:	40023c00 	.word	0x40023c00

0800c304 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c304:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800c306:	6802      	ldr	r2, [r0, #0]
{
 800c308:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800c30a:	0610      	lsls	r0, r2, #24
 800c30c:	d508      	bpl.n	800c320 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800c30e:	49aa      	ldr	r1, [pc, #680]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c310:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800c312:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800c316:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800c31a:	4303      	orrs	r3, r0
 800c31c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 800c320:	05d1      	lsls	r1, r2, #23
 800c322:	d508      	bpl.n	800c336 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 800c324:	49a4      	ldr	r1, [pc, #656]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c326:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800c328:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800c32c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c330:	4303      	orrs	r3, r0
 800c332:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c336:	f012 0f43 	tst.w	r2, #67	; 0x43
 800c33a:	d173      	bne.n	800c424 <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c33c:	6823      	ldr	r3, [r4, #0]
 800c33e:	f013 0f0c 	tst.w	r3, #12
 800c342:	f000 80c1 	beq.w	800c4c8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800c346:	4b9d      	ldr	r3, [pc, #628]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c348:	4d9b      	ldr	r5, [pc, #620]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c34a:	2200      	movs	r2, #0
 800c34c:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c34e:	f7fd fd9d 	bl	8009e8c <HAL_GetTick>
 800c352:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c354:	682b      	ldr	r3, [r5, #0]
 800c356:	009b      	lsls	r3, r3, #2
 800c358:	f100 80fc 	bmi.w	800c554 <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c35c:	6821      	ldr	r1, [r4, #0]
 800c35e:	074f      	lsls	r7, r1, #29
 800c360:	d51a      	bpl.n	800c398 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800c362:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c366:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 800c36a:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800c36e:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800c372:	4313      	orrs	r3, r2
 800c374:	6922      	ldr	r2, [r4, #16]
 800c376:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c37a:	69a2      	ldr	r2, [r4, #24]
 800c37c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c380:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c384:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 800c388:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c38a:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c38e:	3a01      	subs	r2, #1
 800c390:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800c394:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c398:	070e      	lsls	r6, r1, #28
 800c39a:	d519      	bpl.n	800c3d0 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800c39c:	4a86      	ldr	r2, [pc, #536]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c39e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c3a2:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 800c3a6:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800c3aa:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 800c3ae:	4303      	orrs	r3, r0
 800c3b0:	6920      	ldr	r0, [r4, #16]
 800c3b2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c3b6:	69e0      	ldr	r0, [r4, #28]
 800c3b8:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 800c3bc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c3c0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c3c4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c3c6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c3ca:	4303      	orrs	r3, r0
 800c3cc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 800c3d0:	060d      	lsls	r5, r1, #24
 800c3d2:	d517      	bpl.n	800c404 <HAL_RCCEx_PeriphCLKConfig+0x100>
 800c3d4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c3d6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800c3da:	d113      	bne.n	800c404 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c3dc:	4976      	ldr	r1, [pc, #472]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c3de:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c3e2:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 800c3e6:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 800c3ea:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800c3ee:	4313      	orrs	r3, r2
 800c3f0:	6922      	ldr	r2, [r4, #16]
 800c3f2:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c3f6:	6962      	ldr	r2, [r4, #20]
 800c3f8:	0852      	lsrs	r2, r2, #1
 800c3fa:	3a01      	subs	r2, #1
 800c3fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c400:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800c404:	4b6d      	ldr	r3, [pc, #436]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c406:	4e6c      	ldr	r6, [pc, #432]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c408:	2201      	movs	r2, #1
 800c40a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c40c:	f7fd fd3e 	bl	8009e8c <HAL_GetTick>
 800c410:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c412:	6833      	ldr	r3, [r6, #0]
 800c414:	0098      	lsls	r0, r3, #2
 800c416:	d459      	bmi.n	800c4cc <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c418:	f7fd fd38 	bl	8009e8c <HAL_GetTick>
 800c41c:	1b40      	subs	r0, r0, r5
 800c41e:	2802      	cmp	r0, #2
 800c420:	d9f7      	bls.n	800c412 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800c422:	e04e      	b.n	800c4c2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 800c424:	4b65      	ldr	r3, [pc, #404]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c426:	4e64      	ldr	r6, [pc, #400]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c428:	2200      	movs	r2, #0
 800c42a:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c42c:	f7fd fd2e 	bl	8009e8c <HAL_GetTick>
 800c430:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c432:	6833      	ldr	r3, [r6, #0]
 800c434:	011b      	lsls	r3, r3, #4
 800c436:	d43f      	bmi.n	800c4b8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c438:	6821      	ldr	r1, [r4, #0]
 800c43a:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c43c:	bf41      	itttt	mi
 800c43e:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800c442:	071b      	lslmi	r3, r3, #28
 800c444:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800c448:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c44c:	078e      	lsls	r6, r1, #30
 800c44e:	d515      	bpl.n	800c47c <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c450:	4a59      	ldr	r2, [pc, #356]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c452:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c454:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c458:	6865      	ldr	r5, [r4, #4]
 800c45a:	061b      	lsls	r3, r3, #24
 800c45c:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c460:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800c464:	4303      	orrs	r3, r0
 800c466:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c46a:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800c46e:	6a23      	ldr	r3, [r4, #32]
 800c470:	f020 001f 	bic.w	r0, r0, #31
 800c474:	3b01      	subs	r3, #1
 800c476:	4303      	orrs	r3, r0
 800c478:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c47c:	064d      	lsls	r5, r1, #25
 800c47e:	d50a      	bpl.n	800c496 <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c480:	68e3      	ldr	r3, [r4, #12]
 800c482:	6862      	ldr	r2, [r4, #4]
 800c484:	061b      	lsls	r3, r3, #24
 800c486:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c48a:	68a2      	ldr	r2, [r4, #8]
 800c48c:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800c490:	4a49      	ldr	r2, [pc, #292]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c492:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c496:	4b49      	ldr	r3, [pc, #292]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c498:	4e47      	ldr	r6, [pc, #284]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c49a:	2201      	movs	r2, #1
 800c49c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c49e:	f7fd fcf5 	bl	8009e8c <HAL_GetTick>
 800c4a2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c4a4:	6833      	ldr	r3, [r6, #0]
 800c4a6:	0118      	lsls	r0, r3, #4
 800c4a8:	f53f af48 	bmi.w	800c33c <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c4ac:	f7fd fcee 	bl	8009e8c <HAL_GetTick>
 800c4b0:	1b40      	subs	r0, r0, r5
 800c4b2:	2802      	cmp	r0, #2
 800c4b4:	d9f6      	bls.n	800c4a4 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 800c4b6:	e004      	b.n	800c4c2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c4b8:	f7fd fce8 	bl	8009e8c <HAL_GetTick>
 800c4bc:	1b40      	subs	r0, r0, r5
 800c4be:	2802      	cmp	r0, #2
 800c4c0:	d9b7      	bls.n	800c432 <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 800c4c2:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 800c4c4:	b003      	add	sp, #12
 800c4c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 800c4c8:	0619      	lsls	r1, r3, #24
 800c4ca:	d43e      	bmi.n	800c54a <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c4cc:	6823      	ldr	r3, [r4, #0]
 800c4ce:	069a      	lsls	r2, r3, #26
 800c4d0:	d530      	bpl.n	800c534 <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 800c4d2:	2300      	movs	r3, #0
 800c4d4:	9301      	str	r3, [sp, #4]
 800c4d6:	4b38      	ldr	r3, [pc, #224]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 800c4d8:	4d39      	ldr	r5, [pc, #228]	; (800c5c0 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c4da:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c4dc:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c4e0:	641a      	str	r2, [r3, #64]	; 0x40
 800c4e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c4e4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c4e8:	9301      	str	r3, [sp, #4]
 800c4ea:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c4ec:	682b      	ldr	r3, [r5, #0]
 800c4ee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c4f2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c4f4:	f7fd fcca 	bl	8009e8c <HAL_GetTick>
 800c4f8:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c4fa:	682b      	ldr	r3, [r5, #0]
 800c4fc:	05d9      	lsls	r1, r3, #23
 800c4fe:	d530      	bpl.n	800c562 <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c500:	4d2d      	ldr	r5, [pc, #180]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c502:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c504:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800c508:	d131      	bne.n	800c56e <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c50a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c50c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c510:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c514:	4a28      	ldr	r2, [pc, #160]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c516:	d14b      	bne.n	800c5b0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 800c518:	6891      	ldr	r1, [r2, #8]
 800c51a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800c51e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800c522:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800c526:	4301      	orrs	r1, r0
 800c528:	6091      	str	r1, [r2, #8]
 800c52a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c52c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c530:	430b      	orrs	r3, r1
 800c532:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c534:	6820      	ldr	r0, [r4, #0]
 800c536:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c53a:	bf1f      	itttt	ne
 800c53c:	4b21      	ldrne	r3, [pc, #132]	; (800c5c4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800c53e:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 800c542:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 800c546:	2000      	movne	r0, #0
 800c548:	e7bc      	b.n	800c4c4 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 800c54a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c54c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800c550:	d1bc      	bne.n	800c4cc <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 800c552:	e6f8      	b.n	800c346 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c554:	f7fd fc9a 	bl	8009e8c <HAL_GetTick>
 800c558:	1b80      	subs	r0, r0, r6
 800c55a:	2802      	cmp	r0, #2
 800c55c:	f67f aefa 	bls.w	800c354 <HAL_RCCEx_PeriphCLKConfig+0x50>
 800c560:	e7af      	b.n	800c4c2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c562:	f7fd fc93 	bl	8009e8c <HAL_GetTick>
 800c566:	1b80      	subs	r0, r0, r6
 800c568:	2802      	cmp	r0, #2
 800c56a:	d9c6      	bls.n	800c4fa <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 800c56c:	e7a9      	b.n	800c4c2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c56e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c570:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800c574:	4293      	cmp	r3, r2
 800c576:	d0c8      	beq.n	800c50a <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c578:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c57a:	4a10      	ldr	r2, [pc, #64]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 800c57c:	2101      	movs	r1, #1
 800c57e:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c582:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c586:	2100      	movs	r1, #0
 800c588:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c58c:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c58e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c590:	07da      	lsls	r2, r3, #31
 800c592:	d5ba      	bpl.n	800c50a <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 800c594:	f7fd fc7a 	bl	8009e8c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c598:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c59c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c59e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c5a0:	079b      	lsls	r3, r3, #30
 800c5a2:	d4b2      	bmi.n	800c50a <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c5a4:	f7fd fc72 	bl	8009e8c <HAL_GetTick>
 800c5a8:	1b80      	subs	r0, r0, r6
 800c5aa:	42b8      	cmp	r0, r7
 800c5ac:	d9f7      	bls.n	800c59e <HAL_RCCEx_PeriphCLKConfig+0x29a>
 800c5ae:	e788      	b.n	800c4c2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c5b0:	6891      	ldr	r1, [r2, #8]
 800c5b2:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800c5b6:	e7b7      	b.n	800c528 <HAL_RCCEx_PeriphCLKConfig+0x224>
 800c5b8:	40023800 	.word	0x40023800
 800c5bc:	42470000 	.word	0x42470000
 800c5c0:	40007000 	.word	0x40007000
 800c5c4:	42471000 	.word	0x42471000

0800c5c8 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800c5c8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800c5cc:	4604      	mov	r4, r0
 800c5ce:	b340      	cbz	r0, 800c622 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c5d0:	6803      	ldr	r3, [r0, #0]
 800c5d2:	07dd      	lsls	r5, r3, #31
 800c5d4:	d410      	bmi.n	800c5f8 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800c5d6:	6823      	ldr	r3, [r4, #0]
 800c5d8:	0798      	lsls	r0, r3, #30
 800c5da:	d45e      	bmi.n	800c69a <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c5dc:	6823      	ldr	r3, [r4, #0]
 800c5de:	071a      	lsls	r2, r3, #28
 800c5e0:	f100 80a0 	bmi.w	800c724 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c5e4:	6823      	ldr	r3, [r4, #0]
 800c5e6:	075b      	lsls	r3, r3, #29
 800c5e8:	f100 80c0 	bmi.w	800c76c <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800c5ec:	69a0      	ldr	r0, [r4, #24]
 800c5ee:	2800      	cmp	r0, #0
 800c5f0:	f040 8128 	bne.w	800c844 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800c5f4:	2000      	movs	r0, #0
 800c5f6:	e02b      	b.n	800c650 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800c5f8:	4b8f      	ldr	r3, [pc, #572]	; (800c838 <HAL_RCC_OscConfig+0x270>)
 800c5fa:	689a      	ldr	r2, [r3, #8]
 800c5fc:	f002 020c 	and.w	r2, r2, #12
 800c600:	2a04      	cmp	r2, #4
 800c602:	d007      	beq.n	800c614 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c604:	689a      	ldr	r2, [r3, #8]
 800c606:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800c60a:	2a08      	cmp	r2, #8
 800c60c:	d10b      	bne.n	800c626 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c60e:	685a      	ldr	r2, [r3, #4]
 800c610:	0251      	lsls	r1, r2, #9
 800c612:	d508      	bpl.n	800c626 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800c614:	4b88      	ldr	r3, [pc, #544]	; (800c838 <HAL_RCC_OscConfig+0x270>)
 800c616:	681b      	ldr	r3, [r3, #0]
 800c618:	039a      	lsls	r2, r3, #14
 800c61a:	d5dc      	bpl.n	800c5d6 <HAL_RCC_OscConfig+0xe>
 800c61c:	6863      	ldr	r3, [r4, #4]
 800c61e:	2b00      	cmp	r3, #0
 800c620:	d1d9      	bne.n	800c5d6 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800c622:	2001      	movs	r0, #1
 800c624:	e014      	b.n	800c650 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c626:	6862      	ldr	r2, [r4, #4]
 800c628:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800c62c:	d113      	bne.n	800c656 <HAL_RCC_OscConfig+0x8e>
 800c62e:	681a      	ldr	r2, [r3, #0]
 800c630:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c634:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c636:	f7fd fc29 	bl	8009e8c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c63a:	4e7f      	ldr	r6, [pc, #508]	; (800c838 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800c63c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c63e:	6833      	ldr	r3, [r6, #0]
 800c640:	039b      	lsls	r3, r3, #14
 800c642:	d4c8      	bmi.n	800c5d6 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c644:	f7fd fc22 	bl	8009e8c <HAL_GetTick>
 800c648:	1b40      	subs	r0, r0, r5
 800c64a:	2864      	cmp	r0, #100	; 0x64
 800c64c:	d9f7      	bls.n	800c63e <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800c64e:	2003      	movs	r0, #3
}
 800c650:	b002      	add	sp, #8
 800c652:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c656:	4d78      	ldr	r5, [pc, #480]	; (800c838 <HAL_RCC_OscConfig+0x270>)
 800c658:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 800c65c:	682b      	ldr	r3, [r5, #0]
 800c65e:	d107      	bne.n	800c670 <HAL_RCC_OscConfig+0xa8>
 800c660:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800c664:	602b      	str	r3, [r5, #0]
 800c666:	682b      	ldr	r3, [r5, #0]
 800c668:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c66c:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c66e:	e7e2      	b.n	800c636 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c670:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800c674:	602b      	str	r3, [r5, #0]
 800c676:	682b      	ldr	r3, [r5, #0]
 800c678:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800c67c:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c67e:	2a00      	cmp	r2, #0
 800c680:	d1d9      	bne.n	800c636 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800c682:	f7fd fc03 	bl	8009e8c <HAL_GetTick>
 800c686:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c688:	682b      	ldr	r3, [r5, #0]
 800c68a:	039f      	lsls	r7, r3, #14
 800c68c:	d5a3      	bpl.n	800c5d6 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c68e:	f7fd fbfd 	bl	8009e8c <HAL_GetTick>
 800c692:	1b80      	subs	r0, r0, r6
 800c694:	2864      	cmp	r0, #100	; 0x64
 800c696:	d9f7      	bls.n	800c688 <HAL_RCC_OscConfig+0xc0>
 800c698:	e7d9      	b.n	800c64e <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800c69a:	4b67      	ldr	r3, [pc, #412]	; (800c838 <HAL_RCC_OscConfig+0x270>)
 800c69c:	689a      	ldr	r2, [r3, #8]
 800c69e:	f012 0f0c 	tst.w	r2, #12
 800c6a2:	d007      	beq.n	800c6b4 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c6a4:	689a      	ldr	r2, [r3, #8]
 800c6a6:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800c6aa:	2a08      	cmp	r2, #8
 800c6ac:	d111      	bne.n	800c6d2 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c6ae:	685b      	ldr	r3, [r3, #4]
 800c6b0:	025e      	lsls	r6, r3, #9
 800c6b2:	d40e      	bmi.n	800c6d2 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c6b4:	4a60      	ldr	r2, [pc, #384]	; (800c838 <HAL_RCC_OscConfig+0x270>)
 800c6b6:	6813      	ldr	r3, [r2, #0]
 800c6b8:	079d      	lsls	r5, r3, #30
 800c6ba:	d502      	bpl.n	800c6c2 <HAL_RCC_OscConfig+0xfa>
 800c6bc:	68e3      	ldr	r3, [r4, #12]
 800c6be:	2b01      	cmp	r3, #1
 800c6c0:	d1af      	bne.n	800c622 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c6c2:	6813      	ldr	r3, [r2, #0]
 800c6c4:	6921      	ldr	r1, [r4, #16]
 800c6c6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800c6ca:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c6ce:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c6d0:	e784      	b.n	800c5dc <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800c6d2:	68e2      	ldr	r2, [r4, #12]
 800c6d4:	4b59      	ldr	r3, [pc, #356]	; (800c83c <HAL_RCC_OscConfig+0x274>)
 800c6d6:	b1b2      	cbz	r2, 800c706 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800c6d8:	2201      	movs	r2, #1
 800c6da:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c6dc:	f7fd fbd6 	bl	8009e8c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c6e0:	4d55      	ldr	r5, [pc, #340]	; (800c838 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800c6e2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c6e4:	682b      	ldr	r3, [r5, #0]
 800c6e6:	0798      	lsls	r0, r3, #30
 800c6e8:	d507      	bpl.n	800c6fa <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c6ea:	682b      	ldr	r3, [r5, #0]
 800c6ec:	6922      	ldr	r2, [r4, #16]
 800c6ee:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800c6f2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800c6f6:	602b      	str	r3, [r5, #0]
 800c6f8:	e770      	b.n	800c5dc <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c6fa:	f7fd fbc7 	bl	8009e8c <HAL_GetTick>
 800c6fe:	1b80      	subs	r0, r0, r6
 800c700:	2802      	cmp	r0, #2
 800c702:	d9ef      	bls.n	800c6e4 <HAL_RCC_OscConfig+0x11c>
 800c704:	e7a3      	b.n	800c64e <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800c706:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c708:	f7fd fbc0 	bl	8009e8c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c70c:	4e4a      	ldr	r6, [pc, #296]	; (800c838 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800c70e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c710:	6833      	ldr	r3, [r6, #0]
 800c712:	0799      	lsls	r1, r3, #30
 800c714:	f57f af62 	bpl.w	800c5dc <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c718:	f7fd fbb8 	bl	8009e8c <HAL_GetTick>
 800c71c:	1b40      	subs	r0, r0, r5
 800c71e:	2802      	cmp	r0, #2
 800c720:	d9f6      	bls.n	800c710 <HAL_RCC_OscConfig+0x148>
 800c722:	e794      	b.n	800c64e <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800c724:	6962      	ldr	r2, [r4, #20]
 800c726:	4b45      	ldr	r3, [pc, #276]	; (800c83c <HAL_RCC_OscConfig+0x274>)
 800c728:	b182      	cbz	r2, 800c74c <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800c72a:	2201      	movs	r2, #1
 800c72c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c730:	f7fd fbac 	bl	8009e8c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c734:	4e40      	ldr	r6, [pc, #256]	; (800c838 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800c736:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c738:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c73a:	079f      	lsls	r7, r3, #30
 800c73c:	f53f af52 	bmi.w	800c5e4 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c740:	f7fd fba4 	bl	8009e8c <HAL_GetTick>
 800c744:	1b40      	subs	r0, r0, r5
 800c746:	2802      	cmp	r0, #2
 800c748:	d9f6      	bls.n	800c738 <HAL_RCC_OscConfig+0x170>
 800c74a:	e780      	b.n	800c64e <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800c74c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c750:	f7fd fb9c 	bl	8009e8c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c754:	4e38      	ldr	r6, [pc, #224]	; (800c838 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800c756:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c758:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c75a:	0798      	lsls	r0, r3, #30
 800c75c:	f57f af42 	bpl.w	800c5e4 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c760:	f7fd fb94 	bl	8009e8c <HAL_GetTick>
 800c764:	1b40      	subs	r0, r0, r5
 800c766:	2802      	cmp	r0, #2
 800c768:	d9f6      	bls.n	800c758 <HAL_RCC_OscConfig+0x190>
 800c76a:	e770      	b.n	800c64e <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800c76c:	4b32      	ldr	r3, [pc, #200]	; (800c838 <HAL_RCC_OscConfig+0x270>)
 800c76e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c770:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800c774:	d128      	bne.n	800c7c8 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800c776:	9201      	str	r2, [sp, #4]
 800c778:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c77a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c77e:	641a      	str	r2, [r3, #64]	; 0x40
 800c780:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c782:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c786:	9301      	str	r3, [sp, #4]
 800c788:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800c78a:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c78c:	4d2c      	ldr	r5, [pc, #176]	; (800c840 <HAL_RCC_OscConfig+0x278>)
 800c78e:	682b      	ldr	r3, [r5, #0]
 800c790:	05d9      	lsls	r1, r3, #23
 800c792:	d51b      	bpl.n	800c7cc <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c794:	68a3      	ldr	r3, [r4, #8]
 800c796:	4d28      	ldr	r5, [pc, #160]	; (800c838 <HAL_RCC_OscConfig+0x270>)
 800c798:	2b01      	cmp	r3, #1
 800c79a:	d127      	bne.n	800c7ec <HAL_RCC_OscConfig+0x224>
 800c79c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c79e:	f043 0301 	orr.w	r3, r3, #1
 800c7a2:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c7a4:	f7fd fb72 	bl	8009e8c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c7a8:	4e23      	ldr	r6, [pc, #140]	; (800c838 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800c7aa:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c7ac:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c7b0:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800c7b2:	079b      	lsls	r3, r3, #30
 800c7b4:	d539      	bpl.n	800c82a <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800c7b6:	2f00      	cmp	r7, #0
 800c7b8:	f43f af18 	beq.w	800c5ec <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c7bc:	4a1e      	ldr	r2, [pc, #120]	; (800c838 <HAL_RCC_OscConfig+0x270>)
 800c7be:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c7c0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c7c4:	6413      	str	r3, [r2, #64]	; 0x40
 800c7c6:	e711      	b.n	800c5ec <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800c7c8:	2700      	movs	r7, #0
 800c7ca:	e7df      	b.n	800c78c <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800c7cc:	682b      	ldr	r3, [r5, #0]
 800c7ce:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c7d2:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800c7d4:	f7fd fb5a 	bl	8009e8c <HAL_GetTick>
 800c7d8:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c7da:	682b      	ldr	r3, [r5, #0]
 800c7dc:	05da      	lsls	r2, r3, #23
 800c7de:	d4d9      	bmi.n	800c794 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c7e0:	f7fd fb54 	bl	8009e8c <HAL_GetTick>
 800c7e4:	1b80      	subs	r0, r0, r6
 800c7e6:	2802      	cmp	r0, #2
 800c7e8:	d9f7      	bls.n	800c7da <HAL_RCC_OscConfig+0x212>
 800c7ea:	e730      	b.n	800c64e <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c7ec:	2b05      	cmp	r3, #5
 800c7ee:	d104      	bne.n	800c7fa <HAL_RCC_OscConfig+0x232>
 800c7f0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c7f2:	f043 0304 	orr.w	r3, r3, #4
 800c7f6:	672b      	str	r3, [r5, #112]	; 0x70
 800c7f8:	e7d0      	b.n	800c79c <HAL_RCC_OscConfig+0x1d4>
 800c7fa:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800c7fc:	f022 0201 	bic.w	r2, r2, #1
 800c800:	672a      	str	r2, [r5, #112]	; 0x70
 800c802:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800c804:	f022 0204 	bic.w	r2, r2, #4
 800c808:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c80a:	2b00      	cmp	r3, #0
 800c80c:	d1ca      	bne.n	800c7a4 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 800c80e:	f7fd fb3d 	bl	8009e8c <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c812:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800c816:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c818:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c81a:	0798      	lsls	r0, r3, #30
 800c81c:	d5cb      	bpl.n	800c7b6 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c81e:	f7fd fb35 	bl	8009e8c <HAL_GetTick>
 800c822:	1b80      	subs	r0, r0, r6
 800c824:	4540      	cmp	r0, r8
 800c826:	d9f7      	bls.n	800c818 <HAL_RCC_OscConfig+0x250>
 800c828:	e711      	b.n	800c64e <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c82a:	f7fd fb2f 	bl	8009e8c <HAL_GetTick>
 800c82e:	1b40      	subs	r0, r0, r5
 800c830:	4540      	cmp	r0, r8
 800c832:	d9bd      	bls.n	800c7b0 <HAL_RCC_OscConfig+0x1e8>
 800c834:	e70b      	b.n	800c64e <HAL_RCC_OscConfig+0x86>
 800c836:	bf00      	nop
 800c838:	40023800 	.word	0x40023800
 800c83c:	42470000 	.word	0x42470000
 800c840:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800c844:	4d3b      	ldr	r5, [pc, #236]	; (800c934 <HAL_RCC_OscConfig+0x36c>)
 800c846:	68ab      	ldr	r3, [r5, #8]
 800c848:	f003 030c 	and.w	r3, r3, #12
 800c84c:	2b08      	cmp	r3, #8
 800c84e:	d040      	beq.n	800c8d2 <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c850:	4b39      	ldr	r3, [pc, #228]	; (800c938 <HAL_RCC_OscConfig+0x370>)
 800c852:	2200      	movs	r2, #0
 800c854:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800c856:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c858:	d12e      	bne.n	800c8b8 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 800c85a:	f7fd fb17 	bl	8009e8c <HAL_GetTick>
 800c85e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c860:	682b      	ldr	r3, [r5, #0]
 800c862:	0199      	lsls	r1, r3, #6
 800c864:	d422      	bmi.n	800c8ac <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c866:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800c86a:	4313      	orrs	r3, r2
 800c86c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c86e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c872:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c874:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c878:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c87a:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800c87e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c880:	0852      	lsrs	r2, r2, #1
 800c882:	3a01      	subs	r2, #1
 800c884:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c888:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c88a:	4b2b      	ldr	r3, [pc, #172]	; (800c938 <HAL_RCC_OscConfig+0x370>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c88c:	4d29      	ldr	r5, [pc, #164]	; (800c934 <HAL_RCC_OscConfig+0x36c>)
        __HAL_RCC_PLL_ENABLE();
 800c88e:	2201      	movs	r2, #1
 800c890:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c892:	f7fd fafb 	bl	8009e8c <HAL_GetTick>
 800c896:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c898:	682b      	ldr	r3, [r5, #0]
 800c89a:	019a      	lsls	r2, r3, #6
 800c89c:	f53f aeaa 	bmi.w	800c5f4 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c8a0:	f7fd faf4 	bl	8009e8c <HAL_GetTick>
 800c8a4:	1b00      	subs	r0, r0, r4
 800c8a6:	2802      	cmp	r0, #2
 800c8a8:	d9f6      	bls.n	800c898 <HAL_RCC_OscConfig+0x2d0>
 800c8aa:	e6d0      	b.n	800c64e <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c8ac:	f7fd faee 	bl	8009e8c <HAL_GetTick>
 800c8b0:	1b80      	subs	r0, r0, r6
 800c8b2:	2802      	cmp	r0, #2
 800c8b4:	d9d4      	bls.n	800c860 <HAL_RCC_OscConfig+0x298>
 800c8b6:	e6ca      	b.n	800c64e <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800c8b8:	f7fd fae8 	bl	8009e8c <HAL_GetTick>
 800c8bc:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c8be:	682b      	ldr	r3, [r5, #0]
 800c8c0:	019b      	lsls	r3, r3, #6
 800c8c2:	f57f ae97 	bpl.w	800c5f4 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c8c6:	f7fd fae1 	bl	8009e8c <HAL_GetTick>
 800c8ca:	1b00      	subs	r0, r0, r4
 800c8cc:	2802      	cmp	r0, #2
 800c8ce:	d9f6      	bls.n	800c8be <HAL_RCC_OscConfig+0x2f6>
 800c8d0:	e6bd      	b.n	800c64e <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c8d2:	2801      	cmp	r0, #1
 800c8d4:	f43f aebc 	beq.w	800c650 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800c8d8:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c8da:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c8dc:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c8e0:	4291      	cmp	r1, r2
 800c8e2:	f47f ae9e 	bne.w	800c622 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c8e6:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c8e8:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c8ec:	428a      	cmp	r2, r1
 800c8ee:	f47f ae98 	bne.w	800c622 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c8f2:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c8f4:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c8f8:	401a      	ands	r2, r3
 800c8fa:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c8fe:	f47f ae90 	bne.w	800c622 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c902:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c904:	0852      	lsrs	r2, r2, #1
 800c906:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c90a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c90c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c910:	f47f ae87 	bne.w	800c622 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800c914:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c916:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c91a:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800c91e:	f47f ae80 	bne.w	800c622 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800c922:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c924:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800c928:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 800c92c:	f43f ae62 	beq.w	800c5f4 <HAL_RCC_OscConfig+0x2c>
 800c930:	e677      	b.n	800c622 <HAL_RCC_OscConfig+0x5a>
 800c932:	bf00      	nop
 800c934:	40023800 	.word	0x40023800
 800c938:	42470000 	.word	0x42470000

0800c93c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800c93c:	b538      	push	{r3, r4, r5, lr}
 800c93e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c940:	4604      	mov	r4, r0
 800c942:	b1c8      	cbz	r0, 800c978 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c944:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c948:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c94c:	b91b      	cbnz	r3, 800c956 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800c94e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800c952:	f7f5 ff09 	bl	8002768 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c956:	2302      	movs	r3, #2
 800c958:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c95c:	1d21      	adds	r1, r4, #4
 800c95e:	6820      	ldr	r0, [r4, #0]
 800c960:	f000 fa22 	bl	800cda8 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c964:	6862      	ldr	r2, [r4, #4]
 800c966:	6820      	ldr	r0, [r4, #0]
 800c968:	4629      	mov	r1, r5
 800c96a:	f000 fa58 	bl	800ce1e <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c96e:	2301      	movs	r3, #1
 800c970:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c974:	2000      	movs	r0, #0
}
 800c976:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800c978:	2001      	movs	r0, #1
 800c97a:	e7fc      	b.n	800c976 <HAL_SDRAM_Init+0x3a>

0800c97c <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 800c97c:	b510      	push	{r4, lr}
 800c97e:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 800c980:	f7f5 ff6a 	bl	8002858 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 800c984:	e9d4 0100 	ldrd	r0, r1, [r4]
 800c988:	f000 fa7f 	bl	800ce8a <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 800c98c:	2000      	movs	r0, #0
 800c98e:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800c992:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800c996:	bd10      	pop	{r4, pc}

0800c998 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c998:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c99a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c99e:	2b02      	cmp	r3, #2
{
 800c9a0:	4605      	mov	r5, r0
 800c9a2:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c9a4:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c9a6:	d012      	beq.n	800c9ce <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c9a8:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c9ac:	2c01      	cmp	r4, #1
 800c9ae:	d10f      	bne.n	800c9d0 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c9b0:	2302      	movs	r3, #2
 800c9b2:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c9b6:	6828      	ldr	r0, [r5, #0]
 800c9b8:	f000 fa76 	bl	800cea8 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c9bc:	6833      	ldr	r3, [r6, #0]
 800c9be:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c9c0:	bf06      	itte	eq
 800c9c2:	2305      	moveq	r3, #5
 800c9c4:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c9c8:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800c9cc:	2000      	movs	r0, #0
}
 800c9ce:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800c9d0:	2001      	movs	r0, #1
 800c9d2:	e7fc      	b.n	800c9ce <HAL_SDRAM_SendCommand+0x36>

0800c9d4 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c9d4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c9d6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c9da:	2b02      	cmp	r3, #2
{
 800c9dc:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c9de:	b2d8      	uxtb	r0, r3
 800c9e0:	d00d      	beq.n	800c9fe <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c9e2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c9e6:	2b01      	cmp	r3, #1
 800c9e8:	b2dd      	uxtb	r5, r3
 800c9ea:	d109      	bne.n	800ca00 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c9ec:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c9ee:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c9f0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c9f4:	f000 fa7e 	bl	800cef4 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c9f8:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800c9fc:	2000      	movs	r0, #0
}
 800c9fe:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800ca00:	2001      	movs	r0, #1
 800ca02:	e7fc      	b.n	800c9fe <HAL_SDRAM_ProgramRefreshRate+0x2a>

0800ca04 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 800ca04:	b510      	push	{r4, lr}
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800ca06:	4604      	mov	r4, r0
 800ca08:	2800      	cmp	r0, #0
 800ca0a:	d055      	beq.n	800cab8 <HAL_SPI_Init+0xb4>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800ca0c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800ca0e:	2b00      	cmp	r3, #0
 800ca10:	d14e      	bne.n	800cab0 <HAL_SPI_Init+0xac>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ca12:	6842      	ldr	r2, [r0, #4]
 800ca14:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800ca18:	d000      	beq.n	800ca1c <HAL_SPI_Init+0x18>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800ca1a:	61c3      	str	r3, [r0, #28]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800ca1c:	2300      	movs	r3, #0
 800ca1e:	62a3      	str	r3, [r4, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800ca20:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800ca24:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ca28:	b923      	cbnz	r3, 800ca34 <HAL_SPI_Init+0x30>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800ca2a:	f884 2050 	strb.w	r2, [r4, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 800ca2e:	4620      	mov	r0, r4
 800ca30:	f7f5 fe4e 	bl	80026d0 <HAL_SPI_MspInit>
  }

  hspi->State = HAL_SPI_STATE_BUSY;

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800ca34:	6821      	ldr	r1, [r4, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ca36:	68a0      	ldr	r0, [r4, #8]
 800ca38:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800ca3a:	2302      	movs	r3, #2
 800ca3c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800ca40:	680b      	ldr	r3, [r1, #0]
 800ca42:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ca46:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ca48:	6863      	ldr	r3, [r4, #4]
 800ca4a:	f400 4004 	and.w	r0, r0, #33792	; 0x8400
 800ca4e:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800ca52:	4303      	orrs	r3, r0
 800ca54:	68e0      	ldr	r0, [r4, #12]
 800ca56:	f400 6000 	and.w	r0, r0, #2048	; 0x800
 800ca5a:	4303      	orrs	r3, r0
 800ca5c:	6920      	ldr	r0, [r4, #16]
 800ca5e:	f000 0002 	and.w	r0, r0, #2
 800ca62:	4303      	orrs	r3, r0
 800ca64:	6960      	ldr	r0, [r4, #20]
 800ca66:	f000 0001 	and.w	r0, r0, #1
 800ca6a:	4303      	orrs	r3, r0
 800ca6c:	f402 7000 	and.w	r0, r2, #512	; 0x200
 800ca70:	4303      	orrs	r3, r0
 800ca72:	69e0      	ldr	r0, [r4, #28]
 800ca74:	f000 0038 	and.w	r0, r0, #56	; 0x38
 800ca78:	4303      	orrs	r3, r0
 800ca7a:	6a20      	ldr	r0, [r4, #32]
 800ca7c:	f000 0080 	and.w	r0, r0, #128	; 0x80
 800ca80:	4303      	orrs	r3, r0
 800ca82:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ca84:	f400 5000 	and.w	r0, r0, #8192	; 0x2000
 800ca88:	4303      	orrs	r3, r0
 800ca8a:	600b      	str	r3, [r1, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ca8c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ca8e:	0c12      	lsrs	r2, r2, #16
 800ca90:	f003 0310 	and.w	r3, r3, #16
 800ca94:	f002 0204 	and.w	r2, r2, #4
 800ca98:	431a      	orrs	r2, r3
 800ca9a:	604a      	str	r2, [r1, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800ca9c:	69cb      	ldr	r3, [r1, #28]
 800ca9e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800caa2:	61cb      	str	r3, [r1, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800caa4:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800caa6:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800caa8:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800caaa:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51

  return HAL_OK;
}
 800caae:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800cab0:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800cab2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800cab6:	e7b1      	b.n	800ca1c <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 800cab8:	2001      	movs	r0, #1
 800caba:	e7f8      	b.n	800caae <HAL_SPI_Init+0xaa>

0800cabc <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800cabc:	4770      	bx	lr
	...

0800cac0 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800cac0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cac4:	2b01      	cmp	r3, #1
 800cac6:	d130      	bne.n	800cb2a <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800cac8:	2302      	movs	r3, #2
 800caca:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800cace:	6803      	ldr	r3, [r0, #0]
 800cad0:	68da      	ldr	r2, [r3, #12]
 800cad2:	f042 0201 	orr.w	r2, r2, #1
 800cad6:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cad8:	4a15      	ldr	r2, [pc, #84]	; (800cb30 <HAL_TIM_Base_Start_IT+0x70>)
 800cada:	4293      	cmp	r3, r2
 800cadc:	d01a      	beq.n	800cb14 <HAL_TIM_Base_Start_IT+0x54>
 800cade:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800cae2:	d017      	beq.n	800cb14 <HAL_TIM_Base_Start_IT+0x54>
 800cae4:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800cae8:	4293      	cmp	r3, r2
 800caea:	d013      	beq.n	800cb14 <HAL_TIM_Base_Start_IT+0x54>
 800caec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800caf0:	4293      	cmp	r3, r2
 800caf2:	d00f      	beq.n	800cb14 <HAL_TIM_Base_Start_IT+0x54>
 800caf4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800caf8:	4293      	cmp	r3, r2
 800cafa:	d00b      	beq.n	800cb14 <HAL_TIM_Base_Start_IT+0x54>
 800cafc:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800cb00:	4293      	cmp	r3, r2
 800cb02:	d007      	beq.n	800cb14 <HAL_TIM_Base_Start_IT+0x54>
 800cb04:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800cb08:	4293      	cmp	r3, r2
 800cb0a:	d003      	beq.n	800cb14 <HAL_TIM_Base_Start_IT+0x54>
 800cb0c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800cb10:	4293      	cmp	r3, r2
 800cb12:	d104      	bne.n	800cb1e <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800cb14:	689a      	ldr	r2, [r3, #8]
 800cb16:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800cb1a:	2a06      	cmp	r2, #6
 800cb1c:	d003      	beq.n	800cb26 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800cb1e:	681a      	ldr	r2, [r3, #0]
 800cb20:	f042 0201 	orr.w	r2, r2, #1
 800cb24:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800cb26:	2000      	movs	r0, #0
}
 800cb28:	4770      	bx	lr
    return HAL_ERROR;
 800cb2a:	2001      	movs	r0, #1
 800cb2c:	4770      	bx	lr
 800cb2e:	bf00      	nop
 800cb30:	40010000 	.word	0x40010000

0800cb34 <HAL_TIM_OC_DelayElapsedCallback>:
 800cb34:	4770      	bx	lr

0800cb36 <HAL_TIM_IC_CaptureCallback>:
 800cb36:	4770      	bx	lr

0800cb38 <HAL_TIM_PWM_PulseFinishedCallback>:
 800cb38:	4770      	bx	lr

0800cb3a <HAL_TIM_TriggerCallback>:
 800cb3a:	4770      	bx	lr

0800cb3c <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cb3c:	6803      	ldr	r3, [r0, #0]
 800cb3e:	691a      	ldr	r2, [r3, #16]
 800cb40:	0791      	lsls	r1, r2, #30
{
 800cb42:	b510      	push	{r4, lr}
 800cb44:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cb46:	d50e      	bpl.n	800cb66 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800cb48:	68da      	ldr	r2, [r3, #12]
 800cb4a:	0792      	lsls	r2, r2, #30
 800cb4c:	d50b      	bpl.n	800cb66 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800cb4e:	f06f 0202 	mvn.w	r2, #2
 800cb52:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800cb54:	2201      	movs	r2, #1
 800cb56:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800cb58:	699b      	ldr	r3, [r3, #24]
 800cb5a:	079b      	lsls	r3, r3, #30
 800cb5c:	d077      	beq.n	800cc4e <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800cb5e:	f7ff ffea 	bl	800cb36 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cb62:	2300      	movs	r3, #0
 800cb64:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800cb66:	6823      	ldr	r3, [r4, #0]
 800cb68:	691a      	ldr	r2, [r3, #16]
 800cb6a:	0750      	lsls	r0, r2, #29
 800cb6c:	d510      	bpl.n	800cb90 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800cb6e:	68da      	ldr	r2, [r3, #12]
 800cb70:	0751      	lsls	r1, r2, #29
 800cb72:	d50d      	bpl.n	800cb90 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800cb74:	f06f 0204 	mvn.w	r2, #4
 800cb78:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800cb7a:	2202      	movs	r2, #2
 800cb7c:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800cb7e:	699b      	ldr	r3, [r3, #24]
 800cb80:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800cb84:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800cb86:	d068      	beq.n	800cc5a <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800cb88:	f7ff ffd5 	bl	800cb36 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cb8c:	2300      	movs	r3, #0
 800cb8e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800cb90:	6823      	ldr	r3, [r4, #0]
 800cb92:	691a      	ldr	r2, [r3, #16]
 800cb94:	0712      	lsls	r2, r2, #28
 800cb96:	d50f      	bpl.n	800cbb8 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800cb98:	68da      	ldr	r2, [r3, #12]
 800cb9a:	0710      	lsls	r0, r2, #28
 800cb9c:	d50c      	bpl.n	800cbb8 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800cb9e:	f06f 0208 	mvn.w	r2, #8
 800cba2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800cba4:	2204      	movs	r2, #4
 800cba6:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800cba8:	69db      	ldr	r3, [r3, #28]
 800cbaa:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800cbac:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800cbae:	d05a      	beq.n	800cc66 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800cbb0:	f7ff ffc1 	bl	800cb36 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cbb4:	2300      	movs	r3, #0
 800cbb6:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800cbb8:	6823      	ldr	r3, [r4, #0]
 800cbba:	691a      	ldr	r2, [r3, #16]
 800cbbc:	06d2      	lsls	r2, r2, #27
 800cbbe:	d510      	bpl.n	800cbe2 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800cbc0:	68da      	ldr	r2, [r3, #12]
 800cbc2:	06d0      	lsls	r0, r2, #27
 800cbc4:	d50d      	bpl.n	800cbe2 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800cbc6:	f06f 0210 	mvn.w	r2, #16
 800cbca:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800cbcc:	2208      	movs	r2, #8
 800cbce:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800cbd0:	69db      	ldr	r3, [r3, #28]
 800cbd2:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800cbd6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800cbd8:	d04b      	beq.n	800cc72 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800cbda:	f7ff ffac 	bl	800cb36 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cbde:	2300      	movs	r3, #0
 800cbe0:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800cbe2:	6823      	ldr	r3, [r4, #0]
 800cbe4:	691a      	ldr	r2, [r3, #16]
 800cbe6:	07d1      	lsls	r1, r2, #31
 800cbe8:	d508      	bpl.n	800cbfc <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800cbea:	68da      	ldr	r2, [r3, #12]
 800cbec:	07d2      	lsls	r2, r2, #31
 800cbee:	d505      	bpl.n	800cbfc <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800cbf0:	f06f 0201 	mvn.w	r2, #1
 800cbf4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800cbf6:	4620      	mov	r0, r4
 800cbf8:	f7f5 fbbc 	bl	8002374 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800cbfc:	6823      	ldr	r3, [r4, #0]
 800cbfe:	691a      	ldr	r2, [r3, #16]
 800cc00:	0610      	lsls	r0, r2, #24
 800cc02:	d508      	bpl.n	800cc16 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800cc04:	68da      	ldr	r2, [r3, #12]
 800cc06:	0611      	lsls	r1, r2, #24
 800cc08:	d505      	bpl.n	800cc16 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800cc0a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800cc0e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800cc10:	4620      	mov	r0, r4
 800cc12:	f000 f8c8 	bl	800cda6 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800cc16:	6823      	ldr	r3, [r4, #0]
 800cc18:	691a      	ldr	r2, [r3, #16]
 800cc1a:	0652      	lsls	r2, r2, #25
 800cc1c:	d508      	bpl.n	800cc30 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800cc1e:	68da      	ldr	r2, [r3, #12]
 800cc20:	0650      	lsls	r0, r2, #25
 800cc22:	d505      	bpl.n	800cc30 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800cc24:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800cc28:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800cc2a:	4620      	mov	r0, r4
 800cc2c:	f7ff ff85 	bl	800cb3a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800cc30:	6823      	ldr	r3, [r4, #0]
 800cc32:	691a      	ldr	r2, [r3, #16]
 800cc34:	0691      	lsls	r1, r2, #26
 800cc36:	d522      	bpl.n	800cc7e <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800cc38:	68da      	ldr	r2, [r3, #12]
 800cc3a:	0692      	lsls	r2, r2, #26
 800cc3c:	d51f      	bpl.n	800cc7e <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800cc3e:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800cc42:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800cc44:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800cc46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800cc4a:	f000 b8ab 	b.w	800cda4 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800cc4e:	f7ff ff71 	bl	800cb34 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cc52:	4620      	mov	r0, r4
 800cc54:	f7ff ff70 	bl	800cb38 <HAL_TIM_PWM_PulseFinishedCallback>
 800cc58:	e783      	b.n	800cb62 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cc5a:	f7ff ff6b 	bl	800cb34 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cc5e:	4620      	mov	r0, r4
 800cc60:	f7ff ff6a 	bl	800cb38 <HAL_TIM_PWM_PulseFinishedCallback>
 800cc64:	e792      	b.n	800cb8c <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cc66:	f7ff ff65 	bl	800cb34 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cc6a:	4620      	mov	r0, r4
 800cc6c:	f7ff ff64 	bl	800cb38 <HAL_TIM_PWM_PulseFinishedCallback>
 800cc70:	e7a0      	b.n	800cbb4 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cc72:	f7ff ff5f 	bl	800cb34 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cc76:	4620      	mov	r0, r4
 800cc78:	f7ff ff5e 	bl	800cb38 <HAL_TIM_PWM_PulseFinishedCallback>
 800cc7c:	e7af      	b.n	800cbde <HAL_TIM_IRQHandler+0xa2>
}
 800cc7e:	bd10      	pop	{r4, pc}

0800cc80 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cc80:	4a30      	ldr	r2, [pc, #192]	; (800cd44 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800cc82:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cc84:	4290      	cmp	r0, r2
 800cc86:	d012      	beq.n	800ccae <TIM_Base_SetConfig+0x2e>
 800cc88:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800cc8c:	d00f      	beq.n	800ccae <TIM_Base_SetConfig+0x2e>
 800cc8e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800cc92:	4290      	cmp	r0, r2
 800cc94:	d00b      	beq.n	800ccae <TIM_Base_SetConfig+0x2e>
 800cc96:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cc9a:	4290      	cmp	r0, r2
 800cc9c:	d007      	beq.n	800ccae <TIM_Base_SetConfig+0x2e>
 800cc9e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cca2:	4290      	cmp	r0, r2
 800cca4:	d003      	beq.n	800ccae <TIM_Base_SetConfig+0x2e>
 800cca6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ccaa:	4290      	cmp	r0, r2
 800ccac:	d119      	bne.n	800cce2 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800ccae:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ccb0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ccb4:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ccb6:	4a23      	ldr	r2, [pc, #140]	; (800cd44 <TIM_Base_SetConfig+0xc4>)
 800ccb8:	4290      	cmp	r0, r2
 800ccba:	d029      	beq.n	800cd10 <TIM_Base_SetConfig+0x90>
 800ccbc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800ccc0:	d026      	beq.n	800cd10 <TIM_Base_SetConfig+0x90>
 800ccc2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800ccc6:	4290      	cmp	r0, r2
 800ccc8:	d022      	beq.n	800cd10 <TIM_Base_SetConfig+0x90>
 800ccca:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ccce:	4290      	cmp	r0, r2
 800ccd0:	d01e      	beq.n	800cd10 <TIM_Base_SetConfig+0x90>
 800ccd2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ccd6:	4290      	cmp	r0, r2
 800ccd8:	d01a      	beq.n	800cd10 <TIM_Base_SetConfig+0x90>
 800ccda:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ccde:	4290      	cmp	r0, r2
 800cce0:	d016      	beq.n	800cd10 <TIM_Base_SetConfig+0x90>
 800cce2:	4a19      	ldr	r2, [pc, #100]	; (800cd48 <TIM_Base_SetConfig+0xc8>)
 800cce4:	4290      	cmp	r0, r2
 800cce6:	d013      	beq.n	800cd10 <TIM_Base_SetConfig+0x90>
 800cce8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ccec:	4290      	cmp	r0, r2
 800ccee:	d00f      	beq.n	800cd10 <TIM_Base_SetConfig+0x90>
 800ccf0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ccf4:	4290      	cmp	r0, r2
 800ccf6:	d00b      	beq.n	800cd10 <TIM_Base_SetConfig+0x90>
 800ccf8:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800ccfc:	4290      	cmp	r0, r2
 800ccfe:	d007      	beq.n	800cd10 <TIM_Base_SetConfig+0x90>
 800cd00:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cd04:	4290      	cmp	r0, r2
 800cd06:	d003      	beq.n	800cd10 <TIM_Base_SetConfig+0x90>
 800cd08:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cd0c:	4290      	cmp	r0, r2
 800cd0e:	d103      	bne.n	800cd18 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cd10:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800cd12:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cd16:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cd18:	694a      	ldr	r2, [r1, #20]
 800cd1a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cd1e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800cd20:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cd22:	688b      	ldr	r3, [r1, #8]
 800cd24:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800cd26:	680b      	ldr	r3, [r1, #0]
 800cd28:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800cd2a:	4b06      	ldr	r3, [pc, #24]	; (800cd44 <TIM_Base_SetConfig+0xc4>)
 800cd2c:	4298      	cmp	r0, r3
 800cd2e:	d003      	beq.n	800cd38 <TIM_Base_SetConfig+0xb8>
 800cd30:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800cd34:	4298      	cmp	r0, r3
 800cd36:	d101      	bne.n	800cd3c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800cd38:	690b      	ldr	r3, [r1, #16]
 800cd3a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800cd3c:	2301      	movs	r3, #1
 800cd3e:	6143      	str	r3, [r0, #20]
}
 800cd40:	4770      	bx	lr
 800cd42:	bf00      	nop
 800cd44:	40010000 	.word	0x40010000
 800cd48:	40014000 	.word	0x40014000

0800cd4c <HAL_TIM_Base_Init>:
{
 800cd4c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800cd4e:	4604      	mov	r4, r0
 800cd50:	b330      	cbz	r0, 800cda0 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800cd52:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cd56:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800cd5a:	b91b      	cbnz	r3, 800cd64 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800cd5c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800cd60:	f7ff feac 	bl	800cabc <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800cd64:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cd66:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800cd68:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cd6c:	1d21      	adds	r1, r4, #4
 800cd6e:	f7ff ff87 	bl	800cc80 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800cd72:	2301      	movs	r3, #1
 800cd74:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 800cd78:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800cd7a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800cd7e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800cd82:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800cd86:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800cd8a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800cd8e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800cd92:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800cd96:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800cd9a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800cd9e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800cda0:	2001      	movs	r0, #1
 800cda2:	e7fc      	b.n	800cd9e <HAL_TIM_Base_Init+0x52>

0800cda4 <HAL_TIMEx_CommutCallback>:
 800cda4:	4770      	bx	lr

0800cda6 <HAL_TIMEx_BreakCallback>:
 800cda6:	4770      	bx	lr

0800cda8 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800cda8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cdac:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cdb0:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cdb2:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 800cdb6:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800cdba:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800cdbe:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 800cdc2:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cdc4:	b9a2      	cbnz	r2, 800cdf0 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cdc6:	ea43 0209 	orr.w	r2, r3, r9
 800cdca:	432a      	orrs	r2, r5
 800cdcc:	ea42 0308 	orr.w	r3, r2, r8
 800cdd0:	6801      	ldr	r1, [r0, #0]
 800cdd2:	ea43 030e 	orr.w	r3, r3, lr
 800cdd6:	ea43 030c 	orr.w	r3, r3, ip
 800cdda:	433b      	orrs	r3, r7
 800cddc:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 800cde0:	4333      	orrs	r3, r6
 800cde2:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 800cde6:	430b      	orrs	r3, r1
 800cde8:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800cdea:	2000      	movs	r0, #0
 800cdec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cdf0:	6802      	ldr	r2, [r0, #0]
 800cdf2:	ea43 0309 	orr.w	r3, r3, r9
 800cdf6:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 800cdfa:	4313      	orrs	r3, r2
 800cdfc:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800cdfe:	ea45 0308 	orr.w	r3, r5, r8
 800ce02:	6842      	ldr	r2, [r0, #4]
 800ce04:	ea43 030e 	orr.w	r3, r3, lr
 800ce08:	ea43 030c 	orr.w	r3, r3, ip
 800ce0c:	433b      	orrs	r3, r7
 800ce0e:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 800ce12:	4333      	orrs	r3, r6
 800ce14:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 800ce18:	4313      	orrs	r3, r2
 800ce1a:	6043      	str	r3, [r0, #4]
 800ce1c:	e7e5      	b.n	800cdea <FMC_SDRAM_Init+0x42>

0800ce1e <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce1e:	68cb      	ldr	r3, [r1, #12]
 800ce20:	f103 3cff 	add.w	ip, r3, #4294967295
 800ce24:	694b      	ldr	r3, [r1, #20]
{
 800ce26:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce28:	680f      	ldr	r7, [r1, #0]
 800ce2a:	684c      	ldr	r4, [r1, #4]
 800ce2c:	688e      	ldr	r6, [r1, #8]
 800ce2e:	690d      	ldr	r5, [r1, #16]
 800ce30:	6989      	ldr	r1, [r1, #24]
 800ce32:	3b01      	subs	r3, #1
 800ce34:	051b      	lsls	r3, r3, #20
 800ce36:	3c01      	subs	r4, #1
 800ce38:	3e01      	subs	r6, #1
 800ce3a:	3d01      	subs	r5, #1
 800ce3c:	3901      	subs	r1, #1
 800ce3e:	3f01      	subs	r7, #1
 800ce40:	0124      	lsls	r4, r4, #4
 800ce42:	0236      	lsls	r6, r6, #8
 800ce44:	042d      	lsls	r5, r5, #16
 800ce46:	0609      	lsls	r1, r1, #24
 800ce48:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800ce4c:	b95a      	cbnz	r2, 800ce66 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce4e:	433b      	orrs	r3, r7
 800ce50:	4323      	orrs	r3, r4
 800ce52:	6882      	ldr	r2, [r0, #8]
 800ce54:	4333      	orrs	r3, r6
 800ce56:	432b      	orrs	r3, r5
 800ce58:	430b      	orrs	r3, r1
 800ce5a:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800ce5e:	4313      	orrs	r3, r2
 800ce60:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800ce62:	2000      	movs	r0, #0
 800ce64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce66:	6882      	ldr	r2, [r0, #8]
 800ce68:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800ce6c:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 800ce70:	431a      	orrs	r2, r3
 800ce72:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800ce74:	ea44 0306 	orr.w	r3, r4, r6
 800ce78:	68c2      	ldr	r2, [r0, #12]
 800ce7a:	433b      	orrs	r3, r7
 800ce7c:	432b      	orrs	r3, r5
 800ce7e:	430b      	orrs	r3, r1
 800ce80:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800ce84:	4313      	orrs	r3, r2
 800ce86:	60c3      	str	r3, [r0, #12]
 800ce88:	e7eb      	b.n	800ce62 <FMC_SDRAM_Timing_Init+0x44>

0800ce8a <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 800ce8a:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 800ce8e:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 800ce92:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 800ce96:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800ce9a:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 800ce9c:	2300      	movs	r3, #0
 800ce9e:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 800cea0:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 800cea2:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 800cea4:	4618      	mov	r0, r3
 800cea6:	4770      	bx	lr

0800cea8 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800cea8:	b570      	push	{r4, r5, r6, lr}
 800ceaa:	4604      	mov	r4, r0
 800ceac:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800ceae:	6902      	ldr	r2, [r0, #16]
 800ceb0:	e9d1 3000 	ldrd	r3, r0, [r1]
 800ceb4:	4303      	orrs	r3, r0
 800ceb6:	68c8      	ldr	r0, [r1, #12]
 800ceb8:	0d92      	lsrs	r2, r2, #22
 800ceba:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800cebe:	0592      	lsls	r2, r2, #22
 800cec0:	4313      	orrs	r3, r2
 800cec2:	688a      	ldr	r2, [r1, #8]
 800cec4:	3a01      	subs	r2, #1
 800cec6:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800ceca:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800cecc:	f7fc ffde 	bl	8009e8c <HAL_GetTick>
 800ced0:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800ced2:	69a3      	ldr	r3, [r4, #24]
 800ced4:	f013 0320 	ands.w	r3, r3, #32
 800ced8:	d101      	bne.n	800cede <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800ceda:	4618      	mov	r0, r3
 800cedc:	e003      	b.n	800cee6 <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 800cede:	1c6b      	adds	r3, r5, #1
 800cee0:	d0f7      	beq.n	800ced2 <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cee2:	b90d      	cbnz	r5, 800cee8 <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 800cee4:	2003      	movs	r0, #3
}
 800cee6:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cee8:	f7fc ffd0 	bl	8009e8c <HAL_GetTick>
 800ceec:	1b80      	subs	r0, r0, r6
 800ceee:	42a8      	cmp	r0, r5
 800cef0:	d9ef      	bls.n	800ced2 <FMC_SDRAM_SendCommand+0x2a>
 800cef2:	e7f7      	b.n	800cee4 <FMC_SDRAM_SendCommand+0x3c>

0800cef4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cef4:	6943      	ldr	r3, [r0, #20]
 800cef6:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800cefa:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800cefe:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800cf02:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 800cf04:	2000      	movs	r0, #0
 800cf06:	4770      	bx	lr

0800cf08 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800cf08:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800cf0a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cf0e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800cf10:	f001 fe40 	bl	800eb94 <xTaskGetSchedulerState>
 800cf14:	2801      	cmp	r0, #1
 800cf16:	d003      	beq.n	800cf20 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800cf18:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800cf1c:	f000 bbe2 	b.w	800d6e4 <xPortSysTickHandler>
}
 800cf20:	bd08      	pop	{r3, pc}
	...

0800cf24 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800cf24:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800cf28:	b92b      	cbnz	r3, 800cf36 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800cf2a:	4b06      	ldr	r3, [pc, #24]	; (800cf44 <osKernelInitialize+0x20>)
 800cf2c:	6818      	ldr	r0, [r3, #0]
 800cf2e:	b928      	cbnz	r0, 800cf3c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800cf30:	2201      	movs	r2, #1
 800cf32:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800cf34:	4770      	bx	lr
    stat = osErrorISR;
 800cf36:	f06f 0005 	mvn.w	r0, #5
 800cf3a:	4770      	bx	lr
    } else {
      stat = osError;
 800cf3c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800cf40:	4770      	bx	lr
 800cf42:	bf00      	nop
 800cf44:	2000641c 	.word	0x2000641c

0800cf48 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800cf48:	b510      	push	{r4, lr}
 800cf4a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cf4e:	b95c      	cbnz	r4, 800cf68 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800cf50:	4b08      	ldr	r3, [pc, #32]	; (800cf74 <osKernelStart+0x2c>)
 800cf52:	681a      	ldr	r2, [r3, #0]
 800cf54:	2a01      	cmp	r2, #1
 800cf56:	d10a      	bne.n	800cf6e <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800cf58:	4a07      	ldr	r2, [pc, #28]	; (800cf78 <osKernelStart+0x30>)
 800cf5a:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800cf5c:	2202      	movs	r2, #2
 800cf5e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800cf60:	f001 fcbc 	bl	800e8dc <vTaskStartScheduler>
      stat = osOK;
 800cf64:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800cf66:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cf68:	f06f 0005 	mvn.w	r0, #5
 800cf6c:	e7fb      	b.n	800cf66 <osKernelStart+0x1e>
      stat = osError;
 800cf6e:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800cf72:	e7f8      	b.n	800cf66 <osKernelStart+0x1e>
 800cf74:	2000641c 	.word	0x2000641c
 800cf78:	e000ed00 	.word	0xe000ed00

0800cf7c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cf7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf7e:	b087      	sub	sp, #28
 800cf80:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cf82:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cf84:	460b      	mov	r3, r1
  hTask = NULL;
 800cf86:	9205      	str	r2, [sp, #20]
 800cf88:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800cf8c:	b9d2      	cbnz	r2, 800cfc4 <osThreadNew+0x48>
 800cf8e:	b1c8      	cbz	r0, 800cfc4 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800cf90:	2c00      	cmp	r4, #0
 800cf92:	d02f      	beq.n	800cff4 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800cf94:	69a5      	ldr	r5, [r4, #24]
 800cf96:	2d00      	cmp	r5, #0
 800cf98:	bf08      	it	eq
 800cf9a:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cf9c:	1e69      	subs	r1, r5, #1
 800cf9e:	2937      	cmp	r1, #55	; 0x37
 800cfa0:	46ac      	mov	ip, r5
 800cfa2:	d82b      	bhi.n	800cffc <osThreadNew+0x80>
 800cfa4:	6861      	ldr	r1, [r4, #4]
 800cfa6:	07c9      	lsls	r1, r1, #31
 800cfa8:	d428      	bmi.n	800cffc <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cfaa:	6966      	ldr	r6, [r4, #20]
 800cfac:	b16e      	cbz	r6, 800cfca <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cfae:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cfb0:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800cfb4:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cfb6:	b157      	cbz	r7, 800cfce <osThreadNew+0x52>
 800cfb8:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 800cfbc:	d902      	bls.n	800cfc4 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cfbe:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cfc0:	b104      	cbz	r4, 800cfc4 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cfc2:	b9ee      	cbnz	r6, 800d000 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800cfc4:	9805      	ldr	r0, [sp, #20]
}
 800cfc6:	b007      	add	sp, #28
 800cfc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800cfca:	2280      	movs	r2, #128	; 0x80
 800cfcc:	e7f0      	b.n	800cfb0 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cfce:	f1be 0f00 	cmp.w	lr, #0
 800cfd2:	d1f7      	bne.n	800cfc4 <osThreadNew+0x48>
      if (mem == 0) {
 800cfd4:	6924      	ldr	r4, [r4, #16]
 800cfd6:	2c00      	cmp	r4, #0
 800cfd8:	d1f4      	bne.n	800cfc4 <osThreadNew+0x48>
 800cfda:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cfdc:	a905      	add	r1, sp, #20
 800cfde:	e9cd c100 	strd	ip, r1, [sp]
 800cfe2:	b292      	uxth	r2, r2
 800cfe4:	4621      	mov	r1, r4
 800cfe6:	f001 faf4 	bl	800e5d2 <xTaskCreate>
 800cfea:	2801      	cmp	r0, #1
            hTask = NULL;
 800cfec:	bf1c      	itt	ne
 800cfee:	2300      	movne	r3, #0
 800cff0:	9305      	strne	r3, [sp, #20]
 800cff2:	e7e7      	b.n	800cfc4 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 800cff4:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800cff8:	2280      	movs	r2, #128	; 0x80
 800cffa:	e7ef      	b.n	800cfdc <osThreadNew+0x60>
        return (NULL);
 800cffc:	4610      	mov	r0, r2
 800cffe:	e7e2      	b.n	800cfc6 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d000:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800d004:	9500      	str	r5, [sp, #0]
 800d006:	f001 faac 	bl	800e562 <xTaskCreateStatic>
 800d00a:	9005      	str	r0, [sp, #20]
 800d00c:	e7da      	b.n	800cfc4 <osThreadNew+0x48>

0800d00e <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d00e:	b510      	push	{r4, lr}
 800d010:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d014:	b924      	cbnz	r4, 800d020 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d016:	b110      	cbz	r0, 800d01e <osDelay+0x10>
      vTaskDelay(ticks);
 800d018:	f001 fc20 	bl	800e85c <vTaskDelay>
    stat = osOK;
 800d01c:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 800d01e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d020:	f06f 0005 	mvn.w	r0, #5
 800d024:	e7fb      	b.n	800d01e <osDelay+0x10>

0800d026 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d026:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d028:	4604      	mov	r4, r0
 800d02a:	460e      	mov	r6, r1
 800d02c:	4615      	mov	r5, r2
 800d02e:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d032:	b11a      	cbz	r2, 800d03c <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800d034:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d036:	4620      	mov	r0, r4
 800d038:	b003      	add	sp, #12
 800d03a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d03c:	2800      	cmp	r0, #0
 800d03e:	d0f9      	beq.n	800d034 <osSemaphoreNew+0xe>
 800d040:	4288      	cmp	r0, r1
 800d042:	d3f7      	bcc.n	800d034 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 800d044:	b1e5      	cbz	r5, 800d080 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d046:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800d04a:	b1bb      	cbz	r3, 800d07c <osSemaphoreNew+0x56>
 800d04c:	2f4f      	cmp	r7, #79	; 0x4f
 800d04e:	d9f1      	bls.n	800d034 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800d050:	2801      	cmp	r0, #1
 800d052:	d12a      	bne.n	800d0aa <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d054:	2103      	movs	r1, #3
 800d056:	9100      	str	r1, [sp, #0]
 800d058:	4611      	mov	r1, r2
 800d05a:	f000 fcec 	bl	800da36 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800d05e:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d060:	2800      	cmp	r0, #0
 800d062:	d0e7      	beq.n	800d034 <osSemaphoreNew+0xe>
 800d064:	b1de      	cbz	r6, 800d09e <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d066:	2300      	movs	r3, #0
 800d068:	461a      	mov	r2, r3
 800d06a:	4619      	mov	r1, r3
 800d06c:	f000 fd98 	bl	800dba0 <xQueueGenericSend>
 800d070:	2801      	cmp	r0, #1
 800d072:	d014      	beq.n	800d09e <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d074:	4620      	mov	r0, r4
 800d076:	f001 f8d3 	bl	800e220 <vQueueDelete>
 800d07a:	e7db      	b.n	800d034 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d07c:	2f00      	cmp	r7, #0
 800d07e:	d1d9      	bne.n	800d034 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800d080:	2c01      	cmp	r4, #1
 800d082:	d105      	bne.n	800d090 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 800d084:	2203      	movs	r2, #3
 800d086:	2100      	movs	r1, #0
 800d088:	4620      	mov	r0, r4
 800d08a:	f000 fd22 	bl	800dad2 <xQueueGenericCreate>
 800d08e:	e7e6      	b.n	800d05e <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d090:	4620      	mov	r0, r4
 800d092:	4631      	mov	r1, r6
 800d094:	f000 fd66 	bl	800db64 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d098:	4604      	mov	r4, r0
 800d09a:	2800      	cmp	r0, #0
 800d09c:	d0ca      	beq.n	800d034 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 800d09e:	b955      	cbnz	r5, 800d0b6 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 800d0a0:	4629      	mov	r1, r5
 800d0a2:	4620      	mov	r0, r4
 800d0a4:	f001 f896 	bl	800e1d4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800d0a8:	e7c5      	b.n	800d036 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d0aa:	461a      	mov	r2, r3
 800d0ac:	f000 fd38 	bl	800db20 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800d0b0:	4604      	mov	r4, r0
 800d0b2:	2800      	cmp	r0, #0
 800d0b4:	d0be      	beq.n	800d034 <osSemaphoreNew+0xe>
          name = attr->name;
 800d0b6:	682d      	ldr	r5, [r5, #0]
 800d0b8:	e7f2      	b.n	800d0a0 <osSemaphoreNew+0x7a>

0800d0ba <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d0ba:	b513      	push	{r0, r1, r4, lr}
 800d0bc:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d0be:	b308      	cbz	r0, 800d104 <osSemaphoreAcquire+0x4a>
 800d0c0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d0c4:	b1b3      	cbz	r3, 800d0f4 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 800d0c6:	b9e9      	cbnz	r1, 800d104 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d0c8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d0ca:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d0cc:	f001 f833 	bl	800e136 <xQueueReceiveFromISR>
 800d0d0:	2801      	cmp	r0, #1
 800d0d2:	d114      	bne.n	800d0fe <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d0d4:	9b01      	ldr	r3, [sp, #4]
 800d0d6:	b913      	cbnz	r3, 800d0de <osSemaphoreAcquire+0x24>
  stat = osOK;
 800d0d8:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d0da:	b002      	add	sp, #8
 800d0dc:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d0de:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d0e2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d0e6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d0ea:	f3bf 8f4f 	dsb	sy
 800d0ee:	f3bf 8f6f 	isb	sy
 800d0f2:	e7f1      	b.n	800d0d8 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d0f4:	f000 ff5c 	bl	800dfb0 <xQueueSemaphoreTake>
 800d0f8:	2801      	cmp	r0, #1
 800d0fa:	d0ed      	beq.n	800d0d8 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 800d0fc:	b92c      	cbnz	r4, 800d10a <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 800d0fe:	f06f 0002 	mvn.w	r0, #2
 800d102:	e7ea      	b.n	800d0da <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800d104:	f06f 0003 	mvn.w	r0, #3
 800d108:	e7e7      	b.n	800d0da <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 800d10a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800d10e:	e7e4      	b.n	800d0da <osSemaphoreAcquire+0x20>

0800d110 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d110:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d112:	b310      	cbz	r0, 800d15a <osSemaphoreRelease+0x4a>
 800d114:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d118:	b1b3      	cbz	r3, 800d148 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d11a:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d11c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d11e:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d120:	f000 fe53 	bl	800ddca <xQueueGiveFromISR>
 800d124:	2801      	cmp	r0, #1
 800d126:	d115      	bne.n	800d154 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d128:	9b01      	ldr	r3, [sp, #4]
 800d12a:	b913      	cbnz	r3, 800d132 <osSemaphoreRelease+0x22>
  stat = osOK;
 800d12c:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d12e:	b002      	add	sp, #8
 800d130:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800d132:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d136:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d13a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d13e:	f3bf 8f4f 	dsb	sy
 800d142:	f3bf 8f6f 	isb	sy
 800d146:	e7f1      	b.n	800d12c <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d148:	461a      	mov	r2, r3
 800d14a:	4619      	mov	r1, r3
 800d14c:	f000 fd28 	bl	800dba0 <xQueueGenericSend>
 800d150:	2801      	cmp	r0, #1
 800d152:	d0eb      	beq.n	800d12c <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 800d154:	f06f 0002 	mvn.w	r0, #2
 800d158:	e7e9      	b.n	800d12e <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800d15a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800d15e:	e7e6      	b.n	800d12e <osSemaphoreRelease+0x1e>

0800d160 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d160:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d162:	4605      	mov	r5, r0
 800d164:	460e      	mov	r6, r1
 800d166:	4614      	mov	r4, r2
 800d168:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d16c:	b11f      	cbz	r7, 800d176 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800d16e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d170:	4628      	mov	r0, r5
 800d172:	b003      	add	sp, #12
 800d174:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d176:	2800      	cmp	r0, #0
 800d178:	d0f9      	beq.n	800d16e <osMessageQueueNew+0xe>
 800d17a:	2900      	cmp	r1, #0
 800d17c:	d0f7      	beq.n	800d16e <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800d17e:	b1da      	cbz	r2, 800d1b8 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d180:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800d184:	b183      	cbz	r3, 800d1a8 <osMessageQueueNew+0x48>
 800d186:	2a4f      	cmp	r2, #79	; 0x4f
 800d188:	d9f1      	bls.n	800d16e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d18a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d18c:	2a00      	cmp	r2, #0
 800d18e:	d0ee      	beq.n	800d16e <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d190:	6966      	ldr	r6, [r4, #20]
 800d192:	434d      	muls	r5, r1
 800d194:	42ae      	cmp	r6, r5
 800d196:	d3ea      	bcc.n	800d16e <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d198:	9700      	str	r7, [sp, #0]
 800d19a:	f000 fc4c 	bl	800da36 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d19e:	4605      	mov	r5, r0
 800d1a0:	2800      	cmp	r0, #0
 800d1a2:	d0e4      	beq.n	800d16e <osMessageQueueNew+0xe>
        name = attr->name;
 800d1a4:	6824      	ldr	r4, [r4, #0]
 800d1a6:	e011      	b.n	800d1cc <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d1a8:	2a00      	cmp	r2, #0
 800d1aa:	d1e0      	bne.n	800d16e <osMessageQueueNew+0xe>
 800d1ac:	6923      	ldr	r3, [r4, #16]
 800d1ae:	2b00      	cmp	r3, #0
 800d1b0:	d1dd      	bne.n	800d16e <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d1b2:	6963      	ldr	r3, [r4, #20]
 800d1b4:	2b00      	cmp	r3, #0
 800d1b6:	d1da      	bne.n	800d16e <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d1b8:	4628      	mov	r0, r5
 800d1ba:	2200      	movs	r2, #0
 800d1bc:	4631      	mov	r1, r6
 800d1be:	f000 fc88 	bl	800dad2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d1c2:	4605      	mov	r5, r0
 800d1c4:	2800      	cmp	r0, #0
 800d1c6:	d0d2      	beq.n	800d16e <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800d1c8:	2c00      	cmp	r4, #0
 800d1ca:	d1eb      	bne.n	800d1a4 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800d1cc:	4621      	mov	r1, r4
 800d1ce:	4628      	mov	r0, r5
 800d1d0:	f001 f800 	bl	800e1d4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d1d4:	e7cc      	b.n	800d170 <osMessageQueueNew+0x10>

0800d1d6 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d1d6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d1d8:	461c      	mov	r4, r3
 800d1da:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d1de:	b1c6      	cbz	r6, 800d212 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d1e0:	b318      	cbz	r0, 800d22a <osMessageQueuePut+0x54>
 800d1e2:	b311      	cbz	r1, 800d22a <osMessageQueuePut+0x54>
 800d1e4:	bb0b      	cbnz	r3, 800d22a <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d1e6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d1e8:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d1ea:	f000 fd8c 	bl	800dd06 <xQueueGenericSendFromISR>
 800d1ee:	2801      	cmp	r0, #1
 800d1f0:	d118      	bne.n	800d224 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d1f2:	9b01      	ldr	r3, [sp, #4]
 800d1f4:	b913      	cbnz	r3, 800d1fc <osMessageQueuePut+0x26>
  stat = osOK;
 800d1f6:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d1f8:	b002      	add	sp, #8
 800d1fa:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800d1fc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d200:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d204:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d208:	f3bf 8f4f 	dsb	sy
 800d20c:	f3bf 8f6f 	isb	sy
 800d210:	e7f1      	b.n	800d1f6 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d212:	b150      	cbz	r0, 800d22a <osMessageQueuePut+0x54>
 800d214:	b149      	cbz	r1, 800d22a <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d216:	4633      	mov	r3, r6
 800d218:	4622      	mov	r2, r4
 800d21a:	f000 fcc1 	bl	800dba0 <xQueueGenericSend>
 800d21e:	2801      	cmp	r0, #1
 800d220:	d0e9      	beq.n	800d1f6 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 800d222:	b92c      	cbnz	r4, 800d230 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 800d224:	f06f 0002 	mvn.w	r0, #2
 800d228:	e7e6      	b.n	800d1f8 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 800d22a:	f06f 0003 	mvn.w	r0, #3
 800d22e:	e7e3      	b.n	800d1f8 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 800d230:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800d234:	e7e0      	b.n	800d1f8 <osMessageQueuePut+0x22>

0800d236 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d236:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d238:	461c      	mov	r4, r3
 800d23a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d23e:	b1c3      	cbz	r3, 800d272 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d240:	b310      	cbz	r0, 800d288 <osMessageQueueGet+0x52>
 800d242:	b309      	cbz	r1, 800d288 <osMessageQueueGet+0x52>
 800d244:	bb04      	cbnz	r4, 800d288 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d246:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d248:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d24a:	f000 ff74 	bl	800e136 <xQueueReceiveFromISR>
 800d24e:	2801      	cmp	r0, #1
 800d250:	d117      	bne.n	800d282 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d252:	9b01      	ldr	r3, [sp, #4]
 800d254:	b913      	cbnz	r3, 800d25c <osMessageQueueGet+0x26>
  stat = osOK;
 800d256:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d258:	b003      	add	sp, #12
 800d25a:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800d25c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d260:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d264:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d268:	f3bf 8f4f 	dsb	sy
 800d26c:	f3bf 8f6f 	isb	sy
 800d270:	e7f1      	b.n	800d256 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d272:	b148      	cbz	r0, 800d288 <osMessageQueueGet+0x52>
 800d274:	b141      	cbz	r1, 800d288 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d276:	4622      	mov	r2, r4
 800d278:	f000 fdfb 	bl	800de72 <xQueueReceive>
 800d27c:	2801      	cmp	r0, #1
 800d27e:	d0ea      	beq.n	800d256 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 800d280:	b92c      	cbnz	r4, 800d28e <osMessageQueueGet+0x58>
          stat = osErrorResource;
 800d282:	f06f 0002 	mvn.w	r0, #2
 800d286:	e7e7      	b.n	800d258 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 800d288:	f06f 0003 	mvn.w	r0, #3
 800d28c:	e7e4      	b.n	800d258 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 800d28e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800d292:	e7e1      	b.n	800d258 <osMessageQueueGet+0x22>

0800d294 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d294:	4b03      	ldr	r3, [pc, #12]	; (800d2a4 <vApplicationGetIdleTaskMemory+0x10>)
 800d296:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800d298:	4b03      	ldr	r3, [pc, #12]	; (800d2a8 <vApplicationGetIdleTaskMemory+0x14>)
 800d29a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d29c:	2380      	movs	r3, #128	; 0x80
 800d29e:	6013      	str	r3, [r2, #0]
}
 800d2a0:	4770      	bx	lr
 800d2a2:	bf00      	nop
 800d2a4:	200063bc 	.word	0x200063bc
 800d2a8:	200061bc 	.word	0x200061bc

0800d2ac <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d2ac:	4b03      	ldr	r3, [pc, #12]	; (800d2bc <vApplicationGetTimerTaskMemory+0x10>)
 800d2ae:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d2b0:	4b03      	ldr	r3, [pc, #12]	; (800d2c0 <vApplicationGetTimerTaskMemory+0x14>)
 800d2b2:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d2b4:	f44f 7380 	mov.w	r3, #256	; 0x100
 800d2b8:	6013      	str	r3, [r2, #0]
}
 800d2ba:	4770      	bx	lr
 800d2bc:	20006820 	.word	0x20006820
 800d2c0:	20006420 	.word	0x20006420

0800d2c4 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800d2c4:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d2c6:	4b0f      	ldr	r3, [pc, #60]	; (800d304 <prvInsertBlockIntoFreeList+0x40>)
 800d2c8:	461a      	mov	r2, r3
 800d2ca:	681b      	ldr	r3, [r3, #0]
 800d2cc:	4283      	cmp	r3, r0
 800d2ce:	d3fb      	bcc.n	800d2c8 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d2d0:	6854      	ldr	r4, [r2, #4]
 800d2d2:	1911      	adds	r1, r2, r4
 800d2d4:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d2d6:	bf01      	itttt	eq
 800d2d8:	6841      	ldreq	r1, [r0, #4]
 800d2da:	4610      	moveq	r0, r2
 800d2dc:	1909      	addeq	r1, r1, r4
 800d2de:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d2e0:	6844      	ldr	r4, [r0, #4]
 800d2e2:	1901      	adds	r1, r0, r4
 800d2e4:	428b      	cmp	r3, r1
 800d2e6:	d107      	bne.n	800d2f8 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d2e8:	4907      	ldr	r1, [pc, #28]	; (800d308 <prvInsertBlockIntoFreeList+0x44>)
 800d2ea:	6809      	ldr	r1, [r1, #0]
 800d2ec:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d2ee:	bf1f      	itttt	ne
 800d2f0:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d2f2:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d2f4:	1909      	addne	r1, r1, r4
 800d2f6:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d2f8:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800d2fa:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d2fc:	bf18      	it	ne
 800d2fe:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800d300:	bd10      	pop	{r4, pc}
 800d302:	bf00      	nop
 800d304:	2000e898 	.word	0x2000e898
 800d308:	20006880 	.word	0x20006880

0800d30c <pvPortMalloc>:
{
 800d30c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d310:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800d312:	f001 f98b 	bl	800e62c <vTaskSuspendAll>
		if( pxEnd == NULL )
 800d316:	4842      	ldr	r0, [pc, #264]	; (800d420 <pvPortMalloc+0x114>)
 800d318:	4d42      	ldr	r5, [pc, #264]	; (800d424 <pvPortMalloc+0x118>)
 800d31a:	6803      	ldr	r3, [r0, #0]
 800d31c:	bb0b      	cbnz	r3, 800d362 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800d31e:	4942      	ldr	r1, [pc, #264]	; (800d428 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d320:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d322:	bf1f      	itttt	ne
 800d324:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d326:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800d32a:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 800d32e:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d330:	bf14      	ite	ne
 800d332:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800d334:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800d338:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d33a:	4e3c      	ldr	r6, [pc, #240]	; (800d42c <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800d33c:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d33e:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800d342:	2300      	movs	r3, #0
 800d344:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d346:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d348:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d34c:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d34e:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800d352:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d354:	4a36      	ldr	r2, [pc, #216]	; (800d430 <pvPortMalloc+0x124>)
 800d356:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d358:	4a36      	ldr	r2, [pc, #216]	; (800d434 <pvPortMalloc+0x128>)
 800d35a:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d35c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800d360:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d362:	682f      	ldr	r7, [r5, #0]
 800d364:	4227      	tst	r7, r4
 800d366:	d155      	bne.n	800d414 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800d368:	2c00      	cmp	r4, #0
 800d36a:	d046      	beq.n	800d3fa <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800d36c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d370:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d372:	bf1c      	itt	ne
 800d374:	f023 0307 	bicne.w	r3, r3, #7
 800d378:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d37a:	2b00      	cmp	r3, #0
 800d37c:	d04a      	beq.n	800d414 <pvPortMalloc+0x108>
 800d37e:	4c2d      	ldr	r4, [pc, #180]	; (800d434 <pvPortMalloc+0x128>)
 800d380:	6826      	ldr	r6, [r4, #0]
 800d382:	429e      	cmp	r6, r3
 800d384:	d346      	bcc.n	800d414 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800d386:	4a29      	ldr	r2, [pc, #164]	; (800d42c <pvPortMalloc+0x120>)
 800d388:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d38a:	6869      	ldr	r1, [r5, #4]
 800d38c:	4299      	cmp	r1, r3
 800d38e:	d204      	bcs.n	800d39a <pvPortMalloc+0x8e>
 800d390:	f8d5 c000 	ldr.w	ip, [r5]
 800d394:	f1bc 0f00 	cmp.w	ip, #0
 800d398:	d115      	bne.n	800d3c6 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800d39a:	6800      	ldr	r0, [r0, #0]
 800d39c:	42a8      	cmp	r0, r5
 800d39e:	d039      	beq.n	800d414 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d3a0:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d3a2:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d3a4:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d3a8:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d3aa:	2910      	cmp	r1, #16
 800d3ac:	d912      	bls.n	800d3d4 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d3ae:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d3b0:	0742      	lsls	r2, r0, #29
 800d3b2:	d00b      	beq.n	800d3cc <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d3b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3b8:	f383 8811 	msr	BASEPRI, r3
 800d3bc:	f3bf 8f6f 	isb	sy
 800d3c0:	f3bf 8f4f 	dsb	sy
 800d3c4:	e7fe      	b.n	800d3c4 <pvPortMalloc+0xb8>
 800d3c6:	462a      	mov	r2, r5
 800d3c8:	4665      	mov	r5, ip
 800d3ca:	e7de      	b.n	800d38a <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d3cc:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800d3ce:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800d3d0:	f7ff ff78 	bl	800d2c4 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d3d4:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d3d6:	4916      	ldr	r1, [pc, #88]	; (800d430 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 800d3d8:	4a17      	ldr	r2, [pc, #92]	; (800d438 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d3da:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d3dc:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d3de:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 800d3e0:	2300      	movs	r3, #0
 800d3e2:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800d3e4:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d3e6:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d3e8:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 800d3ea:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d3ee:	bf38      	it	cc
 800d3f0:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d3f2:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d3f6:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 800d3f8:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d3fa:	f001 f9bb 	bl	800e774 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d3fe:	0763      	lsls	r3, r4, #29
 800d400:	d00a      	beq.n	800d418 <pvPortMalloc+0x10c>
 800d402:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d406:	f383 8811 	msr	BASEPRI, r3
 800d40a:	f3bf 8f6f 	isb	sy
 800d40e:	f3bf 8f4f 	dsb	sy
 800d412:	e7fe      	b.n	800d412 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800d414:	2400      	movs	r4, #0
 800d416:	e7f0      	b.n	800d3fa <pvPortMalloc+0xee>
}
 800d418:	4620      	mov	r0, r4
 800d41a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d41e:	bf00      	nop
 800d420:	20006880 	.word	0x20006880
 800d424:	2000e884 	.word	0x2000e884
 800d428:	20006884 	.word	0x20006884
 800d42c:	2000e898 	.word	0x2000e898
 800d430:	2000e88c 	.word	0x2000e88c
 800d434:	2000e888 	.word	0x2000e888
 800d438:	2000e890 	.word	0x2000e890

0800d43c <vPortFree>:
{
 800d43c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800d43e:	4604      	mov	r4, r0
 800d440:	b390      	cbz	r0, 800d4a8 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d442:	4a1a      	ldr	r2, [pc, #104]	; (800d4ac <vPortFree+0x70>)
 800d444:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d448:	6812      	ldr	r2, [r2, #0]
 800d44a:	4213      	tst	r3, r2
 800d44c:	d108      	bne.n	800d460 <vPortFree+0x24>
 800d44e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d452:	f383 8811 	msr	BASEPRI, r3
 800d456:	f3bf 8f6f 	isb	sy
 800d45a:	f3bf 8f4f 	dsb	sy
 800d45e:	e7fe      	b.n	800d45e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d460:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d464:	b141      	cbz	r1, 800d478 <vPortFree+0x3c>
 800d466:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d46a:	f383 8811 	msr	BASEPRI, r3
 800d46e:	f3bf 8f6f 	isb	sy
 800d472:	f3bf 8f4f 	dsb	sy
 800d476:	e7fe      	b.n	800d476 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d478:	ea23 0302 	bic.w	r3, r3, r2
 800d47c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800d480:	f001 f8d4 	bl	800e62c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d484:	4a0a      	ldr	r2, [pc, #40]	; (800d4b0 <vPortFree+0x74>)
 800d486:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d48a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d48c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d490:	440b      	add	r3, r1
 800d492:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d494:	f7ff ff16 	bl	800d2c4 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800d498:	4a06      	ldr	r2, [pc, #24]	; (800d4b4 <vPortFree+0x78>)
 800d49a:	6813      	ldr	r3, [r2, #0]
}
 800d49c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800d4a0:	3301      	adds	r3, #1
 800d4a2:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800d4a4:	f001 b966 	b.w	800e774 <xTaskResumeAll>
}
 800d4a8:	bd10      	pop	{r4, pc}
 800d4aa:	bf00      	nop
 800d4ac:	2000e884 	.word	0x2000e884
 800d4b0:	2000e888 	.word	0x2000e888
 800d4b4:	2000e894 	.word	0x2000e894

0800d4b8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d4b8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d4bc:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d4c0:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d4c4:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d4c6:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d4c8:	2300      	movs	r3, #0
 800d4ca:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d4cc:	4770      	bx	lr

0800d4ce <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d4ce:	2300      	movs	r3, #0
 800d4d0:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d4d2:	4770      	bx	lr

0800d4d4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d4d4:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800d4d6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d4d8:	689a      	ldr	r2, [r3, #8]
 800d4da:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d4dc:	689a      	ldr	r2, [r3, #8]
 800d4de:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d4e0:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d4e2:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d4e4:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d4e6:	3301      	adds	r3, #1
 800d4e8:	6003      	str	r3, [r0, #0]
}
 800d4ea:	4770      	bx	lr

0800d4ec <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d4ec:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d4ee:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d4f0:	1c63      	adds	r3, r4, #1
 800d4f2:	d10a      	bne.n	800d50a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800d4f4:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800d4f6:	685a      	ldr	r2, [r3, #4]
 800d4f8:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d4fa:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d4fc:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d4fe:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d500:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d502:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d504:	3301      	adds	r3, #1
 800d506:	6003      	str	r3, [r0, #0]
}
 800d508:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d50a:	f100 0208 	add.w	r2, r0, #8
 800d50e:	4613      	mov	r3, r2
 800d510:	6852      	ldr	r2, [r2, #4]
 800d512:	6815      	ldr	r5, [r2, #0]
 800d514:	42a5      	cmp	r5, r4
 800d516:	d9fa      	bls.n	800d50e <vListInsert+0x22>
 800d518:	e7ed      	b.n	800d4f6 <vListInsert+0xa>

0800d51a <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d51a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800d51e:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d520:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d522:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d524:	6859      	ldr	r1, [r3, #4]
 800d526:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d528:	bf08      	it	eq
 800d52a:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800d52c:	2200      	movs	r2, #0
 800d52e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d530:	681a      	ldr	r2, [r3, #0]
 800d532:	3a01      	subs	r2, #1
 800d534:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800d536:	6818      	ldr	r0, [r3, #0]
}
 800d538:	4770      	bx	lr
	...

0800d53c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d53c:	4808      	ldr	r0, [pc, #32]	; (800d560 <prvPortStartFirstTask+0x24>)
 800d53e:	6800      	ldr	r0, [r0, #0]
 800d540:	6800      	ldr	r0, [r0, #0]
 800d542:	f380 8808 	msr	MSP, r0
 800d546:	f04f 0000 	mov.w	r0, #0
 800d54a:	f380 8814 	msr	CONTROL, r0
 800d54e:	b662      	cpsie	i
 800d550:	b661      	cpsie	f
 800d552:	f3bf 8f4f 	dsb	sy
 800d556:	f3bf 8f6f 	isb	sy
 800d55a:	df00      	svc	0
 800d55c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d55e:	0000      	.short	0x0000
 800d560:	e000ed08 	.word	0xe000ed08

0800d564 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d564:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d574 <vPortEnableVFP+0x10>
 800d568:	6801      	ldr	r1, [r0, #0]
 800d56a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d56e:	6001      	str	r1, [r0, #0]
 800d570:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d572:	0000      	.short	0x0000
 800d574:	e000ed88 	.word	0xe000ed88

0800d578 <prvTaskExitError>:
{
 800d578:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d57a:	2300      	movs	r3, #0
 800d57c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d57e:	4b0d      	ldr	r3, [pc, #52]	; (800d5b4 <prvTaskExitError+0x3c>)
 800d580:	681b      	ldr	r3, [r3, #0]
 800d582:	3301      	adds	r3, #1
 800d584:	d008      	beq.n	800d598 <prvTaskExitError+0x20>
 800d586:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d58a:	f383 8811 	msr	BASEPRI, r3
 800d58e:	f3bf 8f6f 	isb	sy
 800d592:	f3bf 8f4f 	dsb	sy
 800d596:	e7fe      	b.n	800d596 <prvTaskExitError+0x1e>
 800d598:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d59c:	f383 8811 	msr	BASEPRI, r3
 800d5a0:	f3bf 8f6f 	isb	sy
 800d5a4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d5a8:	9b01      	ldr	r3, [sp, #4]
 800d5aa:	2b00      	cmp	r3, #0
 800d5ac:	d0fc      	beq.n	800d5a8 <prvTaskExitError+0x30>
}
 800d5ae:	b002      	add	sp, #8
 800d5b0:	4770      	bx	lr
 800d5b2:	bf00      	nop
 800d5b4:	2000005c 	.word	0x2000005c

0800d5b8 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d5b8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800d5bc:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d5c0:	4b07      	ldr	r3, [pc, #28]	; (800d5e0 <pxPortInitialiseStack+0x28>)
 800d5c2:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d5c6:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d5ca:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d5ce:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800d5d2:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d5d6:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800d5da:	3844      	subs	r0, #68	; 0x44
 800d5dc:	4770      	bx	lr
 800d5de:	bf00      	nop
 800d5e0:	0800d579 	.word	0x0800d579
	...

0800d5f0 <SVC_Handler>:
	__asm volatile (
 800d5f0:	4b07      	ldr	r3, [pc, #28]	; (800d610 <pxCurrentTCBConst2>)
 800d5f2:	6819      	ldr	r1, [r3, #0]
 800d5f4:	6808      	ldr	r0, [r1, #0]
 800d5f6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5fa:	f380 8809 	msr	PSP, r0
 800d5fe:	f3bf 8f6f 	isb	sy
 800d602:	f04f 0000 	mov.w	r0, #0
 800d606:	f380 8811 	msr	BASEPRI, r0
 800d60a:	4770      	bx	lr
 800d60c:	f3af 8000 	nop.w

0800d610 <pxCurrentTCBConst2>:
 800d610:	2000e8e8 	.word	0x2000e8e8

0800d614 <vPortEnterCritical>:
 800d614:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d618:	f383 8811 	msr	BASEPRI, r3
 800d61c:	f3bf 8f6f 	isb	sy
 800d620:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d624:	4a0a      	ldr	r2, [pc, #40]	; (800d650 <vPortEnterCritical+0x3c>)
 800d626:	6813      	ldr	r3, [r2, #0]
 800d628:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d62a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d62c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d62e:	d10e      	bne.n	800d64e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d630:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d634:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d638:	b2db      	uxtb	r3, r3
 800d63a:	b143      	cbz	r3, 800d64e <vPortEnterCritical+0x3a>
 800d63c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d640:	f383 8811 	msr	BASEPRI, r3
 800d644:	f3bf 8f6f 	isb	sy
 800d648:	f3bf 8f4f 	dsb	sy
 800d64c:	e7fe      	b.n	800d64c <vPortEnterCritical+0x38>
}
 800d64e:	4770      	bx	lr
 800d650:	2000005c 	.word	0x2000005c

0800d654 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d654:	4a08      	ldr	r2, [pc, #32]	; (800d678 <vPortExitCritical+0x24>)
 800d656:	6813      	ldr	r3, [r2, #0]
 800d658:	b943      	cbnz	r3, 800d66c <vPortExitCritical+0x18>
 800d65a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d65e:	f383 8811 	msr	BASEPRI, r3
 800d662:	f3bf 8f6f 	isb	sy
 800d666:	f3bf 8f4f 	dsb	sy
 800d66a:	e7fe      	b.n	800d66a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d66c:	3b01      	subs	r3, #1
 800d66e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d670:	b90b      	cbnz	r3, 800d676 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d672:	f383 8811 	msr	BASEPRI, r3
}
 800d676:	4770      	bx	lr
 800d678:	2000005c 	.word	0x2000005c
 800d67c:	00000000 	.word	0x00000000

0800d680 <PendSV_Handler>:
	__asm volatile
 800d680:	f3ef 8009 	mrs	r0, PSP
 800d684:	f3bf 8f6f 	isb	sy
 800d688:	4b15      	ldr	r3, [pc, #84]	; (800d6e0 <pxCurrentTCBConst>)
 800d68a:	681a      	ldr	r2, [r3, #0]
 800d68c:	f01e 0f10 	tst.w	lr, #16
 800d690:	bf08      	it	eq
 800d692:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d696:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d69a:	6010      	str	r0, [r2, #0]
 800d69c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d6a0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d6a4:	f380 8811 	msr	BASEPRI, r0
 800d6a8:	f3bf 8f4f 	dsb	sy
 800d6ac:	f3bf 8f6f 	isb	sy
 800d6b0:	f001 f962 	bl	800e978 <vTaskSwitchContext>
 800d6b4:	f04f 0000 	mov.w	r0, #0
 800d6b8:	f380 8811 	msr	BASEPRI, r0
 800d6bc:	bc09      	pop	{r0, r3}
 800d6be:	6819      	ldr	r1, [r3, #0]
 800d6c0:	6808      	ldr	r0, [r1, #0]
 800d6c2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6c6:	f01e 0f10 	tst.w	lr, #16
 800d6ca:	bf08      	it	eq
 800d6cc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d6d0:	f380 8809 	msr	PSP, r0
 800d6d4:	f3bf 8f6f 	isb	sy
 800d6d8:	4770      	bx	lr
 800d6da:	bf00      	nop
 800d6dc:	f3af 8000 	nop.w

0800d6e0 <pxCurrentTCBConst>:
 800d6e0:	2000e8e8 	.word	0x2000e8e8

0800d6e4 <xPortSysTickHandler>:
{
 800d6e4:	b508      	push	{r3, lr}
	__asm volatile
 800d6e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6ea:	f383 8811 	msr	BASEPRI, r3
 800d6ee:	f3bf 8f6f 	isb	sy
 800d6f2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d6f6:	f000 ffa7 	bl	800e648 <xTaskIncrementTick>
 800d6fa:	b128      	cbz	r0, 800d708 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d6fc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d700:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d704:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d708:	2300      	movs	r3, #0
 800d70a:	f383 8811 	msr	BASEPRI, r3
}
 800d70e:	bd08      	pop	{r3, pc}

0800d710 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d710:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d714:	2300      	movs	r3, #0
 800d716:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d718:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d71a:	4b05      	ldr	r3, [pc, #20]	; (800d730 <vPortSetupTimerInterrupt+0x20>)
 800d71c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800d720:	681b      	ldr	r3, [r3, #0]
 800d722:	fbb3 f3f1 	udiv	r3, r3, r1
 800d726:	3b01      	subs	r3, #1
 800d728:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d72a:	2307      	movs	r3, #7
 800d72c:	6113      	str	r3, [r2, #16]
}
 800d72e:	4770      	bx	lr
 800d730:	20000050 	.word	0x20000050

0800d734 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d734:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 800d738:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d73a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d73e:	4a3a      	ldr	r2, [pc, #232]	; (800d828 <xPortStartScheduler+0xf4>)
 800d740:	4291      	cmp	r1, r2
 800d742:	d108      	bne.n	800d756 <xPortStartScheduler+0x22>
	__asm volatile
 800d744:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d748:	f383 8811 	msr	BASEPRI, r3
 800d74c:	f3bf 8f6f 	isb	sy
 800d750:	f3bf 8f4f 	dsb	sy
 800d754:	e7fe      	b.n	800d754 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d756:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d75a:	4b34      	ldr	r3, [pc, #208]	; (800d82c <xPortStartScheduler+0xf8>)
 800d75c:	429a      	cmp	r2, r3
 800d75e:	d108      	bne.n	800d772 <xPortStartScheduler+0x3e>
 800d760:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d764:	f383 8811 	msr	BASEPRI, r3
 800d768:	f3bf 8f6f 	isb	sy
 800d76c:	f3bf 8f4f 	dsb	sy
 800d770:	e7fe      	b.n	800d770 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d772:	4b2f      	ldr	r3, [pc, #188]	; (800d830 <xPortStartScheduler+0xfc>)
 800d774:	781a      	ldrb	r2, [r3, #0]
 800d776:	b2d2      	uxtb	r2, r2
 800d778:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d77a:	22ff      	movs	r2, #255	; 0xff
 800d77c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d77e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d780:	4a2c      	ldr	r2, [pc, #176]	; (800d834 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d782:	b2db      	uxtb	r3, r3
 800d784:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d788:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800d78c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800d790:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d792:	4a29      	ldr	r2, [pc, #164]	; (800d838 <xPortStartScheduler+0x104>)
 800d794:	2307      	movs	r3, #7
 800d796:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d798:	2100      	movs	r1, #0
 800d79a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800d79e:	0600      	lsls	r0, r0, #24
 800d7a0:	f103 34ff 	add.w	r4, r3, #4294967295
 800d7a4:	d40c      	bmi.n	800d7c0 <xPortStartScheduler+0x8c>
 800d7a6:	b111      	cbz	r1, 800d7ae <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d7a8:	2b03      	cmp	r3, #3
 800d7aa:	6013      	str	r3, [r2, #0]
 800d7ac:	d011      	beq.n	800d7d2 <xPortStartScheduler+0x9e>
 800d7ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7b2:	f383 8811 	msr	BASEPRI, r3
 800d7b6:	f3bf 8f6f 	isb	sy
 800d7ba:	f3bf 8f4f 	dsb	sy
 800d7be:	e7fe      	b.n	800d7be <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d7c0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800d7c4:	005b      	lsls	r3, r3, #1
 800d7c6:	b2db      	uxtb	r3, r3
 800d7c8:	f88d 3003 	strb.w	r3, [sp, #3]
 800d7cc:	2101      	movs	r1, #1
 800d7ce:	4623      	mov	r3, r4
 800d7d0:	e7e3      	b.n	800d79a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d7d2:	f44f 7340 	mov.w	r3, #768	; 0x300
 800d7d6:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d7d8:	9b01      	ldr	r3, [sp, #4]
 800d7da:	4a15      	ldr	r2, [pc, #84]	; (800d830 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d7dc:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d7e0:	b2db      	uxtb	r3, r3
 800d7e2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d7e4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800d7e8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d7ec:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d7f0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800d7f4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d7f8:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800d7fc:	f7ff ff88 	bl	800d710 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d800:	4b0e      	ldr	r3, [pc, #56]	; (800d83c <xPortStartScheduler+0x108>)
 800d802:	2500      	movs	r5, #0
 800d804:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800d806:	f7ff fead 	bl	800d564 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d80a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800d80e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d812:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d816:	f7ff fe91 	bl	800d53c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d81a:	f001 f8ad 	bl	800e978 <vTaskSwitchContext>
	prvTaskExitError();
 800d81e:	f7ff feab 	bl	800d578 <prvTaskExitError>
}
 800d822:	4628      	mov	r0, r5
 800d824:	b003      	add	sp, #12
 800d826:	bd30      	pop	{r4, r5, pc}
 800d828:	410fc271 	.word	0x410fc271
 800d82c:	410fc270 	.word	0x410fc270
 800d830:	e000e400 	.word	0xe000e400
 800d834:	2000e8a0 	.word	0x2000e8a0
 800d838:	2000e8a4 	.word	0x2000e8a4
 800d83c:	2000005c 	.word	0x2000005c

0800d840 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d840:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d844:	2b0f      	cmp	r3, #15
 800d846:	d90e      	bls.n	800d866 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d848:	4a11      	ldr	r2, [pc, #68]	; (800d890 <vPortValidateInterruptPriority+0x50>)
 800d84a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d84c:	4a11      	ldr	r2, [pc, #68]	; (800d894 <vPortValidateInterruptPriority+0x54>)
 800d84e:	7812      	ldrb	r2, [r2, #0]
 800d850:	429a      	cmp	r2, r3
 800d852:	d908      	bls.n	800d866 <vPortValidateInterruptPriority+0x26>
 800d854:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d858:	f383 8811 	msr	BASEPRI, r3
 800d85c:	f3bf 8f6f 	isb	sy
 800d860:	f3bf 8f4f 	dsb	sy
 800d864:	e7fe      	b.n	800d864 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d866:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d86a:	4a0b      	ldr	r2, [pc, #44]	; (800d898 <vPortValidateInterruptPriority+0x58>)
 800d86c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d870:	6812      	ldr	r2, [r2, #0]
 800d872:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d876:	4293      	cmp	r3, r2
 800d878:	d908      	bls.n	800d88c <vPortValidateInterruptPriority+0x4c>
 800d87a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d87e:	f383 8811 	msr	BASEPRI, r3
 800d882:	f3bf 8f6f 	isb	sy
 800d886:	f3bf 8f4f 	dsb	sy
 800d88a:	e7fe      	b.n	800d88a <vPortValidateInterruptPriority+0x4a>
	}
 800d88c:	4770      	bx	lr
 800d88e:	bf00      	nop
 800d890:	e000e3f0 	.word	0xe000e3f0
 800d894:	2000e8a0 	.word	0x2000e8a0
 800d898:	2000e8a4 	.word	0x2000e8a4

0800d89c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800d89c:	b510      	push	{r4, lr}
 800d89e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d8a0:	f7ff feb8 	bl	800d614 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d8a4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d8a6:	f7ff fed5 	bl	800d654 <vPortExitCritical>

	return xReturn;
}
 800d8aa:	fab4 f084 	clz	r0, r4
 800d8ae:	0940      	lsrs	r0, r0, #5
 800d8b0:	bd10      	pop	{r4, pc}

0800d8b2 <prvCopyDataToQueue>:
{
 800d8b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d8b4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d8b6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d8b8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800d8ba:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d8bc:	b952      	cbnz	r2, 800d8d4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d8be:	6807      	ldr	r7, [r0, #0]
 800d8c0:	bb47      	cbnz	r7, 800d914 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d8c2:	6880      	ldr	r0, [r0, #8]
 800d8c4:	f001 f9b8 	bl	800ec38 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d8c8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d8ca:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d8cc:	3601      	adds	r6, #1
 800d8ce:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d8d0:	4628      	mov	r0, r5
 800d8d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d8d4:	b965      	cbnz	r5, 800d8f0 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d8d6:	6840      	ldr	r0, [r0, #4]
 800d8d8:	f018 ff1e 	bl	8026718 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d8dc:	6863      	ldr	r3, [r4, #4]
 800d8de:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d8e0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d8e2:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d8e4:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d8e6:	4293      	cmp	r3, r2
 800d8e8:	d3f0      	bcc.n	800d8cc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d8ea:	6823      	ldr	r3, [r4, #0]
 800d8ec:	6063      	str	r3, [r4, #4]
 800d8ee:	e7ed      	b.n	800d8cc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d8f0:	68c0      	ldr	r0, [r0, #12]
 800d8f2:	f018 ff11 	bl	8026718 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d8f6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d8f8:	68e3      	ldr	r3, [r4, #12]
 800d8fa:	4251      	negs	r1, r2
 800d8fc:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d8fe:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d900:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d902:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d904:	bf3e      	ittt	cc
 800d906:	68a3      	ldrcc	r3, [r4, #8]
 800d908:	185b      	addcc	r3, r3, r1
 800d90a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d90c:	2d02      	cmp	r5, #2
 800d90e:	d101      	bne.n	800d914 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d910:	b116      	cbz	r6, 800d918 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800d912:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800d914:	2500      	movs	r5, #0
 800d916:	e7d9      	b.n	800d8cc <prvCopyDataToQueue+0x1a>
 800d918:	4635      	mov	r5, r6
 800d91a:	e7d7      	b.n	800d8cc <prvCopyDataToQueue+0x1a>

0800d91c <prvCopyDataFromQueue>:
{
 800d91c:	4603      	mov	r3, r0
 800d91e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d920:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800d922:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d924:	b16a      	cbz	r2, 800d942 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d926:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d928:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d92a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d92c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d92e:	bf28      	it	cs
 800d930:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d932:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d934:	bf28      	it	cs
 800d936:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d938:	68d9      	ldr	r1, [r3, #12]
}
 800d93a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d93e:	f018 beeb 	b.w	8026718 <memcpy>
}
 800d942:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d946:	4770      	bx	lr

0800d948 <prvUnlockQueue>:
{
 800d948:	b570      	push	{r4, r5, r6, lr}
 800d94a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800d94c:	f7ff fe62 	bl	800d614 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d950:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d954:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800d958:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d95a:	2d00      	cmp	r5, #0
 800d95c:	dc14      	bgt.n	800d988 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800d95e:	23ff      	movs	r3, #255	; 0xff
 800d960:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d964:	f7ff fe76 	bl	800d654 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d968:	f7ff fe54 	bl	800d614 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d96c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d970:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800d974:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d976:	2d00      	cmp	r5, #0
 800d978:	dc12      	bgt.n	800d9a0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800d97a:	23ff      	movs	r3, #255	; 0xff
 800d97c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800d980:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800d984:	f7ff be66 	b.w	800d654 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d988:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d98a:	2b00      	cmp	r3, #0
 800d98c:	d0e7      	beq.n	800d95e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d98e:	4630      	mov	r0, r6
 800d990:	f001 f86e 	bl	800ea70 <xTaskRemoveFromEventList>
 800d994:	b108      	cbz	r0, 800d99a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800d996:	f001 f8f7 	bl	800eb88 <vTaskMissedYield>
			--cTxLock;
 800d99a:	3d01      	subs	r5, #1
 800d99c:	b26d      	sxtb	r5, r5
 800d99e:	e7dc      	b.n	800d95a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9a0:	6923      	ldr	r3, [r4, #16]
 800d9a2:	2b00      	cmp	r3, #0
 800d9a4:	d0e9      	beq.n	800d97a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9a6:	4630      	mov	r0, r6
 800d9a8:	f001 f862 	bl	800ea70 <xTaskRemoveFromEventList>
 800d9ac:	b108      	cbz	r0, 800d9b2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800d9ae:	f001 f8eb 	bl	800eb88 <vTaskMissedYield>
				--cRxLock;
 800d9b2:	3d01      	subs	r5, #1
 800d9b4:	b26d      	sxtb	r5, r5
 800d9b6:	e7de      	b.n	800d976 <prvUnlockQueue+0x2e>

0800d9b8 <xQueueGenericReset>:
{
 800d9b8:	b538      	push	{r3, r4, r5, lr}
 800d9ba:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800d9bc:	4604      	mov	r4, r0
 800d9be:	b940      	cbnz	r0, 800d9d2 <xQueueGenericReset+0x1a>
 800d9c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9c4:	f383 8811 	msr	BASEPRI, r3
 800d9c8:	f3bf 8f6f 	isb	sy
 800d9cc:	f3bf 8f4f 	dsb	sy
 800d9d0:	e7fe      	b.n	800d9d0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800d9d2:	f7ff fe1f 	bl	800d614 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9d6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800d9da:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d9dc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9de:	434b      	muls	r3, r1
 800d9e0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9e2:	1a5b      	subs	r3, r3, r1
 800d9e4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9e6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9e8:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d9ea:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800d9ec:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d9ee:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d9f0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800d9f4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800d9f8:	b9a5      	cbnz	r5, 800da24 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9fa:	6923      	ldr	r3, [r4, #16]
 800d9fc:	b173      	cbz	r3, 800da1c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9fe:	f104 0010 	add.w	r0, r4, #16
 800da02:	f001 f835 	bl	800ea70 <xTaskRemoveFromEventList>
 800da06:	b148      	cbz	r0, 800da1c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800da08:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da0c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da10:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da14:	f3bf 8f4f 	dsb	sy
 800da18:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800da1c:	f7ff fe1a 	bl	800d654 <vPortExitCritical>
}
 800da20:	2001      	movs	r0, #1
 800da22:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800da24:	f104 0010 	add.w	r0, r4, #16
 800da28:	f7ff fd46 	bl	800d4b8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800da2c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800da30:	f7ff fd42 	bl	800d4b8 <vListInitialise>
 800da34:	e7f2      	b.n	800da1c <xQueueGenericReset+0x64>

0800da36 <xQueueGenericCreateStatic>:
	{
 800da36:	b513      	push	{r0, r1, r4, lr}
 800da38:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800da3a:	b940      	cbnz	r0, 800da4e <xQueueGenericCreateStatic+0x18>
 800da3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da40:	f383 8811 	msr	BASEPRI, r3
 800da44:	f3bf 8f6f 	isb	sy
 800da48:	f3bf 8f4f 	dsb	sy
 800da4c:	e7fe      	b.n	800da4c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800da4e:	b943      	cbnz	r3, 800da62 <xQueueGenericCreateStatic+0x2c>
 800da50:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da54:	f383 8811 	msr	BASEPRI, r3
 800da58:	f3bf 8f6f 	isb	sy
 800da5c:	f3bf 8f4f 	dsb	sy
 800da60:	e7fe      	b.n	800da60 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800da62:	b14a      	cbz	r2, 800da78 <xQueueGenericCreateStatic+0x42>
 800da64:	b991      	cbnz	r1, 800da8c <xQueueGenericCreateStatic+0x56>
 800da66:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da6a:	f383 8811 	msr	BASEPRI, r3
 800da6e:	f3bf 8f6f 	isb	sy
 800da72:	f3bf 8f4f 	dsb	sy
 800da76:	e7fe      	b.n	800da76 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800da78:	b141      	cbz	r1, 800da8c <xQueueGenericCreateStatic+0x56>
 800da7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da7e:	f383 8811 	msr	BASEPRI, r3
 800da82:	f3bf 8f6f 	isb	sy
 800da86:	f3bf 8f4f 	dsb	sy
 800da8a:	e7fe      	b.n	800da8a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800da8c:	2350      	movs	r3, #80	; 0x50
 800da8e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800da90:	9b01      	ldr	r3, [sp, #4]
 800da92:	2b50      	cmp	r3, #80	; 0x50
 800da94:	d008      	beq.n	800daa8 <xQueueGenericCreateStatic+0x72>
 800da96:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da9a:	f383 8811 	msr	BASEPRI, r3
 800da9e:	f3bf 8f6f 	isb	sy
 800daa2:	f3bf 8f4f 	dsb	sy
 800daa6:	e7fe      	b.n	800daa6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800daa8:	2900      	cmp	r1, #0
 800daaa:	bf08      	it	eq
 800daac:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800daae:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800dab0:	6022      	str	r2, [r4, #0]
 800dab2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800dab4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800dab8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800dabc:	4619      	mov	r1, r3
 800dabe:	4620      	mov	r0, r4
 800dac0:	f7ff ff7a 	bl	800d9b8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800dac4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800dac8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800dacc:	4620      	mov	r0, r4
 800dace:	b002      	add	sp, #8
 800dad0:	bd10      	pop	{r4, pc}

0800dad2 <xQueueGenericCreate>:
	{
 800dad2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dad4:	460d      	mov	r5, r1
 800dad6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800dad8:	4606      	mov	r6, r0
 800dada:	b940      	cbnz	r0, 800daee <xQueueGenericCreate+0x1c>
 800dadc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dae0:	f383 8811 	msr	BASEPRI, r3
 800dae4:	f3bf 8f6f 	isb	sy
 800dae8:	f3bf 8f4f 	dsb	sy
 800daec:	e7fe      	b.n	800daec <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800daee:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800daf0:	3050      	adds	r0, #80	; 0x50
 800daf2:	f7ff fc0b 	bl	800d30c <pvPortMalloc>
		if( pxNewQueue != NULL )
 800daf6:	4604      	mov	r4, r0
 800daf8:	b170      	cbz	r0, 800db18 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800dafa:	2300      	movs	r3, #0
 800dafc:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800db00:	b165      	cbz	r5, 800db1c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db02:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800db06:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800db0a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800db0c:	2101      	movs	r1, #1
 800db0e:	4620      	mov	r0, r4
 800db10:	f7ff ff52 	bl	800d9b8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800db14:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800db18:	4620      	mov	r0, r4
 800db1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800db1c:	4603      	mov	r3, r0
 800db1e:	e7f2      	b.n	800db06 <xQueueGenericCreate+0x34>

0800db20 <xQueueCreateCountingSemaphoreStatic>:
	{
 800db20:	b513      	push	{r0, r1, r4, lr}
 800db22:	4613      	mov	r3, r2
 800db24:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800db26:	b940      	cbnz	r0, 800db3a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800db28:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db2c:	f383 8811 	msr	BASEPRI, r3
 800db30:	f3bf 8f6f 	isb	sy
 800db34:	f3bf 8f4f 	dsb	sy
 800db38:	e7fe      	b.n	800db38 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800db3a:	4288      	cmp	r0, r1
 800db3c:	d208      	bcs.n	800db50 <xQueueCreateCountingSemaphoreStatic+0x30>
 800db3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db42:	f383 8811 	msr	BASEPRI, r3
 800db46:	f3bf 8f6f 	isb	sy
 800db4a:	f3bf 8f4f 	dsb	sy
 800db4e:	e7fe      	b.n	800db4e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800db50:	2202      	movs	r2, #2
 800db52:	9200      	str	r2, [sp, #0]
 800db54:	2200      	movs	r2, #0
 800db56:	4611      	mov	r1, r2
 800db58:	f7ff ff6d 	bl	800da36 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800db5c:	b100      	cbz	r0, 800db60 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800db5e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800db60:	b002      	add	sp, #8
 800db62:	bd10      	pop	{r4, pc}

0800db64 <xQueueCreateCountingSemaphore>:
	{
 800db64:	b510      	push	{r4, lr}
 800db66:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800db68:	b940      	cbnz	r0, 800db7c <xQueueCreateCountingSemaphore+0x18>
 800db6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db6e:	f383 8811 	msr	BASEPRI, r3
 800db72:	f3bf 8f6f 	isb	sy
 800db76:	f3bf 8f4f 	dsb	sy
 800db7a:	e7fe      	b.n	800db7a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800db7c:	4288      	cmp	r0, r1
 800db7e:	d208      	bcs.n	800db92 <xQueueCreateCountingSemaphore+0x2e>
 800db80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db84:	f383 8811 	msr	BASEPRI, r3
 800db88:	f3bf 8f6f 	isb	sy
 800db8c:	f3bf 8f4f 	dsb	sy
 800db90:	e7fe      	b.n	800db90 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800db92:	2202      	movs	r2, #2
 800db94:	2100      	movs	r1, #0
 800db96:	f7ff ff9c 	bl	800dad2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800db9a:	b100      	cbz	r0, 800db9e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800db9c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800db9e:	bd10      	pop	{r4, pc}

0800dba0 <xQueueGenericSend>:
{
 800dba0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dba4:	b085      	sub	sp, #20
 800dba6:	4688      	mov	r8, r1
 800dba8:	9201      	str	r2, [sp, #4]
 800dbaa:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800dbac:	4604      	mov	r4, r0
 800dbae:	b940      	cbnz	r0, 800dbc2 <xQueueGenericSend+0x22>
 800dbb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbb4:	f383 8811 	msr	BASEPRI, r3
 800dbb8:	f3bf 8f6f 	isb	sy
 800dbbc:	f3bf 8f4f 	dsb	sy
 800dbc0:	e7fe      	b.n	800dbc0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dbc2:	b951      	cbnz	r1, 800dbda <xQueueGenericSend+0x3a>
 800dbc4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dbc6:	b143      	cbz	r3, 800dbda <xQueueGenericSend+0x3a>
 800dbc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbcc:	f383 8811 	msr	BASEPRI, r3
 800dbd0:	f3bf 8f6f 	isb	sy
 800dbd4:	f3bf 8f4f 	dsb	sy
 800dbd8:	e7fe      	b.n	800dbd8 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dbda:	2f02      	cmp	r7, #2
 800dbdc:	d10b      	bne.n	800dbf6 <xQueueGenericSend+0x56>
 800dbde:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dbe0:	2b01      	cmp	r3, #1
 800dbe2:	d008      	beq.n	800dbf6 <xQueueGenericSend+0x56>
 800dbe4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbe8:	f383 8811 	msr	BASEPRI, r3
 800dbec:	f3bf 8f6f 	isb	sy
 800dbf0:	f3bf 8f4f 	dsb	sy
 800dbf4:	e7fe      	b.n	800dbf4 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dbf6:	f000 ffcd 	bl	800eb94 <xTaskGetSchedulerState>
 800dbfa:	4606      	mov	r6, r0
 800dbfc:	b950      	cbnz	r0, 800dc14 <xQueueGenericSend+0x74>
 800dbfe:	9b01      	ldr	r3, [sp, #4]
 800dc00:	b14b      	cbz	r3, 800dc16 <xQueueGenericSend+0x76>
 800dc02:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc06:	f383 8811 	msr	BASEPRI, r3
 800dc0a:	f3bf 8f6f 	isb	sy
 800dc0e:	f3bf 8f4f 	dsb	sy
 800dc12:	e7fe      	b.n	800dc12 <xQueueGenericSend+0x72>
 800dc14:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800dc16:	f04f 0900 	mov.w	r9, #0
 800dc1a:	e037      	b.n	800dc8c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dc1c:	9d01      	ldr	r5, [sp, #4]
 800dc1e:	b91d      	cbnz	r5, 800dc28 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800dc20:	f7ff fd18 	bl	800d654 <vPortExitCritical>
			return errQUEUE_FULL;
 800dc24:	2000      	movs	r0, #0
 800dc26:	e052      	b.n	800dcce <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 800dc28:	b916      	cbnz	r6, 800dc30 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dc2a:	a802      	add	r0, sp, #8
 800dc2c:	f000 ff64 	bl	800eaf8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800dc30:	f7ff fd10 	bl	800d654 <vPortExitCritical>
		vTaskSuspendAll();
 800dc34:	f000 fcfa 	bl	800e62c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dc38:	f7ff fcec 	bl	800d614 <vPortEnterCritical>
 800dc3c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dc40:	2bff      	cmp	r3, #255	; 0xff
 800dc42:	bf08      	it	eq
 800dc44:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800dc48:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dc4c:	2bff      	cmp	r3, #255	; 0xff
 800dc4e:	bf08      	it	eq
 800dc50:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800dc54:	f7ff fcfe 	bl	800d654 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dc58:	a901      	add	r1, sp, #4
 800dc5a:	a802      	add	r0, sp, #8
 800dc5c:	f000 ff58 	bl	800eb10 <xTaskCheckForTimeOut>
 800dc60:	2800      	cmp	r0, #0
 800dc62:	d14a      	bne.n	800dcfa <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800dc64:	f7ff fcd6 	bl	800d614 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800dc68:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dc6a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dc6c:	429a      	cmp	r2, r3
 800dc6e:	d131      	bne.n	800dcd4 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800dc70:	f7ff fcf0 	bl	800d654 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dc74:	9901      	ldr	r1, [sp, #4]
 800dc76:	f104 0010 	add.w	r0, r4, #16
 800dc7a:	f000 fec1 	bl	800ea00 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800dc7e:	4620      	mov	r0, r4
 800dc80:	f7ff fe62 	bl	800d948 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800dc84:	f000 fd76 	bl	800e774 <xTaskResumeAll>
 800dc88:	b360      	cbz	r0, 800dce4 <xQueueGenericSend+0x144>
 800dc8a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800dc8c:	f7ff fcc2 	bl	800d614 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dc90:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dc92:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dc94:	429a      	cmp	r2, r3
 800dc96:	d301      	bcc.n	800dc9c <xQueueGenericSend+0xfc>
 800dc98:	2f02      	cmp	r7, #2
 800dc9a:	d1bf      	bne.n	800dc1c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dc9c:	463a      	mov	r2, r7
 800dc9e:	4641      	mov	r1, r8
 800dca0:	4620      	mov	r0, r4
 800dca2:	f7ff fe06 	bl	800d8b2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dca6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dca8:	b11b      	cbz	r3, 800dcb2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcaa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dcae:	f000 fedf 	bl	800ea70 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800dcb2:	b148      	cbz	r0, 800dcc8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 800dcb4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dcb8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dcbc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dcc0:	f3bf 8f4f 	dsb	sy
 800dcc4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800dcc8:	f7ff fcc4 	bl	800d654 <vPortExitCritical>
				return pdPASS;
 800dccc:	2001      	movs	r0, #1
}
 800dcce:	b005      	add	sp, #20
 800dcd0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800dcd4:	f7ff fcbe 	bl	800d654 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800dcd8:	4620      	mov	r0, r4
 800dcda:	f7ff fe35 	bl	800d948 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800dcde:	f000 fd49 	bl	800e774 <xTaskResumeAll>
 800dce2:	e7d2      	b.n	800dc8a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 800dce4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dce8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dcec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dcf0:	f3bf 8f4f 	dsb	sy
 800dcf4:	f3bf 8f6f 	isb	sy
 800dcf8:	e7c7      	b.n	800dc8a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800dcfa:	4620      	mov	r0, r4
 800dcfc:	f7ff fe24 	bl	800d948 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800dd00:	f000 fd38 	bl	800e774 <xTaskResumeAll>
 800dd04:	e78e      	b.n	800dc24 <xQueueGenericSend+0x84>

0800dd06 <xQueueGenericSendFromISR>:
{
 800dd06:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dd0a:	4689      	mov	r9, r1
 800dd0c:	4690      	mov	r8, r2
 800dd0e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800dd10:	4604      	mov	r4, r0
 800dd12:	b940      	cbnz	r0, 800dd26 <xQueueGenericSendFromISR+0x20>
 800dd14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd18:	f383 8811 	msr	BASEPRI, r3
 800dd1c:	f3bf 8f6f 	isb	sy
 800dd20:	f3bf 8f4f 	dsb	sy
 800dd24:	e7fe      	b.n	800dd24 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd26:	b951      	cbnz	r1, 800dd3e <xQueueGenericSendFromISR+0x38>
 800dd28:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dd2a:	b143      	cbz	r3, 800dd3e <xQueueGenericSendFromISR+0x38>
 800dd2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd30:	f383 8811 	msr	BASEPRI, r3
 800dd34:	f3bf 8f6f 	isb	sy
 800dd38:	f3bf 8f4f 	dsb	sy
 800dd3c:	e7fe      	b.n	800dd3c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dd3e:	2f02      	cmp	r7, #2
 800dd40:	d10b      	bne.n	800dd5a <xQueueGenericSendFromISR+0x54>
 800dd42:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dd44:	2b01      	cmp	r3, #1
 800dd46:	d008      	beq.n	800dd5a <xQueueGenericSendFromISR+0x54>
 800dd48:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd4c:	f383 8811 	msr	BASEPRI, r3
 800dd50:	f3bf 8f6f 	isb	sy
 800dd54:	f3bf 8f4f 	dsb	sy
 800dd58:	e7fe      	b.n	800dd58 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dd5a:	f7ff fd71 	bl	800d840 <vPortValidateInterruptPriority>
	__asm volatile
 800dd5e:	f3ef 8611 	mrs	r6, BASEPRI
 800dd62:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd66:	f383 8811 	msr	BASEPRI, r3
 800dd6a:	f3bf 8f6f 	isb	sy
 800dd6e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dd72:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dd74:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dd76:	429a      	cmp	r2, r3
 800dd78:	d301      	bcc.n	800dd7e <xQueueGenericSendFromISR+0x78>
 800dd7a:	2f02      	cmp	r7, #2
 800dd7c:	d123      	bne.n	800ddc6 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800dd7e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dd82:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800dd84:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dd86:	463a      	mov	r2, r7
 800dd88:	4649      	mov	r1, r9
 800dd8a:	4620      	mov	r0, r4
 800dd8c:	f7ff fd91 	bl	800d8b2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800dd90:	1c6b      	adds	r3, r5, #1
 800dd92:	d113      	bne.n	800ddbc <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd94:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dd96:	b90b      	cbnz	r3, 800dd9c <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800dd98:	2001      	movs	r0, #1
 800dd9a:	e00b      	b.n	800ddb4 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd9c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dda0:	f000 fe66 	bl	800ea70 <xTaskRemoveFromEventList>
 800dda4:	2800      	cmp	r0, #0
 800dda6:	d0f7      	beq.n	800dd98 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800dda8:	f1b8 0f00 	cmp.w	r8, #0
 800ddac:	d0f4      	beq.n	800dd98 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ddae:	2001      	movs	r0, #1
 800ddb0:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800ddb4:	f386 8811 	msr	BASEPRI, r6
}
 800ddb8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ddbc:	3501      	adds	r5, #1
 800ddbe:	b26d      	sxtb	r5, r5
 800ddc0:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800ddc4:	e7e8      	b.n	800dd98 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800ddc6:	2000      	movs	r0, #0
 800ddc8:	e7f4      	b.n	800ddb4 <xQueueGenericSendFromISR+0xae>

0800ddca <xQueueGiveFromISR>:
{
 800ddca:	b570      	push	{r4, r5, r6, lr}
 800ddcc:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800ddce:	4604      	mov	r4, r0
 800ddd0:	b940      	cbnz	r0, 800dde4 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800ddd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddd6:	f383 8811 	msr	BASEPRI, r3
 800ddda:	f3bf 8f6f 	isb	sy
 800ddde:	f3bf 8f4f 	dsb	sy
 800dde2:	e7fe      	b.n	800dde2 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dde4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dde6:	b143      	cbz	r3, 800ddfa <xQueueGiveFromISR+0x30>
 800dde8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddec:	f383 8811 	msr	BASEPRI, r3
 800ddf0:	f3bf 8f6f 	isb	sy
 800ddf4:	f3bf 8f4f 	dsb	sy
 800ddf8:	e7fe      	b.n	800ddf8 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ddfa:	6803      	ldr	r3, [r0, #0]
 800ddfc:	b953      	cbnz	r3, 800de14 <xQueueGiveFromISR+0x4a>
 800ddfe:	6883      	ldr	r3, [r0, #8]
 800de00:	b143      	cbz	r3, 800de14 <xQueueGiveFromISR+0x4a>
 800de02:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de06:	f383 8811 	msr	BASEPRI, r3
 800de0a:	f3bf 8f6f 	isb	sy
 800de0e:	f3bf 8f4f 	dsb	sy
 800de12:	e7fe      	b.n	800de12 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800de14:	f7ff fd14 	bl	800d840 <vPortValidateInterruptPriority>
	__asm volatile
 800de18:	f3ef 8611 	mrs	r6, BASEPRI
 800de1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de20:	f383 8811 	msr	BASEPRI, r3
 800de24:	f3bf 8f6f 	isb	sy
 800de28:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800de2c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800de2e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800de30:	4293      	cmp	r3, r2
 800de32:	d91c      	bls.n	800de6e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800de34:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800de38:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800de3a:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800de3c:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800de3e:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800de40:	d110      	bne.n	800de64 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de42:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800de44:	b90b      	cbnz	r3, 800de4a <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800de46:	2001      	movs	r0, #1
 800de48:	e009      	b.n	800de5e <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de4a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800de4e:	f000 fe0f 	bl	800ea70 <xTaskRemoveFromEventList>
 800de52:	2800      	cmp	r0, #0
 800de54:	d0f7      	beq.n	800de46 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800de56:	2d00      	cmp	r5, #0
 800de58:	d0f5      	beq.n	800de46 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800de5a:	2001      	movs	r0, #1
 800de5c:	6028      	str	r0, [r5, #0]
	__asm volatile
 800de5e:	f386 8811 	msr	BASEPRI, r6
}
 800de62:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800de64:	3301      	adds	r3, #1
 800de66:	b25b      	sxtb	r3, r3
 800de68:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800de6c:	e7eb      	b.n	800de46 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800de6e:	2000      	movs	r0, #0
 800de70:	e7f5      	b.n	800de5e <xQueueGiveFromISR+0x94>

0800de72 <xQueueReceive>:
{
 800de72:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800de76:	460f      	mov	r7, r1
 800de78:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800de7a:	4604      	mov	r4, r0
 800de7c:	b940      	cbnz	r0, 800de90 <xQueueReceive+0x1e>
	__asm volatile
 800de7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de82:	f383 8811 	msr	BASEPRI, r3
 800de86:	f3bf 8f6f 	isb	sy
 800de8a:	f3bf 8f4f 	dsb	sy
 800de8e:	e7fe      	b.n	800de8e <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800de90:	b951      	cbnz	r1, 800dea8 <xQueueReceive+0x36>
 800de92:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800de94:	b143      	cbz	r3, 800dea8 <xQueueReceive+0x36>
 800de96:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de9a:	f383 8811 	msr	BASEPRI, r3
 800de9e:	f3bf 8f6f 	isb	sy
 800dea2:	f3bf 8f4f 	dsb	sy
 800dea6:	e7fe      	b.n	800dea6 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dea8:	f000 fe74 	bl	800eb94 <xTaskGetSchedulerState>
 800deac:	4606      	mov	r6, r0
 800deae:	b950      	cbnz	r0, 800dec6 <xQueueReceive+0x54>
 800deb0:	9b01      	ldr	r3, [sp, #4]
 800deb2:	b14b      	cbz	r3, 800dec8 <xQueueReceive+0x56>
 800deb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800deb8:	f383 8811 	msr	BASEPRI, r3
 800debc:	f3bf 8f6f 	isb	sy
 800dec0:	f3bf 8f4f 	dsb	sy
 800dec4:	e7fe      	b.n	800dec4 <xQueueReceive+0x52>
 800dec6:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800dec8:	f04f 0800 	mov.w	r8, #0
 800decc:	e03d      	b.n	800df4a <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dece:	9d01      	ldr	r5, [sp, #4]
 800ded0:	b91d      	cbnz	r5, 800deda <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 800ded2:	f7ff fbbf 	bl	800d654 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800ded6:	2000      	movs	r0, #0
 800ded8:	e056      	b.n	800df88 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800deda:	b916      	cbnz	r6, 800dee2 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dedc:	a802      	add	r0, sp, #8
 800dede:	f000 fe0b 	bl	800eaf8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800dee2:	f7ff fbb7 	bl	800d654 <vPortExitCritical>
		vTaskSuspendAll();
 800dee6:	f000 fba1 	bl	800e62c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800deea:	f7ff fb93 	bl	800d614 <vPortEnterCritical>
 800deee:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800def2:	2bff      	cmp	r3, #255	; 0xff
 800def4:	bf08      	it	eq
 800def6:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800defa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800defe:	2bff      	cmp	r3, #255	; 0xff
 800df00:	bf08      	it	eq
 800df02:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800df06:	f7ff fba5 	bl	800d654 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800df0a:	a901      	add	r1, sp, #4
 800df0c:	a802      	add	r0, sp, #8
 800df0e:	f000 fdff 	bl	800eb10 <xTaskCheckForTimeOut>
 800df12:	2800      	cmp	r0, #0
 800df14:	d141      	bne.n	800df9a <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800df16:	4620      	mov	r0, r4
 800df18:	f7ff fcc0 	bl	800d89c <prvIsQueueEmpty>
 800df1c:	b3b8      	cbz	r0, 800df8e <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800df1e:	9901      	ldr	r1, [sp, #4]
 800df20:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800df24:	f000 fd6c 	bl	800ea00 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800df28:	4620      	mov	r0, r4
 800df2a:	f7ff fd0d 	bl	800d948 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800df2e:	f000 fc21 	bl	800e774 <xTaskResumeAll>
 800df32:	b948      	cbnz	r0, 800df48 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 800df34:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df38:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800df40:	f3bf 8f4f 	dsb	sy
 800df44:	f3bf 8f6f 	isb	sy
 800df48:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800df4a:	f7ff fb63 	bl	800d614 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800df4e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800df50:	2d00      	cmp	r5, #0
 800df52:	d0bc      	beq.n	800dece <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800df54:	4639      	mov	r1, r7
 800df56:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800df58:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800df5a:	f7ff fcdf 	bl	800d91c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800df5e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df60:	6923      	ldr	r3, [r4, #16]
 800df62:	b173      	cbz	r3, 800df82 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df64:	f104 0010 	add.w	r0, r4, #16
 800df68:	f000 fd82 	bl	800ea70 <xTaskRemoveFromEventList>
 800df6c:	b148      	cbz	r0, 800df82 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800df6e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df72:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df76:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800df7a:	f3bf 8f4f 	dsb	sy
 800df7e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800df82:	f7ff fb67 	bl	800d654 <vPortExitCritical>
				return pdPASS;
 800df86:	2001      	movs	r0, #1
}
 800df88:	b004      	add	sp, #16
 800df8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800df8e:	4620      	mov	r0, r4
 800df90:	f7ff fcda 	bl	800d948 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800df94:	f000 fbee 	bl	800e774 <xTaskResumeAll>
 800df98:	e7d6      	b.n	800df48 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800df9a:	4620      	mov	r0, r4
 800df9c:	f7ff fcd4 	bl	800d948 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800dfa0:	f000 fbe8 	bl	800e774 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800dfa4:	4620      	mov	r0, r4
 800dfa6:	f7ff fc79 	bl	800d89c <prvIsQueueEmpty>
 800dfaa:	2800      	cmp	r0, #0
 800dfac:	d0cc      	beq.n	800df48 <xQueueReceive+0xd6>
 800dfae:	e792      	b.n	800ded6 <xQueueReceive+0x64>

0800dfb0 <xQueueSemaphoreTake>:
{
 800dfb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfb2:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800dfb4:	4604      	mov	r4, r0
{
 800dfb6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dfb8:	b940      	cbnz	r0, 800dfcc <xQueueSemaphoreTake+0x1c>
 800dfba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfbe:	f383 8811 	msr	BASEPRI, r3
 800dfc2:	f3bf 8f6f 	isb	sy
 800dfc6:	f3bf 8f4f 	dsb	sy
 800dfca:	e7fe      	b.n	800dfca <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dfcc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800dfce:	b145      	cbz	r5, 800dfe2 <xQueueSemaphoreTake+0x32>
 800dfd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfd4:	f383 8811 	msr	BASEPRI, r3
 800dfd8:	f3bf 8f6f 	isb	sy
 800dfdc:	f3bf 8f4f 	dsb	sy
 800dfe0:	e7fe      	b.n	800dfe0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dfe2:	f000 fdd7 	bl	800eb94 <xTaskGetSchedulerState>
 800dfe6:	4606      	mov	r6, r0
 800dfe8:	b950      	cbnz	r0, 800e000 <xQueueSemaphoreTake+0x50>
 800dfea:	9b01      	ldr	r3, [sp, #4]
 800dfec:	b15b      	cbz	r3, 800e006 <xQueueSemaphoreTake+0x56>
 800dfee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dff2:	f383 8811 	msr	BASEPRI, r3
 800dff6:	f3bf 8f6f 	isb	sy
 800dffa:	f3bf 8f4f 	dsb	sy
 800dffe:	e7fe      	b.n	800dffe <xQueueSemaphoreTake+0x4e>
 800e000:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800e002:	2700      	movs	r7, #0
 800e004:	e053      	b.n	800e0ae <xQueueSemaphoreTake+0xfe>
 800e006:	4605      	mov	r5, r0
 800e008:	e7fb      	b.n	800e002 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e00a:	9b01      	ldr	r3, [sp, #4]
 800e00c:	b963      	cbnz	r3, 800e028 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e00e:	b145      	cbz	r5, 800e022 <xQueueSemaphoreTake+0x72>
 800e010:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e014:	f383 8811 	msr	BASEPRI, r3
 800e018:	f3bf 8f6f 	isb	sy
 800e01c:	f3bf 8f4f 	dsb	sy
 800e020:	e7fe      	b.n	800e020 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 800e022:	f7ff fb17 	bl	800d654 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e026:	e062      	b.n	800e0ee <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 800e028:	b916      	cbnz	r6, 800e030 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e02a:	a802      	add	r0, sp, #8
 800e02c:	f000 fd64 	bl	800eaf8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800e030:	f7ff fb10 	bl	800d654 <vPortExitCritical>
		vTaskSuspendAll();
 800e034:	f000 fafa 	bl	800e62c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e038:	f7ff faec 	bl	800d614 <vPortEnterCritical>
 800e03c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e040:	2bff      	cmp	r3, #255	; 0xff
 800e042:	bf08      	it	eq
 800e044:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800e048:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e04c:	2bff      	cmp	r3, #255	; 0xff
 800e04e:	bf08      	it	eq
 800e050:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800e054:	f7ff fafe 	bl	800d654 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e058:	a901      	add	r1, sp, #4
 800e05a:	a802      	add	r0, sp, #8
 800e05c:	f000 fd58 	bl	800eb10 <xTaskCheckForTimeOut>
 800e060:	2800      	cmp	r0, #0
 800e062:	d14d      	bne.n	800e100 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800e064:	4620      	mov	r0, r4
 800e066:	f7ff fc19 	bl	800d89c <prvIsQueueEmpty>
 800e06a:	2800      	cmp	r0, #0
 800e06c:	d042      	beq.n	800e0f4 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e06e:	6823      	ldr	r3, [r4, #0]
 800e070:	b93b      	cbnz	r3, 800e082 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 800e072:	f7ff facf 	bl	800d614 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e076:	68a0      	ldr	r0, [r4, #8]
 800e078:	f000 fd9c 	bl	800ebb4 <xTaskPriorityInherit>
 800e07c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800e07e:	f7ff fae9 	bl	800d654 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e082:	9901      	ldr	r1, [sp, #4]
 800e084:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e088:	f000 fcba 	bl	800ea00 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800e08c:	4620      	mov	r0, r4
 800e08e:	f7ff fc5b 	bl	800d948 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800e092:	f000 fb6f 	bl	800e774 <xTaskResumeAll>
 800e096:	b948      	cbnz	r0, 800e0ac <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800e098:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e09c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e0a0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e0a4:	f3bf 8f4f 	dsb	sy
 800e0a8:	f3bf 8f6f 	isb	sy
 800e0ac:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800e0ae:	f7ff fab1 	bl	800d614 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e0b2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e0b4:	2b00      	cmp	r3, #0
 800e0b6:	d0a8      	beq.n	800e00a <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e0b8:	3b01      	subs	r3, #1
 800e0ba:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e0bc:	6823      	ldr	r3, [r4, #0]
 800e0be:	b913      	cbnz	r3, 800e0c6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e0c0:	f000 fe50 	bl	800ed64 <pvTaskIncrementMutexHeldCount>
 800e0c4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e0c6:	6923      	ldr	r3, [r4, #16]
 800e0c8:	b173      	cbz	r3, 800e0e8 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0ca:	f104 0010 	add.w	r0, r4, #16
 800e0ce:	f000 fccf 	bl	800ea70 <xTaskRemoveFromEventList>
 800e0d2:	b148      	cbz	r0, 800e0e8 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 800e0d4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e0d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e0dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e0e0:	f3bf 8f4f 	dsb	sy
 800e0e4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e0e8:	f7ff fab4 	bl	800d654 <vPortExitCritical>
				return pdPASS;
 800e0ec:	2501      	movs	r5, #1
}
 800e0ee:	4628      	mov	r0, r5
 800e0f0:	b005      	add	sp, #20
 800e0f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 800e0f4:	4620      	mov	r0, r4
 800e0f6:	f7ff fc27 	bl	800d948 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800e0fa:	f000 fb3b 	bl	800e774 <xTaskResumeAll>
 800e0fe:	e7d5      	b.n	800e0ac <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800e100:	4620      	mov	r0, r4
 800e102:	f7ff fc21 	bl	800d948 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800e106:	f000 fb35 	bl	800e774 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800e10a:	4620      	mov	r0, r4
 800e10c:	f7ff fbc6 	bl	800d89c <prvIsQueueEmpty>
 800e110:	2800      	cmp	r0, #0
 800e112:	d0cb      	beq.n	800e0ac <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800e114:	2d00      	cmp	r5, #0
 800e116:	d0ea      	beq.n	800e0ee <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 800e118:	f7ff fa7c 	bl	800d614 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e11c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e11e:	b119      	cbz	r1, 800e128 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e120:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e122:	6819      	ldr	r1, [r3, #0]
 800e124:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e128:	68a0      	ldr	r0, [r4, #8]
 800e12a:	f000 fdc9 	bl	800ecc0 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e12e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800e130:	f7ff fa90 	bl	800d654 <vPortExitCritical>
 800e134:	e7db      	b.n	800e0ee <xQueueSemaphoreTake+0x13e>

0800e136 <xQueueReceiveFromISR>:
{
 800e136:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e13a:	4689      	mov	r9, r1
 800e13c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800e13e:	4605      	mov	r5, r0
 800e140:	b940      	cbnz	r0, 800e154 <xQueueReceiveFromISR+0x1e>
 800e142:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e146:	f383 8811 	msr	BASEPRI, r3
 800e14a:	f3bf 8f6f 	isb	sy
 800e14e:	f3bf 8f4f 	dsb	sy
 800e152:	e7fe      	b.n	800e152 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e154:	b951      	cbnz	r1, 800e16c <xQueueReceiveFromISR+0x36>
 800e156:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e158:	b143      	cbz	r3, 800e16c <xQueueReceiveFromISR+0x36>
 800e15a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e15e:	f383 8811 	msr	BASEPRI, r3
 800e162:	f3bf 8f6f 	isb	sy
 800e166:	f3bf 8f4f 	dsb	sy
 800e16a:	e7fe      	b.n	800e16a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e16c:	f7ff fb68 	bl	800d840 <vPortValidateInterruptPriority>
	__asm volatile
 800e170:	f3ef 8711 	mrs	r7, BASEPRI
 800e174:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e178:	f383 8811 	msr	BASEPRI, r3
 800e17c:	f3bf 8f6f 	isb	sy
 800e180:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e184:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e186:	b31c      	cbz	r4, 800e1d0 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e188:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800e18c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800e18e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800e190:	4628      	mov	r0, r5
 800e192:	f7ff fbc3 	bl	800d91c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e196:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800e198:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e19a:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e19c:	d113      	bne.n	800e1c6 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e19e:	692b      	ldr	r3, [r5, #16]
 800e1a0:	b90b      	cbnz	r3, 800e1a6 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800e1a2:	2001      	movs	r0, #1
 800e1a4:	e00b      	b.n	800e1be <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1a6:	f105 0010 	add.w	r0, r5, #16
 800e1aa:	f000 fc61 	bl	800ea70 <xTaskRemoveFromEventList>
 800e1ae:	2800      	cmp	r0, #0
 800e1b0:	d0f7      	beq.n	800e1a2 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800e1b2:	f1b8 0f00 	cmp.w	r8, #0
 800e1b6:	d0f4      	beq.n	800e1a2 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e1b8:	2001      	movs	r0, #1
 800e1ba:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800e1be:	f387 8811 	msr	BASEPRI, r7
}
 800e1c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e1c6:	3601      	adds	r6, #1
 800e1c8:	b276      	sxtb	r6, r6
 800e1ca:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800e1ce:	e7e8      	b.n	800e1a2 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800e1d0:	4620      	mov	r0, r4
 800e1d2:	e7f4      	b.n	800e1be <xQueueReceiveFromISR+0x88>

0800e1d4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800e1d4:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e1d6:	4a07      	ldr	r2, [pc, #28]	; (800e1f4 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e1d8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e1da:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800e1de:	b92c      	cbnz	r4, 800e1ec <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e1e0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e1e4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800e1e8:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800e1ea:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e1ec:	3301      	adds	r3, #1
 800e1ee:	2b08      	cmp	r3, #8
 800e1f0:	d1f3      	bne.n	800e1da <vQueueAddToRegistry+0x6>
 800e1f2:	e7fa      	b.n	800e1ea <vQueueAddToRegistry+0x16>
 800e1f4:	2000e8a8 	.word	0x2000e8a8

0800e1f8 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800e1f8:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e1fa:	4a08      	ldr	r2, [pc, #32]	; (800e21c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e1fc:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e1fe:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800e202:	684c      	ldr	r4, [r1, #4]
 800e204:	4284      	cmp	r4, r0
 800e206:	d104      	bne.n	800e212 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e208:	2000      	movs	r0, #0
 800e20a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800e20e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800e210:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e212:	3301      	adds	r3, #1
 800e214:	2b08      	cmp	r3, #8
 800e216:	d1f2      	bne.n	800e1fe <vQueueUnregisterQueue+0x6>
 800e218:	e7fa      	b.n	800e210 <vQueueUnregisterQueue+0x18>
 800e21a:	bf00      	nop
 800e21c:	2000e8a8 	.word	0x2000e8a8

0800e220 <vQueueDelete>:
{
 800e220:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800e222:	4604      	mov	r4, r0
 800e224:	b940      	cbnz	r0, 800e238 <vQueueDelete+0x18>
	__asm volatile
 800e226:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e22a:	f383 8811 	msr	BASEPRI, r3
 800e22e:	f3bf 8f6f 	isb	sy
 800e232:	f3bf 8f4f 	dsb	sy
 800e236:	e7fe      	b.n	800e236 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 800e238:	f7ff ffde 	bl	800e1f8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e23c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800e240:	b923      	cbnz	r3, 800e24c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 800e242:	4620      	mov	r0, r4
}
 800e244:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800e248:	f7ff b8f8 	b.w	800d43c <vPortFree>
}
 800e24c:	bd10      	pop	{r4, pc}

0800e24e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e24e:	b570      	push	{r4, r5, r6, lr}
 800e250:	4604      	mov	r4, r0
 800e252:	460d      	mov	r5, r1
 800e254:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e256:	f7ff f9dd 	bl	800d614 <vPortEnterCritical>
 800e25a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e25e:	2bff      	cmp	r3, #255	; 0xff
 800e260:	bf04      	itt	eq
 800e262:	2300      	moveq	r3, #0
 800e264:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e268:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e26c:	2bff      	cmp	r3, #255	; 0xff
 800e26e:	bf04      	itt	eq
 800e270:	2300      	moveq	r3, #0
 800e272:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e276:	f7ff f9ed 	bl	800d654 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e27a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e27c:	b92b      	cbnz	r3, 800e28a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e27e:	4632      	mov	r2, r6
 800e280:	4629      	mov	r1, r5
 800e282:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e286:	f000 fbd5 	bl	800ea34 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800e28a:	4620      	mov	r0, r4
	}
 800e28c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800e290:	f7ff bb5a 	b.w	800d948 <prvUnlockQueue>

0800e294 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e294:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e298:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e29a:	f7ff f9bb 	bl	800d614 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e29e:	4b30      	ldr	r3, [pc, #192]	; (800e360 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800e2a0:	4e30      	ldr	r6, [pc, #192]	; (800e364 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800e2a2:	681a      	ldr	r2, [r3, #0]
 800e2a4:	4f30      	ldr	r7, [pc, #192]	; (800e368 <prvAddNewTaskToReadyList+0xd4>)
 800e2a6:	3201      	adds	r2, #1
 800e2a8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800e2aa:	6835      	ldr	r5, [r6, #0]
 800e2ac:	2d00      	cmp	r5, #0
 800e2ae:	d14b      	bne.n	800e348 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800e2b0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e2b2:	681b      	ldr	r3, [r3, #0]
 800e2b4:	2b01      	cmp	r3, #1
 800e2b6:	d11f      	bne.n	800e2f8 <prvAddNewTaskToReadyList+0x64>
 800e2b8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e2ba:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e2bc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e2be:	f7ff f8fb 	bl	800d4b8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e2c2:	2d38      	cmp	r5, #56	; 0x38
 800e2c4:	f108 0814 	add.w	r8, r8, #20
 800e2c8:	d1f7      	bne.n	800e2ba <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e2ca:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800e390 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800e2ce:	4d27      	ldr	r5, [pc, #156]	; (800e36c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800e2d0:	4640      	mov	r0, r8
 800e2d2:	f7ff f8f1 	bl	800d4b8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e2d6:	4628      	mov	r0, r5
 800e2d8:	f7ff f8ee 	bl	800d4b8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e2dc:	4824      	ldr	r0, [pc, #144]	; (800e370 <prvAddNewTaskToReadyList+0xdc>)
 800e2de:	f7ff f8eb 	bl	800d4b8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e2e2:	4824      	ldr	r0, [pc, #144]	; (800e374 <prvAddNewTaskToReadyList+0xe0>)
 800e2e4:	f7ff f8e8 	bl	800d4b8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e2e8:	4823      	ldr	r0, [pc, #140]	; (800e378 <prvAddNewTaskToReadyList+0xe4>)
 800e2ea:	f7ff f8e5 	bl	800d4b8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e2ee:	4b23      	ldr	r3, [pc, #140]	; (800e37c <prvAddNewTaskToReadyList+0xe8>)
 800e2f0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e2f4:	4b22      	ldr	r3, [pc, #136]	; (800e380 <prvAddNewTaskToReadyList+0xec>)
 800e2f6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800e2f8:	4a22      	ldr	r2, [pc, #136]	; (800e384 <prvAddNewTaskToReadyList+0xf0>)
 800e2fa:	6813      	ldr	r3, [r2, #0]
 800e2fc:	3301      	adds	r3, #1
 800e2fe:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800e300:	4a21      	ldr	r2, [pc, #132]	; (800e388 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e302:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e304:	6811      	ldr	r1, [r2, #0]
 800e306:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e308:	2014      	movs	r0, #20
 800e30a:	428b      	cmp	r3, r1
 800e30c:	fb00 7003 	mla	r0, r0, r3, r7
 800e310:	f104 0104 	add.w	r1, r4, #4
 800e314:	bf88      	it	hi
 800e316:	6013      	strhi	r3, [r2, #0]
 800e318:	f7ff f8dc 	bl	800d4d4 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800e31c:	f7ff f99a 	bl	800d654 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800e320:	4b1a      	ldr	r3, [pc, #104]	; (800e38c <prvAddNewTaskToReadyList+0xf8>)
 800e322:	681b      	ldr	r3, [r3, #0]
 800e324:	b173      	cbz	r3, 800e344 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e326:	6833      	ldr	r3, [r6, #0]
 800e328:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e32a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e32c:	429a      	cmp	r2, r3
 800e32e:	d209      	bcs.n	800e344 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800e330:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e334:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e338:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e33c:	f3bf 8f4f 	dsb	sy
 800e340:	f3bf 8f6f 	isb	sy
}
 800e344:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800e348:	4b10      	ldr	r3, [pc, #64]	; (800e38c <prvAddNewTaskToReadyList+0xf8>)
 800e34a:	681b      	ldr	r3, [r3, #0]
 800e34c:	2b00      	cmp	r3, #0
 800e34e:	d1d3      	bne.n	800e2f8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e350:	6833      	ldr	r3, [r6, #0]
 800e352:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e354:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e356:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800e358:	bf98      	it	ls
 800e35a:	6034      	strls	r4, [r6, #0]
 800e35c:	e7cc      	b.n	800e2f8 <prvAddNewTaskToReadyList+0x64>
 800e35e:	bf00      	nop
 800e360:	2000ed54 	.word	0x2000ed54
 800e364:	2000e8e8 	.word	0x2000e8e8
 800e368:	2000e8f4 	.word	0x2000e8f4
 800e36c:	2000ed7c 	.word	0x2000ed7c
 800e370:	2000ed9c 	.word	0x2000ed9c
 800e374:	2000edc8 	.word	0x2000edc8
 800e378:	2000edb4 	.word	0x2000edb4
 800e37c:	2000e8ec 	.word	0x2000e8ec
 800e380:	2000e8f0 	.word	0x2000e8f0
 800e384:	2000ed60 	.word	0x2000ed60
 800e388:	2000ed64 	.word	0x2000ed64
 800e38c:	2000edb0 	.word	0x2000edb0
 800e390:	2000ed68 	.word	0x2000ed68

0800e394 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800e394:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800e396:	4b15      	ldr	r3, [pc, #84]	; (800e3ec <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e398:	4e15      	ldr	r6, [pc, #84]	; (800e3f0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800e39a:	681d      	ldr	r5, [r3, #0]
{
 800e39c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e39e:	6830      	ldr	r0, [r6, #0]
 800e3a0:	3004      	adds	r0, #4
{
 800e3a2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e3a4:	f7ff f8b9 	bl	800d51a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800e3a8:	1c63      	adds	r3, r4, #1
 800e3aa:	d107      	bne.n	800e3bc <prvAddCurrentTaskToDelayedList+0x28>
 800e3ac:	b137      	cbz	r7, 800e3bc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e3ae:	6831      	ldr	r1, [r6, #0]
 800e3b0:	4810      	ldr	r0, [pc, #64]	; (800e3f4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800e3b2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e3b6:	3104      	adds	r1, #4
 800e3b8:	f7ff b88c 	b.w	800d4d4 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e3bc:	6833      	ldr	r3, [r6, #0]
 800e3be:	192c      	adds	r4, r5, r4
 800e3c0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800e3c2:	d307      	bcc.n	800e3d4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e3c4:	4b0c      	ldr	r3, [pc, #48]	; (800e3f8 <prvAddCurrentTaskToDelayedList+0x64>)
 800e3c6:	6818      	ldr	r0, [r3, #0]
 800e3c8:	6831      	ldr	r1, [r6, #0]
}
 800e3ca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e3ce:	3104      	adds	r1, #4
 800e3d0:	f7ff b88c 	b.w	800d4ec <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e3d4:	4b09      	ldr	r3, [pc, #36]	; (800e3fc <prvAddCurrentTaskToDelayedList+0x68>)
 800e3d6:	6818      	ldr	r0, [r3, #0]
 800e3d8:	6831      	ldr	r1, [r6, #0]
 800e3da:	3104      	adds	r1, #4
 800e3dc:	f7ff f886 	bl	800d4ec <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800e3e0:	4b07      	ldr	r3, [pc, #28]	; (800e400 <prvAddCurrentTaskToDelayedList+0x6c>)
 800e3e2:	681a      	ldr	r2, [r3, #0]
 800e3e4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800e3e6:	bf88      	it	hi
 800e3e8:	601c      	strhi	r4, [r3, #0]
}
 800e3ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e3ec:	2000eddc 	.word	0x2000eddc
 800e3f0:	2000e8e8 	.word	0x2000e8e8
 800e3f4:	2000edb4 	.word	0x2000edb4
 800e3f8:	2000e8f0 	.word	0x2000e8f0
 800e3fc:	2000e8ec 	.word	0x2000e8ec
 800e400:	2000ed90 	.word	0x2000ed90

0800e404 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e404:	4a06      	ldr	r2, [pc, #24]	; (800e420 <prvResetNextTaskUnblockTime+0x1c>)
 800e406:	6813      	ldr	r3, [r2, #0]
 800e408:	6819      	ldr	r1, [r3, #0]
 800e40a:	4b06      	ldr	r3, [pc, #24]	; (800e424 <prvResetNextTaskUnblockTime+0x20>)
 800e40c:	b919      	cbnz	r1, 800e416 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800e40e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e412:	601a      	str	r2, [r3, #0]
}
 800e414:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e416:	6812      	ldr	r2, [r2, #0]
 800e418:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e41a:	68d2      	ldr	r2, [r2, #12]
 800e41c:	6852      	ldr	r2, [r2, #4]
 800e41e:	e7f8      	b.n	800e412 <prvResetNextTaskUnblockTime+0xe>
 800e420:	2000e8ec 	.word	0x2000e8ec
 800e424:	2000ed90 	.word	0x2000ed90

0800e428 <prvDeleteTCB>:
	{
 800e428:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e42a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800e42e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e430:	b93b      	cbnz	r3, 800e442 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800e432:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800e434:	f7ff f802 	bl	800d43c <vPortFree>
				vPortFree( pxTCB );
 800e438:	4620      	mov	r0, r4
	}
 800e43a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800e43e:	f7fe bffd 	b.w	800d43c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e442:	2b01      	cmp	r3, #1
 800e444:	d0f9      	beq.n	800e43a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e446:	2b02      	cmp	r3, #2
 800e448:	d008      	beq.n	800e45c <prvDeleteTCB+0x34>
 800e44a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e44e:	f383 8811 	msr	BASEPRI, r3
 800e452:	f3bf 8f6f 	isb	sy
 800e456:	f3bf 8f4f 	dsb	sy
 800e45a:	e7fe      	b.n	800e45a <prvDeleteTCB+0x32>
	}
 800e45c:	bd10      	pop	{r4, pc}
	...

0800e460 <prvIdleTask>:
{
 800e460:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e462:	4c14      	ldr	r4, [pc, #80]	; (800e4b4 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e464:	4f14      	ldr	r7, [pc, #80]	; (800e4b8 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 800e466:	4d15      	ldr	r5, [pc, #84]	; (800e4bc <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e468:	6823      	ldr	r3, [r4, #0]
 800e46a:	b983      	cbnz	r3, 800e48e <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e46c:	4b14      	ldr	r3, [pc, #80]	; (800e4c0 <prvIdleTask+0x60>)
 800e46e:	681b      	ldr	r3, [r3, #0]
 800e470:	2b01      	cmp	r3, #1
 800e472:	d909      	bls.n	800e488 <prvIdleTask+0x28>
				taskYIELD();
 800e474:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e478:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e47c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e480:	f3bf 8f4f 	dsb	sy
 800e484:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800e488:	f7f3 fc38 	bl	8001cfc <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800e48c:	e7eb      	b.n	800e466 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800e48e:	f7ff f8c1 	bl	800d614 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e492:	68fb      	ldr	r3, [r7, #12]
 800e494:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e496:	1d30      	adds	r0, r6, #4
 800e498:	f7ff f83f 	bl	800d51a <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e49c:	682b      	ldr	r3, [r5, #0]
 800e49e:	3b01      	subs	r3, #1
 800e4a0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e4a2:	6823      	ldr	r3, [r4, #0]
 800e4a4:	3b01      	subs	r3, #1
 800e4a6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800e4a8:	f7ff f8d4 	bl	800d654 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800e4ac:	4630      	mov	r0, r6
 800e4ae:	f7ff ffbb 	bl	800e428 <prvDeleteTCB>
 800e4b2:	e7d9      	b.n	800e468 <prvIdleTask+0x8>
 800e4b4:	2000ed58 	.word	0x2000ed58
 800e4b8:	2000edc8 	.word	0x2000edc8
 800e4bc:	2000ed54 	.word	0x2000ed54
 800e4c0:	2000e8f4 	.word	0x2000e8f4

0800e4c4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e4c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e4c8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e4cc:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e4d0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e4d2:	4606      	mov	r6, r0
 800e4d4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e4d6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e4d8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e4da:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e4dc:	f018 f92a 	bl	8026734 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e4e0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e4e2:	f1a9 0904 	sub.w	r9, r9, #4
 800e4e6:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e4e8:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800e4ec:	b3b5      	cbz	r5, 800e55c <prvInitialiseNewTask.constprop.0+0x98>
 800e4ee:	1e6b      	subs	r3, r5, #1
 800e4f0:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800e4f4:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e4f6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800e4fa:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800e4fe:	b108      	cbz	r0, 800e504 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800e500:	42ab      	cmp	r3, r5
 800e502:	d1f8      	bne.n	800e4f6 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e504:	2300      	movs	r3, #0
 800e506:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e50a:	9d08      	ldr	r5, [sp, #32]
 800e50c:	2d37      	cmp	r5, #55	; 0x37
 800e50e:	bf28      	it	cs
 800e510:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e512:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e516:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e518:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e51a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e51c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e520:	f7fe ffd5 	bl	800d4ce <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e524:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e528:	f104 0018 	add.w	r0, r4, #24
 800e52c:	f7fe ffcf 	bl	800d4ce <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800e530:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e534:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e536:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e538:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e53a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e53e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e542:	463a      	mov	r2, r7
 800e544:	4631      	mov	r1, r6
 800e546:	4648      	mov	r0, r9
 800e548:	f7ff f836 	bl	800d5b8 <pxPortInitialiseStack>
 800e54c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e54e:	f1b8 0f00 	cmp.w	r8, #0
 800e552:	d001      	beq.n	800e558 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e554:	f8c8 4000 	str.w	r4, [r8]
}
 800e558:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e55c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e560:	e7d3      	b.n	800e50a <prvInitialiseNewTask.constprop.0+0x46>

0800e562 <xTaskCreateStatic>:
	{
 800e562:	b570      	push	{r4, r5, r6, lr}
 800e564:	b086      	sub	sp, #24
 800e566:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800e56a:	b945      	cbnz	r5, 800e57e <xTaskCreateStatic+0x1c>
 800e56c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e570:	f383 8811 	msr	BASEPRI, r3
 800e574:	f3bf 8f6f 	isb	sy
 800e578:	f3bf 8f4f 	dsb	sy
 800e57c:	e7fe      	b.n	800e57c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800e57e:	b944      	cbnz	r4, 800e592 <xTaskCreateStatic+0x30>
 800e580:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e584:	f383 8811 	msr	BASEPRI, r3
 800e588:	f3bf 8f6f 	isb	sy
 800e58c:	f3bf 8f4f 	dsb	sy
 800e590:	e7fe      	b.n	800e590 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e592:	2660      	movs	r6, #96	; 0x60
 800e594:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800e596:	9e05      	ldr	r6, [sp, #20]
 800e598:	2e60      	cmp	r6, #96	; 0x60
 800e59a:	d008      	beq.n	800e5ae <xTaskCreateStatic+0x4c>
 800e59c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5a0:	f383 8811 	msr	BASEPRI, r3
 800e5a4:	f3bf 8f6f 	isb	sy
 800e5a8:	f3bf 8f4f 	dsb	sy
 800e5ac:	e7fe      	b.n	800e5ac <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e5ae:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e5b0:	2502      	movs	r5, #2
 800e5b2:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e5b6:	ad04      	add	r5, sp, #16
 800e5b8:	9501      	str	r5, [sp, #4]
 800e5ba:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800e5bc:	9402      	str	r4, [sp, #8]
 800e5be:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e5c0:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e5c2:	f7ff ff7f 	bl	800e4c4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e5c6:	4620      	mov	r0, r4
 800e5c8:	f7ff fe64 	bl	800e294 <prvAddNewTaskToReadyList>
	}
 800e5cc:	9804      	ldr	r0, [sp, #16]
 800e5ce:	b006      	add	sp, #24
 800e5d0:	bd70      	pop	{r4, r5, r6, pc}

0800e5d2 <xTaskCreate>:
	{
 800e5d2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e5d6:	4607      	mov	r7, r0
 800e5d8:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e5da:	0090      	lsls	r0, r2, #2
	{
 800e5dc:	4688      	mov	r8, r1
 800e5de:	4616      	mov	r6, r2
 800e5e0:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e5e2:	f7fe fe93 	bl	800d30c <pvPortMalloc>
			if( pxStack != NULL )
 800e5e6:	4605      	mov	r5, r0
 800e5e8:	b1e8      	cbz	r0, 800e626 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800e5ea:	2060      	movs	r0, #96	; 0x60
 800e5ec:	f7fe fe8e 	bl	800d30c <pvPortMalloc>
				if( pxNewTCB != NULL )
 800e5f0:	4604      	mov	r4, r0
 800e5f2:	b1a8      	cbz	r0, 800e620 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800e5f4:	2300      	movs	r3, #0
 800e5f6:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e5fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800e5fc:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e5fe:	9301      	str	r3, [sp, #4]
 800e600:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e602:	9002      	str	r0, [sp, #8]
 800e604:	9300      	str	r3, [sp, #0]
 800e606:	4632      	mov	r2, r6
 800e608:	464b      	mov	r3, r9
 800e60a:	4641      	mov	r1, r8
 800e60c:	4638      	mov	r0, r7
 800e60e:	f7ff ff59 	bl	800e4c4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e612:	4620      	mov	r0, r4
 800e614:	f7ff fe3e 	bl	800e294 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800e618:	2001      	movs	r0, #1
	}
 800e61a:	b005      	add	sp, #20
 800e61c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800e620:	4628      	mov	r0, r5
 800e622:	f7fe ff0b 	bl	800d43c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e626:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800e62a:	e7f6      	b.n	800e61a <xTaskCreate+0x48>

0800e62c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800e62c:	4a02      	ldr	r2, [pc, #8]	; (800e638 <vTaskSuspendAll+0xc>)
 800e62e:	6813      	ldr	r3, [r2, #0]
 800e630:	3301      	adds	r3, #1
 800e632:	6013      	str	r3, [r2, #0]
}
 800e634:	4770      	bx	lr
 800e636:	bf00      	nop
 800e638:	2000ed5c 	.word	0x2000ed5c

0800e63c <xTaskGetTickCount>:
		xTicks = xTickCount;
 800e63c:	4b01      	ldr	r3, [pc, #4]	; (800e644 <xTaskGetTickCount+0x8>)
 800e63e:	6818      	ldr	r0, [r3, #0]
}
 800e640:	4770      	bx	lr
 800e642:	bf00      	nop
 800e644:	2000eddc 	.word	0x2000eddc

0800e648 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e648:	4b3f      	ldr	r3, [pc, #252]	; (800e748 <xTaskIncrementTick+0x100>)
 800e64a:	681b      	ldr	r3, [r3, #0]
{
 800e64c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e650:	2b00      	cmp	r3, #0
 800e652:	d173      	bne.n	800e73c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e654:	4b3d      	ldr	r3, [pc, #244]	; (800e74c <xTaskIncrementTick+0x104>)
 800e656:	681d      	ldr	r5, [r3, #0]
 800e658:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800e65a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e65c:	b9bd      	cbnz	r5, 800e68e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800e65e:	4b3c      	ldr	r3, [pc, #240]	; (800e750 <xTaskIncrementTick+0x108>)
 800e660:	681a      	ldr	r2, [r3, #0]
 800e662:	6812      	ldr	r2, [r2, #0]
 800e664:	b142      	cbz	r2, 800e678 <xTaskIncrementTick+0x30>
 800e666:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e66a:	f383 8811 	msr	BASEPRI, r3
 800e66e:	f3bf 8f6f 	isb	sy
 800e672:	f3bf 8f4f 	dsb	sy
 800e676:	e7fe      	b.n	800e676 <xTaskIncrementTick+0x2e>
 800e678:	4a36      	ldr	r2, [pc, #216]	; (800e754 <xTaskIncrementTick+0x10c>)
 800e67a:	6819      	ldr	r1, [r3, #0]
 800e67c:	6810      	ldr	r0, [r2, #0]
 800e67e:	6018      	str	r0, [r3, #0]
 800e680:	6011      	str	r1, [r2, #0]
 800e682:	4a35      	ldr	r2, [pc, #212]	; (800e758 <xTaskIncrementTick+0x110>)
 800e684:	6813      	ldr	r3, [r2, #0]
 800e686:	3301      	adds	r3, #1
 800e688:	6013      	str	r3, [r2, #0]
 800e68a:	f7ff febb 	bl	800e404 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e68e:	4e33      	ldr	r6, [pc, #204]	; (800e75c <xTaskIncrementTick+0x114>)
 800e690:	4f33      	ldr	r7, [pc, #204]	; (800e760 <xTaskIncrementTick+0x118>)
 800e692:	6833      	ldr	r3, [r6, #0]
 800e694:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800e76c <xTaskIncrementTick+0x124>
 800e698:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800e69a:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e69e:	d211      	bcs.n	800e6c4 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e6a0:	f8d8 3000 	ldr.w	r3, [r8]
 800e6a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e6a6:	2214      	movs	r2, #20
 800e6a8:	4353      	muls	r3, r2
 800e6aa:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800e6ac:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800e6ae:	4b2d      	ldr	r3, [pc, #180]	; (800e764 <xTaskIncrementTick+0x11c>)
 800e6b0:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800e6b2:	bf28      	it	cs
 800e6b4:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800e6b6:	2b00      	cmp	r3, #0
 800e6b8:	bf18      	it	ne
 800e6ba:	2401      	movne	r4, #1
}
 800e6bc:	4620      	mov	r0, r4
 800e6be:	b003      	add	sp, #12
 800e6c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e6c4:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800e750 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800e6c8:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800e770 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e6cc:	f8d9 3000 	ldr.w	r3, [r9]
 800e6d0:	681b      	ldr	r3, [r3, #0]
 800e6d2:	b91b      	cbnz	r3, 800e6dc <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e6d4:	f04f 33ff 	mov.w	r3, #4294967295
 800e6d8:	6033      	str	r3, [r6, #0]
					break;
 800e6da:	e7e1      	b.n	800e6a0 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e6dc:	f8d9 3000 	ldr.w	r3, [r9]
 800e6e0:	68db      	ldr	r3, [r3, #12]
 800e6e2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e6e6:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800e6ea:	4295      	cmp	r5, r2
 800e6ec:	d201      	bcs.n	800e6f2 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800e6ee:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e6f0:	e7d6      	b.n	800e6a0 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e6f2:	f10b 0104 	add.w	r1, fp, #4
 800e6f6:	4608      	mov	r0, r1
 800e6f8:	9101      	str	r1, [sp, #4]
 800e6fa:	f7fe ff0e 	bl	800d51a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e6fe:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800e702:	9901      	ldr	r1, [sp, #4]
 800e704:	b122      	cbz	r2, 800e710 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e706:	f10b 0018 	add.w	r0, fp, #24
 800e70a:	f7fe ff06 	bl	800d51a <uxListRemove>
 800e70e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e710:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800e714:	f8da 2000 	ldr.w	r2, [sl]
 800e718:	2314      	movs	r3, #20
 800e71a:	4290      	cmp	r0, r2
 800e71c:	bf88      	it	hi
 800e71e:	f8ca 0000 	strhi.w	r0, [sl]
 800e722:	fb03 7000 	mla	r0, r3, r0, r7
 800e726:	f7fe fed5 	bl	800d4d4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e72a:	f8d8 1000 	ldr.w	r1, [r8]
 800e72e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800e732:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800e734:	429a      	cmp	r2, r3
 800e736:	bf28      	it	cs
 800e738:	2401      	movcs	r4, #1
 800e73a:	e7c7      	b.n	800e6cc <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800e73c:	4a0a      	ldr	r2, [pc, #40]	; (800e768 <xTaskIncrementTick+0x120>)
 800e73e:	6813      	ldr	r3, [r2, #0]
 800e740:	3301      	adds	r3, #1
 800e742:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800e744:	2400      	movs	r4, #0
	return xSwitchRequired;
 800e746:	e7b9      	b.n	800e6bc <xTaskIncrementTick+0x74>
 800e748:	2000ed5c 	.word	0x2000ed5c
 800e74c:	2000eddc 	.word	0x2000eddc
 800e750:	2000e8ec 	.word	0x2000e8ec
 800e754:	2000e8f0 	.word	0x2000e8f0
 800e758:	2000ed94 	.word	0x2000ed94
 800e75c:	2000ed90 	.word	0x2000ed90
 800e760:	2000e8f4 	.word	0x2000e8f4
 800e764:	2000ede0 	.word	0x2000ede0
 800e768:	2000ed98 	.word	0x2000ed98
 800e76c:	2000e8e8 	.word	0x2000e8e8
 800e770:	2000ed64 	.word	0x2000ed64

0800e774 <xTaskResumeAll>:
{
 800e774:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800e776:	4c31      	ldr	r4, [pc, #196]	; (800e83c <xTaskResumeAll+0xc8>)
 800e778:	6823      	ldr	r3, [r4, #0]
 800e77a:	b943      	cbnz	r3, 800e78e <xTaskResumeAll+0x1a>
 800e77c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e780:	f383 8811 	msr	BASEPRI, r3
 800e784:	f3bf 8f6f 	isb	sy
 800e788:	f3bf 8f4f 	dsb	sy
 800e78c:	e7fe      	b.n	800e78c <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800e78e:	f7fe ff41 	bl	800d614 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800e792:	6823      	ldr	r3, [r4, #0]
 800e794:	3b01      	subs	r3, #1
 800e796:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e798:	6824      	ldr	r4, [r4, #0]
 800e79a:	b12c      	cbz	r4, 800e7a8 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800e79c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800e79e:	f7fe ff59 	bl	800d654 <vPortExitCritical>
}
 800e7a2:	4620      	mov	r0, r4
 800e7a4:	b003      	add	sp, #12
 800e7a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800e7a8:	4b25      	ldr	r3, [pc, #148]	; (800e840 <xTaskResumeAll+0xcc>)
 800e7aa:	681b      	ldr	r3, [r3, #0]
 800e7ac:	2b00      	cmp	r3, #0
 800e7ae:	d0f5      	beq.n	800e79c <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e7b0:	4d24      	ldr	r5, [pc, #144]	; (800e844 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800e7b2:	4e25      	ldr	r6, [pc, #148]	; (800e848 <xTaskResumeAll+0xd4>)
 800e7b4:	4f25      	ldr	r7, [pc, #148]	; (800e84c <xTaskResumeAll+0xd8>)
 800e7b6:	e01e      	b.n	800e7f6 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e7b8:	68eb      	ldr	r3, [r5, #12]
 800e7ba:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e7bc:	f104 0018 	add.w	r0, r4, #24
 800e7c0:	f7fe feab 	bl	800d51a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e7c4:	1d21      	adds	r1, r4, #4
 800e7c6:	4608      	mov	r0, r1
 800e7c8:	9101      	str	r1, [sp, #4]
 800e7ca:	f7fe fea6 	bl	800d51a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e7ce:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e7d0:	6832      	ldr	r2, [r6, #0]
 800e7d2:	9901      	ldr	r1, [sp, #4]
 800e7d4:	2014      	movs	r0, #20
 800e7d6:	4293      	cmp	r3, r2
 800e7d8:	fb00 7003 	mla	r0, r0, r3, r7
 800e7dc:	bf88      	it	hi
 800e7de:	6033      	strhi	r3, [r6, #0]
 800e7e0:	f7fe fe78 	bl	800d4d4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e7e4:	4b1a      	ldr	r3, [pc, #104]	; (800e850 <xTaskResumeAll+0xdc>)
 800e7e6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e7e8:	681b      	ldr	r3, [r3, #0]
 800e7ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e7ec:	429a      	cmp	r2, r3
 800e7ee:	d302      	bcc.n	800e7f6 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800e7f0:	4b18      	ldr	r3, [pc, #96]	; (800e854 <xTaskResumeAll+0xe0>)
 800e7f2:	2201      	movs	r2, #1
 800e7f4:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e7f6:	682b      	ldr	r3, [r5, #0]
 800e7f8:	2b00      	cmp	r3, #0
 800e7fa:	d1dd      	bne.n	800e7b8 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800e7fc:	b10c      	cbz	r4, 800e802 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800e7fe:	f7ff fe01 	bl	800e404 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800e802:	4d15      	ldr	r5, [pc, #84]	; (800e858 <xTaskResumeAll+0xe4>)
 800e804:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800e806:	b144      	cbz	r4, 800e81a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800e808:	4e12      	ldr	r6, [pc, #72]	; (800e854 <xTaskResumeAll+0xe0>)
 800e80a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800e80c:	f7ff ff1c 	bl	800e648 <xTaskIncrementTick>
 800e810:	b100      	cbz	r0, 800e814 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800e812:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e814:	3c01      	subs	r4, #1
 800e816:	d1f9      	bne.n	800e80c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800e818:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800e81a:	4b0e      	ldr	r3, [pc, #56]	; (800e854 <xTaskResumeAll+0xe0>)
 800e81c:	681b      	ldr	r3, [r3, #0]
 800e81e:	2b00      	cmp	r3, #0
 800e820:	d0bc      	beq.n	800e79c <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800e822:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e826:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e82a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e82e:	f3bf 8f4f 	dsb	sy
 800e832:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800e836:	2401      	movs	r4, #1
 800e838:	e7b1      	b.n	800e79e <xTaskResumeAll+0x2a>
 800e83a:	bf00      	nop
 800e83c:	2000ed5c 	.word	0x2000ed5c
 800e840:	2000ed54 	.word	0x2000ed54
 800e844:	2000ed9c 	.word	0x2000ed9c
 800e848:	2000ed64 	.word	0x2000ed64
 800e84c:	2000e8f4 	.word	0x2000e8f4
 800e850:	2000e8e8 	.word	0x2000e8e8
 800e854:	2000ede0 	.word	0x2000ede0
 800e858:	2000ed98 	.word	0x2000ed98

0800e85c <vTaskDelay>:
	{
 800e85c:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800e85e:	b950      	cbnz	r0, 800e876 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800e860:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e864:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e868:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e86c:	f3bf 8f4f 	dsb	sy
 800e870:	f3bf 8f6f 	isb	sy
	}
 800e874:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800e876:	4b0a      	ldr	r3, [pc, #40]	; (800e8a0 <vTaskDelay+0x44>)
 800e878:	6819      	ldr	r1, [r3, #0]
 800e87a:	b141      	cbz	r1, 800e88e <vTaskDelay+0x32>
 800e87c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e880:	f383 8811 	msr	BASEPRI, r3
 800e884:	f3bf 8f6f 	isb	sy
 800e888:	f3bf 8f4f 	dsb	sy
 800e88c:	e7fe      	b.n	800e88c <vTaskDelay+0x30>
			vTaskSuspendAll();
 800e88e:	f7ff fecd 	bl	800e62c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800e892:	f7ff fd7f 	bl	800e394 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800e896:	f7ff ff6d 	bl	800e774 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800e89a:	2800      	cmp	r0, #0
 800e89c:	d0e0      	beq.n	800e860 <vTaskDelay+0x4>
 800e89e:	e7e9      	b.n	800e874 <vTaskDelay+0x18>
 800e8a0:	2000ed5c 	.word	0x2000ed5c

0800e8a4 <vTaskSetApplicationTaskTag>:
	{
 800e8a4:	b538      	push	{r3, r4, r5, lr}
 800e8a6:	460d      	mov	r5, r1
		if( xTask == NULL )
 800e8a8:	4604      	mov	r4, r0
 800e8aa:	b908      	cbnz	r0, 800e8b0 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800e8ac:	4b04      	ldr	r3, [pc, #16]	; (800e8c0 <vTaskSetApplicationTaskTag+0x1c>)
 800e8ae:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800e8b0:	f7fe feb0 	bl	800d614 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800e8b4:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800e8b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800e8ba:	f7fe becb 	b.w	800d654 <vPortExitCritical>
 800e8be:	bf00      	nop
 800e8c0:	2000e8e8 	.word	0x2000e8e8

0800e8c4 <xTaskCallApplicationTaskHook>:
	{
 800e8c4:	4603      	mov	r3, r0
 800e8c6:	4608      	mov	r0, r1
		if( xTask == NULL )
 800e8c8:	b90b      	cbnz	r3, 800e8ce <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800e8ca:	4b03      	ldr	r3, [pc, #12]	; (800e8d8 <xTaskCallApplicationTaskHook+0x14>)
 800e8cc:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800e8ce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800e8d0:	b103      	cbz	r3, 800e8d4 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800e8d2:	4718      	bx	r3
	}
 800e8d4:	4618      	mov	r0, r3
 800e8d6:	4770      	bx	lr
 800e8d8:	2000e8e8 	.word	0x2000e8e8

0800e8dc <vTaskStartScheduler>:
{
 800e8dc:	b510      	push	{r4, lr}
 800e8de:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800e8e0:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e8e2:	aa07      	add	r2, sp, #28
 800e8e4:	a906      	add	r1, sp, #24
 800e8e6:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800e8e8:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e8ec:	f7fe fcd2 	bl	800d294 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800e8f0:	9b05      	ldr	r3, [sp, #20]
 800e8f2:	9302      	str	r3, [sp, #8]
 800e8f4:	9b06      	ldr	r3, [sp, #24]
 800e8f6:	9a07      	ldr	r2, [sp, #28]
 800e8f8:	4919      	ldr	r1, [pc, #100]	; (800e960 <vTaskStartScheduler+0x84>)
 800e8fa:	481a      	ldr	r0, [pc, #104]	; (800e964 <vTaskStartScheduler+0x88>)
 800e8fc:	e9cd 4300 	strd	r4, r3, [sp]
 800e900:	4623      	mov	r3, r4
 800e902:	f7ff fe2e 	bl	800e562 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800e906:	b340      	cbz	r0, 800e95a <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800e908:	f000 fa8a 	bl	800ee20 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800e90c:	2801      	cmp	r0, #1
 800e90e:	d119      	bne.n	800e944 <vTaskStartScheduler+0x68>
 800e910:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e914:	f383 8811 	msr	BASEPRI, r3
 800e918:	f3bf 8f6f 	isb	sy
 800e91c:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800e920:	4b11      	ldr	r3, [pc, #68]	; (800e968 <vTaskStartScheduler+0x8c>)
 800e922:	f04f 32ff 	mov.w	r2, #4294967295
 800e926:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800e928:	4b10      	ldr	r3, [pc, #64]	; (800e96c <vTaskStartScheduler+0x90>)
 800e92a:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e92c:	4b10      	ldr	r3, [pc, #64]	; (800e970 <vTaskStartScheduler+0x94>)
 800e92e:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800e930:	4b10      	ldr	r3, [pc, #64]	; (800e974 <vTaskStartScheduler+0x98>)
 800e932:	4621      	mov	r1, r4
 800e934:	6818      	ldr	r0, [r3, #0]
 800e936:	f7ff ffc5 	bl	800e8c4 <xTaskCallApplicationTaskHook>
}
 800e93a:	b008      	add	sp, #32
 800e93c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800e940:	f7fe bef8 	b.w	800d734 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800e944:	3001      	adds	r0, #1
 800e946:	d108      	bne.n	800e95a <vTaskStartScheduler+0x7e>
 800e948:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e94c:	f383 8811 	msr	BASEPRI, r3
 800e950:	f3bf 8f6f 	isb	sy
 800e954:	f3bf 8f4f 	dsb	sy
 800e958:	e7fe      	b.n	800e958 <vTaskStartScheduler+0x7c>
}
 800e95a:	b008      	add	sp, #32
 800e95c:	bd10      	pop	{r4, pc}
 800e95e:	bf00      	nop
 800e960:	08029c35 	.word	0x08029c35
 800e964:	0800e461 	.word	0x0800e461
 800e968:	2000ed90 	.word	0x2000ed90
 800e96c:	2000edb0 	.word	0x2000edb0
 800e970:	2000eddc 	.word	0x2000eddc
 800e974:	2000e8e8 	.word	0x2000e8e8

0800e978 <vTaskSwitchContext>:
{
 800e978:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800e97a:	4b1c      	ldr	r3, [pc, #112]	; (800e9ec <vTaskSwitchContext+0x74>)
 800e97c:	681a      	ldr	r2, [r3, #0]
 800e97e:	4b1c      	ldr	r3, [pc, #112]	; (800e9f0 <vTaskSwitchContext+0x78>)
 800e980:	b112      	cbz	r2, 800e988 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800e982:	2201      	movs	r2, #1
 800e984:	601a      	str	r2, [r3, #0]
}
 800e986:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800e988:	4c1a      	ldr	r4, [pc, #104]	; (800e9f4 <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 800e98a:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e98c:	4e1a      	ldr	r6, [pc, #104]	; (800e9f8 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 800e98e:	6820      	ldr	r0, [r4, #0]
 800e990:	2101      	movs	r1, #1
 800e992:	f7ff ff97 	bl	800e8c4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e996:	6832      	ldr	r2, [r6, #0]
 800e998:	4918      	ldr	r1, [pc, #96]	; (800e9fc <vTaskSwitchContext+0x84>)
 800e99a:	2714      	movs	r7, #20
 800e99c:	fb07 f302 	mul.w	r3, r7, r2
 800e9a0:	18c8      	adds	r0, r1, r3
 800e9a2:	58cd      	ldr	r5, [r1, r3]
 800e9a4:	b1ad      	cbz	r5, 800e9d2 <vTaskSwitchContext+0x5a>
 800e9a6:	6845      	ldr	r5, [r0, #4]
 800e9a8:	3308      	adds	r3, #8
 800e9aa:	686d      	ldr	r5, [r5, #4]
 800e9ac:	6045      	str	r5, [r0, #4]
 800e9ae:	440b      	add	r3, r1
 800e9b0:	429d      	cmp	r5, r3
 800e9b2:	bf04      	itt	eq
 800e9b4:	686b      	ldreq	r3, [r5, #4]
 800e9b6:	6043      	streq	r3, [r0, #4]
 800e9b8:	2314      	movs	r3, #20
 800e9ba:	fb03 1102 	mla	r1, r3, r2, r1
 800e9be:	684b      	ldr	r3, [r1, #4]
 800e9c0:	68db      	ldr	r3, [r3, #12]
 800e9c2:	6023      	str	r3, [r4, #0]
 800e9c4:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 800e9c6:	6820      	ldr	r0, [r4, #0]
 800e9c8:	2100      	movs	r1, #0
}
 800e9ca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800e9ce:	f7ff bf79 	b.w	800e8c4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9d2:	b942      	cbnz	r2, 800e9e6 <vTaskSwitchContext+0x6e>
 800e9d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9d8:	f383 8811 	msr	BASEPRI, r3
 800e9dc:	f3bf 8f6f 	isb	sy
 800e9e0:	f3bf 8f4f 	dsb	sy
 800e9e4:	e7fe      	b.n	800e9e4 <vTaskSwitchContext+0x6c>
 800e9e6:	3a01      	subs	r2, #1
 800e9e8:	e7d8      	b.n	800e99c <vTaskSwitchContext+0x24>
 800e9ea:	bf00      	nop
 800e9ec:	2000ed5c 	.word	0x2000ed5c
 800e9f0:	2000ede0 	.word	0x2000ede0
 800e9f4:	2000e8e8 	.word	0x2000e8e8
 800e9f8:	2000ed64 	.word	0x2000ed64
 800e9fc:	2000e8f4 	.word	0x2000e8f4

0800ea00 <vTaskPlaceOnEventList>:
{
 800ea00:	b510      	push	{r4, lr}
 800ea02:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800ea04:	b940      	cbnz	r0, 800ea18 <vTaskPlaceOnEventList+0x18>
 800ea06:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea0a:	f383 8811 	msr	BASEPRI, r3
 800ea0e:	f3bf 8f6f 	isb	sy
 800ea12:	f3bf 8f4f 	dsb	sy
 800ea16:	e7fe      	b.n	800ea16 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ea18:	4b05      	ldr	r3, [pc, #20]	; (800ea30 <vTaskPlaceOnEventList+0x30>)
 800ea1a:	6819      	ldr	r1, [r3, #0]
 800ea1c:	3118      	adds	r1, #24
 800ea1e:	f7fe fd65 	bl	800d4ec <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800ea22:	4620      	mov	r0, r4
 800ea24:	2101      	movs	r1, #1
}
 800ea26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800ea2a:	f7ff bcb3 	b.w	800e394 <prvAddCurrentTaskToDelayedList>
 800ea2e:	bf00      	nop
 800ea30:	2000e8e8 	.word	0x2000e8e8

0800ea34 <vTaskPlaceOnEventListRestricted>:
	{
 800ea34:	b538      	push	{r3, r4, r5, lr}
 800ea36:	460d      	mov	r5, r1
 800ea38:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800ea3a:	b940      	cbnz	r0, 800ea4e <vTaskPlaceOnEventListRestricted+0x1a>
 800ea3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea40:	f383 8811 	msr	BASEPRI, r3
 800ea44:	f3bf 8f6f 	isb	sy
 800ea48:	f3bf 8f4f 	dsb	sy
 800ea4c:	e7fe      	b.n	800ea4c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ea4e:	4b07      	ldr	r3, [pc, #28]	; (800ea6c <vTaskPlaceOnEventListRestricted+0x38>)
 800ea50:	6819      	ldr	r1, [r3, #0]
 800ea52:	3118      	adds	r1, #24
 800ea54:	f7fe fd3e 	bl	800d4d4 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800ea58:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800ea5a:	4621      	mov	r1, r4
 800ea5c:	bf0c      	ite	eq
 800ea5e:	4628      	moveq	r0, r5
 800ea60:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800ea64:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800ea68:	f7ff bc94 	b.w	800e394 <prvAddCurrentTaskToDelayedList>
 800ea6c:	2000e8e8 	.word	0x2000e8e8

0800ea70 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea70:	68c3      	ldr	r3, [r0, #12]
{
 800ea72:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea74:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800ea76:	b944      	cbnz	r4, 800ea8a <xTaskRemoveFromEventList+0x1a>
 800ea78:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea7c:	f383 8811 	msr	BASEPRI, r3
 800ea80:	f3bf 8f6f 	isb	sy
 800ea84:	f3bf 8f4f 	dsb	sy
 800ea88:	e7fe      	b.n	800ea88 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800ea8a:	f104 0118 	add.w	r1, r4, #24
 800ea8e:	4608      	mov	r0, r1
 800ea90:	9101      	str	r1, [sp, #4]
 800ea92:	f7fe fd42 	bl	800d51a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ea96:	4b12      	ldr	r3, [pc, #72]	; (800eae0 <xTaskRemoveFromEventList+0x70>)
 800ea98:	9901      	ldr	r1, [sp, #4]
 800ea9a:	681b      	ldr	r3, [r3, #0]
 800ea9c:	b9eb      	cbnz	r3, 800eada <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800ea9e:	1d21      	adds	r1, r4, #4
 800eaa0:	4608      	mov	r0, r1
 800eaa2:	9101      	str	r1, [sp, #4]
 800eaa4:	f7fe fd39 	bl	800d51a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800eaa8:	4a0e      	ldr	r2, [pc, #56]	; (800eae4 <xTaskRemoveFromEventList+0x74>)
 800eaaa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800eaac:	6810      	ldr	r0, [r2, #0]
 800eaae:	9901      	ldr	r1, [sp, #4]
 800eab0:	4283      	cmp	r3, r0
 800eab2:	bf88      	it	hi
 800eab4:	6013      	strhi	r3, [r2, #0]
 800eab6:	4a0c      	ldr	r2, [pc, #48]	; (800eae8 <xTaskRemoveFromEventList+0x78>)
 800eab8:	2014      	movs	r0, #20
 800eaba:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800eabe:	f7fe fd09 	bl	800d4d4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800eac2:	4b0a      	ldr	r3, [pc, #40]	; (800eaec <xTaskRemoveFromEventList+0x7c>)
 800eac4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800eac6:	681b      	ldr	r3, [r3, #0]
 800eac8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eaca:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800eacc:	bf85      	ittet	hi
 800eace:	4b08      	ldrhi	r3, [pc, #32]	; (800eaf0 <xTaskRemoveFromEventList+0x80>)
 800ead0:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800ead2:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800ead4:	6018      	strhi	r0, [r3, #0]
}
 800ead6:	b002      	add	sp, #8
 800ead8:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800eada:	4806      	ldr	r0, [pc, #24]	; (800eaf4 <xTaskRemoveFromEventList+0x84>)
 800eadc:	e7ef      	b.n	800eabe <xTaskRemoveFromEventList+0x4e>
 800eade:	bf00      	nop
 800eae0:	2000ed5c 	.word	0x2000ed5c
 800eae4:	2000ed64 	.word	0x2000ed64
 800eae8:	2000e8f4 	.word	0x2000e8f4
 800eaec:	2000e8e8 	.word	0x2000e8e8
 800eaf0:	2000ede0 	.word	0x2000ede0
 800eaf4:	2000ed9c 	.word	0x2000ed9c

0800eaf8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800eaf8:	4b03      	ldr	r3, [pc, #12]	; (800eb08 <vTaskInternalSetTimeOutState+0x10>)
 800eafa:	681b      	ldr	r3, [r3, #0]
 800eafc:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800eafe:	4b03      	ldr	r3, [pc, #12]	; (800eb0c <vTaskInternalSetTimeOutState+0x14>)
 800eb00:	681b      	ldr	r3, [r3, #0]
 800eb02:	6043      	str	r3, [r0, #4]
}
 800eb04:	4770      	bx	lr
 800eb06:	bf00      	nop
 800eb08:	2000ed94 	.word	0x2000ed94
 800eb0c:	2000eddc 	.word	0x2000eddc

0800eb10 <xTaskCheckForTimeOut>:
{
 800eb10:	b570      	push	{r4, r5, r6, lr}
 800eb12:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800eb14:	4605      	mov	r5, r0
 800eb16:	b940      	cbnz	r0, 800eb2a <xTaskCheckForTimeOut+0x1a>
 800eb18:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb1c:	f383 8811 	msr	BASEPRI, r3
 800eb20:	f3bf 8f6f 	isb	sy
 800eb24:	f3bf 8f4f 	dsb	sy
 800eb28:	e7fe      	b.n	800eb28 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800eb2a:	b941      	cbnz	r1, 800eb3e <xTaskCheckForTimeOut+0x2e>
 800eb2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb30:	f383 8811 	msr	BASEPRI, r3
 800eb34:	f3bf 8f6f 	isb	sy
 800eb38:	f3bf 8f4f 	dsb	sy
 800eb3c:	e7fe      	b.n	800eb3c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800eb3e:	f7fe fd69 	bl	800d614 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800eb42:	4b0f      	ldr	r3, [pc, #60]	; (800eb80 <xTaskCheckForTimeOut+0x70>)
 800eb44:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800eb46:	6823      	ldr	r3, [r4, #0]
 800eb48:	1c5a      	adds	r2, r3, #1
 800eb4a:	d010      	beq.n	800eb6e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800eb4c:	480d      	ldr	r0, [pc, #52]	; (800eb84 <xTaskCheckForTimeOut+0x74>)
 800eb4e:	682e      	ldr	r6, [r5, #0]
 800eb50:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800eb52:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800eb54:	4286      	cmp	r6, r0
 800eb56:	d001      	beq.n	800eb5c <xTaskCheckForTimeOut+0x4c>
 800eb58:	428a      	cmp	r2, r1
 800eb5a:	d90f      	bls.n	800eb7c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800eb5c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800eb5e:	4283      	cmp	r3, r0
 800eb60:	d90a      	bls.n	800eb78 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800eb62:	1a5b      	subs	r3, r3, r1
 800eb64:	4413      	add	r3, r2
 800eb66:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800eb68:	4628      	mov	r0, r5
 800eb6a:	f7ff ffc5 	bl	800eaf8 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800eb6e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800eb70:	f7fe fd70 	bl	800d654 <vPortExitCritical>
}
 800eb74:	4620      	mov	r0, r4
 800eb76:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800eb78:	2300      	movs	r3, #0
 800eb7a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800eb7c:	2401      	movs	r4, #1
 800eb7e:	e7f7      	b.n	800eb70 <xTaskCheckForTimeOut+0x60>
 800eb80:	2000eddc 	.word	0x2000eddc
 800eb84:	2000ed94 	.word	0x2000ed94

0800eb88 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800eb88:	4b01      	ldr	r3, [pc, #4]	; (800eb90 <vTaskMissedYield+0x8>)
 800eb8a:	2201      	movs	r2, #1
 800eb8c:	601a      	str	r2, [r3, #0]
}
 800eb8e:	4770      	bx	lr
 800eb90:	2000ede0 	.word	0x2000ede0

0800eb94 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800eb94:	4b05      	ldr	r3, [pc, #20]	; (800ebac <xTaskGetSchedulerState+0x18>)
 800eb96:	681b      	ldr	r3, [r3, #0]
 800eb98:	b133      	cbz	r3, 800eba8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800eb9a:	4b05      	ldr	r3, [pc, #20]	; (800ebb0 <xTaskGetSchedulerState+0x1c>)
 800eb9c:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800eb9e:	2b00      	cmp	r3, #0
 800eba0:	bf0c      	ite	eq
 800eba2:	2002      	moveq	r0, #2
 800eba4:	2000      	movne	r0, #0
 800eba6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800eba8:	2001      	movs	r0, #1
	}
 800ebaa:	4770      	bx	lr
 800ebac:	2000edb0 	.word	0x2000edb0
 800ebb0:	2000ed5c 	.word	0x2000ed5c

0800ebb4 <xTaskPriorityInherit>:
	{
 800ebb4:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800ebb6:	4604      	mov	r4, r0
 800ebb8:	b348      	cbz	r0, 800ec0e <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800ebba:	4d1c      	ldr	r5, [pc, #112]	; (800ec2c <xTaskPriorityInherit+0x78>)
 800ebbc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ebbe:	682a      	ldr	r2, [r5, #0]
 800ebc0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ebc2:	4293      	cmp	r3, r2
 800ebc4:	d229      	bcs.n	800ec1a <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ebc6:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800ebc8:	4e19      	ldr	r6, [pc, #100]	; (800ec30 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ebca:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ebcc:	bfa1      	itttt	ge
 800ebce:	682a      	ldrge	r2, [r5, #0]
 800ebd0:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800ebd2:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800ebd6:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800ebd8:	2214      	movs	r2, #20
 800ebda:	fb02 6303 	mla	r3, r2, r3, r6
 800ebde:	6942      	ldr	r2, [r0, #20]
 800ebe0:	429a      	cmp	r2, r3
 800ebe2:	d116      	bne.n	800ec12 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ebe4:	1d01      	adds	r1, r0, #4
 800ebe6:	4608      	mov	r0, r1
 800ebe8:	9101      	str	r1, [sp, #4]
 800ebea:	f7fe fc96 	bl	800d51a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ebee:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ebf0:	4a10      	ldr	r2, [pc, #64]	; (800ec34 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ebf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ebf4:	6810      	ldr	r0, [r2, #0]
 800ebf6:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ebf8:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ebfa:	4283      	cmp	r3, r0
 800ebfc:	f04f 0014 	mov.w	r0, #20
 800ec00:	fb00 6003 	mla	r0, r0, r3, r6
 800ec04:	bf88      	it	hi
 800ec06:	6013      	strhi	r3, [r2, #0]
 800ec08:	f7fe fc64 	bl	800d4d4 <vListInsertEnd>
				xReturn = pdTRUE;
 800ec0c:	2001      	movs	r0, #1
	}
 800ec0e:	b002      	add	sp, #8
 800ec10:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ec12:	682b      	ldr	r3, [r5, #0]
 800ec14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ec16:	62c3      	str	r3, [r0, #44]	; 0x2c
 800ec18:	e7f8      	b.n	800ec0c <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800ec1a:	682b      	ldr	r3, [r5, #0]
 800ec1c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800ec1e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800ec20:	42a0      	cmp	r0, r4
 800ec22:	bf2c      	ite	cs
 800ec24:	2000      	movcs	r0, #0
 800ec26:	2001      	movcc	r0, #1
 800ec28:	e7f1      	b.n	800ec0e <xTaskPriorityInherit+0x5a>
 800ec2a:	bf00      	nop
 800ec2c:	2000e8e8 	.word	0x2000e8e8
 800ec30:	2000e8f4 	.word	0x2000e8f4
 800ec34:	2000ed64 	.word	0x2000ed64

0800ec38 <xTaskPriorityDisinherit>:
	{
 800ec38:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800ec3a:	b910      	cbnz	r0, 800ec42 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800ec3c:	2000      	movs	r0, #0
	}
 800ec3e:	b002      	add	sp, #8
 800ec40:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800ec42:	4b1c      	ldr	r3, [pc, #112]	; (800ecb4 <xTaskPriorityDisinherit+0x7c>)
 800ec44:	681c      	ldr	r4, [r3, #0]
 800ec46:	4284      	cmp	r4, r0
 800ec48:	d008      	beq.n	800ec5c <xTaskPriorityDisinherit+0x24>
 800ec4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec4e:	f383 8811 	msr	BASEPRI, r3
 800ec52:	f3bf 8f6f 	isb	sy
 800ec56:	f3bf 8f4f 	dsb	sy
 800ec5a:	e7fe      	b.n	800ec5a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800ec5c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800ec5e:	b943      	cbnz	r3, 800ec72 <xTaskPriorityDisinherit+0x3a>
 800ec60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec64:	f383 8811 	msr	BASEPRI, r3
 800ec68:	f3bf 8f6f 	isb	sy
 800ec6c:	f3bf 8f4f 	dsb	sy
 800ec70:	e7fe      	b.n	800ec70 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ec72:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ec74:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800ec76:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ec78:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800ec7a:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ec7c:	d0de      	beq.n	800ec3c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800ec7e:	2b00      	cmp	r3, #0
 800ec80:	d1dc      	bne.n	800ec3c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ec82:	1d21      	adds	r1, r4, #4
 800ec84:	4608      	mov	r0, r1
 800ec86:	9101      	str	r1, [sp, #4]
 800ec88:	f7fe fc47 	bl	800d51a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ec8c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800ec8e:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ec90:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ec92:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800ec96:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800ec98:	4a07      	ldr	r2, [pc, #28]	; (800ecb8 <xTaskPriorityDisinherit+0x80>)
 800ec9a:	6810      	ldr	r0, [r2, #0]
 800ec9c:	4283      	cmp	r3, r0
 800ec9e:	bf88      	it	hi
 800eca0:	6013      	strhi	r3, [r2, #0]
 800eca2:	4a06      	ldr	r2, [pc, #24]	; (800ecbc <xTaskPriorityDisinherit+0x84>)
 800eca4:	2014      	movs	r0, #20
 800eca6:	fb00 2003 	mla	r0, r0, r3, r2
 800ecaa:	f7fe fc13 	bl	800d4d4 <vListInsertEnd>
					xReturn = pdTRUE;
 800ecae:	2001      	movs	r0, #1
		return xReturn;
 800ecb0:	e7c5      	b.n	800ec3e <xTaskPriorityDisinherit+0x6>
 800ecb2:	bf00      	nop
 800ecb4:	2000e8e8 	.word	0x2000e8e8
 800ecb8:	2000ed64 	.word	0x2000ed64
 800ecbc:	2000e8f4 	.word	0x2000e8f4

0800ecc0 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800ecc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800ecc2:	4604      	mov	r4, r0
 800ecc4:	2800      	cmp	r0, #0
 800ecc6:	d044      	beq.n	800ed52 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800ecc8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ecca:	b942      	cbnz	r2, 800ecde <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800eccc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecd0:	f383 8811 	msr	BASEPRI, r3
 800ecd4:	f3bf 8f6f 	isb	sy
 800ecd8:	f3bf 8f4f 	dsb	sy
 800ecdc:	e7fe      	b.n	800ecdc <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800ecde:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800ece0:	4299      	cmp	r1, r3
 800ece2:	bf38      	it	cc
 800ece4:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800ece6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ece8:	428b      	cmp	r3, r1
 800ecea:	d032      	beq.n	800ed52 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800ecec:	2a01      	cmp	r2, #1
 800ecee:	d130      	bne.n	800ed52 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800ecf0:	4a19      	ldr	r2, [pc, #100]	; (800ed58 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800ecf2:	6812      	ldr	r2, [r2, #0]
 800ecf4:	4282      	cmp	r2, r0
 800ecf6:	d108      	bne.n	800ed0a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800ecf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecfc:	f383 8811 	msr	BASEPRI, r3
 800ed00:	f3bf 8f6f 	isb	sy
 800ed04:	f3bf 8f4f 	dsb	sy
 800ed08:	e7fe      	b.n	800ed08 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ed0a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ed0c:	4d13      	ldr	r5, [pc, #76]	; (800ed5c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800ed0e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ed10:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ed12:	f04f 0214 	mov.w	r2, #20
 800ed16:	fb02 5303 	mla	r3, r2, r3, r5
 800ed1a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ed1c:	bfa4      	itt	ge
 800ed1e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800ed22:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ed24:	429a      	cmp	r2, r3
 800ed26:	d114      	bne.n	800ed52 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ed28:	1d01      	adds	r1, r0, #4
 800ed2a:	4608      	mov	r0, r1
 800ed2c:	9101      	str	r1, [sp, #4]
 800ed2e:	f7fe fbf4 	bl	800d51a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800ed32:	4a0b      	ldr	r2, [pc, #44]	; (800ed60 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800ed34:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ed36:	6810      	ldr	r0, [r2, #0]
 800ed38:	9901      	ldr	r1, [sp, #4]
 800ed3a:	4283      	cmp	r3, r0
 800ed3c:	f04f 0014 	mov.w	r0, #20
 800ed40:	fb00 5003 	mla	r0, r0, r3, r5
 800ed44:	bf88      	it	hi
 800ed46:	6013      	strhi	r3, [r2, #0]
	}
 800ed48:	b003      	add	sp, #12
 800ed4a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800ed4e:	f7fe bbc1 	b.w	800d4d4 <vListInsertEnd>
	}
 800ed52:	b003      	add	sp, #12
 800ed54:	bd30      	pop	{r4, r5, pc}
 800ed56:	bf00      	nop
 800ed58:	2000e8e8 	.word	0x2000e8e8
 800ed5c:	2000e8f4 	.word	0x2000e8f4
 800ed60:	2000ed64 	.word	0x2000ed64

0800ed64 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800ed64:	4b04      	ldr	r3, [pc, #16]	; (800ed78 <pvTaskIncrementMutexHeldCount+0x14>)
 800ed66:	681a      	ldr	r2, [r3, #0]
 800ed68:	b11a      	cbz	r2, 800ed72 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800ed6a:	6819      	ldr	r1, [r3, #0]
 800ed6c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800ed6e:	3201      	adds	r2, #1
 800ed70:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800ed72:	6818      	ldr	r0, [r3, #0]
	}
 800ed74:	4770      	bx	lr
 800ed76:	bf00      	nop
 800ed78:	2000e8e8 	.word	0x2000e8e8

0800ed7c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800ed7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800ed7e:	4c11      	ldr	r4, [pc, #68]	; (800edc4 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800ed80:	f7fe fc48 	bl	800d614 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800ed84:	6825      	ldr	r5, [r4, #0]
 800ed86:	b9bd      	cbnz	r5, 800edb8 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800ed88:	4f0f      	ldr	r7, [pc, #60]	; (800edc8 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800ed8a:	4e10      	ldr	r6, [pc, #64]	; (800edcc <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800ed8c:	4638      	mov	r0, r7
 800ed8e:	f7fe fb93 	bl	800d4b8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800ed92:	4630      	mov	r0, r6
 800ed94:	f7fe fb90 	bl	800d4b8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800ed98:	4b0d      	ldr	r3, [pc, #52]	; (800edd0 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800ed9a:	4a0e      	ldr	r2, [pc, #56]	; (800edd4 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800ed9c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800ed9e:	4b0e      	ldr	r3, [pc, #56]	; (800edd8 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800eda0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800eda2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800eda4:	200a      	movs	r0, #10
 800eda6:	4b0d      	ldr	r3, [pc, #52]	; (800eddc <prvCheckForValidListAndQueue+0x60>)
 800eda8:	9500      	str	r5, [sp, #0]
 800edaa:	f7fe fe44 	bl	800da36 <xQueueGenericCreateStatic>
 800edae:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800edb0:	b110      	cbz	r0, 800edb8 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800edb2:	490b      	ldr	r1, [pc, #44]	; (800ede0 <prvCheckForValidListAndQueue+0x64>)
 800edb4:	f7ff fa0e 	bl	800e1d4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800edb8:	b003      	add	sp, #12
 800edba:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800edbe:	f7fe bc49 	b.w	800d654 <vPortExitCritical>
 800edc2:	bf00      	nop
 800edc4:	2000ef08 	.word	0x2000ef08
 800edc8:	2000ee8c 	.word	0x2000ee8c
 800edcc:	2000eea0 	.word	0x2000eea0
 800edd0:	2000ede4 	.word	0x2000ede4
 800edd4:	2000edec 	.word	0x2000edec
 800edd8:	2000ede8 	.word	0x2000ede8
 800eddc:	2000eeb8 	.word	0x2000eeb8
 800ede0:	08029c3a 	.word	0x08029c3a

0800ede4 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800ede4:	4291      	cmp	r1, r2
{
 800ede6:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800ede8:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800edea:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800edec:	d80a      	bhi.n	800ee04 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800edee:	1ad2      	subs	r2, r2, r3
 800edf0:	6983      	ldr	r3, [r0, #24]
 800edf2:	429a      	cmp	r2, r3
 800edf4:	d20d      	bcs.n	800ee12 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800edf6:	4b08      	ldr	r3, [pc, #32]	; (800ee18 <prvInsertTimerInActiveList+0x34>)
 800edf8:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800edfa:	6818      	ldr	r0, [r3, #0]
 800edfc:	f7fe fb76 	bl	800d4ec <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800ee00:	2000      	movs	r0, #0
}
 800ee02:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800ee04:	429a      	cmp	r2, r3
 800ee06:	d201      	bcs.n	800ee0c <prvInsertTimerInActiveList+0x28>
 800ee08:	4299      	cmp	r1, r3
 800ee0a:	d202      	bcs.n	800ee12 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ee0c:	4b03      	ldr	r3, [pc, #12]	; (800ee1c <prvInsertTimerInActiveList+0x38>)
 800ee0e:	1d01      	adds	r1, r0, #4
 800ee10:	e7f3      	b.n	800edfa <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800ee12:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800ee14:	e7f5      	b.n	800ee02 <prvInsertTimerInActiveList+0x1e>
 800ee16:	bf00      	nop
 800ee18:	2000ede8 	.word	0x2000ede8
 800ee1c:	2000ede4 	.word	0x2000ede4

0800ee20 <xTimerCreateTimerTask>:
{
 800ee20:	b510      	push	{r4, lr}
 800ee22:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800ee24:	f7ff ffaa 	bl	800ed7c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800ee28:	4b12      	ldr	r3, [pc, #72]	; (800ee74 <xTimerCreateTimerTask+0x54>)
 800ee2a:	681b      	ldr	r3, [r3, #0]
 800ee2c:	b1b3      	cbz	r3, 800ee5c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800ee2e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800ee30:	aa07      	add	r2, sp, #28
 800ee32:	a906      	add	r1, sp, #24
 800ee34:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800ee36:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800ee3a:	f7fe fa37 	bl	800d2ac <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800ee3e:	9b05      	ldr	r3, [sp, #20]
 800ee40:	9302      	str	r3, [sp, #8]
 800ee42:	9b06      	ldr	r3, [sp, #24]
 800ee44:	9301      	str	r3, [sp, #4]
 800ee46:	2302      	movs	r3, #2
 800ee48:	9300      	str	r3, [sp, #0]
 800ee4a:	9a07      	ldr	r2, [sp, #28]
 800ee4c:	490a      	ldr	r1, [pc, #40]	; (800ee78 <xTimerCreateTimerTask+0x58>)
 800ee4e:	480b      	ldr	r0, [pc, #44]	; (800ee7c <xTimerCreateTimerTask+0x5c>)
 800ee50:	4623      	mov	r3, r4
 800ee52:	f7ff fb86 	bl	800e562 <xTaskCreateStatic>
 800ee56:	4b0a      	ldr	r3, [pc, #40]	; (800ee80 <xTimerCreateTimerTask+0x60>)
 800ee58:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800ee5a:	b940      	cbnz	r0, 800ee6e <xTimerCreateTimerTask+0x4e>
 800ee5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee60:	f383 8811 	msr	BASEPRI, r3
 800ee64:	f3bf 8f6f 	isb	sy
 800ee68:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800ee6c:	e7fe      	b.n	800ee6c <xTimerCreateTimerTask+0x4c>
}
 800ee6e:	2001      	movs	r0, #1
 800ee70:	b008      	add	sp, #32
 800ee72:	bd10      	pop	{r4, pc}
 800ee74:	2000ef08 	.word	0x2000ef08
 800ee78:	08029c3f 	.word	0x08029c3f
 800ee7c:	0800ef89 	.word	0x0800ef89
 800ee80:	2000ef0c 	.word	0x2000ef0c

0800ee84 <xTimerGenericCommand>:
{
 800ee84:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ee86:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800ee88:	4604      	mov	r4, r0
{
 800ee8a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800ee8c:	b940      	cbnz	r0, 800eea0 <xTimerGenericCommand+0x1c>
 800ee8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee92:	f383 8811 	msr	BASEPRI, r3
 800ee96:	f3bf 8f6f 	isb	sy
 800ee9a:	f3bf 8f4f 	dsb	sy
 800ee9e:	e7fe      	b.n	800ee9e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800eea0:	4d0d      	ldr	r5, [pc, #52]	; (800eed8 <xTimerGenericCommand+0x54>)
 800eea2:	6828      	ldr	r0, [r5, #0]
 800eea4:	b180      	cbz	r0, 800eec8 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800eea6:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800eea8:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800eeac:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800eeae:	dc0d      	bgt.n	800eecc <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800eeb0:	f7ff fe70 	bl	800eb94 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800eeb4:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800eeb6:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800eeb8:	bf08      	it	eq
 800eeba:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800eebc:	6828      	ldr	r0, [r5, #0]
 800eebe:	bf18      	it	ne
 800eec0:	461a      	movne	r2, r3
 800eec2:	4669      	mov	r1, sp
 800eec4:	f7fe fe6c 	bl	800dba0 <xQueueGenericSend>
}
 800eec8:	b004      	add	sp, #16
 800eeca:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800eecc:	2300      	movs	r3, #0
 800eece:	4669      	mov	r1, sp
 800eed0:	f7fe ff19 	bl	800dd06 <xQueueGenericSendFromISR>
 800eed4:	e7f8      	b.n	800eec8 <xTimerGenericCommand+0x44>
 800eed6:	bf00      	nop
 800eed8:	2000ef08 	.word	0x2000ef08

0800eedc <prvSampleTimeNow>:
{
 800eedc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800eee0:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800ef84 <prvSampleTimeNow+0xa8>
{
 800eee4:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800eee6:	f7ff fba9 	bl	800e63c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800eeea:	f8d8 3000 	ldr.w	r3, [r8]
 800eeee:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800eef0:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800eef2:	d940      	bls.n	800ef76 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800eef4:	4f21      	ldr	r7, [pc, #132]	; (800ef7c <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800eef6:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800eefa:	683b      	ldr	r3, [r7, #0]
 800eefc:	681a      	ldr	r2, [r3, #0]
 800eefe:	b95a      	cbnz	r2, 800ef18 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800ef00:	4a1f      	ldr	r2, [pc, #124]	; (800ef80 <prvSampleTimeNow+0xa4>)
 800ef02:	6811      	ldr	r1, [r2, #0]
 800ef04:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800ef06:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800ef08:	2301      	movs	r3, #1
}
 800ef0a:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800ef0c:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800ef0e:	f8c8 5000 	str.w	r5, [r8]
}
 800ef12:	b004      	add	sp, #16
 800ef14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ef18:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ef1a:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ef1c:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ef20:	1d21      	adds	r1, r4, #4
 800ef22:	4608      	mov	r0, r1
 800ef24:	9103      	str	r1, [sp, #12]
 800ef26:	f7fe faf8 	bl	800d51a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ef2a:	6a23      	ldr	r3, [r4, #32]
 800ef2c:	4620      	mov	r0, r4
 800ef2e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ef30:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ef34:	9903      	ldr	r1, [sp, #12]
 800ef36:	f013 0f04 	tst.w	r3, #4
 800ef3a:	d0de      	beq.n	800eefa <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800ef3c:	69a3      	ldr	r3, [r4, #24]
 800ef3e:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800ef40:	459a      	cmp	sl, r3
 800ef42:	d205      	bcs.n	800ef50 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ef44:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800ef46:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ef48:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ef4a:	f7fe facf 	bl	800d4ec <vListInsert>
 800ef4e:	e7d4      	b.n	800eefa <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ef50:	2300      	movs	r3, #0
 800ef52:	f8cd 9000 	str.w	r9, [sp]
 800ef56:	4652      	mov	r2, sl
 800ef58:	4619      	mov	r1, r3
 800ef5a:	4620      	mov	r0, r4
 800ef5c:	f7ff ff92 	bl	800ee84 <xTimerGenericCommand>
				configASSERT( xResult );
 800ef60:	2800      	cmp	r0, #0
 800ef62:	d1ca      	bne.n	800eefa <prvSampleTimeNow+0x1e>
 800ef64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef68:	f383 8811 	msr	BASEPRI, r3
 800ef6c:	f3bf 8f6f 	isb	sy
 800ef70:	f3bf 8f4f 	dsb	sy
 800ef74:	e7fe      	b.n	800ef74 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800ef76:	2300      	movs	r3, #0
 800ef78:	e7c7      	b.n	800ef0a <prvSampleTimeNow+0x2e>
 800ef7a:	bf00      	nop
 800ef7c:	2000ede4 	.word	0x2000ede4
 800ef80:	2000ede8 	.word	0x2000ede8
 800ef84:	2000eeb4 	.word	0x2000eeb4

0800ef88 <prvTimerTask>:
{
 800ef88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ef8c:	4d6e      	ldr	r5, [pc, #440]	; (800f148 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ef8e:	4e6f      	ldr	r6, [pc, #444]	; (800f14c <prvTimerTask+0x1c4>)
{
 800ef90:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ef92:	682b      	ldr	r3, [r5, #0]
 800ef94:	f8d3 8000 	ldr.w	r8, [r3]
 800ef98:	f1b8 0f00 	cmp.w	r8, #0
 800ef9c:	d035      	beq.n	800f00a <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ef9e:	68db      	ldr	r3, [r3, #12]
 800efa0:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800efa4:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800efa6:	f7ff fb41 	bl	800e62c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800efaa:	a804      	add	r0, sp, #16
 800efac:	f7ff ff96 	bl	800eedc <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800efb0:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800efb2:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800efb4:	2b00      	cmp	r3, #0
 800efb6:	d169      	bne.n	800f08c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800efb8:	2c00      	cmp	r4, #0
 800efba:	d14c      	bne.n	800f056 <prvTimerTask+0xce>
 800efbc:	4540      	cmp	r0, r8
 800efbe:	d350      	bcc.n	800f062 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800efc0:	f7ff fbd8 	bl	800e774 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800efc4:	682b      	ldr	r3, [r5, #0]
 800efc6:	68db      	ldr	r3, [r3, #12]
 800efc8:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800efca:	1d38      	adds	r0, r7, #4
 800efcc:	f7fe faa5 	bl	800d51a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800efd0:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800efd4:	0758      	lsls	r0, r3, #29
 800efd6:	d51a      	bpl.n	800f00e <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800efd8:	69b9      	ldr	r1, [r7, #24]
 800efda:	4643      	mov	r3, r8
 800efdc:	464a      	mov	r2, r9
 800efde:	4441      	add	r1, r8
 800efe0:	4638      	mov	r0, r7
 800efe2:	f7ff feff 	bl	800ede4 <prvInsertTimerInActiveList>
 800efe6:	b1b0      	cbz	r0, 800f016 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800efe8:	9400      	str	r4, [sp, #0]
 800efea:	4623      	mov	r3, r4
 800efec:	4642      	mov	r2, r8
 800efee:	4621      	mov	r1, r4
 800eff0:	4638      	mov	r0, r7
 800eff2:	f7ff ff47 	bl	800ee84 <xTimerGenericCommand>
			configASSERT( xResult );
 800eff6:	b970      	cbnz	r0, 800f016 <prvTimerTask+0x8e>
 800eff8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800effc:	f383 8811 	msr	BASEPRI, r3
 800f000:	f3bf 8f6f 	isb	sy
 800f004:	f3bf 8f4f 	dsb	sy
 800f008:	e7fe      	b.n	800f008 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f00a:	2401      	movs	r4, #1
 800f00c:	e7cb      	b.n	800efa6 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f00e:	f023 0301 	bic.w	r3, r3, #1
 800f012:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f016:	6a3b      	ldr	r3, [r7, #32]
 800f018:	4638      	mov	r0, r7
 800f01a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f01c:	6830      	ldr	r0, [r6, #0]
 800f01e:	2200      	movs	r2, #0
 800f020:	a904      	add	r1, sp, #16
 800f022:	f7fe ff26 	bl	800de72 <xQueueReceive>
 800f026:	2800      	cmp	r0, #0
 800f028:	d0b3      	beq.n	800ef92 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f02a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f02c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f02e:	2b00      	cmp	r3, #0
 800f030:	db2f      	blt.n	800f092 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f032:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f034:	6963      	ldr	r3, [r4, #20]
 800f036:	2b00      	cmp	r3, #0
 800f038:	d132      	bne.n	800f0a0 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800f03a:	a803      	add	r0, sp, #12
 800f03c:	f7ff ff4e 	bl	800eedc <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800f040:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800f042:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800f044:	2b09      	cmp	r3, #9
 800f046:	d8e9      	bhi.n	800f01c <prvTimerTask+0x94>
 800f048:	e8df f003 	tbb	[pc, r3]
 800f04c:	572e2e2e 	.word	0x572e2e2e
 800f050:	2e2e765e 	.word	0x2e2e765e
 800f054:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f056:	4b3e      	ldr	r3, [pc, #248]	; (800f150 <prvTimerTask+0x1c8>)
 800f058:	681b      	ldr	r3, [r3, #0]
 800f05a:	681c      	ldr	r4, [r3, #0]
 800f05c:	fab4 f484 	clz	r4, r4
 800f060:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f062:	6830      	ldr	r0, [r6, #0]
 800f064:	4622      	mov	r2, r4
 800f066:	eba8 0109 	sub.w	r1, r8, r9
 800f06a:	f7ff f8f0 	bl	800e24e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f06e:	f7ff fb81 	bl	800e774 <xTaskResumeAll>
 800f072:	2800      	cmp	r0, #0
 800f074:	d1d2      	bne.n	800f01c <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800f076:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f07a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f07e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f082:	f3bf 8f4f 	dsb	sy
 800f086:	f3bf 8f6f 	isb	sy
 800f08a:	e7c7      	b.n	800f01c <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800f08c:	f7ff fb72 	bl	800e774 <xTaskResumeAll>
}
 800f090:	e7c4      	b.n	800f01c <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f092:	9b05      	ldr	r3, [sp, #20]
 800f094:	9907      	ldr	r1, [sp, #28]
 800f096:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f098:	9b04      	ldr	r3, [sp, #16]
 800f09a:	2b00      	cmp	r3, #0
 800f09c:	dbbe      	blt.n	800f01c <prvTimerTask+0x94>
 800f09e:	e7c8      	b.n	800f032 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f0a0:	1d20      	adds	r0, r4, #4
 800f0a2:	f7fe fa3a 	bl	800d51a <uxListRemove>
 800f0a6:	e7c8      	b.n	800f03a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f0a8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f0ac:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f0ae:	f043 0301 	orr.w	r3, r3, #1
 800f0b2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f0b6:	9b05      	ldr	r3, [sp, #20]
 800f0b8:	4620      	mov	r0, r4
 800f0ba:	4419      	add	r1, r3
 800f0bc:	f7ff fe92 	bl	800ede4 <prvInsertTimerInActiveList>
 800f0c0:	2800      	cmp	r0, #0
 800f0c2:	d0ab      	beq.n	800f01c <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f0c4:	6a23      	ldr	r3, [r4, #32]
 800f0c6:	4620      	mov	r0, r4
 800f0c8:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f0ca:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f0ce:	0759      	lsls	r1, r3, #29
 800f0d0:	d5a4      	bpl.n	800f01c <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f0d2:	69a2      	ldr	r2, [r4, #24]
 800f0d4:	9905      	ldr	r1, [sp, #20]
 800f0d6:	2300      	movs	r3, #0
 800f0d8:	440a      	add	r2, r1
 800f0da:	9300      	str	r3, [sp, #0]
 800f0dc:	4619      	mov	r1, r3
 800f0de:	4620      	mov	r0, r4
 800f0e0:	f7ff fed0 	bl	800ee84 <xTimerGenericCommand>
							configASSERT( xResult );
 800f0e4:	2800      	cmp	r0, #0
 800f0e6:	d199      	bne.n	800f01c <prvTimerTask+0x94>
 800f0e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0ec:	f383 8811 	msr	BASEPRI, r3
 800f0f0:	f3bf 8f6f 	isb	sy
 800f0f4:	f3bf 8f4f 	dsb	sy
 800f0f8:	e7fe      	b.n	800f0f8 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f0fa:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f0fe:	f023 0301 	bic.w	r3, r3, #1
 800f102:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800f106:	e789      	b.n	800f01c <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f108:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f10c:	f043 0301 	orr.w	r3, r3, #1
 800f110:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f114:	9905      	ldr	r1, [sp, #20]
 800f116:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f118:	b941      	cbnz	r1, 800f12c <prvTimerTask+0x1a4>
 800f11a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f11e:	f383 8811 	msr	BASEPRI, r3
 800f122:	f3bf 8f6f 	isb	sy
 800f126:	f3bf 8f4f 	dsb	sy
 800f12a:	e7fe      	b.n	800f12a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f12c:	4603      	mov	r3, r0
 800f12e:	4401      	add	r1, r0
 800f130:	4620      	mov	r0, r4
 800f132:	f7ff fe57 	bl	800ede4 <prvInsertTimerInActiveList>
					break;
 800f136:	e771      	b.n	800f01c <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f138:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f13c:	079a      	lsls	r2, r3, #30
 800f13e:	d4de      	bmi.n	800f0fe <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800f140:	4620      	mov	r0, r4
 800f142:	f7fe f97b 	bl	800d43c <vPortFree>
 800f146:	e769      	b.n	800f01c <prvTimerTask+0x94>
 800f148:	2000ede4 	.word	0x2000ede4
 800f14c:	2000ef08 	.word	0x2000ef08
 800f150:	2000ede8 	.word	0x2000ede8

0800f154 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f154:	8880      	ldrh	r0, [r0, #4]
 800f156:	4770      	bx	lr

0800f158 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f158:	b570      	push	{r4, r5, r6, lr}
 800f15a:	6803      	ldr	r3, [r0, #0]
 800f15c:	4605      	mov	r5, r0
 800f15e:	460c      	mov	r4, r1
 800f160:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f162:	2100      	movs	r1, #0
 800f164:	4798      	blx	r3
 800f166:	682b      	ldr	r3, [r5, #0]
 800f168:	4606      	mov	r6, r0
 800f16a:	6a1b      	ldr	r3, [r3, #32]
 800f16c:	4628      	mov	r0, r5
 800f16e:	4798      	blx	r3
 800f170:	1ba4      	subs	r4, r4, r6
 800f172:	b2a4      	uxth	r4, r4
 800f174:	fbb4 f0f0 	udiv	r0, r4, r0
 800f178:	bd70      	pop	{r4, r5, r6, pc}

0800f17a <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f17a:	2300      	movs	r3, #0
 800f17c:	8083      	strh	r3, [r0, #4]
 800f17e:	4770      	bx	lr

0800f180 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f180:	b510      	push	{r4, lr}
 800f182:	6803      	ldr	r3, [r0, #0]
 800f184:	8881      	ldrh	r1, [r0, #4]
 800f186:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f188:	4604      	mov	r4, r0
 800f18a:	4798      	blx	r3
 800f18c:	88a3      	ldrh	r3, [r4, #4]
 800f18e:	3301      	adds	r3, #1
 800f190:	80a3      	strh	r3, [r4, #4]
 800f192:	bd10      	pop	{r4, pc}

0800f194 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f194:	6803      	ldr	r3, [r0, #0]
 800f196:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f198:	4718      	bx	r3

0800f19a <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f19a:	4770      	bx	lr

0800f19c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f19c:	4a02      	ldr	r2, [pc, #8]	; (800f1a8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f19e:	6002      	str	r2, [r0, #0]
 800f1a0:	2200      	movs	r2, #0
 800f1a2:	8082      	strh	r2, [r0, #4]
 800f1a4:	4770      	bx	lr
 800f1a6:	bf00      	nop
 800f1a8:	08029c50 	.word	0x08029c50

0800f1ac <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f1ac:	b510      	push	{r4, lr}
 800f1ae:	6803      	ldr	r3, [r0, #0]
 800f1b0:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f1b4:	4604      	mov	r4, r0
 800f1b6:	4798      	blx	r3
 800f1b8:	b110      	cbz	r0, 800f1c0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f1ba:	4620      	mov	r0, r4
 800f1bc:	f7f2 fd59 	bl	8001c72 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f1c0:	bd10      	pop	{r4, pc}

0800f1c2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>:
 800f1c2:	f8c0 10e0 	str.w	r1, [r0, #224]	; 0xe0
 800f1c6:	4770      	bx	lr

0800f1c8 <_ZNK8touchgfx11BoxProgress8getColorEv>:
 800f1c8:	f8d0 00e0 	ldr.w	r0, [r0, #224]	; 0xe0
 800f1cc:	4770      	bx	lr

0800f1ce <_ZN8touchgfx11BoxProgressD1Ev>:
 800f1ce:	4770      	bx	lr

0800f1d0 <_ZN8touchgfx11BoxProgressD0Ev>:
 800f1d0:	b510      	push	{r4, lr}
 800f1d2:	21e4      	movs	r1, #228	; 0xe4
 800f1d4:	4604      	mov	r4, r0
 800f1d6:	f017 f9f3 	bl	80265c0 <_ZdlPvj>
 800f1da:	4620      	mov	r0, r4
 800f1dc:	bd10      	pop	{r4, pc}

0800f1de <_ZN8touchgfx11BoxProgress8setAlphaEh>:
 800f1de:	b538      	push	{r3, r4, r5, lr}
 800f1e0:	4604      	mov	r4, r0
 800f1e2:	460d      	mov	r5, r1
 800f1e4:	f000 f960 	bl	800f4a8 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 800f1e8:	f884 50de 	strb.w	r5, [r4, #222]	; 0xde
 800f1ec:	bd38      	pop	{r3, r4, r5, pc}

0800f1ee <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>:
 800f1ee:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f1f2:	4617      	mov	r7, r2
 800f1f4:	f9bd 5020 	ldrsh.w	r5, [sp, #32]
 800f1f8:	9500      	str	r5, [sp, #0]
 800f1fa:	2200      	movs	r2, #0
 800f1fc:	4604      	mov	r4, r0
 800f1fe:	460e      	mov	r6, r1
 800f200:	30b8      	adds	r0, #184	; 0xb8
 800f202:	4611      	mov	r1, r2
 800f204:	4698      	mov	r8, r3
 800f206:	f7f3 fd6a 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800f20a:	4643      	mov	r3, r8
 800f20c:	463a      	mov	r2, r7
 800f20e:	4631      	mov	r1, r6
 800f210:	4620      	mov	r0, r4
 800f212:	9508      	str	r5, [sp, #32]
 800f214:	b002      	add	sp, #8
 800f216:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f21a:	f000 ba14 	b.w	800f646 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

0800f21e <_ZN8touchgfx11BoxProgress8setValueEi>:
 800f21e:	b530      	push	{r4, r5, lr}
 800f220:	4604      	mov	r4, r0
 800f222:	b085      	sub	sp, #20
 800f224:	f000 f993 	bl	800f54e <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 800f228:	f894 30b4 	ldrb.w	r3, [r4, #180]	; 0xb4
 800f22c:	2b03      	cmp	r3, #3
 800f22e:	d814      	bhi.n	800f25a <_ZN8touchgfx11BoxProgress8setValueEi+0x3c>
 800f230:	e8df f003 	tbb	[pc, r3]
 800f234:	10100202 	.word	0x10100202
 800f238:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800f23c:	4620      	mov	r0, r4
 800f23e:	f000 f9a8 	bl	800f592 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 800f242:	b200      	sxth	r0, r0
 800f244:	f894 30b4 	ldrb.w	r3, [r4, #180]	; 0xb4
 800f248:	2b03      	cmp	r3, #3
 800f24a:	d82f      	bhi.n	800f2ac <_ZN8touchgfx11BoxProgress8setValueEi+0x8e>
 800f24c:	e8df f003 	tbb	[pc, r3]
 800f250:	63413007 	.word	0x63413007
 800f254:	f8b4 1062 	ldrh.w	r1, [r4, #98]	; 0x62
 800f258:	e7f0      	b.n	800f23c <_ZN8touchgfx11BoxProgress8setValueEi+0x1e>
 800f25a:	2000      	movs	r0, #0
 800f25c:	e7f2      	b.n	800f244 <_ZN8touchgfx11BoxProgress8setValueEi+0x26>
 800f25e:	f9b4 3062 	ldrsh.w	r3, [r4, #98]	; 0x62
 800f262:	9300      	str	r3, [sp, #0]
 800f264:	2200      	movs	r2, #0
 800f266:	4603      	mov	r3, r0
 800f268:	4611      	mov	r1, r2
 800f26a:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800f26e:	f9b4 50c0 	ldrsh.w	r5, [r4, #192]	; 0xc0
 800f272:	f7f3 fd34 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800f276:	f9b4 30c0 	ldrsh.w	r3, [r4, #192]	; 0xc0
 800f27a:	f9b4 20c2 	ldrsh.w	r2, [r4, #194]	; 0xc2
 800f27e:	f8ad 200e 	strh.w	r2, [sp, #14]
 800f282:	4629      	mov	r1, r5
 800f284:	429d      	cmp	r5, r3
 800f286:	eba5 0503 	sub.w	r5, r5, r3
 800f28a:	bfa8      	it	ge
 800f28c:	4619      	movge	r1, r3
 800f28e:	2d00      	cmp	r5, #0
 800f290:	f8ad 1008 	strh.w	r1, [sp, #8]
 800f294:	bfb8      	it	lt
 800f296:	426d      	neglt	r5, r5
 800f298:	2100      	movs	r1, #0
 800f29a:	f8ad 100a 	strh.w	r1, [sp, #10]
 800f29e:	f8ad 500c 	strh.w	r5, [sp, #12]
 800f2a2:	a902      	add	r1, sp, #8
 800f2a4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f2a8:	f006 ff30 	bl	801610c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>
 800f2ac:	b005      	add	sp, #20
 800f2ae:	bd30      	pop	{r4, r5, pc}
 800f2b0:	8921      	ldrh	r1, [r4, #8]
 800f2b2:	f9b4 3062 	ldrsh.w	r3, [r4, #98]	; 0x62
 800f2b6:	9300      	str	r3, [sp, #0]
 800f2b8:	1a09      	subs	r1, r1, r0
 800f2ba:	4603      	mov	r3, r0
 800f2bc:	2200      	movs	r2, #0
 800f2be:	b209      	sxth	r1, r1
 800f2c0:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800f2c4:	f9b4 50bc 	ldrsh.w	r5, [r4, #188]	; 0xbc
 800f2c8:	f7f3 fd09 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800f2cc:	f9b4 30bc 	ldrsh.w	r3, [r4, #188]	; 0xbc
 800f2d0:	e7d3      	b.n	800f27a <_ZN8touchgfx11BoxProgress8setValueEi+0x5c>
 800f2d2:	2200      	movs	r2, #0
 800f2d4:	f9b4 3060 	ldrsh.w	r3, [r4, #96]	; 0x60
 800f2d8:	9000      	str	r0, [sp, #0]
 800f2da:	4611      	mov	r1, r2
 800f2dc:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800f2e0:	f9b4 50c2 	ldrsh.w	r5, [r4, #194]	; 0xc2
 800f2e4:	f7f3 fcfb 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800f2e8:	f9b4 30c2 	ldrsh.w	r3, [r4, #194]	; 0xc2
 800f2ec:	f9b4 20c0 	ldrsh.w	r2, [r4, #192]	; 0xc0
 800f2f0:	f8ad 200c 	strh.w	r2, [sp, #12]
 800f2f4:	2100      	movs	r1, #0
 800f2f6:	429d      	cmp	r5, r3
 800f2f8:	f8ad 1008 	strh.w	r1, [sp, #8]
 800f2fc:	4629      	mov	r1, r5
 800f2fe:	eba5 0503 	sub.w	r5, r5, r3
 800f302:	bfa8      	it	ge
 800f304:	4619      	movge	r1, r3
 800f306:	2d00      	cmp	r5, #0
 800f308:	bfb8      	it	lt
 800f30a:	426d      	neglt	r5, r5
 800f30c:	f8ad 100a 	strh.w	r1, [sp, #10]
 800f310:	f8ad 500e 	strh.w	r5, [sp, #14]
 800f314:	e7c5      	b.n	800f2a2 <_ZN8touchgfx11BoxProgress8setValueEi+0x84>
 800f316:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 800f31a:	f9b4 3060 	ldrsh.w	r3, [r4, #96]	; 0x60
 800f31e:	9000      	str	r0, [sp, #0]
 800f320:	1a12      	subs	r2, r2, r0
 800f322:	b212      	sxth	r2, r2
 800f324:	2100      	movs	r1, #0
 800f326:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800f32a:	f9b4 50be 	ldrsh.w	r5, [r4, #190]	; 0xbe
 800f32e:	f7f3 fcd6 	bl	8002cde <_ZN8touchgfx8Drawable11setPositionEssss>
 800f332:	f9b4 30be 	ldrsh.w	r3, [r4, #190]	; 0xbe
 800f336:	e7d9      	b.n	800f2ec <_ZN8touchgfx11BoxProgress8setValueEi+0xce>

0800f338 <_ZN8touchgfx11BoxProgressC1Ev>:
 800f338:	b510      	push	{r4, lr}
 800f33a:	4604      	mov	r4, r0
 800f33c:	f000 f85a 	bl	800f3f4 <_ZN8touchgfx25AbstractDirectionProgressC1Ev>
 800f340:	2201      	movs	r2, #1
 800f342:	f884 20dd 	strb.w	r2, [r4, #221]	; 0xdd
 800f346:	4b16      	ldr	r3, [pc, #88]	; (800f3a0 <_ZN8touchgfx11BoxProgressC1Ev+0x68>)
 800f348:	4a16      	ldr	r2, [pc, #88]	; (800f3a4 <_ZN8touchgfx11BoxProgressC1Ev+0x6c>)
 800f34a:	6023      	str	r3, [r4, #0]
 800f34c:	f8c4 20b8 	str.w	r2, [r4, #184]	; 0xb8
 800f350:	2300      	movs	r3, #0
 800f352:	22ff      	movs	r2, #255	; 0xff
 800f354:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f358:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 800f35c:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 800f360:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 800f364:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800f368:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800f36c:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800f370:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800f374:	f8a4 30ca 	strh.w	r3, [r4, #202]	; 0xca
 800f378:	e9c4 3333 	strd	r3, r3, [r4, #204]	; 0xcc
 800f37c:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 800f380:	f8a4 30d8 	strh.w	r3, [r4, #216]	; 0xd8
 800f384:	f8a4 30da 	strh.w	r3, [r4, #218]	; 0xda
 800f388:	f884 30dc 	strb.w	r3, [r4, #220]	; 0xdc
 800f38c:	f884 20de 	strb.w	r2, [r4, #222]	; 0xde
 800f390:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 800f394:	f104 01b8 	add.w	r1, r4, #184	; 0xb8
 800f398:	f000 f9e2 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f39c:	4620      	mov	r0, r4
 800f39e:	bd10      	pop	{r4, pc}
 800f3a0:	08029c84 	.word	0x08029c84
 800f3a4:	0802a388 	.word	0x0802a388

0800f3a8 <_ZNK8touchgfx25AbstractDirectionProgress12getDirectionEv>:
 800f3a8:	f890 00b4 	ldrb.w	r0, [r0, #180]	; 0xb4
 800f3ac:	4770      	bx	lr

0800f3ae <_ZN8touchgfx25AbstractDirectionProgressD1Ev>:
 800f3ae:	4770      	bx	lr

0800f3b0 <_ZN8touchgfx25AbstractDirectionProgressD0Ev>:
 800f3b0:	b510      	push	{r4, lr}
 800f3b2:	21b8      	movs	r1, #184	; 0xb8
 800f3b4:	4604      	mov	r4, r0
 800f3b6:	f017 f903 	bl	80265c0 <_ZdlPvj>
 800f3ba:	4620      	mov	r0, r4
 800f3bc:	bd10      	pop	{r4, pc}

0800f3be <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE.part.0>:
 800f3be:	b570      	push	{r4, r5, r6, lr}
 800f3c0:	4604      	mov	r4, r0
 800f3c2:	f880 10b4 	strb.w	r1, [r0, #180]	; 0xb4
 800f3c6:	3058      	adds	r0, #88	; 0x58
 800f3c8:	f006 fe4e 	bl	8016068 <_ZNK8touchgfx8Drawable10invalidateEv>
 800f3cc:	6823      	ldr	r3, [r4, #0]
 800f3ce:	4620      	mov	r0, r4
 800f3d0:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800f3d4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f3d8:	4798      	blx	r3
 800f3da:	462b      	mov	r3, r5
 800f3dc:	4601      	mov	r1, r0
 800f3de:	4620      	mov	r0, r4
 800f3e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f3e4:	4718      	bx	r3

0800f3e6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>:
 800f3e6:	f890 30b4 	ldrb.w	r3, [r0, #180]	; 0xb4
 800f3ea:	428b      	cmp	r3, r1
 800f3ec:	d001      	beq.n	800f3f2 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE+0xc>
 800f3ee:	f7ff bfe6 	b.w	800f3be <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE.part.0>
 800f3f2:	4770      	bx	lr

0800f3f4 <_ZN8touchgfx25AbstractDirectionProgressC1Ev>:
 800f3f4:	b510      	push	{r4, lr}
 800f3f6:	4604      	mov	r4, r0
 800f3f8:	f000 f952 	bl	800f6a0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 800f3fc:	4b03      	ldr	r3, [pc, #12]	; (800f40c <_ZN8touchgfx25AbstractDirectionProgressC1Ev+0x18>)
 800f3fe:	6023      	str	r3, [r4, #0]
 800f400:	2300      	movs	r3, #0
 800f402:	f884 30b4 	strb.w	r3, [r4, #180]	; 0xb4
 800f406:	4620      	mov	r0, r4
 800f408:	bd10      	pop	{r4, pc}
 800f40a:	bf00      	nop
 800f40c:	08029d68 	.word	0x08029d68

0800f410 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f410:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f414:	4770      	bx	lr

0800f416 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f416:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f41a:	4770      	bx	lr

0800f41c <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f41c:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f420:	4770      	bx	lr

0800f422 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f422:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f426:	4770      	bx	lr

0800f428 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f42a:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f42e:	461e      	mov	r6, r3
 800f430:	6803      	ldr	r3, [r0, #0]
 800f432:	460f      	mov	r7, r1
 800f434:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f438:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f43c:	4604      	mov	r4, r0
 800f43e:	4615      	mov	r5, r2
 800f440:	4798      	blx	r3
 800f442:	b93e      	cbnz	r6, 800f454 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f444:	1bed      	subs	r5, r5, r7
 800f446:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f44a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f44e:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f452:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f454:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f458:	e7f7      	b.n	800f44a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f45a <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f45a:	b510      	push	{r4, lr}
 800f45c:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f460:	600c      	str	r4, [r1, #0]
 800f462:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f466:	6011      	str	r1, [r2, #0]
 800f468:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f46c:	801a      	strh	r2, [r3, #0]
 800f46e:	9b02      	ldr	r3, [sp, #8]
 800f470:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f474:	801a      	strh	r2, [r3, #0]
 800f476:	bd10      	pop	{r4, pc}

0800f478 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f478:	b510      	push	{r4, lr}
 800f47a:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f47e:	600c      	str	r4, [r1, #0]
 800f480:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f484:	6011      	str	r1, [r2, #0]
 800f486:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f48a:	801a      	strh	r2, [r3, #0]
 800f48c:	bd10      	pop	{r4, pc}

0800f48e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f48e:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f492:	600b      	str	r3, [r1, #0]
 800f494:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f498:	6013      	str	r3, [r2, #0]
 800f49a:	4770      	bx	lr

0800f49c <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f49c:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f4a0:	4770      	bx	lr

0800f4a2 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f4a2:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f4a6:	4770      	bx	lr

0800f4a8 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f4a8:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f4ac:	4770      	bx	lr

0800f4ae <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f4ae:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f4b2:	4770      	bx	lr

0800f4b4 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f4b4:	4770      	bx	lr

0800f4b6 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f4b6:	b510      	push	{r4, lr}
 800f4b8:	21b4      	movs	r1, #180	; 0xb4
 800f4ba:	4604      	mov	r4, r0
 800f4bc:	f017 f880 	bl	80265c0 <_ZdlPvj>
 800f4c0:	4620      	mov	r0, r4
 800f4c2:	bd10      	pop	{r4, pc}

0800f4c4 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f4c4:	b570      	push	{r4, r5, r6, lr}
 800f4c6:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f4ca:	428d      	cmp	r5, r1
 800f4cc:	bfb8      	it	lt
 800f4ce:	460d      	movlt	r5, r1
 800f4d0:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f4d4:	428d      	cmp	r5, r1
 800f4d6:	4604      	mov	r4, r0
 800f4d8:	bfa8      	it	ge
 800f4da:	460d      	movge	r5, r1
 800f4dc:	4616      	mov	r6, r2
 800f4de:	b99a      	cbnz	r2, 800f508 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f4e0:	6803      	ldr	r3, [r0, #0]
 800f4e2:	4629      	mov	r1, r5
 800f4e4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f4e8:	4798      	blx	r3
 800f4ea:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f4ee:	b368      	cbz	r0, 800f54c <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f4f0:	6803      	ldr	r3, [r0, #0]
 800f4f2:	68db      	ldr	r3, [r3, #12]
 800f4f4:	4798      	blx	r3
 800f4f6:	b348      	cbz	r0, 800f54c <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f4f8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f4fc:	6803      	ldr	r3, [r0, #0]
 800f4fe:	4621      	mov	r1, r4
 800f500:	689b      	ldr	r3, [r3, #8]
 800f502:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f506:	4718      	bx	r3
 800f508:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f50c:	2b00      	cmp	r3, #0
 800f50e:	dd08      	ble.n	800f522 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f510:	f005 fcc2 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
 800f514:	4621      	mov	r1, r4
 800f516:	3004      	adds	r0, #4
 800f518:	f005 fd0b 	bl	8014f32 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f51c:	2300      	movs	r3, #0
 800f51e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f522:	6823      	ldr	r3, [r4, #0]
 800f524:	4620      	mov	r0, r4
 800f526:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f52a:	4798      	blx	r3
 800f52c:	2300      	movs	r3, #0
 800f52e:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f532:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f536:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f53a:	f005 fcad 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
 800f53e:	4621      	mov	r1, r4
 800f540:	3004      	adds	r0, #4
 800f542:	f005 fd9f 	bl	8015084 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f546:	2301      	movs	r3, #1
 800f548:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f54c:	bd70      	pop	{r4, r5, r6, pc}

0800f54e <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f54e:	b510      	push	{r4, lr}
 800f550:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f554:	4299      	cmp	r1, r3
 800f556:	bfb8      	it	lt
 800f558:	4619      	movlt	r1, r3
 800f55a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f55e:	4299      	cmp	r1, r3
 800f560:	bfa8      	it	ge
 800f562:	4619      	movge	r1, r3
 800f564:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f568:	428b      	cmp	r3, r1
 800f56a:	4604      	mov	r4, r0
 800f56c:	d010      	beq.n	800f590 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f56e:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800f572:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800f576:	b158      	cbz	r0, 800f590 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f578:	6803      	ldr	r3, [r0, #0]
 800f57a:	68db      	ldr	r3, [r3, #12]
 800f57c:	4798      	blx	r3
 800f57e:	b138      	cbz	r0, 800f590 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f580:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800f584:	6803      	ldr	r3, [r0, #0]
 800f586:	4621      	mov	r1, r4
 800f588:	689b      	ldr	r3, [r3, #8]
 800f58a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f58e:	4718      	bx	r3
 800f590:	bd10      	pop	{r4, pc}

0800f592 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800f592:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f594:	4604      	mov	r4, r0
 800f596:	460d      	mov	r5, r1
 800f598:	b1a9      	cbz	r1, 800f5c6 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800f59a:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800f59e:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800f5a2:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800f5a6:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800f5aa:	ab01      	add	r3, sp, #4
 800f5ac:	1a12      	subs	r2, r2, r0
 800f5ae:	1b89      	subs	r1, r1, r6
 800f5b0:	1a38      	subs	r0, r7, r0
 800f5b2:	f006 ff27 	bl	8016404 <_ZN8touchgfx6muldivElllRl>
 800f5b6:	4629      	mov	r1, r5
 800f5b8:	ab01      	add	r3, sp, #4
 800f5ba:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800f5be:	4430      	add	r0, r6
 800f5c0:	f006 ff20 	bl	8016404 <_ZN8touchgfx6muldivElllRl>
 800f5c4:	b285      	uxth	r5, r0
 800f5c6:	4628      	mov	r0, r5
 800f5c8:	b003      	add	sp, #12
 800f5ca:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f5cc <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800f5cc:	b570      	push	{r4, r5, r6, lr}
 800f5ce:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800f5d2:	4604      	mov	r4, r0
 800f5d4:	2b00      	cmp	r3, #0
 800f5d6:	d035      	beq.n	800f644 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f5d8:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800f5dc:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800f5e0:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800f5e4:	3001      	adds	r0, #1
 800f5e6:	1ad2      	subs	r2, r2, r3
 800f5e8:	b212      	sxth	r2, r2
 800f5ea:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800f5ee:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800f5f2:	2100      	movs	r1, #0
 800f5f4:	b280      	uxth	r0, r0
 800f5f6:	47a8      	blx	r5
 800f5f8:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800f5fc:	6823      	ldr	r3, [r4, #0]
 800f5fe:	4401      	add	r1, r0
 800f600:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f604:	4620      	mov	r0, r4
 800f606:	4798      	blx	r3
 800f608:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f60c:	429a      	cmp	r2, r3
 800f60e:	db19      	blt.n	800f644 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f610:	2500      	movs	r5, #0
 800f612:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f616:	f005 fc3f 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
 800f61a:	4621      	mov	r1, r4
 800f61c:	3004      	adds	r0, #4
 800f61e:	f005 fc88 	bl	8014f32 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f622:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f626:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f62a:	b158      	cbz	r0, 800f644 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f62c:	6803      	ldr	r3, [r0, #0]
 800f62e:	68db      	ldr	r3, [r3, #12]
 800f630:	4798      	blx	r3
 800f632:	b138      	cbz	r0, 800f644 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f634:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f638:	6803      	ldr	r3, [r0, #0]
 800f63a:	4621      	mov	r1, r4
 800f63c:	689b      	ldr	r3, [r3, #8]
 800f63e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f642:	4718      	bx	r3
 800f644:	bd70      	pop	{r4, r5, r6, pc}

0800f646 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800f646:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f64a:	4604      	mov	r4, r0
 800f64c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800f650:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800f654:	460e      	mov	r6, r1
 800f656:	4615      	mov	r5, r2
 800f658:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800f65c:	4619      	mov	r1, r3
 800f65e:	463a      	mov	r2, r7
 800f660:	3058      	adds	r0, #88	; 0x58
 800f662:	4698      	mov	r8, r3
 800f664:	f7f7 fea6 	bl	80073b4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f668:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f66c:	4446      	add	r6, r8
 800f66e:	42b3      	cmp	r3, r6
 800f670:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f674:	bfb8      	it	lt
 800f676:	8126      	strhlt	r6, [r4, #8]
 800f678:	443d      	add	r5, r7
 800f67a:	42ab      	cmp	r3, r5
 800f67c:	bfb8      	it	lt
 800f67e:	8165      	strhlt	r5, [r4, #10]
 800f680:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f684 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800f684:	b510      	push	{r4, lr}
 800f686:	4604      	mov	r4, r0
 800f688:	302c      	adds	r0, #44	; 0x2c
 800f68a:	f002 ff05 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f68e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800f692:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800f696:	4620      	mov	r0, r4
 800f698:	f7f7 fe8c 	bl	80073b4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f69c:	bd10      	pop	{r4, pc}
	...

0800f6a0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800f6a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f6a2:	4604      	mov	r4, r0
 800f6a4:	4626      	mov	r6, r4
 800f6a6:	2500      	movs	r5, #0
 800f6a8:	f7f8 fd84 	bl	80081b4 <_ZN8touchgfx8DrawableC1Ev>
 800f6ac:	4b23      	ldr	r3, [pc, #140]	; (800f73c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800f6ae:	62a5      	str	r5, [r4, #40]	; 0x28
 800f6b0:	f846 3b2c 	str.w	r3, [r6], #44
 800f6b4:	2226      	movs	r2, #38	; 0x26
 800f6b6:	4629      	mov	r1, r5
 800f6b8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800f6bc:	4630      	mov	r0, r6
 800f6be:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f6c2:	f017 f837 	bl	8026734 <memset>
 800f6c6:	4630      	mov	r0, r6
 800f6c8:	f7f8 fd74 	bl	80081b4 <_ZN8touchgfx8DrawableC1Ev>
 800f6cc:	a902      	add	r1, sp, #8
 800f6ce:	4b1c      	ldr	r3, [pc, #112]	; (800f740 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800f6d0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f6d2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800f6d6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f6da:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800f6de:	4630      	mov	r0, r6
 800f6e0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800f6e4:	f002 fed8 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f6e8:	4638      	mov	r0, r7
 800f6ea:	f7f8 fd63 	bl	80081b4 <_ZN8touchgfx8DrawableC1Ev>
 800f6ee:	4b15      	ldr	r3, [pc, #84]	; (800f744 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800f6f0:	65a3      	str	r3, [r4, #88]	; 0x58
 800f6f2:	2364      	movs	r3, #100	; 0x64
 800f6f4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800f6f8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800f6fc:	4b12      	ldr	r3, [pc, #72]	; (800f748 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800f6fe:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800f702:	4629      	mov	r1, r5
 800f704:	4630      	mov	r0, r6
 800f706:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800f70a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f70e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800f712:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f716:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800f71a:	f7f2 fa33 	bl	8001b84 <_ZN8touchgfx8Drawable4setXEs>
 800f71e:	4629      	mov	r1, r5
 800f720:	4630      	mov	r0, r6
 800f722:	f7f2 fa31 	bl	8001b88 <_ZN8touchgfx8Drawable4setYEs>
 800f726:	4631      	mov	r1, r6
 800f728:	4620      	mov	r0, r4
 800f72a:	f000 f819 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f72e:	4620      	mov	r0, r4
 800f730:	4639      	mov	r1, r7
 800f732:	f000 f815 	bl	800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f736:	4620      	mov	r0, r4
 800f738:	b003      	add	sp, #12
 800f73a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f73c:	08029e44 	.word	0x08029e44
 800f740:	0802a4cc 	.word	0x0802a4cc
 800f744:	08029f18 	.word	0x08029f18
 800f748:	08016b63 	.word	0x08016b63

0800f74c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f74c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f74e:	2000      	movs	r0, #0
 800f750:	b12b      	cbz	r3, 800f75e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f752:	b920      	cbnz	r0, 800f75e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f754:	1a5a      	subs	r2, r3, r1
 800f756:	4250      	negs	r0, r2
 800f758:	4150      	adcs	r0, r2
 800f75a:	699b      	ldr	r3, [r3, #24]
 800f75c:	e7f8      	b.n	800f750 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f75e:	4770      	bx	lr

0800f760 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f760:	2300      	movs	r3, #0
 800f762:	6148      	str	r0, [r1, #20]
 800f764:	618b      	str	r3, [r1, #24]
 800f766:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f768:	b913      	cbnz	r3, 800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f76a:	6281      	str	r1, [r0, #40]	; 0x28
 800f76c:	4770      	bx	lr
 800f76e:	4613      	mov	r3, r2
 800f770:	699a      	ldr	r2, [r3, #24]
 800f772:	2a00      	cmp	r2, #0
 800f774:	d1fb      	bne.n	800f76e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800f776:	6199      	str	r1, [r3, #24]
 800f778:	4770      	bx	lr

0800f77a <_ZN8touchgfx9Container9removeAllEv>:
 800f77a:	2200      	movs	r2, #0
 800f77c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f77e:	b123      	cbz	r3, 800f78a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f780:	6999      	ldr	r1, [r3, #24]
 800f782:	6281      	str	r1, [r0, #40]	; 0x28
 800f784:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f788:	e7f8      	b.n	800f77c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f78a:	4770      	bx	lr

0800f78c <_ZN8touchgfx9Container6unlinkEv>:
 800f78c:	2300      	movs	r3, #0
 800f78e:	6283      	str	r3, [r0, #40]	; 0x28
 800f790:	4770      	bx	lr

0800f792 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f792:	2200      	movs	r2, #0
 800f794:	8002      	strh	r2, [r0, #0]
 800f796:	8042      	strh	r2, [r0, #2]
 800f798:	8082      	strh	r2, [r0, #4]
 800f79a:	80c2      	strh	r2, [r0, #6]
 800f79c:	4770      	bx	lr

0800f79e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f79e:	b570      	push	{r4, r5, r6, lr}
 800f7a0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f7a2:	460d      	mov	r5, r1
 800f7a4:	4616      	mov	r6, r2
 800f7a6:	b13c      	cbz	r4, 800f7b8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f7a8:	6823      	ldr	r3, [r4, #0]
 800f7aa:	4620      	mov	r0, r4
 800f7ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f7ae:	4632      	mov	r2, r6
 800f7b0:	4629      	mov	r1, r5
 800f7b2:	4798      	blx	r3
 800f7b4:	69a4      	ldr	r4, [r4, #24]
 800f7b6:	e7f6      	b.n	800f7a6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f7b8:	bd70      	pop	{r4, r5, r6, pc}

0800f7ba <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f7ba:	b538      	push	{r3, r4, r5, lr}
 800f7bc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f7be:	460d      	mov	r5, r1
 800f7c0:	b134      	cbz	r4, 800f7d0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f7c2:	682b      	ldr	r3, [r5, #0]
 800f7c4:	4621      	mov	r1, r4
 800f7c6:	689b      	ldr	r3, [r3, #8]
 800f7c8:	4628      	mov	r0, r5
 800f7ca:	4798      	blx	r3
 800f7cc:	69a4      	ldr	r4, [r4, #24]
 800f7ce:	e7f7      	b.n	800f7c0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f7d0:	bd38      	pop	{r3, r4, r5, pc}

0800f7d2 <_ZN8touchgfx9ContainerD1Ev>:
 800f7d2:	4770      	bx	lr

0800f7d4 <_ZN8touchgfx9ContainerD0Ev>:
 800f7d4:	b510      	push	{r4, lr}
 800f7d6:	212c      	movs	r1, #44	; 0x2c
 800f7d8:	4604      	mov	r4, r0
 800f7da:	f016 fef1 	bl	80265c0 <_ZdlPvj>
 800f7de:	4620      	mov	r0, r4
 800f7e0:	bd10      	pop	{r4, pc}

0800f7e2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f7e2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f7e4:	b19b      	cbz	r3, 800f80e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f7e6:	428b      	cmp	r3, r1
 800f7e8:	d109      	bne.n	800f7fe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f7ea:	699a      	ldr	r2, [r3, #24]
 800f7ec:	2100      	movs	r1, #0
 800f7ee:	6159      	str	r1, [r3, #20]
 800f7f0:	6282      	str	r2, [r0, #40]	; 0x28
 800f7f2:	b902      	cbnz	r2, 800f7f6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f7f4:	4770      	bx	lr
 800f7f6:	6199      	str	r1, [r3, #24]
 800f7f8:	4770      	bx	lr
 800f7fa:	4613      	mov	r3, r2
 800f7fc:	b13a      	cbz	r2, 800f80e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f7fe:	699a      	ldr	r2, [r3, #24]
 800f800:	428a      	cmp	r2, r1
 800f802:	d1fa      	bne.n	800f7fa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f804:	698a      	ldr	r2, [r1, #24]
 800f806:	619a      	str	r2, [r3, #24]
 800f808:	2300      	movs	r3, #0
 800f80a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f80e:	4770      	bx	lr

0800f810 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f810:	b410      	push	{r4}
 800f812:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f814:	4604      	mov	r4, r0
 800f816:	b92b      	cbnz	r3, 800f824 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f818:	6803      	ldr	r3, [r0, #0]
 800f81a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f81e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f820:	4611      	mov	r1, r2
 800f822:	4718      	bx	r3
 800f824:	b941      	cbnz	r1, 800f838 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f826:	6193      	str	r3, [r2, #24]
 800f828:	6282      	str	r2, [r0, #40]	; 0x28
 800f82a:	6154      	str	r4, [r2, #20]
 800f82c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f830:	4770      	bx	lr
 800f832:	4603      	mov	r3, r0
 800f834:	2800      	cmp	r0, #0
 800f836:	d0f9      	beq.n	800f82c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f838:	4299      	cmp	r1, r3
 800f83a:	6998      	ldr	r0, [r3, #24]
 800f83c:	d1f9      	bne.n	800f832 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f83e:	6190      	str	r0, [r2, #24]
 800f840:	618a      	str	r2, [r1, #24]
 800f842:	e7f2      	b.n	800f82a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800f844 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800f844:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f848:	461f      	mov	r7, r3
 800f84a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800f84e:	460d      	mov	r5, r1
 800f850:	4616      	mov	r6, r2
 800f852:	b103      	cbz	r3, 800f856 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800f854:	6038      	str	r0, [r7, #0]
 800f856:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f858:	b314      	cbz	r4, 800f8a0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800f85a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f85e:	b1eb      	cbz	r3, 800f89c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f860:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f864:	428d      	cmp	r5, r1
 800f866:	db19      	blt.n	800f89c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f868:	8923      	ldrh	r3, [r4, #8]
 800f86a:	b289      	uxth	r1, r1
 800f86c:	440b      	add	r3, r1
 800f86e:	b21b      	sxth	r3, r3
 800f870:	429d      	cmp	r5, r3
 800f872:	da13      	bge.n	800f89c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f874:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f878:	4296      	cmp	r6, r2
 800f87a:	db0f      	blt.n	800f89c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f87c:	8963      	ldrh	r3, [r4, #10]
 800f87e:	b292      	uxth	r2, r2
 800f880:	4413      	add	r3, r2
 800f882:	b21b      	sxth	r3, r3
 800f884:	429e      	cmp	r6, r3
 800f886:	da09      	bge.n	800f89c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f888:	6823      	ldr	r3, [r4, #0]
 800f88a:	1ab2      	subs	r2, r6, r2
 800f88c:	1a69      	subs	r1, r5, r1
 800f88e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800f892:	b212      	sxth	r2, r2
 800f894:	463b      	mov	r3, r7
 800f896:	b209      	sxth	r1, r1
 800f898:	4620      	mov	r0, r4
 800f89a:	47c0      	blx	r8
 800f89c:	69a4      	ldr	r4, [r4, #24]
 800f89e:	e7db      	b.n	800f858 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800f8a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f8a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800f8a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f8a8:	4c6e      	ldr	r4, [pc, #440]	; (800fa64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800f8aa:	b0a1      	sub	sp, #132	; 0x84
 800f8ac:	6824      	ldr	r4, [r4, #0]
 800f8ae:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800f8b0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800f8b4:	9303      	str	r3, [sp, #12]
 800f8b6:	2400      	movs	r4, #0
 800f8b8:	802c      	strh	r4, [r5, #0]
 800f8ba:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800f8bc:	802c      	strh	r4, [r5, #0]
 800f8be:	601c      	str	r4, [r3, #0]
 800f8c0:	4606      	mov	r6, r0
 800f8c2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f8c6:	f7ff ffbd 	bl	800f844 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f8ca:	f1b9 0f03 	cmp.w	r9, #3
 800f8ce:	f340 80c2 	ble.w	800fa56 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800f8d2:	4631      	mov	r1, r6
 800f8d4:	a80c      	add	r0, sp, #48	; 0x30
 800f8d6:	f006 fc63 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f8da:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800f8de:	9306      	str	r3, [sp, #24]
 800f8e0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f8e4:	9307      	str	r3, [sp, #28]
 800f8e6:	9b03      	ldr	r3, [sp, #12]
 800f8e8:	f8d3 a000 	ldr.w	sl, [r3]
 800f8ec:	f1ba 0f00 	cmp.w	sl, #0
 800f8f0:	f000 80b4 	beq.w	800fa5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800f8f4:	4651      	mov	r1, sl
 800f8f6:	a810      	add	r0, sp, #64	; 0x40
 800f8f8:	f006 fc52 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f8fc:	9b01      	ldr	r3, [sp, #4]
 800f8fe:	9a06      	ldr	r2, [sp, #24]
 800f900:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800f904:	189d      	adds	r5, r3, r2
 800f906:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800f90a:	9a07      	ldr	r2, [sp, #28]
 800f90c:	2002      	movs	r0, #2
 800f90e:	fb91 f1f0 	sdiv	r1, r1, r0
 800f912:	4419      	add	r1, r3
 800f914:	1a6d      	subs	r5, r5, r1
 800f916:	9b02      	ldr	r3, [sp, #8]
 800f918:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f91c:	4413      	add	r3, r2
 800f91e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800f922:	fb92 f2f0 	sdiv	r2, r2, r0
 800f926:	440a      	add	r2, r1
 800f928:	1a9b      	subs	r3, r3, r2
 800f92a:	435b      	muls	r3, r3
 800f92c:	fb05 3505 	mla	r5, r5, r5, r3
 800f930:	4f4d      	ldr	r7, [pc, #308]	; (800fa68 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800f932:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f934:	ac10      	add	r4, sp, #64	; 0x40
 800f936:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f938:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f93a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f93c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f93e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f940:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800f944:	f1b9 0f0c 	cmp.w	r9, #12
 800f948:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f94c:	f04f 0303 	mov.w	r3, #3
 800f950:	bfc8      	it	gt
 800f952:	4698      	movgt	r8, r3
 800f954:	f8cd 9000 	str.w	r9, [sp]
 800f958:	f04f 0400 	mov.w	r4, #0
 800f95c:	bfdc      	itt	le
 800f95e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800f962:	fb92 f8f3 	sdivle	r8, r2, r3
 800f966:	1c63      	adds	r3, r4, #1
 800f968:	aa10      	add	r2, sp, #64	; 0x40
 800f96a:	f004 0401 	and.w	r4, r4, #1
 800f96e:	9308      	str	r3, [sp, #32]
 800f970:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800f974:	9b00      	ldr	r3, [sp, #0]
 800f976:	fb93 f3f8 	sdiv	r3, r3, r8
 800f97a:	b29b      	uxth	r3, r3
 800f97c:	3404      	adds	r4, #4
 800f97e:	f04f 0b00 	mov.w	fp, #0
 800f982:	9304      	str	r3, [sp, #16]
 800f984:	9a04      	ldr	r2, [sp, #16]
 800f986:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f98a:	fb13 f302 	smulbb	r3, r3, r2
 800f98e:	9a01      	ldr	r2, [sp, #4]
 800f990:	b29b      	uxth	r3, r3
 800f992:	1899      	adds	r1, r3, r2
 800f994:	9305      	str	r3, [sp, #20]
 800f996:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f99a:	b209      	sxth	r1, r1
 800f99c:	4299      	cmp	r1, r3
 800f99e:	db4d      	blt.n	800fa3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f9a0:	8932      	ldrh	r2, [r6, #8]
 800f9a2:	4413      	add	r3, r2
 800f9a4:	b21b      	sxth	r3, r3
 800f9a6:	4299      	cmp	r1, r3
 800f9a8:	da48      	bge.n	800fa3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f9aa:	9b04      	ldr	r3, [sp, #16]
 800f9ac:	6827      	ldr	r7, [r4, #0]
 800f9ae:	fb17 f703 	smulbb	r7, r7, r3
 800f9b2:	9b02      	ldr	r3, [sp, #8]
 800f9b4:	b2bf      	uxth	r7, r7
 800f9b6:	18fa      	adds	r2, r7, r3
 800f9b8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f9bc:	b212      	sxth	r2, r2
 800f9be:	429a      	cmp	r2, r3
 800f9c0:	db3c      	blt.n	800fa3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f9c2:	8970      	ldrh	r0, [r6, #10]
 800f9c4:	4403      	add	r3, r0
 800f9c6:	b21b      	sxth	r3, r3
 800f9c8:	429a      	cmp	r2, r3
 800f9ca:	da37      	bge.n	800fa3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f9cc:	2300      	movs	r3, #0
 800f9ce:	930b      	str	r3, [sp, #44]	; 0x2c
 800f9d0:	4630      	mov	r0, r6
 800f9d2:	ab0b      	add	r3, sp, #44	; 0x2c
 800f9d4:	f7ff ff36 	bl	800f844 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f9d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f9da:	b37a      	cbz	r2, 800fa3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f9dc:	4552      	cmp	r2, sl
 800f9de:	d02d      	beq.n	800fa3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f9e0:	4611      	mov	r1, r2
 800f9e2:	a80e      	add	r0, sp, #56	; 0x38
 800f9e4:	9209      	str	r2, [sp, #36]	; 0x24
 800f9e6:	f006 fbdb 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f9ea:	9a06      	ldr	r2, [sp, #24]
 800f9ec:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800f9f0:	9b01      	ldr	r3, [sp, #4]
 800f9f2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800f9f6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800f9fa:	4413      	add	r3, r2
 800f9fc:	f04f 0e02 	mov.w	lr, #2
 800fa00:	fb91 f1fe 	sdiv	r1, r1, lr
 800fa04:	4401      	add	r1, r0
 800fa06:	1a58      	subs	r0, r3, r1
 800fa08:	9a07      	ldr	r2, [sp, #28]
 800fa0a:	9b02      	ldr	r3, [sp, #8]
 800fa0c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800fa10:	fb9c fcfe 	sdiv	ip, ip, lr
 800fa14:	4413      	add	r3, r2
 800fa16:	448c      	add	ip, r1
 800fa18:	eba3 030c 	sub.w	r3, r3, ip
 800fa1c:	435b      	muls	r3, r3
 800fa1e:	fb00 3300 	mla	r3, r0, r0, r3
 800fa22:	42ab      	cmp	r3, r5
 800fa24:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fa26:	d208      	bcs.n	800fa3a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800fa28:	9803      	ldr	r0, [sp, #12]
 800fa2a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800fa2c:	6001      	str	r1, [r0, #0]
 800fa2e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800fa30:	9805      	ldr	r0, [sp, #20]
 800fa32:	8008      	strh	r0, [r1, #0]
 800fa34:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fa36:	461d      	mov	r5, r3
 800fa38:	800f      	strh	r7, [r1, #0]
 800fa3a:	4692      	mov	sl, r2
 800fa3c:	f10b 0b01 	add.w	fp, fp, #1
 800fa40:	f1bb 0f04 	cmp.w	fp, #4
 800fa44:	f104 0408 	add.w	r4, r4, #8
 800fa48:	d19c      	bne.n	800f984 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800fa4a:	9b00      	ldr	r3, [sp, #0]
 800fa4c:	9c08      	ldr	r4, [sp, #32]
 800fa4e:	444b      	add	r3, r9
 800fa50:	4544      	cmp	r4, r8
 800fa52:	9300      	str	r3, [sp, #0]
 800fa54:	d187      	bne.n	800f966 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800fa56:	b021      	add	sp, #132	; 0x84
 800fa58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa5c:	f04f 35ff 	mov.w	r5, #4294967295
 800fa60:	e766      	b.n	800f930 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800fa62:	bf00      	nop
 800fa64:	2000ef1c 	.word	0x2000ef1c
 800fa68:	08027868 	.word	0x08027868

0800fa6c <_ZN8touchgfx4RectaNERKS0_>:
 800fa6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fa70:	f9b1 7000 	ldrsh.w	r7, [r1]
 800fa74:	888c      	ldrh	r4, [r1, #4]
 800fa76:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fa7a:	443c      	add	r4, r7
 800fa7c:	b2a4      	uxth	r4, r4
 800fa7e:	fa0f f884 	sxth.w	r8, r4
 800fa82:	45c1      	cmp	r9, r8
 800fa84:	da2f      	bge.n	800fae6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fa86:	8882      	ldrh	r2, [r0, #4]
 800fa88:	444a      	add	r2, r9
 800fa8a:	b292      	uxth	r2, r2
 800fa8c:	fa0f fe82 	sxth.w	lr, r2
 800fa90:	4577      	cmp	r7, lr
 800fa92:	da28      	bge.n	800fae6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fa94:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800fa98:	88cb      	ldrh	r3, [r1, #6]
 800fa9a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800fa9e:	442b      	add	r3, r5
 800faa0:	b21b      	sxth	r3, r3
 800faa2:	429e      	cmp	r6, r3
 800faa4:	da1f      	bge.n	800fae6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800faa6:	88c3      	ldrh	r3, [r0, #6]
 800faa8:	4433      	add	r3, r6
 800faaa:	b29b      	uxth	r3, r3
 800faac:	fa0f fc83 	sxth.w	ip, r3
 800fab0:	4565      	cmp	r5, ip
 800fab2:	da18      	bge.n	800fae6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fab4:	454f      	cmp	r7, r9
 800fab6:	bfb8      	it	lt
 800fab8:	464f      	movlt	r7, r9
 800faba:	42b5      	cmp	r5, r6
 800fabc:	bfb8      	it	lt
 800fabe:	4635      	movlt	r5, r6
 800fac0:	45f0      	cmp	r8, lr
 800fac2:	bfd8      	it	le
 800fac4:	4622      	movle	r2, r4
 800fac6:	1bd2      	subs	r2, r2, r7
 800fac8:	8082      	strh	r2, [r0, #4]
 800faca:	884a      	ldrh	r2, [r1, #2]
 800facc:	88c9      	ldrh	r1, [r1, #6]
 800face:	8007      	strh	r7, [r0, #0]
 800fad0:	440a      	add	r2, r1
 800fad2:	b292      	uxth	r2, r2
 800fad4:	b211      	sxth	r1, r2
 800fad6:	458c      	cmp	ip, r1
 800fad8:	bfa8      	it	ge
 800fada:	4613      	movge	r3, r2
 800fadc:	1b5b      	subs	r3, r3, r5
 800fade:	80c3      	strh	r3, [r0, #6]
 800fae0:	8045      	strh	r5, [r0, #2]
 800fae2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fae6:	2300      	movs	r3, #0
 800fae8:	8003      	strh	r3, [r0, #0]
 800faea:	8043      	strh	r3, [r0, #2]
 800faec:	8083      	strh	r3, [r0, #4]
 800faee:	80c3      	strh	r3, [r0, #6]
 800faf0:	e7f7      	b.n	800fae2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800faf2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800faf6:	2b00      	cmp	r3, #0
 800faf8:	dd06      	ble.n	800fb08 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800fafa:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800fafe:	2800      	cmp	r0, #0
 800fb00:	bfcc      	ite	gt
 800fb02:	2000      	movgt	r0, #0
 800fb04:	2001      	movle	r0, #1
 800fb06:	4770      	bx	lr
 800fb08:	2001      	movs	r0, #1
 800fb0a:	4770      	bx	lr

0800fb0c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800fb0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb10:	2300      	movs	r3, #0
 800fb12:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800fb14:	8003      	strh	r3, [r0, #0]
 800fb16:	4604      	mov	r4, r0
 800fb18:	8043      	strh	r3, [r0, #2]
 800fb1a:	8083      	strh	r3, [r0, #4]
 800fb1c:	80c3      	strh	r3, [r0, #6]
 800fb1e:	2d00      	cmp	r5, #0
 800fb20:	d040      	beq.n	800fba4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800fb22:	1d28      	adds	r0, r5, #4
 800fb24:	f7ff ffe5 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fb28:	b988      	cbnz	r0, 800fb4e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fb2a:	4620      	mov	r0, r4
 800fb2c:	f7ff ffe1 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fb30:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800fb34:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800fb38:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800fb3c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800fb40:	b138      	cbz	r0, 800fb52 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800fb42:	8022      	strh	r2, [r4, #0]
 800fb44:	8063      	strh	r3, [r4, #2]
 800fb46:	f8a4 e004 	strh.w	lr, [r4, #4]
 800fb4a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fb4e:	69ad      	ldr	r5, [r5, #24]
 800fb50:	e7e5      	b.n	800fb1e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800fb52:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fb56:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb5a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800fb5e:	4290      	cmp	r0, r2
 800fb60:	4607      	mov	r7, r0
 800fb62:	bfa8      	it	ge
 800fb64:	4617      	movge	r7, r2
 800fb66:	4472      	add	r2, lr
 800fb68:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800fb6c:	8027      	strh	r7, [r4, #0]
 800fb6e:	4299      	cmp	r1, r3
 800fb70:	460e      	mov	r6, r1
 800fb72:	4440      	add	r0, r8
 800fb74:	bfa8      	it	ge
 800fb76:	461e      	movge	r6, r3
 800fb78:	4471      	add	r1, lr
 800fb7a:	4463      	add	r3, ip
 800fb7c:	b200      	sxth	r0, r0
 800fb7e:	b212      	sxth	r2, r2
 800fb80:	b209      	sxth	r1, r1
 800fb82:	b21b      	sxth	r3, r3
 800fb84:	4290      	cmp	r0, r2
 800fb86:	bfac      	ite	ge
 800fb88:	ebc7 0200 	rsbge	r2, r7, r0
 800fb8c:	ebc7 0202 	rsblt	r2, r7, r2
 800fb90:	4299      	cmp	r1, r3
 800fb92:	bfac      	ite	ge
 800fb94:	ebc6 0301 	rsbge	r3, r6, r1
 800fb98:	ebc6 0303 	rsblt	r3, r6, r3
 800fb9c:	8066      	strh	r6, [r4, #2]
 800fb9e:	80a2      	strh	r2, [r4, #4]
 800fba0:	80e3      	strh	r3, [r4, #6]
 800fba2:	e7d4      	b.n	800fb4e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fba4:	4620      	mov	r0, r4
 800fba6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fbaa <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800fbaa:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800fbae:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fbb2:	b383      	cbz	r3, 800fc16 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fbb4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fbb6:	b374      	cbz	r4, 800fc16 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fbb8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800fbbc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800fbc0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800fbc4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800fbc8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fbcc:	b303      	cbz	r3, 800fc10 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fbce:	4668      	mov	r0, sp
 800fbd0:	1d21      	adds	r1, r4, #4
 800fbd2:	f8ad 5000 	strh.w	r5, [sp]
 800fbd6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800fbda:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fbde:	f8ad 8006 	strh.w	r8, [sp, #6]
 800fbe2:	f7ff ff43 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 800fbe6:	4668      	mov	r0, sp
 800fbe8:	f7ff ff83 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fbec:	b980      	cbnz	r0, 800fc10 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fbee:	f8bd 3000 	ldrh.w	r3, [sp]
 800fbf2:	88a2      	ldrh	r2, [r4, #4]
 800fbf4:	1a9b      	subs	r3, r3, r2
 800fbf6:	f8ad 3000 	strh.w	r3, [sp]
 800fbfa:	88e2      	ldrh	r2, [r4, #6]
 800fbfc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fc00:	1a9b      	subs	r3, r3, r2
 800fc02:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fc06:	6823      	ldr	r3, [r4, #0]
 800fc08:	4669      	mov	r1, sp
 800fc0a:	689b      	ldr	r3, [r3, #8]
 800fc0c:	4620      	mov	r0, r4
 800fc0e:	4798      	blx	r3
 800fc10:	69a4      	ldr	r4, [r4, #24]
 800fc12:	2c00      	cmp	r4, #0
 800fc14:	d1d8      	bne.n	800fbc8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800fc16:	b002      	add	sp, #8
 800fc18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fc1c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800fc1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fc1e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fc22:	460d      	mov	r5, r1
 800fc24:	4616      	mov	r6, r2
 800fc26:	b323      	cbz	r3, 800fc72 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fc28:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fc2a:	b314      	cbz	r4, 800fc72 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fc2c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fc30:	b1eb      	cbz	r3, 800fc6e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fc32:	6828      	ldr	r0, [r5, #0]
 800fc34:	6869      	ldr	r1, [r5, #4]
 800fc36:	466b      	mov	r3, sp
 800fc38:	c303      	stmia	r3!, {r0, r1}
 800fc3a:	4668      	mov	r0, sp
 800fc3c:	1d21      	adds	r1, r4, #4
 800fc3e:	f7ff ff15 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 800fc42:	4668      	mov	r0, sp
 800fc44:	f7ff ff55 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fc48:	b988      	cbnz	r0, 800fc6e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fc4a:	f8bd 3000 	ldrh.w	r3, [sp]
 800fc4e:	88a2      	ldrh	r2, [r4, #4]
 800fc50:	1a9b      	subs	r3, r3, r2
 800fc52:	f8ad 3000 	strh.w	r3, [sp]
 800fc56:	88e2      	ldrh	r2, [r4, #6]
 800fc58:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fc5c:	1a9b      	subs	r3, r3, r2
 800fc5e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fc62:	6823      	ldr	r3, [r4, #0]
 800fc64:	4632      	mov	r2, r6
 800fc66:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800fc68:	4669      	mov	r1, sp
 800fc6a:	4620      	mov	r0, r4
 800fc6c:	4798      	blx	r3
 800fc6e:	69a4      	ldr	r4, [r4, #24]
 800fc70:	e7db      	b.n	800fc2a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800fc72:	b002      	add	sp, #8
 800fc74:	bd70      	pop	{r4, r5, r6, pc}

0800fc76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800fc76:	b513      	push	{r0, r1, r4, lr}
 800fc78:	6803      	ldr	r3, [r0, #0]
 800fc7a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800fc7e:	2300      	movs	r3, #0
 800fc80:	e9cd 3300 	strd	r3, r3, [sp]
 800fc84:	466b      	mov	r3, sp
 800fc86:	47a0      	blx	r4
 800fc88:	b002      	add	sp, #8
 800fc8a:	bd10      	pop	{r4, pc}

0800fc8c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800fc8c:	2301      	movs	r3, #1
 800fc8e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fc92:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fc96:	4770      	bx	lr

0800fc98 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800fc98:	2301      	movs	r3, #1
 800fc9a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fc9e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fca2:	4770      	bx	lr

0800fca4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800fca4:	6843      	ldr	r3, [r0, #4]
 800fca6:	2201      	movs	r2, #1
 800fca8:	725a      	strb	r2, [r3, #9]
 800fcaa:	6840      	ldr	r0, [r0, #4]
 800fcac:	6803      	ldr	r3, [r0, #0]
 800fcae:	691b      	ldr	r3, [r3, #16]
 800fcb0:	4718      	bx	r3

0800fcb2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800fcb2:	6840      	ldr	r0, [r0, #4]
 800fcb4:	6803      	ldr	r3, [r0, #0]
 800fcb6:	689b      	ldr	r3, [r3, #8]
 800fcb8:	4718      	bx	r3

0800fcba <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800fcba:	b530      	push	{r4, r5, lr}
 800fcbc:	b08b      	sub	sp, #44	; 0x2c
 800fcbe:	6804      	ldr	r4, [r0, #0]
 800fcc0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800fcc4:	9509      	str	r5, [sp, #36]	; 0x24
 800fcc6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800fcca:	9508      	str	r5, [sp, #32]
 800fccc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800fcd0:	9507      	str	r5, [sp, #28]
 800fcd2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800fcd6:	9506      	str	r5, [sp, #24]
 800fcd8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800fcdc:	9505      	str	r5, [sp, #20]
 800fcde:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800fce2:	9504      	str	r5, [sp, #16]
 800fce4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800fce8:	9503      	str	r5, [sp, #12]
 800fcea:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800fcee:	9502      	str	r5, [sp, #8]
 800fcf0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800fcf4:	e9cd 3500 	strd	r3, r5, [sp]
 800fcf8:	4613      	mov	r3, r2
 800fcfa:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800fcfc:	2200      	movs	r2, #0
 800fcfe:	47a0      	blx	r4
 800fd00:	b00b      	add	sp, #44	; 0x2c
 800fd02:	bd30      	pop	{r4, r5, pc}

0800fd04 <_ZN8touchgfx3HAL10beginFrameEv>:
 800fd04:	4b04      	ldr	r3, [pc, #16]	; (800fd18 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800fd06:	781b      	ldrb	r3, [r3, #0]
 800fd08:	b123      	cbz	r3, 800fd14 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800fd0a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800fd0e:	f080 0001 	eor.w	r0, r0, #1
 800fd12:	4770      	bx	lr
 800fd14:	2001      	movs	r0, #1
 800fd16:	4770      	bx	lr
 800fd18:	2000ef1a 	.word	0x2000ef1a

0800fd1c <_ZN8touchgfx3HAL8endFrameEv>:
 800fd1c:	b510      	push	{r4, lr}
 800fd1e:	4604      	mov	r4, r0
 800fd20:	6840      	ldr	r0, [r0, #4]
 800fd22:	6803      	ldr	r3, [r0, #0]
 800fd24:	689b      	ldr	r3, [r3, #8]
 800fd26:	4798      	blx	r3
 800fd28:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800fd2c:	b113      	cbz	r3, 800fd34 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800fd2e:	2301      	movs	r3, #1
 800fd30:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800fd34:	bd10      	pop	{r4, pc}

0800fd36 <_ZN8touchgfx3HAL10initializeEv>:
 800fd36:	b510      	push	{r4, lr}
 800fd38:	4604      	mov	r4, r0
 800fd3a:	f7f1 fb85 	bl	8001448 <_ZN8touchgfx10OSWrappers10initializeEv>
 800fd3e:	f7f1 f93d 	bl	8000fbc <_ZN8touchgfx4GPIO4initEv>
 800fd42:	6860      	ldr	r0, [r4, #4]
 800fd44:	6803      	ldr	r3, [r0, #0]
 800fd46:	68db      	ldr	r3, [r3, #12]
 800fd48:	4798      	blx	r3
 800fd4a:	68e0      	ldr	r0, [r4, #12]
 800fd4c:	6803      	ldr	r3, [r0, #0]
 800fd4e:	689b      	ldr	r3, [r3, #8]
 800fd50:	4798      	blx	r3
 800fd52:	6823      	ldr	r3, [r4, #0]
 800fd54:	4620      	mov	r0, r4
 800fd56:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800fd58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fd5c:	4718      	bx	r3
	...

0800fd60 <_ZN8touchgfx3HAL4tickEv>:
 800fd60:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fd62:	6803      	ldr	r3, [r0, #0]
 800fd64:	4d5b      	ldr	r5, [pc, #364]	; (800fed4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800fd66:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fd6a:	4604      	mov	r4, r0
 800fd6c:	4798      	blx	r3
 800fd6e:	2800      	cmp	r0, #0
 800fd70:	f000 8095 	beq.w	800fe9e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800fd74:	2001      	movs	r0, #1
 800fd76:	f7f1 f88f 	bl	8000e98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800fd7a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800fd7e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fd82:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800fd86:	2600      	movs	r6, #0
 800fd88:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800fd8c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800fd90:	b133      	cbz	r3, 800fda0 <_ZN8touchgfx3HAL4tickEv+0x40>
 800fd92:	6823      	ldr	r3, [r4, #0]
 800fd94:	4620      	mov	r0, r4
 800fd96:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800fd9a:	4798      	blx	r3
 800fd9c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800fda0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800fda4:	6862      	ldr	r2, [r4, #4]
 800fda6:	f083 0301 	eor.w	r3, r3, #1
 800fdaa:	7253      	strb	r3, [r2, #9]
 800fdac:	2601      	movs	r6, #1
 800fdae:	702e      	strb	r6, [r5, #0]
 800fdb0:	f005 f872 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
 800fdb4:	6803      	ldr	r3, [r0, #0]
 800fdb6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fdb8:	4798      	blx	r3
 800fdba:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fdbe:	b90b      	cbnz	r3, 800fdc4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fdc0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800fdc4:	f005 f868 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
 800fdc8:	6803      	ldr	r3, [r0, #0]
 800fdca:	695b      	ldr	r3, [r3, #20]
 800fdcc:	4798      	blx	r3
 800fdce:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fdd0:	6803      	ldr	r3, [r0, #0]
 800fdd2:	691b      	ldr	r3, [r3, #16]
 800fdd4:	4798      	blx	r3
 800fdd6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fdda:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800fdde:	3b01      	subs	r3, #1
 800fde0:	b2db      	uxtb	r3, r3
 800fde2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fde6:	b10a      	cbz	r2, 800fdec <_ZN8touchgfx3HAL4tickEv+0x8c>
 800fde8:	2b00      	cmp	r3, #0
 800fdea:	d1eb      	bne.n	800fdc4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fdec:	4a3a      	ldr	r2, [pc, #232]	; (800fed8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800fdee:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800fdf2:	7813      	ldrb	r3, [r2, #0]
 800fdf4:	3301      	adds	r3, #1
 800fdf6:	b25b      	sxtb	r3, r3
 800fdf8:	4299      	cmp	r1, r3
 800fdfa:	7013      	strb	r3, [r2, #0]
 800fdfc:	dc10      	bgt.n	800fe20 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fdfe:	68e0      	ldr	r0, [r4, #12]
 800fe00:	2300      	movs	r3, #0
 800fe02:	7013      	strb	r3, [r2, #0]
 800fe04:	6803      	ldr	r3, [r0, #0]
 800fe06:	aa03      	add	r2, sp, #12
 800fe08:	68db      	ldr	r3, [r3, #12]
 800fe0a:	a902      	add	r1, sp, #8
 800fe0c:	4798      	blx	r3
 800fe0e:	6823      	ldr	r3, [r4, #0]
 800fe10:	2800      	cmp	r0, #0
 800fe12:	d050      	beq.n	800feb6 <_ZN8touchgfx3HAL4tickEv+0x156>
 800fe14:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fe18:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800fe1c:	4620      	mov	r0, r4
 800fe1e:	4798      	blx	r3
 800fe20:	6960      	ldr	r0, [r4, #20]
 800fe22:	2300      	movs	r3, #0
 800fe24:	f88d 3007 	strb.w	r3, [sp, #7]
 800fe28:	b158      	cbz	r0, 800fe42 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fe2a:	6803      	ldr	r3, [r0, #0]
 800fe2c:	f10d 0107 	add.w	r1, sp, #7
 800fe30:	68db      	ldr	r3, [r3, #12]
 800fe32:	4798      	blx	r3
 800fe34:	b128      	cbz	r0, 800fe42 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fe36:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fe38:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800fe3c:	6803      	ldr	r3, [r0, #0]
 800fe3e:	68db      	ldr	r3, [r3, #12]
 800fe40:	4798      	blx	r3
 800fe42:	f104 001c 	add.w	r0, r4, #28
 800fe46:	f015 ffbd 	bl	8025dc4 <_ZN8touchgfx8Gestures4tickEv>
 800fe4a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800fe4e:	b30b      	cbz	r3, 800fe94 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fe50:	6920      	ldr	r0, [r4, #16]
 800fe52:	6803      	ldr	r3, [r0, #0]
 800fe54:	691b      	ldr	r3, [r3, #16]
 800fe56:	4798      	blx	r3
 800fe58:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fe5a:	4606      	mov	r6, r0
 800fe5c:	b903      	cbnz	r3, 800fe60 <_ZN8touchgfx3HAL4tickEv+0x100>
 800fe5e:	6760      	str	r0, [r4, #116]	; 0x74
 800fe60:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fe62:	4a1e      	ldr	r2, [pc, #120]	; (800fedc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800fe64:	1af3      	subs	r3, r6, r3
 800fe66:	4293      	cmp	r3, r2
 800fe68:	d914      	bls.n	800fe94 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fe6a:	6920      	ldr	r0, [r4, #16]
 800fe6c:	6803      	ldr	r3, [r0, #0]
 800fe6e:	699b      	ldr	r3, [r3, #24]
 800fe70:	4798      	blx	r3
 800fe72:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fe74:	2264      	movs	r2, #100	; 0x64
 800fe76:	1af3      	subs	r3, r6, r3
 800fe78:	fbb3 f3f2 	udiv	r3, r3, r2
 800fe7c:	fbb0 f0f3 	udiv	r0, r0, r3
 800fe80:	2800      	cmp	r0, #0
 800fe82:	dc1d      	bgt.n	800fec0 <_ZN8touchgfx3HAL4tickEv+0x160>
 800fe84:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800fe88:	6920      	ldr	r0, [r4, #16]
 800fe8a:	6803      	ldr	r3, [r0, #0]
 800fe8c:	2100      	movs	r1, #0
 800fe8e:	69db      	ldr	r3, [r3, #28]
 800fe90:	4798      	blx	r3
 800fe92:	6766      	str	r6, [r4, #116]	; 0x74
 800fe94:	f005 f800 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
 800fe98:	6803      	ldr	r3, [r0, #0]
 800fe9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fe9c:	4798      	blx	r3
 800fe9e:	6823      	ldr	r3, [r4, #0]
 800fea0:	4620      	mov	r0, r4
 800fea2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fea6:	4798      	blx	r3
 800fea8:	2001      	movs	r0, #1
 800feaa:	f7f1 f823 	bl	8000ef4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800feae:	2300      	movs	r3, #0
 800feb0:	702b      	strb	r3, [r5, #0]
 800feb2:	b004      	add	sp, #16
 800feb4:	bd70      	pop	{r4, r5, r6, pc}
 800feb6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800feba:	4620      	mov	r0, r4
 800febc:	4798      	blx	r3
 800febe:	e7af      	b.n	800fe20 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fec0:	2863      	cmp	r0, #99	; 0x63
 800fec2:	bfcb      	itete	gt
 800fec4:	2300      	movgt	r3, #0
 800fec6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800feca:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800fece:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800fed2:	e7d9      	b.n	800fe88 <_ZN8touchgfx3HAL4tickEv+0x128>
 800fed4:	2000ef20 	.word	0x2000ef20
 800fed8:	2000ef21 	.word	0x2000ef21
 800fedc:	05f5e100 	.word	0x05f5e100

0800fee0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800fee0:	b510      	push	{r4, lr}
 800fee2:	4604      	mov	r4, r0
 800fee4:	f7f1 fae0 	bl	80014a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800fee8:	6863      	ldr	r3, [r4, #4]
 800feea:	2200      	movs	r2, #0
 800feec:	729a      	strb	r2, [r3, #10]
 800feee:	bd10      	pop	{r4, pc}

0800fef0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800fef0:	65c1      	str	r1, [r0, #92]	; 0x5c
 800fef2:	301c      	adds	r0, #28
 800fef4:	f015 bf64 	b.w	8025dc0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800fef8 <_ZN8touchgfx3HAL5touchEll>:
 800fef8:	b530      	push	{r4, r5, lr}
 800fefa:	b087      	sub	sp, #28
 800fefc:	4604      	mov	r4, r0
 800fefe:	a804      	add	r0, sp, #16
 800ff00:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800ff04:	f004 fd94 	bl	8014a30 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800ff08:	9b04      	ldr	r3, [sp, #16]
 800ff0a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ff0e:	a906      	add	r1, sp, #24
 800ff10:	9b05      	ldr	r3, [sp, #20]
 800ff12:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800ff16:	a803      	add	r0, sp, #12
 800ff18:	f004 fddc 	bl	8014ad4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800ff1c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800ff20:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ff24:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800ff28:	f104 001c 	add.w	r0, r4, #28
 800ff2c:	b189      	cbz	r1, 800ff52 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800ff2e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800ff32:	9300      	str	r3, [sp, #0]
 800ff34:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800ff38:	4613      	mov	r3, r2
 800ff3a:	462a      	mov	r2, r5
 800ff3c:	f015 ff50 	bl	8025de0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800ff40:	b128      	cbz	r0, 800ff4e <_ZN8touchgfx3HAL5touchEll+0x56>
 800ff42:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ff46:	6623      	str	r3, [r4, #96]	; 0x60
 800ff48:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ff4c:	6663      	str	r3, [r4, #100]	; 0x64
 800ff4e:	b007      	add	sp, #28
 800ff50:	bd30      	pop	{r4, r5, pc}
 800ff52:	f015 ff85 	bl	8025e60 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ff56:	2301      	movs	r3, #1
 800ff58:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800ff5c:	e7f1      	b.n	800ff42 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800ff5e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800ff5e:	b510      	push	{r4, lr}
 800ff60:	2b00      	cmp	r3, #0
 800ff62:	d046      	beq.n	800fff2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ff64:	ea81 0002 	eor.w	r0, r1, r2
 800ff68:	07c4      	lsls	r4, r0, #31
 800ff6a:	d508      	bpl.n	800ff7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800ff6c:	440b      	add	r3, r1
 800ff6e:	3a01      	subs	r2, #1
 800ff70:	428b      	cmp	r3, r1
 800ff72:	d93e      	bls.n	800fff2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ff74:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ff78:	f801 0b01 	strb.w	r0, [r1], #1
 800ff7c:	e7f8      	b.n	800ff70 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800ff7e:	07d0      	lsls	r0, r2, #31
 800ff80:	bf42      	ittt	mi
 800ff82:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800ff86:	f801 0b01 	strbmi.w	r0, [r1], #1
 800ff8a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800ff8e:	2b01      	cmp	r3, #1
 800ff90:	d911      	bls.n	800ffb6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ff92:	ea81 0402 	eor.w	r4, r1, r2
 800ff96:	07a4      	lsls	r4, r4, #30
 800ff98:	4610      	mov	r0, r2
 800ff9a:	d022      	beq.n	800ffe2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800ff9c:	f023 0401 	bic.w	r4, r3, #1
 800ffa0:	440c      	add	r4, r1
 800ffa2:	428c      	cmp	r4, r1
 800ffa4:	4602      	mov	r2, r0
 800ffa6:	d904      	bls.n	800ffb2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800ffa8:	8812      	ldrh	r2, [r2, #0]
 800ffaa:	f821 2b02 	strh.w	r2, [r1], #2
 800ffae:	3002      	adds	r0, #2
 800ffb0:	e7f7      	b.n	800ffa2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800ffb2:	f003 0301 	and.w	r3, r3, #1
 800ffb6:	f023 0003 	bic.w	r0, r3, #3
 800ffba:	4408      	add	r0, r1
 800ffbc:	4288      	cmp	r0, r1
 800ffbe:	4614      	mov	r4, r2
 800ffc0:	d904      	bls.n	800ffcc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800ffc2:	6824      	ldr	r4, [r4, #0]
 800ffc4:	f841 4b04 	str.w	r4, [r1], #4
 800ffc8:	3204      	adds	r2, #4
 800ffca:	e7f7      	b.n	800ffbc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800ffcc:	f003 0303 	and.w	r3, r3, #3
 800ffd0:	440b      	add	r3, r1
 800ffd2:	3a01      	subs	r2, #1
 800ffd4:	428b      	cmp	r3, r1
 800ffd6:	d90c      	bls.n	800fff2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ffd8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ffdc:	f801 0b01 	strb.w	r0, [r1], #1
 800ffe0:	e7f8      	b.n	800ffd4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800ffe2:	0790      	lsls	r0, r2, #30
 800ffe4:	d0e7      	beq.n	800ffb6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ffe6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800ffea:	f821 0b02 	strh.w	r0, [r1], #2
 800ffee:	3b02      	subs	r3, #2
 800fff0:	e7e1      	b.n	800ffb6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fff2:	2001      	movs	r0, #1
 800fff4:	bd10      	pop	{r4, pc}

0800fff6 <_ZN8touchgfx3HAL7noTouchEv>:
 800fff6:	b510      	push	{r4, lr}
 800fff8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800fffc:	4604      	mov	r4, r0
 800fffe:	b153      	cbz	r3, 8010016 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010000:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8010004:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8010008:	2101      	movs	r1, #1
 801000a:	301c      	adds	r0, #28
 801000c:	f015 ff28 	bl	8025e60 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010010:	2300      	movs	r3, #0
 8010012:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010016:	bd10      	pop	{r4, pc}

08010018 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010018:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801001c:	b085      	sub	sp, #20
 801001e:	ad04      	add	r5, sp, #16
 8010020:	4604      	mov	r4, r0
 8010022:	2000      	movs	r0, #0
 8010024:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010028:	69a0      	ldr	r0, [r4, #24]
 801002a:	6806      	ldr	r6, [r0, #0]
 801002c:	9501      	str	r5, [sp, #4]
 801002e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010032:	9500      	str	r5, [sp, #0]
 8010034:	6835      	ldr	r5, [r6, #0]
 8010036:	4699      	mov	r9, r3
 8010038:	460f      	mov	r7, r1
 801003a:	4690      	mov	r8, r2
 801003c:	47a8      	blx	r5
 801003e:	4d10      	ldr	r5, [pc, #64]	; (8010080 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010040:	4606      	mov	r6, r0
 8010042:	f8a5 9000 	strh.w	r9, [r5]
 8010046:	f7f4 fb29 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 801004a:	6803      	ldr	r3, [r0, #0]
 801004c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801004e:	4798      	blx	r3
 8010050:	b128      	cbz	r0, 801005e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010052:	2801      	cmp	r0, #1
 8010054:	d00b      	beq.n	801006e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010056:	4630      	mov	r0, r6
 8010058:	b005      	add	sp, #20
 801005a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801005e:	882b      	ldrh	r3, [r5, #0]
 8010060:	fb08 7203 	mla	r2, r8, r3, r7
 8010064:	9b03      	ldr	r3, [sp, #12]
 8010066:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801006a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801006c:	e7f3      	b.n	8010056 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801006e:	882a      	ldrh	r2, [r5, #0]
 8010070:	9b03      	ldr	r3, [sp, #12]
 8010072:	fb08 7202 	mla	r2, r8, r2, r7
 8010076:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801007a:	1a9a      	subs	r2, r3, r2
 801007c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801007e:	e7ea      	b.n	8010056 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010080:	2000ef16 	.word	0x2000ef16

08010084 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010084:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010086:	b08b      	sub	sp, #44	; 0x2c
 8010088:	4617      	mov	r7, r2
 801008a:	4604      	mov	r4, r0
 801008c:	460e      	mov	r6, r1
 801008e:	461d      	mov	r5, r3
 8010090:	f7f4 fb04 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 8010094:	6803      	ldr	r3, [r0, #0]
 8010096:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010098:	4798      	blx	r3
 801009a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801009e:	9007      	str	r0, [sp, #28]
 80100a0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80100a4:	4b0d      	ldr	r3, [pc, #52]	; (80100dc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 80100a6:	6822      	ldr	r2, [r4, #0]
 80100a8:	881b      	ldrh	r3, [r3, #0]
 80100aa:	9306      	str	r3, [sp, #24]
 80100ac:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80100b0:	9305      	str	r3, [sp, #20]
 80100b2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80100b6:	9304      	str	r3, [sp, #16]
 80100b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80100bc:	9303      	str	r3, [sp, #12]
 80100be:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80100c2:	9302      	str	r3, [sp, #8]
 80100c4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80100c8:	e9cd 5300 	strd	r5, r3, [sp]
 80100cc:	4631      	mov	r1, r6
 80100ce:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80100d0:	463b      	mov	r3, r7
 80100d2:	2200      	movs	r2, #0
 80100d4:	4620      	mov	r0, r4
 80100d6:	47a8      	blx	r5
 80100d8:	b00b      	add	sp, #44	; 0x2c
 80100da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80100dc:	2000ef16 	.word	0x2000ef16

080100e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80100e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80100e4:	4698      	mov	r8, r3
 80100e6:	6803      	ldr	r3, [r0, #0]
 80100e8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80100ea:	4b15      	ldr	r3, [pc, #84]	; (8010140 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80100ec:	b08b      	sub	sp, #44	; 0x2c
 80100ee:	4617      	mov	r7, r2
 80100f0:	f8b3 9000 	ldrh.w	r9, [r3]
 80100f4:	460e      	mov	r6, r1
 80100f6:	4604      	mov	r4, r0
 80100f8:	f7f4 fad0 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 80100fc:	6803      	ldr	r3, [r0, #0]
 80100fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010100:	4798      	blx	r3
 8010102:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010106:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801010a:	2302      	movs	r3, #2
 801010c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010110:	2301      	movs	r3, #1
 8010112:	9305      	str	r3, [sp, #20]
 8010114:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010118:	9304      	str	r3, [sp, #16]
 801011a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801011e:	9303      	str	r3, [sp, #12]
 8010120:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010124:	9302      	str	r3, [sp, #8]
 8010126:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801012a:	2200      	movs	r2, #0
 801012c:	e9cd 8300 	strd	r8, r3, [sp]
 8010130:	4631      	mov	r1, r6
 8010132:	463b      	mov	r3, r7
 8010134:	4620      	mov	r0, r4
 8010136:	47a8      	blx	r5
 8010138:	b00b      	add	sp, #44	; 0x2c
 801013a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801013e:	bf00      	nop
 8010140:	2000ef16 	.word	0x2000ef16

08010144 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010144:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010148:	4698      	mov	r8, r3
 801014a:	6803      	ldr	r3, [r0, #0]
 801014c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801014e:	4b11      	ldr	r3, [pc, #68]	; (8010194 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010150:	b087      	sub	sp, #28
 8010152:	f8b3 9000 	ldrh.w	r9, [r3]
 8010156:	460e      	mov	r6, r1
 8010158:	4617      	mov	r7, r2
 801015a:	4604      	mov	r4, r0
 801015c:	f7f4 fa9e 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 8010160:	6803      	ldr	r3, [r0, #0]
 8010162:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010164:	4798      	blx	r3
 8010166:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801016a:	f8cd 900c 	str.w	r9, [sp, #12]
 801016e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010172:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010176:	9302      	str	r3, [sp, #8]
 8010178:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801017c:	9301      	str	r3, [sp, #4]
 801017e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010182:	9300      	str	r3, [sp, #0]
 8010184:	463a      	mov	r2, r7
 8010186:	4643      	mov	r3, r8
 8010188:	4631      	mov	r1, r6
 801018a:	4620      	mov	r0, r4
 801018c:	47a8      	blx	r5
 801018e:	b007      	add	sp, #28
 8010190:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010194:	2000ef16 	.word	0x2000ef16

08010198 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801019c:	4604      	mov	r4, r0
 801019e:	b08f      	sub	sp, #60	; 0x3c
 80101a0:	4610      	mov	r0, r2
 80101a2:	460d      	mov	r5, r1
 80101a4:	4691      	mov	r9, r2
 80101a6:	461e      	mov	r6, r3
 80101a8:	f008 f9f4 	bl	8018594 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80101ac:	2800      	cmp	r0, #0
 80101ae:	f000 809d 	beq.w	80102ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80101b2:	6823      	ldr	r3, [r4, #0]
 80101b4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010350 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80101b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80101ba:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010354 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80101be:	4f61      	ldr	r7, [pc, #388]	; (8010344 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80101c0:	4620      	mov	r0, r4
 80101c2:	4798      	blx	r3
 80101c4:	6823      	ldr	r3, [r4, #0]
 80101c6:	4620      	mov	r0, r4
 80101c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80101ca:	4798      	blx	r3
 80101cc:	f8bb 3000 	ldrh.w	r3, [fp]
 80101d0:	9301      	str	r3, [sp, #4]
 80101d2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80101d6:	f8ba 3000 	ldrh.w	r3, [sl]
 80101da:	9302      	str	r3, [sp, #8]
 80101dc:	883b      	ldrh	r3, [r7, #0]
 80101de:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80101e2:	9303      	str	r3, [sp, #12]
 80101e4:	4b58      	ldr	r3, [pc, #352]	; (8010348 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80101e6:	9305      	str	r3, [sp, #20]
 80101e8:	881a      	ldrh	r2, [r3, #0]
 80101ea:	9204      	str	r2, [sp, #16]
 80101ec:	4640      	mov	r0, r8
 80101ee:	f008 fa65 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80101f2:	8038      	strh	r0, [r7, #0]
 80101f4:	4640      	mov	r0, r8
 80101f6:	f008 fa95 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80101fa:	9b05      	ldr	r3, [sp, #20]
 80101fc:	b280      	uxth	r0, r0
 80101fe:	8018      	strh	r0, [r3, #0]
 8010200:	4b52      	ldr	r3, [pc, #328]	; (801034c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010202:	781b      	ldrb	r3, [r3, #0]
 8010204:	2b00      	cmp	r3, #0
 8010206:	d174      	bne.n	80102f2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010208:	883b      	ldrh	r3, [r7, #0]
 801020a:	f8ab 3000 	strh.w	r3, [fp]
 801020e:	f8aa 0000 	strh.w	r0, [sl]
 8010212:	4648      	mov	r0, r9
 8010214:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010218:	f008 f9bc 	bl	8018594 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801021c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010220:	2200      	movs	r2, #0
 8010222:	4611      	mov	r1, r2
 8010224:	4628      	mov	r0, r5
 8010226:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801022a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801022e:	f7f2 fd49 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 8010232:	2301      	movs	r3, #1
 8010234:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010238:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801023c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010240:	2b00      	cmp	r3, #0
 8010242:	dd5c      	ble.n	80102fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010244:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010248:	2b00      	cmp	r3, #0
 801024a:	dd58      	ble.n	80102fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801024c:	462a      	mov	r2, r5
 801024e:	ab0a      	add	r3, sp, #40	; 0x28
 8010250:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010254:	6851      	ldr	r1, [r2, #4]
 8010256:	c303      	stmia	r3!, {r0, r1}
 8010258:	4631      	mov	r1, r6
 801025a:	a80a      	add	r0, sp, #40	; 0x28
 801025c:	f7ff fc06 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 8010260:	4b38      	ldr	r3, [pc, #224]	; (8010344 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010262:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010266:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801026a:	2100      	movs	r1, #0
 801026c:	aa0a      	add	r2, sp, #40	; 0x28
 801026e:	4b36      	ldr	r3, [pc, #216]	; (8010348 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010270:	910c      	str	r1, [sp, #48]	; 0x30
 8010272:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010276:	f9b3 3000 	ldrsh.w	r3, [r3]
 801027a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801027e:	ab08      	add	r3, sp, #32
 8010280:	e883 0003 	stmia.w	r3, {r0, r1}
 8010284:	4618      	mov	r0, r3
 8010286:	a90c      	add	r1, sp, #48	; 0x30
 8010288:	f7ff fbf0 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 801028c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801028e:	2b00      	cmp	r3, #0
 8010290:	d13c      	bne.n	801030c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010292:	2000      	movs	r0, #0
 8010294:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8010298:	2600      	movs	r6, #0
 801029a:	682a      	ldr	r2, [r5, #0]
 801029c:	696b      	ldr	r3, [r5, #20]
 801029e:	616e      	str	r6, [r5, #20]
 80102a0:	9305      	str	r3, [sp, #20]
 80102a2:	6892      	ldr	r2, [r2, #8]
 80102a4:	a908      	add	r1, sp, #32
 80102a6:	4628      	mov	r0, r5
 80102a8:	4790      	blx	r2
 80102aa:	9b05      	ldr	r3, [sp, #20]
 80102ac:	616b      	str	r3, [r5, #20]
 80102ae:	4652      	mov	r2, sl
 80102b0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80102b4:	4649      	mov	r1, r9
 80102b6:	4628      	mov	r0, r5
 80102b8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80102bc:	f7f2 fd02 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 80102c0:	4b23      	ldr	r3, [pc, #140]	; (8010350 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80102c2:	9a01      	ldr	r2, [sp, #4]
 80102c4:	801a      	strh	r2, [r3, #0]
 80102c6:	4b23      	ldr	r3, [pc, #140]	; (8010354 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80102c8:	9a02      	ldr	r2, [sp, #8]
 80102ca:	801a      	strh	r2, [r3, #0]
 80102cc:	4b1d      	ldr	r3, [pc, #116]	; (8010344 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80102ce:	9a03      	ldr	r2, [sp, #12]
 80102d0:	801a      	strh	r2, [r3, #0]
 80102d2:	4b1d      	ldr	r3, [pc, #116]	; (8010348 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80102d4:	9a04      	ldr	r2, [sp, #16]
 80102d6:	801a      	strh	r2, [r3, #0]
 80102d8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80102dc:	6823      	ldr	r3, [r4, #0]
 80102de:	4620      	mov	r0, r4
 80102e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80102e2:	4798      	blx	r3
 80102e4:	6823      	ldr	r3, [r4, #0]
 80102e6:	4620      	mov	r0, r4
 80102e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80102ea:	4798      	blx	r3
 80102ec:	b00f      	add	sp, #60	; 0x3c
 80102ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102f2:	883b      	ldrh	r3, [r7, #0]
 80102f4:	f8ab 0000 	strh.w	r0, [fp]
 80102f8:	f8aa 3000 	strh.w	r3, [sl]
 80102fc:	e789      	b.n	8010212 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80102fe:	462a      	mov	r2, r5
 8010300:	ab0a      	add	r3, sp, #40	; 0x28
 8010302:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010306:	6851      	ldr	r1, [r2, #4]
 8010308:	c303      	stmia	r3!, {r0, r1}
 801030a:	e7a9      	b.n	8010260 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801030c:	a807      	add	r0, sp, #28
 801030e:	f008 fb45 	bl	801899c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010312:	4606      	mov	r6, r0
 8010314:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010316:	6803      	ldr	r3, [r0, #0]
 8010318:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801031a:	4798      	blx	r3
 801031c:	4286      	cmp	r6, r0
 801031e:	d1b8      	bne.n	8010292 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010320:	f7f4 f9bc 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 8010324:	6803      	ldr	r3, [r0, #0]
 8010326:	4606      	mov	r6, r0
 8010328:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801032a:	9305      	str	r3, [sp, #20]
 801032c:	a807      	add	r0, sp, #28
 801032e:	f008 fb35 	bl	801899c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010332:	9b05      	ldr	r3, [sp, #20]
 8010334:	4601      	mov	r1, r0
 8010336:	4630      	mov	r0, r6
 8010338:	4798      	blx	r3
 801033a:	f080 0001 	eor.w	r0, r0, #1
 801033e:	b2c0      	uxtb	r0, r0
 8010340:	e7a8      	b.n	8010294 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010342:	bf00      	nop
 8010344:	2000ef10 	.word	0x2000ef10
 8010348:	2000ef12 	.word	0x2000ef12
 801034c:	2000ef14 	.word	0x2000ef14
 8010350:	2000ef16 	.word	0x2000ef16
 8010354:	2000ef18 	.word	0x2000ef18

08010358 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010358:	b510      	push	{r4, lr}
 801035a:	4b07      	ldr	r3, [pc, #28]	; (8010378 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801035c:	781b      	ldrb	r3, [r3, #0]
 801035e:	4604      	mov	r4, r0
 8010360:	b13b      	cbz	r3, 8010372 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010362:	6803      	ldr	r3, [r0, #0]
 8010364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010366:	4798      	blx	r3
 8010368:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801036a:	4283      	cmp	r3, r0
 801036c:	d101      	bne.n	8010372 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801036e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010370:	bd10      	pop	{r4, pc}
 8010372:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010374:	e7fc      	b.n	8010370 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010376:	bf00      	nop
 8010378:	2000ef1a 	.word	0x2000ef1a

0801037c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801037c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010380:	b08a      	sub	sp, #40	; 0x28
 8010382:	461d      	mov	r5, r3
 8010384:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010388:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801038c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010390:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010394:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010398:	f8ad 301a 	strh.w	r3, [sp, #26]
 801039c:	2400      	movs	r4, #0
 801039e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80103a2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80103a6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80103aa:	4690      	mov	r8, r2
 80103ac:	4607      	mov	r7, r0
 80103ae:	9404      	str	r4, [sp, #16]
 80103b0:	f88d 4020 	strb.w	r4, [sp, #32]
 80103b4:	f7ff ffd0 	bl	8010358 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80103b8:	fb06 8505 	mla	r5, r6, r5, r8
 80103bc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80103c0:	6878      	ldr	r0, [r7, #4]
 80103c2:	9505      	str	r5, [sp, #20]
 80103c4:	f8ad 601e 	strh.w	r6, [sp, #30]
 80103c8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80103cc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80103d0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80103d4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80103d8:	6803      	ldr	r3, [r0, #0]
 80103da:	a901      	add	r1, sp, #4
 80103dc:	685b      	ldr	r3, [r3, #4]
 80103de:	4798      	blx	r3
 80103e0:	b00a      	add	sp, #40	; 0x28
 80103e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080103e6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80103e6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80103ea:	b08b      	sub	sp, #44	; 0x2c
 80103ec:	2400      	movs	r4, #0
 80103ee:	461d      	mov	r5, r3
 80103f0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80103f4:	4688      	mov	r8, r1
 80103f6:	4691      	mov	r9, r2
 80103f8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80103fc:	9404      	str	r4, [sp, #16]
 80103fe:	4607      	mov	r7, r0
 8010400:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010404:	f7ff ffa8 	bl	8010358 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010408:	fb06 9505 	mla	r5, r6, r5, r9
 801040c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010410:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010414:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010418:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801041c:	6878      	ldr	r0, [r7, #4]
 801041e:	9505      	str	r5, [sp, #20]
 8010420:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010424:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010428:	f8ad 601e 	strh.w	r6, [sp, #30]
 801042c:	f8cd 8010 	str.w	r8, [sp, #16]
 8010430:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010434:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010438:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801043c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010440:	6803      	ldr	r3, [r0, #0]
 8010442:	a901      	add	r1, sp, #4
 8010444:	685b      	ldr	r3, [r3, #4]
 8010446:	4798      	blx	r3
 8010448:	b00b      	add	sp, #44	; 0x2c
 801044a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010450 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010450:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010454:	b08a      	sub	sp, #40	; 0x28
 8010456:	4698      	mov	r8, r3
 8010458:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801045c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010460:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010464:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010468:	2300      	movs	r3, #0
 801046a:	2d0b      	cmp	r5, #11
 801046c:	4606      	mov	r6, r0
 801046e:	9304      	str	r3, [sp, #16]
 8010470:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010474:	d138      	bne.n	80104e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010476:	2380      	movs	r3, #128	; 0x80
 8010478:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801047c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010480:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010484:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010488:	f8ad 301a 	strh.w	r3, [sp, #26]
 801048c:	f88d 0020 	strb.w	r0, [sp, #32]
 8010490:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010494:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010498:	4630      	mov	r0, r6
 801049a:	9203      	str	r2, [sp, #12]
 801049c:	f7ff ff5c 	bl	8010358 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80104a0:	2c0b      	cmp	r4, #11
 80104a2:	bf98      	it	ls
 80104a4:	4b1b      	ldrls	r3, [pc, #108]	; (8010514 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80104a6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80104aa:	bf98      	it	ls
 80104ac:	5d19      	ldrbls	r1, [r3, r4]
 80104ae:	f8ad 701e 	strh.w	r7, [sp, #30]
 80104b2:	bf88      	it	hi
 80104b4:	2100      	movhi	r1, #0
 80104b6:	fb02 8307 	mla	r3, r2, r7, r8
 80104ba:	10c9      	asrs	r1, r1, #3
 80104bc:	fb01 0003 	mla	r0, r1, r3, r0
 80104c0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80104c4:	9005      	str	r0, [sp, #20]
 80104c6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80104ca:	6870      	ldr	r0, [r6, #4]
 80104cc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80104d0:	2300      	movs	r3, #0
 80104d2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80104d6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80104da:	6803      	ldr	r3, [r0, #0]
 80104dc:	a901      	add	r1, sp, #4
 80104de:	685b      	ldr	r3, [r3, #4]
 80104e0:	4798      	blx	r3
 80104e2:	b00a      	add	sp, #40	; 0x28
 80104e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80104e8:	2d02      	cmp	r5, #2
 80104ea:	d109      	bne.n	8010500 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80104ec:	28ff      	cmp	r0, #255	; 0xff
 80104ee:	d105      	bne.n	80104fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 80104f0:	f1bc 0f00 	cmp.w	ip, #0
 80104f4:	bf14      	ite	ne
 80104f6:	2340      	movne	r3, #64	; 0x40
 80104f8:	2320      	moveq	r3, #32
 80104fa:	e7bd      	b.n	8010478 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80104fc:	2340      	movs	r3, #64	; 0x40
 80104fe:	e7bb      	b.n	8010478 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010500:	28ff      	cmp	r0, #255	; 0xff
 8010502:	d105      	bne.n	8010510 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010504:	f1bc 0f00 	cmp.w	ip, #0
 8010508:	bf14      	ite	ne
 801050a:	2304      	movne	r3, #4
 801050c:	2301      	moveq	r3, #1
 801050e:	e7b3      	b.n	8010478 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010510:	2304      	movs	r3, #4
 8010512:	e7b1      	b.n	8010478 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010514:	08029fa0 	.word	0x08029fa0

08010518 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801051c:	b08b      	sub	sp, #44	; 0x2c
 801051e:	461d      	mov	r5, r3
 8010520:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010524:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010528:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 801052c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010530:	bf14      	ite	ne
 8010532:	2308      	movne	r3, #8
 8010534:	2302      	moveq	r3, #2
 8010536:	2400      	movs	r4, #0
 8010538:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801053c:	4688      	mov	r8, r1
 801053e:	4693      	mov	fp, r2
 8010540:	9404      	str	r4, [sp, #16]
 8010542:	4607      	mov	r7, r0
 8010544:	f7ff ff08 	bl	8010358 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010548:	2e0b      	cmp	r6, #11
 801054a:	bf98      	it	ls
 801054c:	4b15      	ldrls	r3, [pc, #84]	; (80105a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 801054e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010552:	bf98      	it	ls
 8010554:	5d9c      	ldrbls	r4, [r3, r6]
 8010556:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801055a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801055e:	fb05 b50a 	mla	r5, r5, sl, fp
 8010562:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010566:	f8ad 301a 	strh.w	r3, [sp, #26]
 801056a:	10e4      	asrs	r4, r4, #3
 801056c:	fb04 0405 	mla	r4, r4, r5, r0
 8010570:	2300      	movs	r3, #0
 8010572:	6878      	ldr	r0, [r7, #4]
 8010574:	9405      	str	r4, [sp, #20]
 8010576:	f8ad 301c 	strh.w	r3, [sp, #28]
 801057a:	f8ad a01e 	strh.w	sl, [sp, #30]
 801057e:	f8cd 8010 	str.w	r8, [sp, #16]
 8010582:	f88d 9020 	strb.w	r9, [sp, #32]
 8010586:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801058a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801058e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8010592:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8010596:	6803      	ldr	r3, [r0, #0]
 8010598:	a901      	add	r1, sp, #4
 801059a:	685b      	ldr	r3, [r3, #4]
 801059c:	4798      	blx	r3
 801059e:	b00b      	add	sp, #44	; 0x2c
 80105a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80105a4:	08029fa0 	.word	0x08029fa0

080105a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80105a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80105ac:	461e      	mov	r6, r3
 80105ae:	4b0a      	ldr	r3, [pc, #40]	; (80105d8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80105b0:	460f      	mov	r7, r1
 80105b2:	881d      	ldrh	r5, [r3, #0]
 80105b4:	4690      	mov	r8, r2
 80105b6:	f7f4 f871 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 80105ba:	6803      	ldr	r3, [r0, #0]
 80105bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80105be:	4798      	blx	r3
 80105c0:	280b      	cmp	r0, #11
 80105c2:	bf9a      	itte	ls
 80105c4:	4b05      	ldrls	r3, [pc, #20]	; (80105dc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80105c6:	5c1c      	ldrbls	r4, [r3, r0]
 80105c8:	2400      	movhi	r4, #0
 80105ca:	fb08 7005 	mla	r0, r8, r5, r7
 80105ce:	10e4      	asrs	r4, r4, #3
 80105d0:	fb04 6000 	mla	r0, r4, r0, r6
 80105d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80105d8:	2000ef16 	.word	0x2000ef16
 80105dc:	08029fa0 	.word	0x08029fa0

080105e0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80105e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80105e2:	b08b      	sub	sp, #44	; 0x2c
 80105e4:	461f      	mov	r7, r3
 80105e6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80105ea:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80105ee:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80105f2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80105f6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80105fa:	f8ad 301a 	strh.w	r3, [sp, #26]
 80105fe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010602:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010606:	2500      	movs	r5, #0
 8010608:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801060c:	f88d 3020 	strb.w	r3, [sp, #32]
 8010610:	4604      	mov	r4, r0
 8010612:	4616      	mov	r6, r2
 8010614:	9504      	str	r5, [sp, #16]
 8010616:	f7ff fe9f 	bl	8010358 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801061a:	463a      	mov	r2, r7
 801061c:	4631      	mov	r1, r6
 801061e:	4603      	mov	r3, r0
 8010620:	4620      	mov	r0, r4
 8010622:	f7ff ffc1 	bl	80105a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010626:	4b0e      	ldr	r3, [pc, #56]	; (8010660 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010628:	9005      	str	r0, [sp, #20]
 801062a:	881b      	ldrh	r3, [r3, #0]
 801062c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010630:	f7f4 f834 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 8010634:	6803      	ldr	r3, [r0, #0]
 8010636:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010638:	4798      	blx	r3
 801063a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801063c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010640:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010644:	9304      	str	r3, [sp, #16]
 8010646:	6860      	ldr	r0, [r4, #4]
 8010648:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801064c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010650:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010654:	6803      	ldr	r3, [r0, #0]
 8010656:	a901      	add	r1, sp, #4
 8010658:	685b      	ldr	r3, [r3, #4]
 801065a:	4798      	blx	r3
 801065c:	b00b      	add	sp, #44	; 0x2c
 801065e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010660:	2000ef16 	.word	0x2000ef16

08010664 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010664:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010666:	b08d      	sub	sp, #52	; 0x34
 8010668:	466b      	mov	r3, sp
 801066a:	e883 0006 	stmia.w	r3, {r1, r2}
 801066e:	2300      	movs	r3, #0
 8010670:	9306      	str	r3, [sp, #24]
 8010672:	6803      	ldr	r3, [r0, #0]
 8010674:	f8bd 6000 	ldrh.w	r6, [sp]
 8010678:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801067a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801067e:	2501      	movs	r5, #1
 8010680:	9503      	str	r5, [sp, #12]
 8010682:	4604      	mov	r4, r0
 8010684:	4798      	blx	r3
 8010686:	463a      	mov	r2, r7
 8010688:	4631      	mov	r1, r6
 801068a:	4603      	mov	r3, r0
 801068c:	4620      	mov	r0, r4
 801068e:	f7ff ff8b 	bl	80105a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010692:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010694:	9307      	str	r3, [sp, #28]
 8010696:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801069a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801069e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80106a2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80106a6:	4b0f      	ldr	r3, [pc, #60]	; (80106e4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80106a8:	9004      	str	r0, [sp, #16]
 80106aa:	881b      	ldrh	r3, [r3, #0]
 80106ac:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80106b0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80106b4:	f7f3 fff2 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 80106b8:	6803      	ldr	r3, [r0, #0]
 80106ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80106bc:	4798      	blx	r3
 80106be:	23ff      	movs	r3, #255	; 0xff
 80106c0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80106c4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80106c8:	6860      	ldr	r0, [r4, #4]
 80106ca:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80106ce:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80106d2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80106d6:	6803      	ldr	r3, [r0, #0]
 80106d8:	a903      	add	r1, sp, #12
 80106da:	685b      	ldr	r3, [r3, #4]
 80106dc:	4798      	blx	r3
 80106de:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80106e0:	b00d      	add	sp, #52	; 0x34
 80106e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80106e4:	2000ef16 	.word	0x2000ef16

080106e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80106e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106ec:	b08c      	sub	sp, #48	; 0x30
 80106ee:	461e      	mov	r6, r3
 80106f0:	466d      	mov	r5, sp
 80106f2:	2300      	movs	r3, #0
 80106f4:	e885 0006 	stmia.w	r5, {r1, r2}
 80106f8:	9306      	str	r3, [sp, #24]
 80106fa:	6803      	ldr	r3, [r0, #0]
 80106fc:	f8bd 7000 	ldrh.w	r7, [sp]
 8010700:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010702:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010706:	2501      	movs	r5, #1
 8010708:	9503      	str	r5, [sp, #12]
 801070a:	4604      	mov	r4, r0
 801070c:	4798      	blx	r3
 801070e:	4642      	mov	r2, r8
 8010710:	4639      	mov	r1, r7
 8010712:	4603      	mov	r3, r0
 8010714:	4620      	mov	r0, r4
 8010716:	f7ff ff47 	bl	80105a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801071a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801071e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010722:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010726:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801072a:	4b11      	ldr	r3, [pc, #68]	; (8010770 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801072c:	9004      	str	r0, [sp, #16]
 801072e:	881b      	ldrh	r3, [r3, #0]
 8010730:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010734:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010736:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801073a:	9607      	str	r6, [sp, #28]
 801073c:	f7f3 ffae 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 8010740:	6803      	ldr	r3, [r0, #0]
 8010742:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010744:	4798      	blx	r3
 8010746:	23ff      	movs	r3, #255	; 0xff
 8010748:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801074c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010750:	6860      	ldr	r0, [r4, #4]
 8010752:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010756:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801075a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801075e:	6803      	ldr	r3, [r0, #0]
 8010760:	a903      	add	r1, sp, #12
 8010762:	685b      	ldr	r3, [r3, #4]
 8010764:	4798      	blx	r3
 8010766:	4630      	mov	r0, r6
 8010768:	b00c      	add	sp, #48	; 0x30
 801076a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801076e:	bf00      	nop
 8010770:	2000ef16 	.word	0x2000ef16

08010774 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010774:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010776:	b085      	sub	sp, #20
 8010778:	ac02      	add	r4, sp, #8
 801077a:	e884 0006 	stmia.w	r4, {r1, r2}
 801077e:	4605      	mov	r5, r0
 8010780:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010784:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010788:	f7ff fde6 	bl	8010358 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801078c:	463a      	mov	r2, r7
 801078e:	4603      	mov	r3, r0
 8010790:	4631      	mov	r1, r6
 8010792:	4628      	mov	r0, r5
 8010794:	f7ff ff08 	bl	80105a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010798:	4a05      	ldr	r2, [pc, #20]	; (80107b0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 801079a:	682b      	ldr	r3, [r5, #0]
 801079c:	8812      	ldrh	r2, [r2, #0]
 801079e:	9200      	str	r2, [sp, #0]
 80107a0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80107a2:	e894 0006 	ldmia.w	r4, {r1, r2}
 80107a6:	4603      	mov	r3, r0
 80107a8:	4628      	mov	r0, r5
 80107aa:	47b0      	blx	r6
 80107ac:	b005      	add	sp, #20
 80107ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80107b0:	2000ef16 	.word	0x2000ef16

080107b4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80107b4:	b570      	push	{r4, r5, r6, lr}
 80107b6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80107ba:	4604      	mov	r4, r0
 80107bc:	b19b      	cbz	r3, 80107e6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80107be:	2002      	movs	r0, #2
 80107c0:	f7f0 fbc6 	bl	8000f50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80107c4:	2300      	movs	r3, #0
 80107c6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80107ca:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80107ce:	6823      	ldr	r3, [r4, #0]
 80107d0:	4620      	mov	r0, r4
 80107d2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80107d6:	f7ff fdbf 	bl	8010358 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80107da:	462b      	mov	r3, r5
 80107dc:	4601      	mov	r1, r0
 80107de:	4620      	mov	r0, r4
 80107e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80107e4:	4718      	bx	r3
 80107e6:	bd70      	pop	{r4, r5, r6, pc}

080107e8 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 80107e8:	b570      	push	{r4, r5, r6, lr}
 80107ea:	4605      	mov	r5, r0
 80107ec:	460c      	mov	r4, r1
 80107ee:	2003      	movs	r0, #3
 80107f0:	b149      	cbz	r1, 8010806 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 80107f2:	f7f0 fb51 	bl	8000e98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80107f6:	6928      	ldr	r0, [r5, #16]
 80107f8:	b168      	cbz	r0, 8010816 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 80107fa:	6803      	ldr	r3, [r0, #0]
 80107fc:	695b      	ldr	r3, [r3, #20]
 80107fe:	2101      	movs	r1, #1
 8010800:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010804:	4718      	bx	r3
 8010806:	f7f0 fb75 	bl	8000ef4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801080a:	6928      	ldr	r0, [r5, #16]
 801080c:	b118      	cbz	r0, 8010816 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 801080e:	6803      	ldr	r3, [r0, #0]
 8010810:	4621      	mov	r1, r4
 8010812:	695b      	ldr	r3, [r3, #20]
 8010814:	e7f4      	b.n	8010800 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 8010816:	bd70      	pop	{r4, r5, r6, pc}

08010818 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010818:	b538      	push	{r3, r4, r5, lr}
 801081a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 801081e:	428b      	cmp	r3, r1
 8010820:	4604      	mov	r4, r0
 8010822:	460d      	mov	r5, r1
 8010824:	d006      	beq.n	8010834 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010826:	6803      	ldr	r3, [r0, #0]
 8010828:	b929      	cbnz	r1, 8010836 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801082a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801082e:	4798      	blx	r3
 8010830:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010834:	bd38      	pop	{r3, r4, r5, pc}
 8010836:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801083a:	e7f8      	b.n	801082e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801083c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801083c:	b510      	push	{r4, lr}
 801083e:	4b0d      	ldr	r3, [pc, #52]	; (8010874 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010840:	781b      	ldrb	r3, [r3, #0]
 8010842:	4604      	mov	r4, r0
 8010844:	b95b      	cbnz	r3, 801085e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010846:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801084a:	2b02      	cmp	r3, #2
 801084c:	d007      	beq.n	801085e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801084e:	6840      	ldr	r0, [r0, #4]
 8010850:	f000 f92c 	bl	8010aac <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010854:	b118      	cbz	r0, 801085e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010856:	6862      	ldr	r2, [r4, #4]
 8010858:	7a53      	ldrb	r3, [r2, #9]
 801085a:	2b00      	cmp	r3, #0
 801085c:	d0fc      	beq.n	8010858 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801085e:	f7f0 fe1b 	bl	8001498 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010862:	4620      	mov	r0, r4
 8010864:	2100      	movs	r1, #0
 8010866:	f7ff ffd7 	bl	8010818 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801086a:	4620      	mov	r0, r4
 801086c:	f7ff fd74 	bl	8010358 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010870:	bd10      	pop	{r4, pc}
 8010872:	bf00      	nop
 8010874:	2000ef1a 	.word	0x2000ef1a

08010878 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8010878:	b570      	push	{r4, r5, r6, lr}
 801087a:	4604      	mov	r4, r0
 801087c:	6803      	ldr	r3, [r0, #0]
 801087e:	b919      	cbnz	r1, 8010888 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010880:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010882:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010886:	4718      	bx	r3
 8010888:	2200      	movs	r2, #0
 801088a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 801088e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8010892:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010894:	4798      	blx	r3
 8010896:	6863      	ldr	r3, [r4, #4]
 8010898:	2101      	movs	r1, #1
 801089a:	4605      	mov	r5, r0
 801089c:	7299      	strb	r1, [r3, #10]
 801089e:	4620      	mov	r0, r4
 80108a0:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80108a4:	f7ff ffb8 	bl	8010818 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80108a8:	4628      	mov	r0, r5
 80108aa:	bd70      	pop	{r4, r5, r6, pc}

080108ac <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80108ac:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80108b0:	1a13      	subs	r3, r2, r0
 80108b2:	4258      	negs	r0, r3
 80108b4:	4158      	adcs	r0, r3
 80108b6:	4770      	bx	lr

080108b8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80108b8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80108bc:	1a9b      	subs	r3, r3, r2
 80108be:	2b00      	cmp	r3, #0
 80108c0:	bfdc      	itt	le
 80108c2:	6882      	ldrle	r2, [r0, #8]
 80108c4:	189b      	addle	r3, r3, r2
 80108c6:	2b01      	cmp	r3, #1
 80108c8:	bfcc      	ite	gt
 80108ca:	2000      	movgt	r0, #0
 80108cc:	2001      	movle	r0, #1
 80108ce:	4770      	bx	lr

080108d0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80108d0:	6902      	ldr	r2, [r0, #16]
 80108d2:	6843      	ldr	r3, [r0, #4]
 80108d4:	2024      	movs	r0, #36	; 0x24
 80108d6:	fb00 3002 	mla	r0, r0, r2, r3
 80108da:	4770      	bx	lr

080108dc <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80108dc:	6803      	ldr	r3, [r0, #0]
 80108de:	691b      	ldr	r3, [r3, #16]
 80108e0:	4718      	bx	r3

080108e2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80108e2:	b570      	push	{r4, r5, r6, lr}
 80108e4:	2301      	movs	r3, #1
 80108e6:	7203      	strb	r3, [r0, #8]
 80108e8:	4604      	mov	r4, r0
 80108ea:	6840      	ldr	r0, [r0, #4]
 80108ec:	6803      	ldr	r3, [r0, #0]
 80108ee:	699b      	ldr	r3, [r3, #24]
 80108f0:	4798      	blx	r3
 80108f2:	6803      	ldr	r3, [r0, #0]
 80108f4:	2b40      	cmp	r3, #64	; 0x40
 80108f6:	4605      	mov	r5, r0
 80108f8:	d00c      	beq.n	8010914 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80108fa:	d810      	bhi.n	801091e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80108fc:	2b04      	cmp	r3, #4
 80108fe:	d01d      	beq.n	801093c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010900:	d804      	bhi.n	801090c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010902:	2b01      	cmp	r3, #1
 8010904:	d006      	beq.n	8010914 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010906:	2b02      	cmp	r3, #2
 8010908:	d02c      	beq.n	8010964 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 801090a:	bd70      	pop	{r4, r5, r6, pc}
 801090c:	2b08      	cmp	r3, #8
 801090e:	d01d      	beq.n	801094c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010910:	2b20      	cmp	r3, #32
 8010912:	d1fa      	bne.n	801090a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8010914:	6823      	ldr	r3, [r4, #0]
 8010916:	4620      	mov	r0, r4
 8010918:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801091a:	4798      	blx	r3
 801091c:	e013      	b.n	8010946 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801091e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010922:	d0f7      	beq.n	8010914 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010924:	d804      	bhi.n	8010930 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010926:	2b80      	cmp	r3, #128	; 0x80
 8010928:	d0f4      	beq.n	8010914 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801092a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801092e:	e7f0      	b.n	8010912 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010930:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010934:	d0ee      	beq.n	8010914 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010936:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801093a:	e7e5      	b.n	8010908 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801093c:	6823      	ldr	r3, [r4, #0]
 801093e:	7f01      	ldrb	r1, [r0, #28]
 8010940:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010942:	4620      	mov	r0, r4
 8010944:	4798      	blx	r3
 8010946:	6823      	ldr	r3, [r4, #0]
 8010948:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801094a:	e006      	b.n	801095a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801094c:	6823      	ldr	r3, [r4, #0]
 801094e:	7f01      	ldrb	r1, [r0, #28]
 8010950:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010952:	4620      	mov	r0, r4
 8010954:	4798      	blx	r3
 8010956:	6823      	ldr	r3, [r4, #0]
 8010958:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801095a:	4629      	mov	r1, r5
 801095c:	4620      	mov	r0, r4
 801095e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010962:	4718      	bx	r3
 8010964:	6823      	ldr	r3, [r4, #0]
 8010966:	4620      	mov	r0, r4
 8010968:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801096a:	4798      	blx	r3
 801096c:	e7f3      	b.n	8010956 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0801096e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801096e:	4770      	bx	lr

08010970 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010970:	4770      	bx	lr

08010972 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8010972:	4770      	bx	lr

08010974 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010974:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010978:	1ad2      	subs	r2, r2, r3
 801097a:	2a00      	cmp	r2, #0
 801097c:	b510      	push	{r4, lr}
 801097e:	bfdc      	itt	le
 8010980:	6884      	ldrle	r4, [r0, #8]
 8010982:	1912      	addle	r2, r2, r4
 8010984:	2a01      	cmp	r2, #1
 8010986:	dd16      	ble.n	80109b6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010988:	6842      	ldr	r2, [r0, #4]
 801098a:	2424      	movs	r4, #36	; 0x24
 801098c:	fb04 2303 	mla	r3, r4, r3, r2
 8010990:	f101 0220 	add.w	r2, r1, #32
 8010994:	f851 4b04 	ldr.w	r4, [r1], #4
 8010998:	f843 4b04 	str.w	r4, [r3], #4
 801099c:	4291      	cmp	r1, r2
 801099e:	d1f9      	bne.n	8010994 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80109a0:	780a      	ldrb	r2, [r1, #0]
 80109a2:	701a      	strb	r2, [r3, #0]
 80109a4:	68c3      	ldr	r3, [r0, #12]
 80109a6:	6882      	ldr	r2, [r0, #8]
 80109a8:	f3bf 8f5b 	dmb	ish
 80109ac:	3301      	adds	r3, #1
 80109ae:	429a      	cmp	r2, r3
 80109b0:	bfd8      	it	le
 80109b2:	1a9b      	suble	r3, r3, r2
 80109b4:	60c3      	str	r3, [r0, #12]
 80109b6:	bd10      	pop	{r4, pc}

080109b8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80109b8:	6903      	ldr	r3, [r0, #16]
 80109ba:	6882      	ldr	r2, [r0, #8]
 80109bc:	f3bf 8f5b 	dmb	ish
 80109c0:	3301      	adds	r3, #1
 80109c2:	429a      	cmp	r2, r3
 80109c4:	bfd8      	it	le
 80109c6:	1a9b      	suble	r3, r3, r2
 80109c8:	6103      	str	r3, [r0, #16]
 80109ca:	4770      	bx	lr

080109cc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80109cc:	b570      	push	{r4, r5, r6, lr}
 80109ce:	4604      	mov	r4, r0
 80109d0:	460e      	mov	r6, r1
 80109d2:	6860      	ldr	r0, [r4, #4]
 80109d4:	6803      	ldr	r3, [r0, #0]
 80109d6:	685b      	ldr	r3, [r3, #4]
 80109d8:	4798      	blx	r3
 80109da:	2800      	cmp	r0, #0
 80109dc:	d1f9      	bne.n	80109d2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80109de:	4d0d      	ldr	r5, [pc, #52]	; (8010a14 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80109e0:	6828      	ldr	r0, [r5, #0]
 80109e2:	6803      	ldr	r3, [r0, #0]
 80109e4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80109e6:	4798      	blx	r3
 80109e8:	f7f0 fd64 	bl	80014b4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80109ec:	6828      	ldr	r0, [r5, #0]
 80109ee:	2101      	movs	r1, #1
 80109f0:	f7ff ff12 	bl	8010818 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80109f4:	6860      	ldr	r0, [r4, #4]
 80109f6:	6803      	ldr	r3, [r0, #0]
 80109f8:	4631      	mov	r1, r6
 80109fa:	689b      	ldr	r3, [r3, #8]
 80109fc:	4798      	blx	r3
 80109fe:	6823      	ldr	r3, [r4, #0]
 8010a00:	4620      	mov	r0, r4
 8010a02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a04:	4798      	blx	r3
 8010a06:	6828      	ldr	r0, [r5, #0]
 8010a08:	6803      	ldr	r3, [r0, #0]
 8010a0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a0e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010a10:	4718      	bx	r3
 8010a12:	bf00      	nop
 8010a14:	2000ef1c 	.word	0x2000ef1c

08010a18 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8010a18:	b508      	push	{r3, lr}
 8010a1a:	f7f0 fd3d 	bl	8001498 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010a1e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010a22:	f7f0 bd41 	b.w	80014a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010a26 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010a26:	b510      	push	{r4, lr}
 8010a28:	2114      	movs	r1, #20
 8010a2a:	4604      	mov	r4, r0
 8010a2c:	f015 fdc8 	bl	80265c0 <_ZdlPvj>
 8010a30:	4620      	mov	r0, r4
 8010a32:	bd10      	pop	{r4, pc}

08010a34 <_ZN8touchgfx13DMA_Interface5startEv>:
 8010a34:	b510      	push	{r4, lr}
 8010a36:	4604      	mov	r4, r0
 8010a38:	6840      	ldr	r0, [r0, #4]
 8010a3a:	6803      	ldr	r3, [r0, #0]
 8010a3c:	681b      	ldr	r3, [r3, #0]
 8010a3e:	4798      	blx	r3
 8010a40:	b948      	cbnz	r0, 8010a56 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010a42:	7a63      	ldrb	r3, [r4, #9]
 8010a44:	b13b      	cbz	r3, 8010a56 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010a46:	7a23      	ldrb	r3, [r4, #8]
 8010a48:	b92b      	cbnz	r3, 8010a56 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010a4a:	6823      	ldr	r3, [r4, #0]
 8010a4c:	4620      	mov	r0, r4
 8010a4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010a50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010a54:	4718      	bx	r3
 8010a56:	bd10      	pop	{r4, pc}

08010a58 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8010a58:	b570      	push	{r4, r5, r6, lr}
 8010a5a:	4604      	mov	r4, r0
 8010a5c:	6840      	ldr	r0, [r0, #4]
 8010a5e:	6803      	ldr	r3, [r0, #0]
 8010a60:	681b      	ldr	r3, [r3, #0]
 8010a62:	4798      	blx	r3
 8010a64:	4605      	mov	r5, r0
 8010a66:	b930      	cbnz	r0, 8010a76 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010a68:	7a23      	ldrb	r3, [r4, #8]
 8010a6a:	b123      	cbz	r3, 8010a76 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010a6c:	6860      	ldr	r0, [r4, #4]
 8010a6e:	6803      	ldr	r3, [r0, #0]
 8010a70:	695b      	ldr	r3, [r3, #20]
 8010a72:	4798      	blx	r3
 8010a74:	7225      	strb	r5, [r4, #8]
 8010a76:	6860      	ldr	r0, [r4, #4]
 8010a78:	6803      	ldr	r3, [r0, #0]
 8010a7a:	681b      	ldr	r3, [r3, #0]
 8010a7c:	4798      	blx	r3
 8010a7e:	b928      	cbnz	r0, 8010a8c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010a80:	6823      	ldr	r3, [r4, #0]
 8010a82:	4620      	mov	r0, r4
 8010a84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010a86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a8a:	4718      	bx	r3
 8010a8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a90:	f7f0 bd18 	b.w	80014c4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08010a94 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010a94:	b510      	push	{r4, lr}
 8010a96:	4c04      	ldr	r4, [pc, #16]	; (8010aa8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010a98:	6082      	str	r2, [r0, #8]
 8010a9a:	2200      	movs	r2, #0
 8010a9c:	e9c0 4100 	strd	r4, r1, [r0]
 8010aa0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010aa4:	bd10      	pop	{r4, pc}
 8010aa6:	bf00      	nop
 8010aa8:	08029fb4 	.word	0x08029fb4

08010aac <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8010aac:	6840      	ldr	r0, [r0, #4]
 8010aae:	6803      	ldr	r3, [r0, #0]
 8010ab0:	681b      	ldr	r3, [r3, #0]
 8010ab2:	4718      	bx	r3

08010ab4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010ab4:	4b06      	ldr	r3, [pc, #24]	; (8010ad0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8010ab6:	60c1      	str	r1, [r0, #12]
 8010ab8:	094a      	lsrs	r2, r1, #5
 8010aba:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8010abe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010ac2:	4313      	orrs	r3, r2
 8010ac4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8010ac8:	4319      	orrs	r1, r3
 8010aca:	8201      	strh	r1, [r0, #16]
 8010acc:	4770      	bx	lr
 8010ace:	bf00      	nop
 8010ad0:	fffff800 	.word	0xfffff800

08010ad4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010ad4:	f1a0 0008 	sub.w	r0, r0, #8
 8010ad8:	e7ec      	b.n	8010ab4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8010ada:	bf00      	nop

08010adc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8010adc:	b508      	push	{r3, lr}
 8010ade:	4b05      	ldr	r3, [pc, #20]	; (8010af4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8010ae0:	6818      	ldr	r0, [r3, #0]
 8010ae2:	6803      	ldr	r3, [r0, #0]
 8010ae4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010ae8:	4798      	blx	r3
 8010aea:	1e43      	subs	r3, r0, #1
 8010aec:	4258      	negs	r0, r3
 8010aee:	4158      	adcs	r0, r3
 8010af0:	bd08      	pop	{r3, pc}
 8010af2:	bf00      	nop
 8010af4:	2000ef1c 	.word	0x2000ef1c

08010af8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8010af8:	4770      	bx	lr

08010afa <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8010afa:	3808      	subs	r0, #8
 8010afc:	4770      	bx	lr

08010afe <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8010afe:	b430      	push	{r4, r5}
 8010b00:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8010b04:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8010b08:	8a02      	ldrh	r2, [r0, #16]
 8010b0a:	9202      	str	r2, [sp, #8]
 8010b0c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010b10:	68c2      	ldr	r2, [r0, #12]
 8010b12:	4629      	mov	r1, r5
 8010b14:	4620      	mov	r0, r4
 8010b16:	bc30      	pop	{r4, r5}
 8010b18:	f7f0 be92 	b.w	8001840 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08010b1c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8010b1c:	f7f0 be86 	b.w	800182c <_ZN8touchgfx5paint8tearDownEv>

08010b20 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8010b20:	b510      	push	{r4, lr}
 8010b22:	2114      	movs	r1, #20
 8010b24:	4604      	mov	r4, r0
 8010b26:	f015 fd4b 	bl	80265c0 <_ZdlPvj>
 8010b2a:	4620      	mov	r0, r4
 8010b2c:	bd10      	pop	{r4, pc}

08010b2e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8010b2e:	f1a0 0008 	sub.w	r0, r0, #8
 8010b32:	e7f5      	b.n	8010b20 <_ZN8touchgfx13PainterRGB565D0Ev>

08010b34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8010b34:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010b36:	6803      	ldr	r3, [r0, #0]
 8010b38:	460d      	mov	r5, r1
 8010b3a:	4604      	mov	r4, r0
 8010b3c:	4601      	mov	r1, r0
 8010b3e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010b40:	a802      	add	r0, sp, #8
 8010b42:	4798      	blx	r3
 8010b44:	6828      	ldr	r0, [r5, #0]
 8010b46:	6869      	ldr	r1, [r5, #4]
 8010b48:	466b      	mov	r3, sp
 8010b4a:	c303      	stmia	r3!, {r0, r1}
 8010b4c:	4668      	mov	r0, sp
 8010b4e:	4619      	mov	r1, r3
 8010b50:	f7fe ff8c 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 8010b54:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8010b56:	b188      	cbz	r0, 8010b7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010b58:	6803      	ldr	r3, [r0, #0]
 8010b5a:	1d21      	adds	r1, r4, #4
 8010b5c:	68db      	ldr	r3, [r3, #12]
 8010b5e:	4798      	blx	r3
 8010b60:	b160      	cbz	r0, 8010b7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010b62:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010b66:	2b00      	cmp	r3, #0
 8010b68:	dd08      	ble.n	8010b7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010b6a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8010b6e:	2d00      	cmp	r5, #0
 8010b70:	dd04      	ble.n	8010b7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010b72:	4a2b      	ldr	r2, [pc, #172]	; (8010c20 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8010b74:	7812      	ldrb	r2, [r2, #0]
 8010b76:	b11a      	cbz	r2, 8010b80 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8010b78:	2a01      	cmp	r2, #1
 8010b7a:	d029      	beq.n	8010bd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8010b7c:	b004      	add	sp, #16
 8010b7e:	bd70      	pop	{r4, r5, r6, pc}
 8010b80:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010b84:	441d      	add	r5, r3
 8010b86:	b2ad      	uxth	r5, r5
 8010b88:	b22e      	sxth	r6, r5
 8010b8a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8010b8e:	42b3      	cmp	r3, r6
 8010b90:	daf4      	bge.n	8010b7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010b92:	6823      	ldr	r3, [r4, #0]
 8010b94:	4669      	mov	r1, sp
 8010b96:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010b98:	4620      	mov	r0, r4
 8010b9a:	4798      	blx	r3
 8010b9c:	b940      	cbnz	r0, 8010bb0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010b9e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8010ba2:	2b01      	cmp	r3, #1
 8010ba4:	d004      	beq.n	8010bb0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010ba6:	3301      	adds	r3, #1
 8010ba8:	105b      	asrs	r3, r3, #1
 8010baa:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010bae:	e7f0      	b.n	8010b92 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8010bb0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010bb4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010bb8:	4413      	add	r3, r2
 8010bba:	b29b      	uxth	r3, r3
 8010bbc:	441a      	add	r2, r3
 8010bbe:	b212      	sxth	r2, r2
 8010bc0:	4296      	cmp	r6, r2
 8010bc2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010bc6:	dae0      	bge.n	8010b8a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010bc8:	1aeb      	subs	r3, r5, r3
 8010bca:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010bce:	e7dc      	b.n	8010b8a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010bd0:	f8bd 5000 	ldrh.w	r5, [sp]
 8010bd4:	441d      	add	r5, r3
 8010bd6:	b2ad      	uxth	r5, r5
 8010bd8:	b22e      	sxth	r6, r5
 8010bda:	f9bd 3000 	ldrsh.w	r3, [sp]
 8010bde:	42b3      	cmp	r3, r6
 8010be0:	dacc      	bge.n	8010b7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010be2:	6823      	ldr	r3, [r4, #0]
 8010be4:	4669      	mov	r1, sp
 8010be6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010be8:	4620      	mov	r0, r4
 8010bea:	4798      	blx	r3
 8010bec:	b940      	cbnz	r0, 8010c00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010bee:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010bf2:	2b01      	cmp	r3, #1
 8010bf4:	d004      	beq.n	8010c00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010bf6:	3301      	adds	r3, #1
 8010bf8:	105b      	asrs	r3, r3, #1
 8010bfa:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010bfe:	e7f0      	b.n	8010be2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8010c00:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8010c04:	f8bd 3000 	ldrh.w	r3, [sp]
 8010c08:	4413      	add	r3, r2
 8010c0a:	b29b      	uxth	r3, r3
 8010c0c:	441a      	add	r2, r3
 8010c0e:	b212      	sxth	r2, r2
 8010c10:	4296      	cmp	r6, r2
 8010c12:	f8ad 3000 	strh.w	r3, [sp]
 8010c16:	dae0      	bge.n	8010bda <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010c18:	1aeb      	subs	r3, r5, r3
 8010c1a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010c1e:	e7dc      	b.n	8010bda <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010c20:	2000ef14 	.word	0x2000ef14

08010c24 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8010c24:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010c26:	6803      	ldr	r3, [r0, #0]
 8010c28:	4604      	mov	r4, r0
 8010c2a:	4601      	mov	r1, r0
 8010c2c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010c2e:	4668      	mov	r0, sp
 8010c30:	4798      	blx	r3
 8010c32:	2100      	movs	r1, #0
 8010c34:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8010c38:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010c3c:	9102      	str	r1, [sp, #8]
 8010c3e:	4668      	mov	r0, sp
 8010c40:	a902      	add	r1, sp, #8
 8010c42:	f8ad 200c 	strh.w	r2, [sp, #12]
 8010c46:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010c4a:	f7fe ff0f 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 8010c4e:	6823      	ldr	r3, [r4, #0]
 8010c50:	4669      	mov	r1, sp
 8010c52:	691b      	ldr	r3, [r3, #16]
 8010c54:	4620      	mov	r0, r4
 8010c56:	4798      	blx	r3
 8010c58:	b004      	add	sp, #16
 8010c5a:	bd10      	pop	{r4, pc}

08010c5c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8010c5c:	2101      	movs	r1, #1
 8010c5e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8010c62:	490b      	ldr	r1, [pc, #44]	; (8010c90 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8010c64:	6001      	str	r1, [r0, #0]
 8010c66:	2200      	movs	r2, #0
 8010c68:	21ff      	movs	r1, #255	; 0xff
 8010c6a:	8082      	strh	r2, [r0, #4]
 8010c6c:	80c2      	strh	r2, [r0, #6]
 8010c6e:	8102      	strh	r2, [r0, #8]
 8010c70:	8142      	strh	r2, [r0, #10]
 8010c72:	8182      	strh	r2, [r0, #12]
 8010c74:	81c2      	strh	r2, [r0, #14]
 8010c76:	8202      	strh	r2, [r0, #16]
 8010c78:	8242      	strh	r2, [r0, #18]
 8010c7a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010c7e:	61c2      	str	r2, [r0, #28]
 8010c80:	8402      	strh	r2, [r0, #32]
 8010c82:	8442      	strh	r2, [r0, #34]	; 0x22
 8010c84:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010c88:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8010c8c:	6282      	str	r2, [r0, #40]	; 0x28
 8010c8e:	4770      	bx	lr
 8010c90:	0802a010 	.word	0x0802a010

08010c94 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8010c94:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8010c98:	4602      	mov	r2, r0
 8010c9a:	cb03      	ldmia	r3!, {r0, r1}
 8010c9c:	6010      	str	r0, [r2, #0]
 8010c9e:	6051      	str	r1, [r2, #4]
 8010ca0:	4610      	mov	r0, r2
 8010ca2:	4770      	bx	lr

08010ca4 <_ZN8touchgfx4LineD1Ev>:
 8010ca4:	4770      	bx	lr

08010ca6 <_ZN8touchgfx4LineD0Ev>:
 8010ca6:	b510      	push	{r4, lr}
 8010ca8:	2170      	movs	r1, #112	; 0x70
 8010caa:	4604      	mov	r4, r0
 8010cac:	f015 fc88 	bl	80265c0 <_ZdlPvj>
 8010cb0:	4620      	mov	r0, r4
 8010cb2:	bd10      	pop	{r4, pc}

08010cb4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8010cb4:	b507      	push	{r0, r1, r2, lr}
 8010cb6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8010cba:	ab01      	add	r3, sp, #4
 8010cbc:	6809      	ldr	r1, [r1, #0]
 8010cbe:	6800      	ldr	r0, [r0, #0]
 8010cc0:	f005 fba0 	bl	8016404 <_ZN8touchgfx6muldivElllRl>
 8010cc4:	b003      	add	sp, #12
 8010cc6:	f85d fb04 	ldr.w	pc, [sp], #4

08010cca <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8010cca:	6800      	ldr	r0, [r0, #0]
 8010ccc:	2800      	cmp	r0, #0
 8010cce:	bfb9      	ittee	lt
 8010cd0:	2320      	movlt	r3, #32
 8010cd2:	fb90 f0f3 	sdivlt	r0, r0, r3
 8010cd6:	301f      	addge	r0, #31
 8010cd8:	1140      	asrge	r0, r0, #5
 8010cda:	4770      	bx	lr

08010cdc <_ZNK8touchgfx4Line17invalidateContentEv>:
 8010cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ce0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8010ce4:	b089      	sub	sp, #36	; 0x24
 8010ce6:	4604      	mov	r4, r0
 8010ce8:	b353      	cbz	r3, 8010d40 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8010cea:	6803      	ldr	r3, [r0, #0]
 8010cec:	4601      	mov	r1, r0
 8010cee:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010cf0:	a802      	add	r0, sp, #8
 8010cf2:	4798      	blx	r3
 8010cf4:	2220      	movs	r2, #32
 8010cf6:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8010cfa:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010cfc:	fb9a f0f2 	sdiv	r0, sl, r2
 8010d00:	fb91 f5f2 	sdiv	r5, r1, r2
 8010d04:	1b40      	subs	r0, r0, r5
 8010d06:	2800      	cmp	r0, #0
 8010d08:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010d0a:	fb93 f6f2 	sdiv	r6, r3, r2
 8010d0e:	bfb8      	it	lt
 8010d10:	4240      	neglt	r0, r0
 8010d12:	0076      	lsls	r6, r6, #1
 8010d14:	4286      	cmp	r6, r0
 8010d16:	f8d4 b000 	ldr.w	fp, [r4]
 8010d1a:	dc0c      	bgt.n	8010d36 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8010d1c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8010d1e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8010d22:	fb95 f0f2 	sdiv	r0, r5, r2
 8010d26:	fb98 f7f2 	sdiv	r7, r8, r2
 8010d2a:	1bc0      	subs	r0, r0, r7
 8010d2c:	2800      	cmp	r0, #0
 8010d2e:	bfb8      	it	lt
 8010d30:	4240      	neglt	r0, r0
 8010d32:	4286      	cmp	r6, r0
 8010d34:	dd07      	ble.n	8010d46 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8010d36:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010d3a:	a902      	add	r1, sp, #8
 8010d3c:	4620      	mov	r0, r4
 8010d3e:	4798      	blx	r3
 8010d40:	b009      	add	sp, #36	; 0x24
 8010d42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d46:	3301      	adds	r3, #1
 8010d48:	2002      	movs	r0, #2
 8010d4a:	f10d 0920 	add.w	r9, sp, #32
 8010d4e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010d52:	4103      	asrs	r3, r0
 8010d54:	f849 3d08 	str.w	r3, [r9, #-8]!
 8010d58:	eb01 060a 	add.w	r6, r1, sl
 8010d5c:	eb08 0705 	add.w	r7, r8, r5
 8010d60:	fb96 f6f0 	sdiv	r6, r6, r0
 8010d64:	fb97 f7f0 	sdiv	r7, r7, r0
 8010d68:	4648      	mov	r0, r9
 8010d6a:	9101      	str	r1, [sp, #4]
 8010d6c:	b236      	sxth	r6, r6
 8010d6e:	b23f      	sxth	r7, r7
 8010d70:	fb96 f6f2 	sdiv	r6, r6, r2
 8010d74:	fb97 f7f2 	sdiv	r7, r7, r2
 8010d78:	f7ff ffa7 	bl	8010cca <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010d7c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010d80:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8010d84:	9901      	ldr	r1, [sp, #4]
 8010d86:	4293      	cmp	r3, r2
 8010d88:	fa1f fe87 	uxth.w	lr, r7
 8010d8c:	fa1f fc86 	uxth.w	ip, r6
 8010d90:	eba1 0a0a 	sub.w	sl, r1, sl
 8010d94:	b280      	uxth	r0, r0
 8010d96:	da54      	bge.n	8010e42 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8010d98:	ebac 0100 	sub.w	r1, ip, r0
 8010d9c:	b289      	uxth	r1, r1
 8010d9e:	4460      	add	r0, ip
 8010da0:	f1ba 0f00 	cmp.w	sl, #0
 8010da4:	b20e      	sxth	r6, r1
 8010da6:	b280      	uxth	r0, r0
 8010da8:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8010dac:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8010db0:	da29      	bge.n	8010e06 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8010db2:	eba8 0505 	sub.w	r5, r8, r5
 8010db6:	2d00      	cmp	r5, #0
 8010db8:	da2a      	bge.n	8010e10 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010dba:	fa1f f88a 	uxth.w	r8, sl
 8010dbe:	eba0 0008 	sub.w	r0, r0, r8
 8010dc2:	fa1f f58c 	uxth.w	r5, ip
 8010dc6:	4443      	add	r3, r8
 8010dc8:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010dcc:	1a59      	subs	r1, r3, r1
 8010dce:	ebae 0005 	sub.w	r0, lr, r5
 8010dd2:	f8ad a010 	strh.w	sl, [sp, #16]
 8010dd6:	f8ad c012 	strh.w	ip, [sp, #18]
 8010dda:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010dde:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010de2:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010de6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010dea:	442a      	add	r2, r5
 8010dec:	eba2 0e0e 	sub.w	lr, r2, lr
 8010df0:	f8ad e01e 	strh.w	lr, [sp, #30]
 8010df4:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010df8:	a904      	add	r1, sp, #16
 8010dfa:	4620      	mov	r0, r4
 8010dfc:	4798      	blx	r3
 8010dfe:	6823      	ldr	r3, [r4, #0]
 8010e00:	4649      	mov	r1, r9
 8010e02:	691b      	ldr	r3, [r3, #16]
 8010e04:	e79a      	b.n	8010d3c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8010e06:	d003      	beq.n	8010e10 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010e08:	eba8 0505 	sub.w	r5, r8, r5
 8010e0c:	2d00      	cmp	r5, #0
 8010e0e:	dcd4      	bgt.n	8010dba <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8010e10:	fa1f f88a 	uxth.w	r8, sl
 8010e14:	4443      	add	r3, r8
 8010e16:	fa1f f58c 	uxth.w	r5, ip
 8010e1a:	1a59      	subs	r1, r3, r1
 8010e1c:	eba0 0008 	sub.w	r0, r0, r8
 8010e20:	ebae 0305 	sub.w	r3, lr, r5
 8010e24:	f8ad 6010 	strh.w	r6, [sp, #16]
 8010e28:	f8ad c012 	strh.w	ip, [sp, #18]
 8010e2c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010e30:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010e34:	f8ad a018 	strh.w	sl, [sp, #24]
 8010e38:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010e3c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8010e40:	e7d3      	b.n	8010dea <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8010e42:	ebae 0100 	sub.w	r1, lr, r0
 8010e46:	b289      	uxth	r1, r1
 8010e48:	4470      	add	r0, lr
 8010e4a:	f1ba 0f00 	cmp.w	sl, #0
 8010e4e:	b20f      	sxth	r7, r1
 8010e50:	b280      	uxth	r0, r0
 8010e52:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8010e56:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8010e5a:	da20      	bge.n	8010e9e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8010e5c:	eba8 0505 	sub.w	r5, r8, r5
 8010e60:	2d00      	cmp	r5, #0
 8010e62:	da21      	bge.n	8010ea8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010e64:	fa1f f88e 	uxth.w	r8, lr
 8010e68:	fa1f f58a 	uxth.w	r5, sl
 8010e6c:	4443      	add	r3, r8
 8010e6e:	442a      	add	r2, r5
 8010e70:	f8ad e010 	strh.w	lr, [sp, #16]
 8010e74:	1b40      	subs	r0, r0, r5
 8010e76:	ebac 0e08 	sub.w	lr, ip, r8
 8010e7a:	1a51      	subs	r1, r2, r1
 8010e7c:	eba3 0c0c 	sub.w	ip, r3, ip
 8010e80:	f8ad a012 	strh.w	sl, [sp, #18]
 8010e84:	f8ad e014 	strh.w	lr, [sp, #20]
 8010e88:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010e8c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010e90:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010e94:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010e98:	f8ad 101e 	strh.w	r1, [sp, #30]
 8010e9c:	e7aa      	b.n	8010df4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8010e9e:	d003      	beq.n	8010ea8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010ea0:	eba8 0505 	sub.w	r5, r8, r5
 8010ea4:	2d00      	cmp	r5, #0
 8010ea6:	dcdd      	bgt.n	8010e64 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8010ea8:	fa1f f58e 	uxth.w	r5, lr
 8010eac:	fa1f f88a 	uxth.w	r8, sl
 8010eb0:	4442      	add	r2, r8
 8010eb2:	442b      	add	r3, r5
 8010eb4:	f8ad 7012 	strh.w	r7, [sp, #18]
 8010eb8:	1a51      	subs	r1, r2, r1
 8010eba:	ebac 0705 	sub.w	r7, ip, r5
 8010ebe:	eba0 0008 	sub.w	r0, r0, r8
 8010ec2:	eba3 0c0c 	sub.w	ip, r3, ip
 8010ec6:	f8ad e010 	strh.w	lr, [sp, #16]
 8010eca:	f8ad 7014 	strh.w	r7, [sp, #20]
 8010ece:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010ed2:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010ed6:	f8ad a01a 	strh.w	sl, [sp, #26]
 8010eda:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010ede:	f8ad 001e 	strh.w	r0, [sp, #30]
 8010ee2:	e787      	b.n	8010df4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08010ee4 <_ZN8touchgfx7CWRUtil4sineEi>:
 8010ee4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8010ee8:	fb90 f2f3 	sdiv	r2, r0, r3
 8010eec:	fb02 0013 	mls	r0, r2, r3, r0
 8010ef0:	2800      	cmp	r0, #0
 8010ef2:	bfb8      	it	lt
 8010ef4:	18c0      	addlt	r0, r0, r3
 8010ef6:	285a      	cmp	r0, #90	; 0x5a
 8010ef8:	4b09      	ldr	r3, [pc, #36]	; (8010f20 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8010efa:	dc02      	bgt.n	8010f02 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8010efc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010f00:	4770      	bx	lr
 8010f02:	28b4      	cmp	r0, #180	; 0xb4
 8010f04:	dc02      	bgt.n	8010f0c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8010f06:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8010f0a:	e7f7      	b.n	8010efc <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8010f0c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8010f10:	bfd4      	ite	le
 8010f12:	38b4      	suble	r0, #180	; 0xb4
 8010f14:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8010f18:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010f1c:	4240      	negs	r0, r0
 8010f1e:	4770      	bx	lr
 8010f20:	0802a0dc 	.word	0x0802a0dc

08010f24 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8010f24:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8010f28:	bf2c      	ite	cs
 8010f2a:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8010f2e:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8010f32:	2300      	movs	r3, #0
 8010f34:	1899      	adds	r1, r3, r2
 8010f36:	4288      	cmp	r0, r1
 8010f38:	bf24      	itt	cs
 8010f3a:	1853      	addcs	r3, r2, r1
 8010f3c:	1a40      	subcs	r0, r0, r1
 8010f3e:	0892      	lsrs	r2, r2, #2
 8010f40:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8010f44:	d1f6      	bne.n	8010f34 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8010f46:	4618      	mov	r0, r3
 8010f48:	4770      	bx	lr

08010f4a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8010f4a:	b510      	push	{r4, lr}
 8010f4c:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8010f50:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8010f54:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8010f58:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8010f5c:	13a4      	asrs	r4, r4, #14
 8010f5e:	139b      	asrs	r3, r3, #14
 8010f60:	429c      	cmp	r4, r3
 8010f62:	bfb8      	it	lt
 8010f64:	461c      	movlt	r4, r3
 8010f66:	2c01      	cmp	r4, #1
 8010f68:	dd07      	ble.n	8010f7a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8010f6a:	fb91 f1f4 	sdiv	r1, r1, r4
 8010f6e:	fb90 f0f4 	sdiv	r0, r0, r4
 8010f72:	f7ff ffea 	bl	8010f4a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010f76:	4360      	muls	r0, r4
 8010f78:	bd10      	pop	{r4, pc}
 8010f7a:	4340      	muls	r0, r0
 8010f7c:	fb01 0001 	mla	r0, r1, r1, r0
 8010f80:	f7ff ffd0 	bl	8010f24 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010f84:	e7f8      	b.n	8010f78 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>
	...

08010f88 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8010f88:	2800      	cmp	r0, #0
 8010f8a:	b508      	push	{r3, lr}
 8010f8c:	da05      	bge.n	8010f9a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8010f8e:	4240      	negs	r0, r0
 8010f90:	f7ff fffa 	bl	8010f88 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010f94:	4240      	negs	r0, r0
 8010f96:	b240      	sxtb	r0, r0
 8010f98:	bd08      	pop	{r3, pc}
 8010f9a:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8010f9e:	dc11      	bgt.n	8010fc4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8010fa0:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8010fa4:	dd09      	ble.n	8010fba <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8010fa6:	4340      	muls	r0, r0
 8010fa8:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8010fac:	f7ff ffba 	bl	8010f24 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010fb0:	f7ff ffea 	bl	8010f88 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010fb4:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010fb8:	e7ed      	b.n	8010f96 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8010fba:	3003      	adds	r0, #3
 8010fbc:	10c0      	asrs	r0, r0, #3
 8010fbe:	4b02      	ldr	r3, [pc, #8]	; (8010fc8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8010fc0:	5618      	ldrsb	r0, [r3, r0]
 8010fc2:	e7e9      	b.n	8010f98 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010fc4:	2000      	movs	r0, #0
 8010fc6:	e7e7      	b.n	8010f98 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010fc8:	0802a080 	.word	0x0802a080

08010fcc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8010fcc:	4281      	cmp	r1, r0
 8010fce:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010fd0:	460c      	mov	r4, r1
 8010fd2:	4615      	mov	r5, r2
 8010fd4:	dd07      	ble.n	8010fe6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8010fd6:	4601      	mov	r1, r0
 8010fd8:	4620      	mov	r0, r4
 8010fda:	f7ff fff7 	bl	8010fcc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010fde:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010fe2:	b003      	add	sp, #12
 8010fe4:	bd30      	pop	{r4, r5, pc}
 8010fe6:	f7ff ffb0 	bl	8010f4a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010fea:	6028      	str	r0, [r5, #0]
 8010fec:	2800      	cmp	r0, #0
 8010fee:	d0f8      	beq.n	8010fe2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8010ff0:	4602      	mov	r2, r0
 8010ff2:	ab01      	add	r3, sp, #4
 8010ff4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010ff8:	4620      	mov	r0, r4
 8010ffa:	f005 fa03 	bl	8016404 <_ZN8touchgfx6muldivElllRl>
 8010ffe:	f7ff ffc3 	bl	8010f88 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011002:	e7ee      	b.n	8010fe2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08011004 <_ZN8touchgfx4LineC1Ev>:
 8011004:	b510      	push	{r4, lr}
 8011006:	4604      	mov	r4, r0
 8011008:	f7ff fe28 	bl	8010c5c <_ZN8touchgfx12CanvasWidgetC1Ev>
 801100c:	4b0c      	ldr	r3, [pc, #48]	; (8011040 <_ZN8touchgfx4LineC1Ev+0x3c>)
 801100e:	6023      	str	r3, [r4, #0]
 8011010:	2220      	movs	r2, #32
 8011012:	2300      	movs	r3, #0
 8011014:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011016:	2212      	movs	r2, #18
 8011018:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 801101c:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8011020:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011024:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8011028:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801102c:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8011030:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8011034:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8011038:	66e2      	str	r2, [r4, #108]	; 0x6c
 801103a:	60a3      	str	r3, [r4, #8]
 801103c:	4620      	mov	r0, r4
 801103e:	bd10      	pop	{r4, pc}
 8011040:	0802a19c 	.word	0x0802a19c

08011044 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011044:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011048:	6b47      	ldr	r7, [r0, #52]	; 0x34
 801104a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801104c:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801104e:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8011050:	1aff      	subs	r7, r7, r3
 8011052:	4604      	mov	r4, r0
 8011054:	eba5 0502 	sub.w	r5, r5, r2
 8011058:	d142      	bne.n	80110e0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 801105a:	b955      	cbnz	r5, 8011072 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 801105c:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8011060:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011064:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011068:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 801106c:	b002      	add	sp, #8
 801106e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011072:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011076:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 801107a:	4629      	mov	r1, r5
 801107c:	4642      	mov	r2, r8
 801107e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011080:	f005 f9df 	bl	8016442 <_ZN8touchgfx6muldivElll>
 8011084:	2502      	movs	r5, #2
 8011086:	4642      	mov	r2, r8
 8011088:	fb90 f6f5 	sdiv	r6, r0, r5
 801108c:	4639      	mov	r1, r7
 801108e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011090:	f005 f9d7 	bl	8016442 <_ZN8touchgfx6muldivElll>
 8011094:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8011098:	fb90 f5f5 	sdiv	r5, r0, r5
 801109c:	f1b9 0f00 	cmp.w	r9, #0
 80110a0:	d067      	beq.n	8011172 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 80110a2:	f1b9 0f02 	cmp.w	r9, #2
 80110a6:	d878      	bhi.n	801119a <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 80110a8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80110aa:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80110ac:	1b93      	subs	r3, r2, r6
 80110ae:	1b5b      	subs	r3, r3, r5
 80110b0:	6463      	str	r3, [r4, #68]	; 0x44
 80110b2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80110b4:	18e9      	adds	r1, r5, r3
 80110b6:	1b89      	subs	r1, r1, r6
 80110b8:	6561      	str	r1, [r4, #84]	; 0x54
 80110ba:	1b81      	subs	r1, r0, r6
 80110bc:	4429      	add	r1, r5
 80110be:	64a1      	str	r1, [r4, #72]	; 0x48
 80110c0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80110c2:	4430      	add	r0, r6
 80110c4:	186f      	adds	r7, r5, r1
 80110c6:	4432      	add	r2, r6
 80110c8:	1b49      	subs	r1, r1, r5
 80110ca:	4437      	add	r7, r6
 80110cc:	4428      	add	r0, r5
 80110ce:	4431      	add	r1, r6
 80110d0:	1b52      	subs	r2, r2, r5
 80110d2:	1b5b      	subs	r3, r3, r5
 80110d4:	65a7      	str	r7, [r4, #88]	; 0x58
 80110d6:	64e0      	str	r0, [r4, #76]	; 0x4c
 80110d8:	65e1      	str	r1, [r4, #92]	; 0x5c
 80110da:	6522      	str	r2, [r4, #80]	; 0x50
 80110dc:	1b9b      	subs	r3, r3, r6
 80110de:	e05b      	b.n	8011198 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80110e0:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80110e4:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80110e8:	2d00      	cmp	r5, #0
 80110ea:	d0c6      	beq.n	801107a <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80110ec:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80110f0:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80110f4:	fb93 f2f8 	sdiv	r2, r3, r8
 80110f8:	fb08 3312 	mls	r3, r8, r2, r3
 80110fc:	b353      	cbz	r3, 8011154 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80110fe:	fb98 f2f3 	sdiv	r2, r8, r3
 8011102:	fb03 8812 	mls	r8, r3, r2, r8
 8011106:	f1b8 0f00 	cmp.w	r8, #0
 801110a:	d1f3      	bne.n	80110f4 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 801110c:	2b01      	cmp	r3, #1
 801110e:	bf1c      	itt	ne
 8011110:	fb95 f5f3 	sdivne	r5, r5, r3
 8011114:	fb97 f7f3 	sdivne	r7, r7, r3
 8011118:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 801111c:	f24b 5104 	movw	r1, #46340	; 0xb504
 8011120:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8011124:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8011128:	428b      	cmp	r3, r1
 801112a:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801112e:	4608      	mov	r0, r1
 8011130:	dd01      	ble.n	8011136 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8011132:	428a      	cmp	r2, r1
 8011134:	dc10      	bgt.n	8011158 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8011136:	fb90 f3f3 	sdiv	r3, r0, r3
 801113a:	fb90 f2f2 	sdiv	r2, r0, r2
 801113e:	4293      	cmp	r3, r2
 8011140:	bfa8      	it	ge
 8011142:	4613      	movge	r3, r2
 8011144:	435f      	muls	r7, r3
 8011146:	435d      	muls	r5, r3
 8011148:	4629      	mov	r1, r5
 801114a:	4638      	mov	r0, r7
 801114c:	f7ff fefd 	bl	8010f4a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011150:	4680      	mov	r8, r0
 8011152:	e792      	b.n	801107a <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011154:	4643      	mov	r3, r8
 8011156:	e7d9      	b.n	801110c <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011158:	fb93 f3f1 	sdiv	r3, r3, r1
 801115c:	fb92 f2f1 	sdiv	r2, r2, r1
 8011160:	4293      	cmp	r3, r2
 8011162:	bfcc      	ite	gt
 8011164:	3301      	addgt	r3, #1
 8011166:	1c53      	addle	r3, r2, #1
 8011168:	fb97 f7f3 	sdiv	r7, r7, r3
 801116c:	fb95 f5f3 	sdiv	r5, r5, r3
 8011170:	e7ea      	b.n	8011148 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8011172:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011174:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011176:	1b93      	subs	r3, r2, r6
 8011178:	6463      	str	r3, [r4, #68]	; 0x44
 801117a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801117c:	18e9      	adds	r1, r5, r3
 801117e:	6561      	str	r1, [r4, #84]	; 0x54
 8011180:	1b81      	subs	r1, r0, r6
 8011182:	64a1      	str	r1, [r4, #72]	; 0x48
 8011184:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011186:	4430      	add	r0, r6
 8011188:	186f      	adds	r7, r5, r1
 801118a:	4432      	add	r2, r6
 801118c:	1b49      	subs	r1, r1, r5
 801118e:	65a7      	str	r7, [r4, #88]	; 0x58
 8011190:	64e0      	str	r0, [r4, #76]	; 0x4c
 8011192:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011194:	6522      	str	r2, [r4, #80]	; 0x50
 8011196:	1b5b      	subs	r3, r3, r5
 8011198:	6623      	str	r3, [r4, #96]	; 0x60
 801119a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 801119c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801119e:	9200      	str	r2, [sp, #0]
 80111a0:	9301      	str	r3, [sp, #4]
 80111a2:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80111a6:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80111aa:	680f      	ldr	r7, [r1, #0]
 80111ac:	9800      	ldr	r0, [sp, #0]
 80111ae:	42ba      	cmp	r2, r7
 80111b0:	bfa8      	it	ge
 80111b2:	463a      	movge	r2, r7
 80111b4:	4287      	cmp	r7, r0
 80111b6:	bfc8      	it	gt
 80111b8:	9700      	strgt	r7, [sp, #0]
 80111ba:	690f      	ldr	r7, [r1, #16]
 80111bc:	9801      	ldr	r0, [sp, #4]
 80111be:	42bb      	cmp	r3, r7
 80111c0:	bfa8      	it	ge
 80111c2:	463b      	movge	r3, r7
 80111c4:	3104      	adds	r1, #4
 80111c6:	4287      	cmp	r7, r0
 80111c8:	bfc8      	it	gt
 80111ca:	9701      	strgt	r7, [sp, #4]
 80111cc:	458c      	cmp	ip, r1
 80111ce:	d1ec      	bne.n	80111aa <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80111d0:	4668      	mov	r0, sp
 80111d2:	2720      	movs	r7, #32
 80111d4:	fb92 f8f7 	sdiv	r8, r2, r7
 80111d8:	fb93 f7f7 	sdiv	r7, r3, r7
 80111dc:	f7ff fd75 	bl	8010cca <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80111e0:	4682      	mov	sl, r0
 80111e2:	a801      	add	r0, sp, #4
 80111e4:	f7ff fd71 	bl	8010cca <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80111e8:	ebaa 0208 	sub.w	r2, sl, r8
 80111ec:	1bc0      	subs	r0, r0, r7
 80111ee:	f1b9 0f01 	cmp.w	r9, #1
 80111f2:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80111f6:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80111fa:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80111fe:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8011202:	f47f af33 	bne.w	801106c <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8011206:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011208:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801120a:	1b83      	subs	r3, r0, r6
 801120c:	6463      	str	r3, [r4, #68]	; 0x44
 801120e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011210:	18ea      	adds	r2, r5, r3
 8011212:	6562      	str	r2, [r4, #84]	; 0x54
 8011214:	1b8a      	subs	r2, r1, r6
 8011216:	64a2      	str	r2, [r4, #72]	; 0x48
 8011218:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801121a:	4431      	add	r1, r6
 801121c:	18af      	adds	r7, r5, r2
 801121e:	4406      	add	r6, r0
 8011220:	1b52      	subs	r2, r2, r5
 8011222:	1b5d      	subs	r5, r3, r5
 8011224:	65a7      	str	r7, [r4, #88]	; 0x58
 8011226:	64e1      	str	r1, [r4, #76]	; 0x4c
 8011228:	65e2      	str	r2, [r4, #92]	; 0x5c
 801122a:	6526      	str	r6, [r4, #80]	; 0x50
 801122c:	6625      	str	r5, [r4, #96]	; 0x60
 801122e:	e71d      	b.n	801106c <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08011230 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8011230:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011232:	428b      	cmp	r3, r1
 8011234:	d102      	bne.n	801123c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8011236:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011238:	4293      	cmp	r3, r2
 801123a:	d003      	beq.n	8011244 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 801123c:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8011240:	f7ff bf00 	b.w	8011044 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011244:	4770      	bx	lr

08011246 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011246:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011248:	428b      	cmp	r3, r1
 801124a:	d102      	bne.n	8011252 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 801124c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801124e:	4293      	cmp	r3, r2
 8011250:	d003      	beq.n	801125a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8011252:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011256:	f7ff bef5 	b.w	8011044 <_ZN8touchgfx4Line17updateCachedShapeEv>
 801125a:	4770      	bx	lr

0801125c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 801125c:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8011260:	f7ff bef0 	b.w	8011044 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011264 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011264:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011268:	b0a0      	sub	sp, #128	; 0x80
 801126a:	4604      	mov	r4, r0
 801126c:	460a      	mov	r2, r1
 801126e:	4601      	mov	r1, r0
 8011270:	a804      	add	r0, sp, #16
 8011272:	f014 ff45 	bl	8026100 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011276:	2300      	movs	r3, #0
 8011278:	9301      	str	r3, [sp, #4]
 801127a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801127e:	2b01      	cmp	r3, #1
 8011280:	d17c      	bne.n	801137c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8011282:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011284:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011286:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8011288:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801128a:	1ac0      	subs	r0, r0, r3
 801128c:	eba1 0102 	sub.w	r1, r1, r2
 8011290:	d437      	bmi.n	8011302 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8011292:	2900      	cmp	r1, #0
 8011294:	aa01      	add	r2, sp, #4
 8011296:	db2e      	blt.n	80112f6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8011298:	f7ff fe98 	bl	8010fcc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801129c:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 80112a0:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80112a2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80112a4:	a804      	add	r0, sp, #16
 80112a6:	f015 f8ab 	bl	8026400 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80112aa:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80112ac:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80112ae:	a804      	add	r0, sp, #16
 80112b0:	f015 f8f3 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80112b4:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80112b6:	2db3      	cmp	r5, #179	; 0xb3
 80112b8:	dc33      	bgt.n	8011322 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80112ba:	eba6 0805 	sub.w	r8, r6, r5
 80112be:	4640      	mov	r0, r8
 80112c0:	f7ff fe10 	bl	8010ee4 <_ZN8touchgfx7CWRUtil4sineEi>
 80112c4:	a902      	add	r1, sp, #8
 80112c6:	9002      	str	r0, [sp, #8]
 80112c8:	a801      	add	r0, sp, #4
 80112ca:	f7ff fcf3 	bl	8010cb4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80112ce:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80112d0:	1847      	adds	r7, r0, r1
 80112d2:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80112d6:	f7ff fe05 	bl	8010ee4 <_ZN8touchgfx7CWRUtil4sineEi>
 80112da:	a903      	add	r1, sp, #12
 80112dc:	9003      	str	r0, [sp, #12]
 80112de:	a801      	add	r0, sp, #4
 80112e0:	f7ff fce8 	bl	8010cb4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80112e4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80112e6:	4639      	mov	r1, r7
 80112e8:	1a12      	subs	r2, r2, r0
 80112ea:	a804      	add	r0, sp, #16
 80112ec:	f015 f8d5 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80112f0:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80112f2:	441d      	add	r5, r3
 80112f4:	e7df      	b.n	80112b6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 80112f6:	4249      	negs	r1, r1
 80112f8:	f7ff fe68 	bl	8010fcc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80112fc:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8011300:	e7ce      	b.n	80112a0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011302:	2900      	cmp	r1, #0
 8011304:	f1c0 0000 	rsb	r0, r0, #0
 8011308:	aa01      	add	r2, sp, #4
 801130a:	db04      	blt.n	8011316 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 801130c:	f7ff fe5e 	bl	8010fcc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011310:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8011314:	e7c4      	b.n	80112a0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011316:	4249      	negs	r1, r1
 8011318:	f7ff fe58 	bl	8010fcc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801131c:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8011320:	e7be      	b.n	80112a0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011322:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011324:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011326:	a804      	add	r0, sp, #16
 8011328:	f015 f8b7 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801132c:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801132e:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8011330:	a804      	add	r0, sp, #16
 8011332:	f015 f8b2 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011336:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011338:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 801133c:	2d00      	cmp	r5, #0
 801133e:	dd31      	ble.n	80113a4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8011340:	eb05 0806 	add.w	r8, r5, r6
 8011344:	4640      	mov	r0, r8
 8011346:	f7ff fdcd 	bl	8010ee4 <_ZN8touchgfx7CWRUtil4sineEi>
 801134a:	a902      	add	r1, sp, #8
 801134c:	9002      	str	r0, [sp, #8]
 801134e:	a801      	add	r0, sp, #4
 8011350:	f7ff fcb0 	bl	8010cb4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011354:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011356:	1847      	adds	r7, r0, r1
 8011358:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 801135c:	f7ff fdc2 	bl	8010ee4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011360:	a903      	add	r1, sp, #12
 8011362:	9003      	str	r0, [sp, #12]
 8011364:	a801      	add	r0, sp, #4
 8011366:	f7ff fca5 	bl	8010cb4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801136a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801136c:	4639      	mov	r1, r7
 801136e:	1a12      	subs	r2, r2, r0
 8011370:	a804      	add	r0, sp, #16
 8011372:	f015 f892 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011376:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011378:	1aed      	subs	r5, r5, r3
 801137a:	e7df      	b.n	801133c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 801137c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801137e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011380:	a804      	add	r0, sp, #16
 8011382:	f015 f83d 	bl	8026400 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011386:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011388:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801138a:	a804      	add	r0, sp, #16
 801138c:	f015 f885 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011390:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011392:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011394:	a804      	add	r0, sp, #16
 8011396:	f015 f880 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801139a:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801139c:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801139e:	a804      	add	r0, sp, #16
 80113a0:	f015 f87b 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80113a4:	21ff      	movs	r1, #255	; 0xff
 80113a6:	a804      	add	r0, sp, #16
 80113a8:	f014 ff66 	bl	8026278 <_ZN8touchgfx6Canvas6renderEh>
 80113ac:	4b04      	ldr	r3, [pc, #16]	; (80113c0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80113ae:	9304      	str	r3, [sp, #16]
 80113b0:	4604      	mov	r4, r0
 80113b2:	a80c      	add	r0, sp, #48	; 0x30
 80113b4:	f001 f9d6 	bl	8012764 <_ZN8touchgfx7OutlineD1Ev>
 80113b8:	4620      	mov	r0, r4
 80113ba:	b020      	add	sp, #128	; 0x80
 80113bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80113c0:	0802aa24 	.word	0x0802aa24

080113c4 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 80113c4:	b508      	push	{r3, lr}
 80113c6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80113ca:	b10b      	cbz	r3, 80113d0 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 80113cc:	f7f0 fc51 	bl	8001c72 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80113d0:	bd08      	pop	{r3, pc}

080113d2 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 80113d2:	6803      	ldr	r3, [r0, #0]
 80113d4:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 80113d8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80113da:	4718      	bx	r3

080113dc <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 80113dc:	4770      	bx	lr

080113de <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 80113de:	b510      	push	{r4, lr}
 80113e0:	212c      	movs	r1, #44	; 0x2c
 80113e2:	4604      	mov	r4, r0
 80113e4:	f015 f8ec 	bl	80265c0 <_ZdlPvj>
 80113e8:	4620      	mov	r0, r4
 80113ea:	bd10      	pop	{r4, pc}

080113ec <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 80113ec:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80113f0:	2bff      	cmp	r3, #255	; 0xff
 80113f2:	b510      	push	{r4, lr}
 80113f4:	d104      	bne.n	8011400 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 80113f6:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 80113f8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80113fc:	429a      	cmp	r2, r3
 80113fe:	d105      	bne.n	801140c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 8011400:	2300      	movs	r3, #0
 8011402:	8003      	strh	r3, [r0, #0]
 8011404:	8043      	strh	r3, [r0, #2]
 8011406:	8083      	strh	r3, [r0, #4]
 8011408:	80c3      	strh	r3, [r0, #6]
 801140a:	bd10      	pop	{r4, pc}
 801140c:	2300      	movs	r3, #0
 801140e:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8011412:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 8011416:	8003      	strh	r3, [r0, #0]
 8011418:	8043      	strh	r3, [r0, #2]
 801141a:	8084      	strh	r4, [r0, #4]
 801141c:	80c2      	strh	r2, [r0, #6]
 801141e:	e7f4      	b.n	801140a <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

08011420 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 8011420:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011424:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8011428:	b087      	sub	sp, #28
 801142a:	4604      	mov	r4, r0
 801142c:	4689      	mov	r9, r1
 801142e:	b363      	cbz	r3, 801148a <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 8011430:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 8011432:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011436:	429a      	cmp	r2, r3
 8011438:	d027      	beq.n	801148a <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 801143a:	ad06      	add	r5, sp, #24
 801143c:	2700      	movs	r7, #0
 801143e:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 8011442:	4628      	mov	r0, r5
 8011444:	f007 f93a 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011448:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801144c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011450:	6823      	ldr	r3, [r4, #0]
 8011452:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011456:	a904      	add	r1, sp, #16
 8011458:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801145a:	9704      	str	r7, [sp, #16]
 801145c:	4620      	mov	r0, r4
 801145e:	4798      	blx	r3
 8011460:	f7f3 f91c 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 8011464:	6803      	ldr	r3, [r0, #0]
 8011466:	4606      	mov	r6, r0
 8011468:	f8d3 800c 	ldr.w	r8, [r3, #12]
 801146c:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 801146e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011472:	4628      	mov	r0, r5
 8011474:	f007 fa0e 	bl	8018894 <_ZNK8touchgfx6Bitmap7getDataEv>
 8011478:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801147c:	9300      	str	r3, [sp, #0]
 801147e:	4601      	mov	r1, r0
 8011480:	9701      	str	r7, [sp, #4]
 8011482:	464b      	mov	r3, r9
 8011484:	aa04      	add	r2, sp, #16
 8011486:	4630      	mov	r0, r6
 8011488:	47c0      	blx	r8
 801148a:	b007      	add	sp, #28
 801148c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08011490 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 8011490:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011492:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011496:	f8ad 3006 	strh.w	r3, [sp, #6]
 801149a:	6803      	ldr	r3, [r0, #0]
 801149c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 80114a0:	f8ad 2004 	strh.w	r2, [sp, #4]
 80114a4:	460d      	mov	r5, r1
 80114a6:	2100      	movs	r1, #0
 80114a8:	4604      	mov	r4, r0
 80114aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80114ac:	9100      	str	r1, [sp, #0]
 80114ae:	4669      	mov	r1, sp
 80114b0:	4798      	blx	r3
 80114b2:	4621      	mov	r1, r4
 80114b4:	a802      	add	r0, sp, #8
 80114b6:	f004 fe73 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80114ba:	f7f3 f8ef 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 80114be:	6803      	ldr	r3, [r0, #0]
 80114c0:	aa02      	add	r2, sp, #8
 80114c2:	695e      	ldr	r6, [r3, #20]
 80114c4:	4669      	mov	r1, sp
 80114c6:	462b      	mov	r3, r5
 80114c8:	47b0      	blx	r6
 80114ca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80114ce:	2800      	cmp	r0, #0
 80114d0:	bf08      	it	eq
 80114d2:	461d      	moveq	r5, r3
 80114d4:	84e5      	strh	r5, [r4, #38]	; 0x26
 80114d6:	b004      	add	sp, #16
 80114d8:	bd70      	pop	{r4, r5, r6, pc}
	...

080114dc <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 80114dc:	2200      	movs	r2, #0
 80114de:	8082      	strh	r2, [r0, #4]
 80114e0:	80c2      	strh	r2, [r0, #6]
 80114e2:	8102      	strh	r2, [r0, #8]
 80114e4:	8142      	strh	r2, [r0, #10]
 80114e6:	8182      	strh	r2, [r0, #12]
 80114e8:	81c2      	strh	r2, [r0, #14]
 80114ea:	8202      	strh	r2, [r0, #16]
 80114ec:	8242      	strh	r2, [r0, #18]
 80114ee:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80114f2:	61c2      	str	r2, [r0, #28]
 80114f4:	8402      	strh	r2, [r0, #32]
 80114f6:	8442      	strh	r2, [r0, #34]	; 0x22
 80114f8:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80114fc:	2201      	movs	r2, #1
 80114fe:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8011502:	4a04      	ldr	r2, [pc, #16]	; (8011514 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 8011504:	6002      	str	r2, [r0, #0]
 8011506:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801150a:	84c2      	strh	r2, [r0, #38]	; 0x26
 801150c:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 8011510:	4770      	bx	lr
 8011512:	bf00      	nop
 8011514:	0802a214 	.word	0x0802a214

08011518 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8011518:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 801151c:	b12a      	cbz	r2, 801152a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801151e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011522:	b112      	cbz	r2, 801152a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8011524:	6803      	ldr	r3, [r0, #0]
 8011526:	695b      	ldr	r3, [r3, #20]
 8011528:	4718      	bx	r3
 801152a:	4770      	bx	lr

0801152c <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 801152c:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8011530:	4770      	bx	lr

08011532 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 8011532:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8011536:	4770      	bx	lr

08011538 <_ZN8touchgfx13ScalableImageD1Ev>:
 8011538:	4770      	bx	lr

0801153a <_ZN8touchgfx13ScalableImageD0Ev>:
 801153a:	b510      	push	{r4, lr}
 801153c:	212c      	movs	r1, #44	; 0x2c
 801153e:	4604      	mov	r4, r0
 8011540:	f015 f83e 	bl	80265c0 <_ZdlPvj>
 8011544:	4620      	mov	r0, r4
 8011546:	bd10      	pop	{r4, pc}

08011548 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 8011548:	b5f0      	push	{r4, r5, r6, r7, lr}
 801154a:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 801154e:	2bff      	cmp	r3, #255	; 0xff
 8011550:	b085      	sub	sp, #20
 8011552:	4604      	mov	r4, r0
 8011554:	460d      	mov	r5, r1
 8011556:	d128      	bne.n	80115aa <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8011558:	f101 0626 	add.w	r6, r1, #38	; 0x26
 801155c:	4631      	mov	r1, r6
 801155e:	4668      	mov	r0, sp
 8011560:	f007 f914 	bl	801878c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011564:	4630      	mov	r0, r6
 8011566:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 801156a:	f007 f8a7 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801156e:	4287      	cmp	r7, r0
 8011570:	d11b      	bne.n	80115aa <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8011572:	4630      	mov	r0, r6
 8011574:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 8011578:	f007 f8d4 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801157c:	4287      	cmp	r7, r0
 801157e:	d114      	bne.n	80115aa <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8011580:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8011584:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011588:	2100      	movs	r1, #0
 801158a:	466b      	mov	r3, sp
 801158c:	9102      	str	r1, [sp, #8]
 801158e:	cb03      	ldmia	r3!, {r0, r1}
 8011590:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 8011594:	6020      	str	r0, [r4, #0]
 8011596:	6061      	str	r1, [r4, #4]
 8011598:	4620      	mov	r0, r4
 801159a:	4619      	mov	r1, r3
 801159c:	f8ad 200c 	strh.w	r2, [sp, #12]
 80115a0:	f7fe fa64 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 80115a4:	4620      	mov	r0, r4
 80115a6:	b005      	add	sp, #20
 80115a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80115aa:	2300      	movs	r3, #0
 80115ac:	8023      	strh	r3, [r4, #0]
 80115ae:	8063      	strh	r3, [r4, #2]
 80115b0:	80a3      	strh	r3, [r4, #4]
 80115b2:	80e3      	strh	r3, [r4, #6]
 80115b4:	e7f6      	b.n	80115a4 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>
	...

080115b8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 80115b8:	b538      	push	{r3, r4, r5, lr}
 80115ba:	2300      	movs	r3, #0
 80115bc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80115c0:	8083      	strh	r3, [r0, #4]
 80115c2:	80c3      	strh	r3, [r0, #6]
 80115c4:	8103      	strh	r3, [r0, #8]
 80115c6:	8143      	strh	r3, [r0, #10]
 80115c8:	8183      	strh	r3, [r0, #12]
 80115ca:	81c3      	strh	r3, [r0, #14]
 80115cc:	8203      	strh	r3, [r0, #16]
 80115ce:	8243      	strh	r3, [r0, #18]
 80115d0:	61c3      	str	r3, [r0, #28]
 80115d2:	8403      	strh	r3, [r0, #32]
 80115d4:	8443      	strh	r3, [r0, #34]	; 0x22
 80115d6:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 80115da:	2501      	movs	r5, #1
 80115dc:	4b08      	ldr	r3, [pc, #32]	; (8011600 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 80115de:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 80115e2:	6003      	str	r3, [r0, #0]
 80115e4:	880b      	ldrh	r3, [r1, #0]
 80115e6:	84c3      	strh	r3, [r0, #38]	; 0x26
 80115e8:	23ff      	movs	r3, #255	; 0xff
 80115ea:	4604      	mov	r4, r0
 80115ec:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80115f0:	f000 ff52 	bl	8012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80115f4:	4b03      	ldr	r3, [pc, #12]	; (8011604 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 80115f6:	6023      	str	r3, [r4, #0]
 80115f8:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 80115fc:	4620      	mov	r0, r4
 80115fe:	bd38      	pop	{r3, r4, r5, pc}
 8011600:	0802a4cc 	.word	0x0802a4cc
 8011604:	0802a284 	.word	0x0802a284

08011608 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 8011608:	4603      	mov	r3, r0
 801160a:	3026      	adds	r0, #38	; 0x26
 801160c:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8011610:	b90b      	cbnz	r3, 8011616 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 8011612:	f004 be69 	b.w	80162e8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8011616:	f004 be77 	b.w	8016308 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0801161c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 801161c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011620:	4604      	mov	r4, r0
 8011622:	b0b3      	sub	sp, #204	; 0xcc
 8011624:	469b      	mov	fp, r3
 8011626:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801162a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 801162e:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
 8011632:	ab11      	add	r3, sp, #68	; 0x44
 8011634:	2500      	movs	r5, #0
 8011636:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 801163a:	4618      	mov	r0, r3
 801163c:	9206      	str	r2, [sp, #24]
 801163e:	9511      	str	r5, [sp, #68]	; 0x44
 8011640:	9307      	str	r3, [sp, #28]
 8011642:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 8011646:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 801164a:	f7fe fa0f 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 801164e:	9b07      	ldr	r3, [sp, #28]
 8011650:	e893 0003 	ldmia.w	r3, {r0, r1}
 8011654:	ad13      	add	r5, sp, #76	; 0x4c
 8011656:	e885 0003 	stmia.w	r5, {r0, r1}
 801165a:	6821      	ldr	r1, [r4, #0]
 801165c:	4620      	mov	r0, r4
 801165e:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8011660:	4629      	mov	r1, r5
 8011662:	47b0      	blx	r6
 8011664:	4621      	mov	r1, r4
 8011666:	a815      	add	r0, sp, #84	; 0x54
 8011668:	f004 fd9a 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801166c:	a815      	add	r0, sp, #84	; 0x54
 801166e:	f003 fa5f 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011672:	9b07      	ldr	r3, [sp, #28]
 8011674:	1d26      	adds	r6, r4, #4
 8011676:	4618      	mov	r0, r3
 8011678:	4631      	mov	r1, r6
 801167a:	f003 fa9d 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801167e:	4628      	mov	r0, r5
 8011680:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8011684:	f003 fa54 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011688:	4628      	mov	r0, r5
 801168a:	f007 f903 	bl	8018894 <_ZNK8touchgfx6Bitmap7getDataEv>
 801168e:	9007      	str	r0, [sp, #28]
 8011690:	2800      	cmp	r0, #0
 8011692:	f000 80ce 	beq.w	8011832 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
 8011696:	f8db 200c 	ldr.w	r2, [fp, #12]
 801169a:	920c      	str	r2, [sp, #48]	; 0x30
 801169c:	f8da 2000 	ldr.w	r2, [sl]
 80116a0:	f8db 1000 	ldr.w	r1, [fp]
 80116a4:	920d      	str	r2, [sp, #52]	; 0x34
 80116a6:	f8da 2004 	ldr.w	r2, [sl, #4]
 80116aa:	9109      	str	r1, [sp, #36]	; 0x24
 80116ac:	920e      	str	r2, [sp, #56]	; 0x38
 80116ae:	f8db 1004 	ldr.w	r1, [fp, #4]
 80116b2:	f8da 2008 	ldr.w	r2, [sl, #8]
 80116b6:	910a      	str	r1, [sp, #40]	; 0x28
 80116b8:	920f      	str	r2, [sp, #60]	; 0x3c
 80116ba:	f8db 1008 	ldr.w	r1, [fp, #8]
 80116be:	f8da 200c 	ldr.w	r2, [sl, #12]
 80116c2:	910b      	str	r1, [sp, #44]	; 0x2c
 80116c4:	9210      	str	r2, [sp, #64]	; 0x40
 80116c6:	a90d      	add	r1, sp, #52	; 0x34
 80116c8:	4632      	mov	r2, r6
 80116ca:	a809      	add	r0, sp, #36	; 0x24
 80116cc:	f003 fa58 	bl	8014b80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80116d0:	4632      	mov	r2, r6
 80116d2:	a90e      	add	r1, sp, #56	; 0x38
 80116d4:	a80a      	add	r0, sp, #40	; 0x28
 80116d6:	f003 fa53 	bl	8014b80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80116da:	4632      	mov	r2, r6
 80116dc:	a90f      	add	r1, sp, #60	; 0x3c
 80116de:	a80b      	add	r0, sp, #44	; 0x2c
 80116e0:	f003 fa4e 	bl	8014b80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80116e4:	4632      	mov	r2, r6
 80116e6:	a910      	add	r1, sp, #64	; 0x40
 80116e8:	a80c      	add	r0, sp, #48	; 0x30
 80116ea:	f003 fa49 	bl	8014b80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80116ee:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 80116f2:	ed97 3a00 	vldr	s6, [r7]
 80116f6:	edd7 4a01 	vldr	s9, [r7, #4]
 80116fa:	ed99 2a00 	vldr	s4, [r9]
 80116fe:	edd8 2a00 	vldr	s5, [r8]
 8011702:	edd9 3a01 	vldr	s7, [r9, #4]
 8011706:	ed98 4a01 	vldr	s8, [r8, #4]
 801170a:	ed99 5a02 	vldr	s10, [r9, #8]
 801170e:	edd8 5a02 	vldr	s11, [r8, #8]
 8011712:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8011716:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 801171a:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
 801171e:	eef0 6a67 	vmov.f32	s13, s15
 8011722:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8011726:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
 801172a:	eeb0 7a67 	vmov.f32	s14, s15
 801172e:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8011732:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
 8011736:	eeb0 6a67 	vmov.f32	s12, s15
 801173a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801173e:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8011742:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
 8011746:	ee16 6a10 	vmov	r6, s12
 801174a:	eeb0 6a67 	vmov.f32	s12, s15
 801174e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8011752:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8011756:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
 801175a:	ee16 0a10 	vmov	r0, s12
 801175e:	eeb0 6a67 	vmov.f32	s12, s15
 8011762:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8011766:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 801176a:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
 801176e:	ee16 1a10 	vmov	r1, s12
 8011772:	eeb0 6a67 	vmov.f32	s12, s15
 8011776:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801177a:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 801177e:	ee16 2a10 	vmov	r2, s12
 8011782:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8011786:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 801178a:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801178e:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8011792:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8011796:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 801179a:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 801179e:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 80117a2:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80117a6:	9624      	str	r6, [sp, #144]	; 0x90
 80117a8:	68ff      	ldr	r7, [r7, #12]
 80117aa:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
 80117ae:	922d      	str	r2, [sp, #180]	; 0xb4
 80117b0:	4a21      	ldr	r2, [pc, #132]	; (8011838 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
 80117b2:	9b06      	ldr	r3, [sp, #24]
 80117b4:	8812      	ldrh	r2, [r2, #0]
 80117b6:	9317      	str	r3, [sp, #92]	; 0x5c
 80117b8:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 80117bc:	9b07      	ldr	r3, [sp, #28]
 80117be:	9218      	str	r2, [sp, #96]	; 0x60
 80117c0:	4628      	mov	r0, r5
 80117c2:	9319      	str	r3, [sp, #100]	; 0x64
 80117c4:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
 80117c8:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 80117cc:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 80117d0:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 80117d4:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 80117d8:	9731      	str	r7, [sp, #196]	; 0xc4
 80117da:	f007 f88b 	bl	80188f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80117de:	901a      	str	r0, [sp, #104]	; 0x68
 80117e0:	4628      	mov	r0, r5
 80117e2:	f006 ff6b 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80117e6:	901b      	str	r0, [sp, #108]	; 0x6c
 80117e8:	4628      	mov	r0, r5
 80117ea:	f006 ff9b 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80117ee:	901c      	str	r0, [sp, #112]	; 0x70
 80117f0:	4628      	mov	r0, r5
 80117f2:	f006 ff63 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80117f6:	4b11      	ldr	r3, [pc, #68]	; (801183c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 80117f8:	901d      	str	r0, [sp, #116]	; 0x74
 80117fa:	681b      	ldr	r3, [r3, #0]
 80117fc:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011800:	b10a      	cbz	r2, 8011806 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 8011802:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8011804:	b905      	cbnz	r5, 8011808 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
 8011806:	689d      	ldr	r5, [r3, #8]
 8011808:	682b      	ldr	r3, [r5, #0]
 801180a:	4620      	mov	r0, r4
 801180c:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 801180e:	f7ff fefb 	bl	8011608 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 8011812:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011816:	9304      	str	r3, [sp, #16]
 8011818:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801181c:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8011820:	ab13      	add	r3, sp, #76	; 0x4c
 8011822:	9301      	str	r3, [sp, #4]
 8011824:	ab15      	add	r3, sp, #84	; 0x54
 8011826:	9300      	str	r3, [sp, #0]
 8011828:	aa1e      	add	r2, sp, #120	; 0x78
 801182a:	ab19      	add	r3, sp, #100	; 0x64
 801182c:	a917      	add	r1, sp, #92	; 0x5c
 801182e:	4628      	mov	r0, r5
 8011830:	47b0      	blx	r6
 8011832:	b033      	add	sp, #204	; 0xcc
 8011834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011838:	2000ef16 	.word	0x2000ef16
 801183c:	2000ef1c 	.word	0x2000ef1c

08011840 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 8011840:	b570      	push	{r4, r5, r6, lr}
 8011842:	ed2d 8b04 	vpush	{d8-d9}
 8011846:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801184a:	b098      	sub	sp, #96	; 0x60
 801184c:	4604      	mov	r4, r0
 801184e:	460e      	mov	r6, r1
 8011850:	2b00      	cmp	r3, #0
 8011852:	d065      	beq.n	8011920 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 8011854:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011858:	ed9f 8a38 	vldr	s16, [pc, #224]	; 801193c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 801185c:	ee09 3a10 	vmov	s18, r3
 8011860:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011864:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8011868:	ee08 3a90 	vmov	s17, r3
 801186c:	4628      	mov	r0, r5
 801186e:	4b34      	ldr	r3, [pc, #208]	; (8011940 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 8011870:	930c      	str	r3, [sp, #48]	; 0x30
 8011872:	930d      	str	r3, [sp, #52]	; 0x34
 8011874:	930e      	str	r3, [sp, #56]	; 0x38
 8011876:	930f      	str	r3, [sp, #60]	; 0x3c
 8011878:	f006 ff20 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801187c:	ee07 0a90 	vmov	s15, r0
 8011880:	4628      	mov	r0, r5
 8011882:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 8011886:	f006 ff4d 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801188a:	4b2e      	ldr	r3, [pc, #184]	; (8011944 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 801188c:	781b      	ldrb	r3, [r3, #0]
 801188e:	ee07 0a90 	vmov	s15, r0
 8011892:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 8011896:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 801189a:	2b01      	cmp	r3, #1
 801189c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80118a0:	ee39 9a08 	vadd.f32	s18, s18, s16
 80118a4:	ee78 8a88 	vadd.f32	s17, s17, s16
 80118a8:	eef0 7a48 	vmov.f32	s15, s16
 80118ac:	d13c      	bne.n	8011928 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 80118ae:	eef0 6a69 	vmov.f32	s13, s19
 80118b2:	eeb0 6a47 	vmov.f32	s12, s14
 80118b6:	eef0 5a47 	vmov.f32	s11, s14
 80118ba:	ee19 3a90 	vmov	r3, s19
 80118be:	eeb0 7a48 	vmov.f32	s14, s16
 80118c2:	eef0 9a48 	vmov.f32	s19, s16
 80118c6:	9314      	str	r3, [sp, #80]	; 0x50
 80118c8:	ab14      	add	r3, sp, #80	; 0x50
 80118ca:	9303      	str	r3, [sp, #12]
 80118cc:	ab10      	add	r3, sp, #64	; 0x40
 80118ce:	9302      	str	r3, [sp, #8]
 80118d0:	ab0c      	add	r3, sp, #48	; 0x30
 80118d2:	9301      	str	r3, [sp, #4]
 80118d4:	ab08      	add	r3, sp, #32
 80118d6:	9300      	str	r3, [sp, #0]
 80118d8:	2200      	movs	r2, #0
 80118da:	ab04      	add	r3, sp, #16
 80118dc:	4631      	mov	r1, r6
 80118de:	4620      	mov	r0, r4
 80118e0:	edcd 7a04 	vstr	s15, [sp, #16]
 80118e4:	ed8d 9a05 	vstr	s18, [sp, #20]
 80118e8:	ed8d 9a06 	vstr	s18, [sp, #24]
 80118ec:	edcd 7a07 	vstr	s15, [sp, #28]
 80118f0:	edcd 7a08 	vstr	s15, [sp, #32]
 80118f4:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 80118f8:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 80118fc:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 8011900:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8011904:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 8011908:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 801190c:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 8011910:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8011914:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 8011918:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 801191c:	f7ff fe7e 	bl	801161c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8011920:	b018      	add	sp, #96	; 0x60
 8011922:	ecbd 8b04 	vpop	{d8-d9}
 8011926:	bd70      	pop	{r4, r5, r6, pc}
 8011928:	eef0 6a47 	vmov.f32	s13, s14
 801192c:	eef0 5a69 	vmov.f32	s11, s19
 8011930:	eeb0 6a48 	vmov.f32	s12, s16
 8011934:	ee18 3a10 	vmov	r3, s16
 8011938:	e7c5      	b.n	80118c6 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 801193a:	bf00      	nop
 801193c:	00000000 	.word	0x00000000
 8011940:	42c80000 	.word	0x42c80000
 8011944:	2000ef14 	.word	0x2000ef14

08011948 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8011948:	2000      	movs	r0, #0
 801194a:	4770      	bx	lr

0801194c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 801194c:	4b07      	ldr	r3, [pc, #28]	; (801196c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801194e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011950:	881b      	ldrh	r3, [r3, #0]
 8011952:	4293      	cmp	r3, r2
 8011954:	bf81      	itttt	hi
 8011956:	4b06      	ldrhi	r3, [pc, #24]	; (8011970 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8011958:	681b      	ldrhi	r3, [r3, #0]
 801195a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801195e:	7858      	ldrbhi	r0, [r3, #1]
 8011960:	bf8c      	ite	hi
 8011962:	f000 0003 	andhi.w	r0, r0, #3
 8011966:	2000      	movls	r0, #0
 8011968:	4770      	bx	lr
 801196a:	bf00      	nop
 801196c:	2000ef78 	.word	0x2000ef78
 8011970:	2000ef74 	.word	0x2000ef74

08011974 <_ZN8touchgfx8TextAreaD1Ev>:
 8011974:	4770      	bx	lr
	...

08011978 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8011978:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801197c:	4b10      	ldr	r3, [pc, #64]	; (80119c0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801197e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011980:	881b      	ldrh	r3, [r3, #0]
 8011982:	428b      	cmp	r3, r1
 8011984:	4604      	mov	r4, r0
 8011986:	d918      	bls.n	80119ba <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8011988:	6803      	ldr	r3, [r0, #0]
 801198a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 801198c:	4b0d      	ldr	r3, [pc, #52]	; (80119c4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 801198e:	6818      	ldr	r0, [r3, #0]
 8011990:	f7f6 fbdc 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8011994:	6823      	ldr	r3, [r4, #0]
 8011996:	4606      	mov	r6, r0
 8011998:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801199a:	4620      	mov	r0, r4
 801199c:	4798      	blx	r3
 801199e:	6823      	ldr	r3, [r4, #0]
 80119a0:	4607      	mov	r7, r0
 80119a2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80119a6:	4620      	mov	r0, r4
 80119a8:	4798      	blx	r3
 80119aa:	463a      	mov	r2, r7
 80119ac:	4603      	mov	r3, r0
 80119ae:	4631      	mov	r1, r6
 80119b0:	4620      	mov	r0, r4
 80119b2:	46ac      	mov	ip, r5
 80119b4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80119b8:	4760      	bx	ip
 80119ba:	2000      	movs	r0, #0
 80119bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80119c0:	2000ef78 	.word	0x2000ef78
 80119c4:	2000ef80 	.word	0x2000ef80

080119c8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80119c8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80119cc:	4b17      	ldr	r3, [pc, #92]	; (8011a2c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80119ce:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80119d0:	881b      	ldrh	r3, [r3, #0]
 80119d2:	428b      	cmp	r3, r1
 80119d4:	4604      	mov	r4, r0
 80119d6:	d926      	bls.n	8011a26 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80119d8:	4b15      	ldr	r3, [pc, #84]	; (8011a30 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80119da:	681b      	ldr	r3, [r3, #0]
 80119dc:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80119e0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80119e4:	4b13      	ldr	r3, [pc, #76]	; (8011a34 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80119e6:	7855      	ldrb	r5, [r2, #1]
 80119e8:	681b      	ldr	r3, [r3, #0]
 80119ea:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80119ee:	6833      	ldr	r3, [r6, #0]
 80119f0:	69df      	ldr	r7, [r3, #28]
 80119f2:	4b11      	ldr	r3, [pc, #68]	; (8011a38 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80119f4:	6818      	ldr	r0, [r3, #0]
 80119f6:	f7f6 fba9 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 80119fa:	6823      	ldr	r3, [r4, #0]
 80119fc:	4680      	mov	r8, r0
 80119fe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011a00:	4620      	mov	r0, r4
 8011a02:	4798      	blx	r3
 8011a04:	6823      	ldr	r3, [r4, #0]
 8011a06:	4681      	mov	r9, r0
 8011a08:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011a0c:	4620      	mov	r0, r4
 8011a0e:	4798      	blx	r3
 8011a10:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8011a14:	9000      	str	r0, [sp, #0]
 8011a16:	464b      	mov	r3, r9
 8011a18:	4642      	mov	r2, r8
 8011a1a:	4629      	mov	r1, r5
 8011a1c:	4630      	mov	r0, r6
 8011a1e:	47b8      	blx	r7
 8011a20:	b003      	add	sp, #12
 8011a22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011a26:	2000      	movs	r0, #0
 8011a28:	e7fa      	b.n	8011a20 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8011a2a:	bf00      	nop
 8011a2c:	2000ef78 	.word	0x2000ef78
 8011a30:	2000ef74 	.word	0x2000ef74
 8011a34:	2000ef7c 	.word	0x2000ef7c
 8011a38:	2000ef80 	.word	0x2000ef80

08011a3c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011a3c:	b40e      	push	{r1, r2, r3}
 8011a3e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011a42:	4b2f      	ldr	r3, [pc, #188]	; (8011b00 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8011a44:	881a      	ldrh	r2, [r3, #0]
 8011a46:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8011a48:	429a      	cmp	r2, r3
 8011a4a:	b09d      	sub	sp, #116	; 0x74
 8011a4c:	4604      	mov	r4, r0
 8011a4e:	d954      	bls.n	8011afa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011a50:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8011b04 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8011a54:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8011b08 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8011a58:	aa26      	add	r2, sp, #152	; 0x98
 8011a5a:	9202      	str	r2, [sp, #8]
 8011a5c:	f8d9 2000 	ldr.w	r2, [r9]
 8011a60:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011a64:	f8d8 3000 	ldr.w	r3, [r8]
 8011a68:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011a6c:	682b      	ldr	r3, [r5, #0]
 8011a6e:	4628      	mov	r0, r5
 8011a70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011a72:	4798      	blx	r3
 8011a74:	b207      	sxth	r7, r0
 8011a76:	4606      	mov	r6, r0
 8011a78:	a803      	add	r0, sp, #12
 8011a7a:	f005 f89f 	bl	8016bbc <_ZN8touchgfx12TextProviderC1Ev>
 8011a7e:	682b      	ldr	r3, [r5, #0]
 8011a80:	4628      	mov	r0, r5
 8011a82:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011a84:	4798      	blx	r3
 8011a86:	682b      	ldr	r3, [r5, #0]
 8011a88:	4682      	mov	sl, r0
 8011a8a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011a8c:	4628      	mov	r0, r5
 8011a8e:	4798      	blx	r3
 8011a90:	4653      	mov	r3, sl
 8011a92:	9000      	str	r0, [sp, #0]
 8011a94:	9a02      	ldr	r2, [sp, #8]
 8011a96:	9925      	ldr	r1, [sp, #148]	; 0x94
 8011a98:	a803      	add	r0, sp, #12
 8011a9a:	f005 f8ea 	bl	8016c72 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011a9e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011aa0:	f8d9 3000 	ldr.w	r3, [r9]
 8011aa4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8011aa8:	8925      	ldrh	r5, [r4, #8]
 8011aaa:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011aae:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8011ab2:	eba5 050c 	sub.w	r5, r5, ip
 8011ab6:	784a      	ldrb	r2, [r1, #1]
 8011ab8:	f8d8 3000 	ldr.w	r3, [r8]
 8011abc:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011ac0:	b22d      	sxth	r5, r5
 8011ac2:	9500      	str	r5, [sp, #0]
 8011ac4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011ac8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011acc:	a803      	add	r0, sp, #12
 8011ace:	f002 fd35 	bl	801453c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011ad2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8011ad6:	18b9      	adds	r1, r7, r2
 8011ad8:	2900      	cmp	r1, #0
 8011ada:	b203      	sxth	r3, r0
 8011adc:	dd0b      	ble.n	8011af6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011ade:	3b01      	subs	r3, #1
 8011ae0:	fb13 f302 	smulbb	r3, r3, r2
 8011ae4:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011ae8:	b21f      	sxth	r7, r3
 8011aea:	4638      	mov	r0, r7
 8011aec:	b01d      	add	sp, #116	; 0x74
 8011aee:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011af2:	b003      	add	sp, #12
 8011af4:	4770      	bx	lr
 8011af6:	2b00      	cmp	r3, #0
 8011af8:	dcf7      	bgt.n	8011aea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011afa:	2700      	movs	r7, #0
 8011afc:	e7f5      	b.n	8011aea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011afe:	bf00      	nop
 8011b00:	2000ef78 	.word	0x2000ef78
 8011b04:	2000ef74 	.word	0x2000ef74
 8011b08:	2000ef7c 	.word	0x2000ef7c

08011b0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011b0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b10:	4bbc      	ldr	r3, [pc, #752]	; (8011e04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8011b12:	460c      	mov	r4, r1
 8011b14:	881b      	ldrh	r3, [r3, #0]
 8011b16:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8011b18:	428b      	cmp	r3, r1
 8011b1a:	b0a9      	sub	sp, #164	; 0xa4
 8011b1c:	4680      	mov	r8, r0
 8011b1e:	d809      	bhi.n	8011b34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011b20:	2300      	movs	r3, #0
 8011b22:	f04f 32ff 	mov.w	r2, #4294967295
 8011b26:	e9c0 3200 	strd	r3, r2, [r0]
 8011b2a:	6083      	str	r3, [r0, #8]
 8011b2c:	4640      	mov	r0, r8
 8011b2e:	b029      	add	sp, #164	; 0xa4
 8011b30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b34:	4eb4      	ldr	r6, [pc, #720]	; (8011e08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8011b36:	6833      	ldr	r3, [r6, #0]
 8011b38:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011b3c:	4bb3      	ldr	r3, [pc, #716]	; (8011e0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011b3e:	681b      	ldr	r3, [r3, #0]
 8011b40:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011b44:	4bb2      	ldr	r3, [pc, #712]	; (8011e10 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011b46:	6818      	ldr	r0, [r3, #0]
 8011b48:	f7f6 fb00 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8011b4c:	682b      	ldr	r3, [r5, #0]
 8011b4e:	4681      	mov	r9, r0
 8011b50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011b52:	4628      	mov	r0, r5
 8011b54:	4798      	blx	r3
 8011b56:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8011b58:	b203      	sxth	r3, r0
 8011b5a:	4407      	add	r7, r0
 8011b5c:	9304      	str	r3, [sp, #16]
 8011b5e:	b2bb      	uxth	r3, r7
 8011b60:	9303      	str	r3, [sp, #12]
 8011b62:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8011b66:	4682      	mov	sl, r0
 8011b68:	a80f      	add	r0, sp, #60	; 0x3c
 8011b6a:	2b00      	cmp	r3, #0
 8011b6c:	f040 80a6 	bne.w	8011cbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011b70:	f005 f824 	bl	8016bbc <_ZN8touchgfx12TextProviderC1Ev>
 8011b74:	682b      	ldr	r3, [r5, #0]
 8011b76:	4628      	mov	r0, r5
 8011b78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011b7a:	4798      	blx	r3
 8011b7c:	682b      	ldr	r3, [r5, #0]
 8011b7e:	4606      	mov	r6, r0
 8011b80:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011b82:	4628      	mov	r0, r5
 8011b84:	4798      	blx	r3
 8011b86:	6823      	ldr	r3, [r4, #0]
 8011b88:	4607      	mov	r7, r0
 8011b8a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011b8c:	4620      	mov	r0, r4
 8011b8e:	4798      	blx	r3
 8011b90:	6823      	ldr	r3, [r4, #0]
 8011b92:	4683      	mov	fp, r0
 8011b94:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011b98:	4620      	mov	r0, r4
 8011b9a:	4798      	blx	r3
 8011b9c:	463b      	mov	r3, r7
 8011b9e:	e9cd b000 	strd	fp, r0, [sp]
 8011ba2:	4649      	mov	r1, r9
 8011ba4:	4632      	mov	r2, r6
 8011ba6:	a80f      	add	r0, sp, #60	; 0x3c
 8011ba8:	f005 f878 	bl	8016c9c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011bac:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011bb0:	f8df b254 	ldr.w	fp, [pc, #596]	; 8011e08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8011bb4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011bb8:	f04f 0600 	mov.w	r6, #0
 8011bbc:	bf0c      	ite	eq
 8011bbe:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011bc2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8011bc6:	4637      	mov	r7, r6
 8011bc8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011bca:	f8db 3000 	ldr.w	r3, [fp]
 8011bce:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011bd2:	4629      	mov	r1, r5
 8011bd4:	785b      	ldrb	r3, [r3, #1]
 8011bd6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011bda:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011bde:	a80f      	add	r0, sp, #60	; 0x3c
 8011be0:	f002 f9c7 	bl	8013f72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011be4:	9b03      	ldr	r3, [sp, #12]
 8011be6:	4286      	cmp	r6, r0
 8011be8:	bfb8      	it	lt
 8011bea:	4606      	movlt	r6, r0
 8011bec:	3701      	adds	r7, #1
 8011bee:	eba9 0903 	sub.w	r9, r9, r3
 8011bf2:	a80f      	add	r0, sp, #60	; 0x3c
 8011bf4:	b236      	sxth	r6, r6
 8011bf6:	b2bf      	uxth	r7, r7
 8011bf8:	fa0f f989 	sxth.w	r9, r9
 8011bfc:	f005 f805 	bl	8016c0a <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011c00:	b918      	cbnz	r0, 8011c0a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011c02:	7a2b      	ldrb	r3, [r5, #8]
 8011c04:	444b      	add	r3, r9
 8011c06:	2b00      	cmp	r3, #0
 8011c08:	dcde      	bgt.n	8011bc8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011c0a:	9b03      	ldr	r3, [sp, #12]
 8011c0c:	9a04      	ldr	r2, [sp, #16]
 8011c0e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8011c12:	fb13 f707 	smulbb	r7, r3, r7
 8011c16:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011c18:	1aff      	subs	r7, r7, r3
 8011c1a:	b2bf      	uxth	r7, r7
 8011c1c:	b23b      	sxth	r3, r7
 8011c1e:	429a      	cmp	r2, r3
 8011c20:	bfa8      	it	ge
 8011c22:	4657      	movge	r7, sl
 8011c24:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011c28:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011c2c:	6823      	ldr	r3, [r4, #0]
 8011c2e:	bf08      	it	eq
 8011c30:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8011c34:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011c36:	bf18      	it	ne
 8011c38:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011c3c:	4620      	mov	r0, r4
 8011c3e:	4798      	blx	r3
 8011c40:	444f      	add	r7, r9
 8011c42:	fa1f f987 	uxth.w	r9, r7
 8011c46:	2801      	cmp	r0, #1
 8011c48:	fa0f f789 	sxth.w	r7, r9
 8011c4c:	b2b3      	uxth	r3, r6
 8011c4e:	f000 80e1 	beq.w	8011e14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8011c52:	2802      	cmp	r0, #2
 8011c54:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8011c58:	f000 80e2 	beq.w	8011e20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8011c5c:	7aea      	ldrb	r2, [r5, #11]
 8011c5e:	7b2d      	ldrb	r5, [r5, #12]
 8011c60:	b236      	sxth	r6, r6
 8011c62:	1ab6      	subs	r6, r6, r2
 8011c64:	442a      	add	r2, r5
 8011c66:	4413      	add	r3, r2
 8011c68:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8011c6c:	fa1f fa86 	uxth.w	sl, r6
 8011c70:	b29b      	uxth	r3, r3
 8011c72:	2a02      	cmp	r2, #2
 8011c74:	fa0f fb8a 	sxth.w	fp, sl
 8011c78:	b21e      	sxth	r6, r3
 8011c7a:	f000 80d5 	beq.w	8011e28 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011c7e:	2a03      	cmp	r2, #3
 8011c80:	f000 80dd 	beq.w	8011e3e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8011c84:	2a01      	cmp	r2, #1
 8011c86:	f040 80e5 	bne.w	8011e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011c8a:	8925      	ldrh	r5, [r4, #8]
 8011c8c:	4633      	mov	r3, r6
 8011c8e:	eba5 0909 	sub.w	r9, r5, r9
 8011c92:	463e      	mov	r6, r7
 8011c94:	465d      	mov	r5, fp
 8011c96:	461f      	mov	r7, r3
 8011c98:	fa0f fb89 	sxth.w	fp, r9
 8011c9c:	4b5c      	ldr	r3, [pc, #368]	; (8011e10 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011c9e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011ca0:	6818      	ldr	r0, [r3, #0]
 8011ca2:	f7f6 fa53 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8011ca6:	f8a8 b000 	strh.w	fp, [r8]
 8011caa:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011cae:	f8a8 6004 	strh.w	r6, [r8, #4]
 8011cb2:	f8a8 7006 	strh.w	r7, [r8, #6]
 8011cb6:	f8c8 0008 	str.w	r0, [r8, #8]
 8011cba:	e737      	b.n	8011b2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011cbc:	f004 ff7e 	bl	8016bbc <_ZN8touchgfx12TextProviderC1Ev>
 8011cc0:	682b      	ldr	r3, [r5, #0]
 8011cc2:	4628      	mov	r0, r5
 8011cc4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011cc6:	4798      	blx	r3
 8011cc8:	682b      	ldr	r3, [r5, #0]
 8011cca:	4607      	mov	r7, r0
 8011ccc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011cce:	4628      	mov	r0, r5
 8011cd0:	4798      	blx	r3
 8011cd2:	6823      	ldr	r3, [r4, #0]
 8011cd4:	4683      	mov	fp, r0
 8011cd6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011cd8:	4620      	mov	r0, r4
 8011cda:	4798      	blx	r3
 8011cdc:	6822      	ldr	r2, [r4, #0]
 8011cde:	9005      	str	r0, [sp, #20]
 8011ce0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8011ce4:	4620      	mov	r0, r4
 8011ce6:	4790      	blx	r2
 8011ce8:	9b05      	ldr	r3, [sp, #20]
 8011cea:	9001      	str	r0, [sp, #4]
 8011cec:	463a      	mov	r2, r7
 8011cee:	4649      	mov	r1, r9
 8011cf0:	9300      	str	r3, [sp, #0]
 8011cf2:	a80f      	add	r0, sp, #60	; 0x3c
 8011cf4:	465b      	mov	r3, fp
 8011cf6:	f004 ffd1 	bl	8016c9c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011cfa:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011cfe:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011d02:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011d04:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011d08:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011d0c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011d10:	bf0a      	itet	eq
 8011d12:	464a      	moveq	r2, r9
 8011d14:	461a      	movne	r2, r3
 8011d16:	4699      	moveq	r9, r3
 8011d18:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8011d1c:	1ad2      	subs	r2, r2, r3
 8011d1e:	6833      	ldr	r3, [r6, #0]
 8011d20:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8011d24:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011d28:	af0f      	add	r7, sp, #60	; 0x3c
 8011d2a:	7859      	ldrb	r1, [r3, #1]
 8011d2c:	9707      	str	r7, [sp, #28]
 8011d2e:	2300      	movs	r3, #0
 8011d30:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011d34:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011d38:	f88d 1020 	strb.w	r1, [sp, #32]
 8011d3c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011d40:	9509      	str	r5, [sp, #36]	; 0x24
 8011d42:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011d46:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011d4a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011d4e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011d52:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8011d56:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011d5a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8011d5e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011d62:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011d66:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011d6a:	b350      	cbz	r0, 8011dc2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011d6c:	682b      	ldr	r3, [r5, #0]
 8011d6e:	4628      	mov	r0, r5
 8011d70:	695b      	ldr	r3, [r3, #20]
 8011d72:	4798      	blx	r3
 8011d74:	4607      	mov	r7, r0
 8011d76:	b320      	cbz	r0, 8011dc2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011d78:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011d7a:	6803      	ldr	r3, [r0, #0]
 8011d7c:	4639      	mov	r1, r7
 8011d7e:	68db      	ldr	r3, [r3, #12]
 8011d80:	4798      	blx	r3
 8011d82:	4606      	mov	r6, r0
 8011d84:	b1e8      	cbz	r0, 8011dc2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011d86:	7b43      	ldrb	r3, [r0, #13]
 8011d88:	7a82      	ldrb	r2, [r0, #10]
 8011d8a:	005b      	lsls	r3, r3, #1
 8011d8c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011d90:	4313      	orrs	r3, r2
 8011d92:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011d96:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011d9a:	2b06      	cmp	r3, #6
 8011d9c:	d111      	bne.n	8011dc2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011d9e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011da0:	6803      	ldr	r3, [r0, #0]
 8011da2:	4632      	mov	r2, r6
 8011da4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011da6:	4639      	mov	r1, r7
 8011da8:	4798      	blx	r3
 8011daa:	7b73      	ldrb	r3, [r6, #13]
 8011dac:	005b      	lsls	r3, r3, #1
 8011dae:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011db2:	7ab3      	ldrb	r3, [r6, #10]
 8011db4:	4313      	orrs	r3, r2
 8011db6:	4418      	add	r0, r3
 8011db8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011dbc:	4418      	add	r0, r3
 8011dbe:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8011dc2:	2600      	movs	r6, #0
 8011dc4:	4637      	mov	r7, r6
 8011dc6:	a806      	add	r0, sp, #24
 8011dc8:	f002 fab4 	bl	8014334 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011dcc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011dd0:	9b03      	ldr	r3, [sp, #12]
 8011dd2:	4286      	cmp	r6, r0
 8011dd4:	eba9 0903 	sub.w	r9, r9, r3
 8011dd8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011ddc:	bfb8      	it	lt
 8011dde:	4606      	movlt	r6, r0
 8011de0:	3701      	adds	r7, #1
 8011de2:	b236      	sxth	r6, r6
 8011de4:	b2bf      	uxth	r7, r7
 8011de6:	fa0f f989 	sxth.w	r9, r9
 8011dea:	2b00      	cmp	r3, #0
 8011dec:	f43f af0d 	beq.w	8011c0a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011df0:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8011df4:	2b00      	cmp	r3, #0
 8011df6:	f47f af08 	bne.w	8011c0a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011dfa:	7a2b      	ldrb	r3, [r5, #8]
 8011dfc:	444b      	add	r3, r9
 8011dfe:	2b00      	cmp	r3, #0
 8011e00:	dce1      	bgt.n	8011dc6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8011e02:	e702      	b.n	8011c0a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e04:	2000ef78 	.word	0x2000ef78
 8011e08:	2000ef74 	.word	0x2000ef74
 8011e0c:	2000ef7c 	.word	0x2000ef7c
 8011e10:	2000ef80 	.word	0x2000ef80
 8011e14:	ebaa 0606 	sub.w	r6, sl, r6
 8011e18:	2002      	movs	r0, #2
 8011e1a:	fb96 f6f0 	sdiv	r6, r6, r0
 8011e1e:	e71d      	b.n	8011c5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011e20:	441e      	add	r6, r3
 8011e22:	ebaa 0606 	sub.w	r6, sl, r6
 8011e26:	e719      	b.n	8011c5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011e28:	8925      	ldrh	r5, [r4, #8]
 8011e2a:	1aed      	subs	r5, r5, r3
 8011e2c:	eba5 050a 	sub.w	r5, r5, sl
 8011e30:	fa0f fb85 	sxth.w	fp, r5
 8011e34:	8965      	ldrh	r5, [r4, #10]
 8011e36:	eba5 0509 	sub.w	r5, r5, r9
 8011e3a:	b22d      	sxth	r5, r5
 8011e3c:	e72e      	b.n	8011c9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011e3e:	8965      	ldrh	r5, [r4, #10]
 8011e40:	1aed      	subs	r5, r5, r3
 8011e42:	eba5 050a 	sub.w	r5, r5, sl
 8011e46:	4633      	mov	r3, r6
 8011e48:	b22d      	sxth	r5, r5
 8011e4a:	463e      	mov	r6, r7
 8011e4c:	f04f 0b00 	mov.w	fp, #0
 8011e50:	461f      	mov	r7, r3
 8011e52:	e723      	b.n	8011c9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011e54:	2500      	movs	r5, #0
 8011e56:	e721      	b.n	8011c9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011e58 <_ZN8touchgfx8TextAreaD0Ev>:
 8011e58:	b510      	push	{r4, lr}
 8011e5a:	2148      	movs	r1, #72	; 0x48
 8011e5c:	4604      	mov	r4, r0
 8011e5e:	f014 fbaf 	bl	80265c0 <_ZdlPvj>
 8011e62:	4620      	mov	r0, r4
 8011e64:	bd10      	pop	{r4, pc}
	...

08011e68 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011e68:	b513      	push	{r0, r1, r4, lr}
 8011e6a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8011e6e:	4604      	mov	r4, r0
 8011e70:	b1fb      	cbz	r3, 8011eb2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011e72:	4b16      	ldr	r3, [pc, #88]	; (8011ecc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011e74:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011e76:	881b      	ldrh	r3, [r3, #0]
 8011e78:	428b      	cmp	r3, r1
 8011e7a:	d91a      	bls.n	8011eb2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011e7c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011e80:	2b00      	cmp	r3, #0
 8011e82:	dd16      	ble.n	8011eb2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011e84:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011e88:	2b00      	cmp	r3, #0
 8011e8a:	dd12      	ble.n	8011eb2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011e8c:	4b10      	ldr	r3, [pc, #64]	; (8011ed0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011e8e:	6818      	ldr	r0, [r3, #0]
 8011e90:	f7f6 f95c 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8011e94:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011e98:	6822      	ldr	r2, [r4, #0]
 8011e9a:	2b00      	cmp	r3, #0
 8011e9c:	db06      	blt.n	8011eac <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011e9e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011ea2:	2b00      	cmp	r3, #0
 8011ea4:	db02      	blt.n	8011eac <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011ea6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011ea8:	4298      	cmp	r0, r3
 8011eaa:	d004      	beq.n	8011eb6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011eac:	6953      	ldr	r3, [r2, #20]
 8011eae:	4620      	mov	r0, r4
 8011eb0:	4798      	blx	r3
 8011eb2:	b002      	add	sp, #8
 8011eb4:	bd10      	pop	{r4, pc}
 8011eb6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8011eba:	c903      	ldmia	r1, {r0, r1}
 8011ebc:	466b      	mov	r3, sp
 8011ebe:	e883 0003 	stmia.w	r3, {r0, r1}
 8011ec2:	6912      	ldr	r2, [r2, #16]
 8011ec4:	4619      	mov	r1, r3
 8011ec6:	4620      	mov	r0, r4
 8011ec8:	4790      	blx	r2
 8011eca:	e7f2      	b.n	8011eb2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011ecc:	2000ef78 	.word	0x2000ef78
 8011ed0:	2000ef80 	.word	0x2000ef80

08011ed4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011ed4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ed8:	4b44      	ldr	r3, [pc, #272]	; (8011fec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011eda:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011edc:	881b      	ldrh	r3, [r3, #0]
 8011ede:	4293      	cmp	r3, r2
 8011ee0:	b08e      	sub	sp, #56	; 0x38
 8011ee2:	4604      	mov	r4, r0
 8011ee4:	d97e      	bls.n	8011fe4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011ee6:	6808      	ldr	r0, [r1, #0]
 8011ee8:	4d41      	ldr	r5, [pc, #260]	; (8011ff0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011eea:	6849      	ldr	r1, [r1, #4]
 8011eec:	ab05      	add	r3, sp, #20
 8011eee:	c303      	stmia	r3!, {r0, r1}
 8011ef0:	4611      	mov	r1, r2
 8011ef2:	6828      	ldr	r0, [r5, #0]
 8011ef4:	f7f6 f92a 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8011ef8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011efc:	2b00      	cmp	r3, #0
 8011efe:	db11      	blt.n	8011f24 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f00:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011f04:	2b00      	cmp	r3, #0
 8011f06:	db0d      	blt.n	8011f24 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f08:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011f0a:	4298      	cmp	r0, r3
 8011f0c:	d10a      	bne.n	8011f24 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f0e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8011f12:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011f16:	ab09      	add	r3, sp, #36	; 0x24
 8011f18:	e883 0003 	stmia.w	r3, {r0, r1}
 8011f1c:	4619      	mov	r1, r3
 8011f1e:	a805      	add	r0, sp, #20
 8011f20:	f7fd fda4 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 8011f24:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011f28:	2b00      	cmp	r3, #0
 8011f2a:	dd5b      	ble.n	8011fe4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011f2c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011f30:	2b00      	cmp	r3, #0
 8011f32:	dd57      	ble.n	8011fe4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011f34:	4f2f      	ldr	r7, [pc, #188]	; (8011ff4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8011f36:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011f38:	683b      	ldr	r3, [r7, #0]
 8011f3a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8011f3e:	4b2e      	ldr	r3, [pc, #184]	; (8011ff8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011f40:	681b      	ldr	r3, [r3, #0]
 8011f42:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011f46:	2e00      	cmp	r6, #0
 8011f48:	d04c      	beq.n	8011fe4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011f4a:	6823      	ldr	r3, [r4, #0]
 8011f4c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8011f50:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011f52:	4620      	mov	r0, r4
 8011f54:	4798      	blx	r3
 8011f56:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011f58:	683b      	ldr	r3, [r7, #0]
 8011f5a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8011f5e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8011f62:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8011f66:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011f68:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011f6c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011f70:	785b      	ldrb	r3, [r3, #1]
 8011f72:	9609      	str	r6, [sp, #36]	; 0x24
 8011f74:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011f78:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011f7c:	4b1f      	ldr	r3, [pc, #124]	; (8011ffc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8011f7e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8011f82:	681b      	ldr	r3, [r3, #0]
 8011f84:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8011f88:	910b      	str	r1, [sp, #44]	; 0x2c
 8011f8a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8011f8e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8011f92:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8011f96:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8011f9a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011f9e:	b10a      	cbz	r2, 8011fa4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011fa0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8011fa2:	b906      	cbnz	r6, 8011fa6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8011fa4:	689e      	ldr	r6, [r3, #8]
 8011fa6:	af07      	add	r7, sp, #28
 8011fa8:	4621      	mov	r1, r4
 8011faa:	4638      	mov	r0, r7
 8011fac:	f004 f8f8 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011fb0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011fb2:	6828      	ldr	r0, [r5, #0]
 8011fb4:	f7f6 f8ca 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8011fb8:	6823      	ldr	r3, [r4, #0]
 8011fba:	4605      	mov	r5, r0
 8011fbc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011fbe:	4620      	mov	r0, r4
 8011fc0:	4798      	blx	r3
 8011fc2:	6823      	ldr	r3, [r4, #0]
 8011fc4:	4680      	mov	r8, r0
 8011fc6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011fca:	4620      	mov	r0, r4
 8011fcc:	4798      	blx	r3
 8011fce:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8011fd2:	ab09      	add	r3, sp, #36	; 0x24
 8011fd4:	9300      	str	r3, [sp, #0]
 8011fd6:	9501      	str	r5, [sp, #4]
 8011fd8:	ab05      	add	r3, sp, #20
 8011fda:	e897 0006 	ldmia.w	r7, {r1, r2}
 8011fde:	4630      	mov	r0, r6
 8011fe0:	f7f6 f866 	bl	80080b0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011fe4:	b00e      	add	sp, #56	; 0x38
 8011fe6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011fea:	bf00      	nop
 8011fec:	2000ef78 	.word	0x2000ef78
 8011ff0:	2000ef80 	.word	0x2000ef80
 8011ff4:	2000ef74 	.word	0x2000ef74
 8011ff8:	2000ef7c 	.word	0x2000ef7c
 8011ffc:	2000ef1c 	.word	0x2000ef1c

08012000 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012000:	b538      	push	{r3, r4, r5, lr}
 8012002:	4b0e      	ldr	r3, [pc, #56]	; (801203c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8012004:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012006:	881b      	ldrh	r3, [r3, #0]
 8012008:	429a      	cmp	r2, r3
 801200a:	4604      	mov	r4, r0
 801200c:	d214      	bcs.n	8012038 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801200e:	6803      	ldr	r3, [r0, #0]
 8012010:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012012:	4798      	blx	r3
 8012014:	6823      	ldr	r3, [r4, #0]
 8012016:	4605      	mov	r5, r0
 8012018:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801201a:	4620      	mov	r0, r4
 801201c:	4798      	blx	r3
 801201e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012022:	b22d      	sxth	r5, r5
 8012024:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012028:	4601      	mov	r1, r0
 801202a:	bf06      	itte	eq
 801202c:	4602      	moveq	r2, r0
 801202e:	4629      	moveq	r1, r5
 8012030:	462a      	movne	r2, r5
 8012032:	4620      	mov	r0, r4
 8012034:	f7f5 f9be 	bl	80073b4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012038:	bd38      	pop	{r3, r4, r5, pc}
 801203a:	bf00      	nop
 801203c:	2000ef78 	.word	0x2000ef78

08012040 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012040:	b530      	push	{r4, r5, lr}
 8012042:	888b      	ldrh	r3, [r1, #4]
 8012044:	8583      	strh	r3, [r0, #44]	; 0x2c
 8012046:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801204a:	b085      	sub	sp, #20
 801204c:	4604      	mov	r4, r0
 801204e:	b923      	cbnz	r3, 801205a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012050:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012054:	b90b      	cbnz	r3, 801205a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012056:	f7ff ffd3 	bl	8012000 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801205a:	6823      	ldr	r3, [r4, #0]
 801205c:	466d      	mov	r5, sp
 801205e:	4621      	mov	r1, r4
 8012060:	4628      	mov	r0, r5
 8012062:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012066:	4798      	blx	r3
 8012068:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801206c:	343c      	adds	r4, #60	; 0x3c
 801206e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8012072:	b005      	add	sp, #20
 8012074:	bd30      	pop	{r4, r5, pc}

08012076 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8012076:	2300      	movs	r3, #0
 8012078:	8083      	strh	r3, [r0, #4]
 801207a:	80c3      	strh	r3, [r0, #6]
 801207c:	8003      	strh	r3, [r0, #0]
 801207e:	8043      	strh	r3, [r0, #2]
 8012080:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8012084:	2bff      	cmp	r3, #255	; 0xff
 8012086:	bf01      	itttt	eq
 8012088:	890b      	ldrheq	r3, [r1, #8]
 801208a:	8083      	strheq	r3, [r0, #4]
 801208c:	894b      	ldrheq	r3, [r1, #10]
 801208e:	80c3      	strheq	r3, [r0, #6]
 8012090:	4770      	bx	lr
	...

08012094 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012094:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012096:	4604      	mov	r4, r0
 8012098:	6808      	ldr	r0, [r1, #0]
 801209a:	6849      	ldr	r1, [r1, #4]
 801209c:	466b      	mov	r3, sp
 801209e:	c303      	stmia	r3!, {r0, r1}
 80120a0:	6823      	ldr	r3, [r4, #0]
 80120a2:	4669      	mov	r1, sp
 80120a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80120a6:	4620      	mov	r0, r4
 80120a8:	4798      	blx	r3
 80120aa:	4b08      	ldr	r3, [pc, #32]	; (80120cc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80120ac:	681b      	ldr	r3, [r3, #0]
 80120ae:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80120b2:	b10a      	cbz	r2, 80120b8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80120b4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80120b6:	b900      	cbnz	r0, 80120ba <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80120b8:	6898      	ldr	r0, [r3, #8]
 80120ba:	6803      	ldr	r3, [r0, #0]
 80120bc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80120be:	6a1d      	ldr	r5, [r3, #32]
 80120c0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80120c4:	4669      	mov	r1, sp
 80120c6:	47a8      	blx	r5
 80120c8:	b003      	add	sp, #12
 80120ca:	bd30      	pop	{r4, r5, pc}
 80120cc:	2000ef1c 	.word	0x2000ef1c

080120d0 <_ZN8touchgfx3BoxD1Ev>:
 80120d0:	4770      	bx	lr

080120d2 <_ZN8touchgfx3BoxD0Ev>:
 80120d2:	b510      	push	{r4, lr}
 80120d4:	212c      	movs	r1, #44	; 0x2c
 80120d6:	4604      	mov	r4, r0
 80120d8:	f014 fa72 	bl	80265c0 <_ZdlPvj>
 80120dc:	4620      	mov	r0, r4
 80120de:	bd10      	pop	{r4, pc}

080120e0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80120e0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80120e4:	b12a      	cbz	r2, 80120f2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80120e6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80120ea:	b112      	cbz	r2, 80120f2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80120ec:	6803      	ldr	r3, [r0, #0]
 80120ee:	695b      	ldr	r3, [r3, #20]
 80120f0:	4718      	bx	r3
 80120f2:	4770      	bx	lr

080120f4 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 80120f4:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80120f8:	4770      	bx	lr

080120fa <_ZN8touchgfx6ButtonD1Ev>:
 80120fa:	4770      	bx	lr

080120fc <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80120fc:	b570      	push	{r4, r5, r6, lr}
 80120fe:	880b      	ldrh	r3, [r1, #0]
 8012100:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012102:	4605      	mov	r5, r0
 8012104:	8813      	ldrh	r3, [r2, #0]
 8012106:	f825 3f30 	strh.w	r3, [r5, #48]!
 801210a:	4604      	mov	r4, r0
 801210c:	4628      	mov	r0, r5
 801210e:	f006 fad5 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012112:	4606      	mov	r6, r0
 8012114:	4628      	mov	r0, r5
 8012116:	f006 fb05 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801211a:	6823      	ldr	r3, [r4, #0]
 801211c:	4605      	mov	r5, r0
 801211e:	4631      	mov	r1, r6
 8012120:	4620      	mov	r0, r4
 8012122:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012124:	4798      	blx	r3
 8012126:	6823      	ldr	r3, [r4, #0]
 8012128:	4629      	mov	r1, r5
 801212a:	4620      	mov	r0, r4
 801212c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801212e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012132:	4718      	bx	r3

08012134 <_ZN8touchgfx6ButtonD0Ev>:
 8012134:	b510      	push	{r4, lr}
 8012136:	2134      	movs	r1, #52	; 0x34
 8012138:	4604      	mov	r4, r0
 801213a:	f014 fa41 	bl	80265c0 <_ZdlPvj>
 801213e:	4620      	mov	r0, r4
 8012140:	bd10      	pop	{r4, pc}

08012142 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8012142:	b510      	push	{r4, lr}
 8012144:	4604      	mov	r4, r0
 8012146:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012148:	b150      	cbz	r0, 8012160 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801214a:	6803      	ldr	r3, [r0, #0]
 801214c:	68db      	ldr	r3, [r3, #12]
 801214e:	4798      	blx	r3
 8012150:	b130      	cbz	r0, 8012160 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012152:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8012154:	6803      	ldr	r3, [r0, #0]
 8012156:	4621      	mov	r1, r4
 8012158:	689b      	ldr	r3, [r3, #8]
 801215a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801215e:	4718      	bx	r3
 8012160:	bd10      	pop	{r4, pc}

08012162 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012162:	b510      	push	{r4, lr}
 8012164:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8012168:	2bff      	cmp	r3, #255	; 0xff
 801216a:	4604      	mov	r4, r0
 801216c:	d006      	beq.n	801217c <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 801216e:	2300      	movs	r3, #0
 8012170:	8003      	strh	r3, [r0, #0]
 8012172:	8043      	strh	r3, [r0, #2]
 8012174:	8083      	strh	r3, [r0, #4]
 8012176:	80c3      	strh	r3, [r0, #6]
 8012178:	4620      	mov	r0, r4
 801217a:	bd10      	pop	{r4, pc}
 801217c:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8012180:	b11b      	cbz	r3, 801218a <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8012182:	3130      	adds	r1, #48	; 0x30
 8012184:	f006 fb02 	bl	801878c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012188:	e7f6      	b.n	8012178 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 801218a:	312e      	adds	r1, #46	; 0x2e
 801218c:	e7fa      	b.n	8012184 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08012190 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8012190:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012194:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012198:	b08a      	sub	sp, #40	; 0x28
 801219a:	4604      	mov	r4, r0
 801219c:	4688      	mov	r8, r1
 801219e:	2b00      	cmp	r3, #0
 80121a0:	d066      	beq.n	8012270 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80121a2:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80121a4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80121a8:	a805      	add	r0, sp, #20
 80121aa:	f006 fa87 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80121ae:	4607      	mov	r7, r0
 80121b0:	a805      	add	r0, sp, #20
 80121b2:	f006 fab7 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80121b6:	f9b8 6000 	ldrsh.w	r6, [r8]
 80121ba:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80121be:	4432      	add	r2, r6
 80121c0:	b292      	uxth	r2, r2
 80121c2:	2300      	movs	r3, #0
 80121c4:	fa0f fc82 	sxth.w	ip, r2
 80121c8:	459c      	cmp	ip, r3
 80121ca:	9306      	str	r3, [sp, #24]
 80121cc:	dd52      	ble.n	8012274 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121ce:	42b7      	cmp	r7, r6
 80121d0:	dd50      	ble.n	8012274 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121d2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 80121d6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80121da:	442b      	add	r3, r5
 80121dc:	b29b      	uxth	r3, r3
 80121de:	b219      	sxth	r1, r3
 80121e0:	2900      	cmp	r1, #0
 80121e2:	dd47      	ble.n	8012274 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121e4:	42a8      	cmp	r0, r5
 80121e6:	dd45      	ble.n	8012274 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121e8:	4567      	cmp	r7, ip
 80121ea:	bfb8      	it	lt
 80121ec:	b2ba      	uxthlt	r2, r7
 80121ee:	4288      	cmp	r0, r1
 80121f0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80121f4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80121f8:	bfb8      	it	lt
 80121fa:	b283      	uxthlt	r3, r0
 80121fc:	1b92      	subs	r2, r2, r6
 80121fe:	1b5b      	subs	r3, r3, r5
 8012200:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012204:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012208:	f8ad 6018 	strh.w	r6, [sp, #24]
 801220c:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012210:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012214:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012218:	429a      	cmp	r2, r3
 801221a:	d026      	beq.n	801226a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801221c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012220:	2b00      	cmp	r3, #0
 8012222:	dd22      	ble.n	801226a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012224:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012228:	2b00      	cmp	r3, #0
 801222a:	dd1e      	ble.n	801226a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801222c:	2300      	movs	r3, #0
 801222e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8012232:	6823      	ldr	r3, [r4, #0]
 8012234:	a908      	add	r1, sp, #32
 8012236:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012238:	4620      	mov	r0, r4
 801223a:	4798      	blx	r3
 801223c:	4b0f      	ldr	r3, [pc, #60]	; (801227c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801223e:	681b      	ldr	r3, [r3, #0]
 8012240:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012244:	b10a      	cbz	r2, 801224a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8012246:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012248:	b900      	cbnz	r0, 801224c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 801224a:	6898      	ldr	r0, [r3, #8]
 801224c:	6801      	ldr	r1, [r0, #0]
 801224e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012252:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012256:	2501      	movs	r5, #1
 8012258:	9502      	str	r5, [sp, #8]
 801225a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801225e:	9401      	str	r4, [sp, #4]
 8012260:	ac06      	add	r4, sp, #24
 8012262:	9400      	str	r4, [sp, #0]
 8012264:	688c      	ldr	r4, [r1, #8]
 8012266:	a905      	add	r1, sp, #20
 8012268:	47a0      	blx	r4
 801226a:	b00a      	add	sp, #40	; 0x28
 801226c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012270:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8012272:	e797      	b.n	80121a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8012274:	2300      	movs	r3, #0
 8012276:	9307      	str	r3, [sp, #28]
 8012278:	e7ca      	b.n	8012210 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 801227a:	bf00      	nop
 801227c:	2000ef1c 	.word	0x2000ef1c

08012280 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8012280:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8012284:	b12a      	cbz	r2, 8012292 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012286:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801228a:	b112      	cbz	r2, 8012292 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801228c:	6803      	ldr	r3, [r0, #0]
 801228e:	695b      	ldr	r3, [r3, #20]
 8012290:	4718      	bx	r3
 8012292:	4770      	bx	lr

08012294 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8012294:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012298:	4b2f      	ldr	r3, [pc, #188]	; (8012358 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 801229a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801229c:	881b      	ldrh	r3, [r3, #0]
 801229e:	4293      	cmp	r3, r2
 80122a0:	b08d      	sub	sp, #52	; 0x34
 80122a2:	4604      	mov	r4, r0
 80122a4:	460f      	mov	r7, r1
 80122a6:	d954      	bls.n	8012352 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80122a8:	4b2c      	ldr	r3, [pc, #176]	; (801235c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80122aa:	6819      	ldr	r1, [r3, #0]
 80122ac:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80122b0:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80122b4:	4a2a      	ldr	r2, [pc, #168]	; (8012360 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80122b6:	6812      	ldr	r2, [r2, #0]
 80122b8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80122bc:	2900      	cmp	r1, #0
 80122be:	d048      	beq.n	8012352 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80122c0:	785a      	ldrb	r2, [r3, #1]
 80122c2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80122c6:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80122ca:	4b26      	ldr	r3, [pc, #152]	; (8012364 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 80122cc:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 80122d0:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 80122d4:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 80122d8:	6b26      	ldr	r6, [r4, #48]	; 0x30
 80122da:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 80122de:	9107      	str	r1, [sp, #28]
 80122e0:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80122e4:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80122e8:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 80122ec:	681a      	ldr	r2, [r3, #0]
 80122ee:	f88d 8020 	strb.w	r8, [sp, #32]
 80122f2:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 80122f6:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 80122fa:	9609      	str	r6, [sp, #36]	; 0x24
 80122fc:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012300:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8012304:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012308:	b10b      	cbz	r3, 801230e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 801230a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 801230c:	b905      	cbnz	r5, 8012310 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 801230e:	6895      	ldr	r5, [r2, #8]
 8012310:	ae05      	add	r6, sp, #20
 8012312:	4621      	mov	r1, r4
 8012314:	4630      	mov	r0, r6
 8012316:	f003 ff43 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801231a:	4b13      	ldr	r3, [pc, #76]	; (8012368 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 801231c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801231e:	6818      	ldr	r0, [r3, #0]
 8012320:	f7f5 ff14 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 8012324:	6823      	ldr	r3, [r4, #0]
 8012326:	4680      	mov	r8, r0
 8012328:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801232a:	4620      	mov	r0, r4
 801232c:	4798      	blx	r3
 801232e:	6823      	ldr	r3, [r4, #0]
 8012330:	4681      	mov	r9, r0
 8012332:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012336:	4620      	mov	r0, r4
 8012338:	4798      	blx	r3
 801233a:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801233e:	ab07      	add	r3, sp, #28
 8012340:	9300      	str	r3, [sp, #0]
 8012342:	f8cd 8004 	str.w	r8, [sp, #4]
 8012346:	463b      	mov	r3, r7
 8012348:	e896 0006 	ldmia.w	r6, {r1, r2}
 801234c:	4628      	mov	r0, r5
 801234e:	f7f5 feaf 	bl	80080b0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012352:	b00d      	add	sp, #52	; 0x34
 8012354:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012358:	2000ef78 	.word	0x2000ef78
 801235c:	2000ef74 	.word	0x2000ef74
 8012360:	2000ef7c 	.word	0x2000ef7c
 8012364:	2000ef1c 	.word	0x2000ef1c
 8012368:	2000ef80 	.word	0x2000ef80

0801236c <_ZN8touchgfx13BoxWithBorderD1Ev>:
 801236c:	4770      	bx	lr

0801236e <_ZN8touchgfx13BoxWithBorderD0Ev>:
 801236e:	b510      	push	{r4, lr}
 8012370:	2134      	movs	r1, #52	; 0x34
 8012372:	4604      	mov	r4, r0
 8012374:	f014 f924 	bl	80265c0 <_ZdlPvj>
 8012378:	4620      	mov	r0, r4
 801237a:	bd10      	pop	{r4, pc}

0801237c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 801237c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012380:	4604      	mov	r4, r0
 8012382:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012384:	8962      	ldrh	r2, [r4, #10]
 8012386:	b218      	sxth	r0, r3
 8012388:	460e      	mov	r6, r1
 801238a:	005b      	lsls	r3, r3, #1
 801238c:	8921      	ldrh	r1, [r4, #8]
 801238e:	b29b      	uxth	r3, r3
 8012390:	1ac9      	subs	r1, r1, r3
 8012392:	b08e      	sub	sp, #56	; 0x38
 8012394:	b209      	sxth	r1, r1
 8012396:	1ad3      	subs	r3, r2, r3
 8012398:	b21b      	sxth	r3, r3
 801239a:	2900      	cmp	r1, #0
 801239c:	f8ad 0000 	strh.w	r0, [sp]
 80123a0:	f8ad 0002 	strh.w	r0, [sp, #2]
 80123a4:	f8ad 1004 	strh.w	r1, [sp, #4]
 80123a8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80123ac:	dd5e      	ble.n	801246c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80123ae:	2b00      	cmp	r3, #0
 80123b0:	dd5c      	ble.n	801246c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80123b2:	6830      	ldr	r0, [r6, #0]
 80123b4:	6871      	ldr	r1, [r6, #4]
 80123b6:	ab02      	add	r3, sp, #8
 80123b8:	c303      	stmia	r3!, {r0, r1}
 80123ba:	4669      	mov	r1, sp
 80123bc:	a802      	add	r0, sp, #8
 80123be:	f7fd fb55 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 80123c2:	4620      	mov	r0, r4
 80123c4:	a902      	add	r1, sp, #8
 80123c6:	f7ff fe65 	bl	8012094 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 80123ca:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 80123cc:	2800      	cmp	r0, #0
 80123ce:	d05f      	beq.n	8012490 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80123d0:	8963      	ldrh	r3, [r4, #10]
 80123d2:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80123d6:	f8ad 101c 	strh.w	r1, [sp, #28]
 80123da:	1a1f      	subs	r7, r3, r0
 80123dc:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 80123e0:	b202      	sxth	r2, r0
 80123e2:	2500      	movs	r5, #0
 80123e4:	b21b      	sxth	r3, r3
 80123e6:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 80123ea:	1a09      	subs	r1, r1, r0
 80123ec:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80123f0:	9506      	str	r5, [sp, #24]
 80123f2:	f8ad 201e 	strh.w	r2, [sp, #30]
 80123f6:	f8ad 5020 	strh.w	r5, [sp, #32]
 80123fa:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 80123fe:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8012402:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8012406:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801240a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801240e:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 8012412:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8012416:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801241a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801241e:	af04      	add	r7, sp, #16
 8012420:	ab06      	add	r3, sp, #24
 8012422:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8012426:	e893 0003 	ldmia.w	r3, {r0, r1}
 801242a:	e887 0003 	stmia.w	r7, {r0, r1}
 801242e:	4631      	mov	r1, r6
 8012430:	4638      	mov	r0, r7
 8012432:	f7fd fb1b 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 8012436:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801243a:	2b00      	cmp	r3, #0
 801243c:	dd12      	ble.n	8012464 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801243e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012442:	2b00      	cmp	r3, #0
 8012444:	dd0e      	ble.n	8012464 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8012446:	6823      	ldr	r3, [r4, #0]
 8012448:	4639      	mov	r1, r7
 801244a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801244c:	4620      	mov	r0, r4
 801244e:	4798      	blx	r3
 8012450:	f7f2 f924 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 8012454:	6803      	ldr	r3, [r0, #0]
 8012456:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012458:	f8d3 8020 	ldr.w	r8, [r3, #32]
 801245c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8012460:	4639      	mov	r1, r7
 8012462:	47c0      	blx	r8
 8012464:	3501      	adds	r5, #1
 8012466:	2d04      	cmp	r5, #4
 8012468:	d1da      	bne.n	8012420 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 801246a:	e011      	b.n	8012490 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 801246c:	6830      	ldr	r0, [r6, #0]
 801246e:	6871      	ldr	r1, [r6, #4]
 8012470:	ab06      	add	r3, sp, #24
 8012472:	c303      	stmia	r3!, {r0, r1}
 8012474:	6823      	ldr	r3, [r4, #0]
 8012476:	a906      	add	r1, sp, #24
 8012478:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801247a:	4620      	mov	r0, r4
 801247c:	4798      	blx	r3
 801247e:	f7f2 f90d 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 8012482:	6803      	ldr	r3, [r0, #0]
 8012484:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012486:	6a1d      	ldr	r5, [r3, #32]
 8012488:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801248c:	a906      	add	r1, sp, #24
 801248e:	47a8      	blx	r5
 8012490:	b00e      	add	sp, #56	; 0x38
 8012492:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012496 <_ZN8touchgfx5ImageD1Ev>:
 8012496:	4770      	bx	lr

08012498 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8012498:	b570      	push	{r4, r5, r6, lr}
 801249a:	880b      	ldrh	r3, [r1, #0]
 801249c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801249e:	4604      	mov	r4, r0
 80124a0:	4608      	mov	r0, r1
 80124a2:	460d      	mov	r5, r1
 80124a4:	f006 f90a 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80124a8:	4606      	mov	r6, r0
 80124aa:	4628      	mov	r0, r5
 80124ac:	f006 f93a 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80124b0:	6823      	ldr	r3, [r4, #0]
 80124b2:	4605      	mov	r5, r0
 80124b4:	4631      	mov	r1, r6
 80124b6:	4620      	mov	r0, r4
 80124b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80124ba:	4798      	blx	r3
 80124bc:	6823      	ldr	r3, [r4, #0]
 80124be:	4629      	mov	r1, r5
 80124c0:	4620      	mov	r0, r4
 80124c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80124c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80124c8:	4718      	bx	r3

080124ca <_ZN8touchgfx5ImageD0Ev>:
 80124ca:	b510      	push	{r4, lr}
 80124cc:	212c      	movs	r1, #44	; 0x2c
 80124ce:	4604      	mov	r4, r0
 80124d0:	f014 f876 	bl	80265c0 <_ZdlPvj>
 80124d4:	4620      	mov	r0, r4
 80124d6:	bd10      	pop	{r4, pc}

080124d8 <_ZNK8touchgfx5Image12getSolidRectEv>:
 80124d8:	b510      	push	{r4, lr}
 80124da:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80124de:	2bff      	cmp	r3, #255	; 0xff
 80124e0:	4604      	mov	r4, r0
 80124e2:	d006      	beq.n	80124f2 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80124e4:	2300      	movs	r3, #0
 80124e6:	8003      	strh	r3, [r0, #0]
 80124e8:	8043      	strh	r3, [r0, #2]
 80124ea:	8083      	strh	r3, [r0, #4]
 80124ec:	80c3      	strh	r3, [r0, #6]
 80124ee:	4620      	mov	r0, r4
 80124f0:	bd10      	pop	{r4, pc}
 80124f2:	3126      	adds	r1, #38	; 0x26
 80124f4:	f006 f94a 	bl	801878c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80124f8:	e7f9      	b.n	80124ee <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

080124fc <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80124fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012500:	4604      	mov	r4, r0
 8012502:	b088      	sub	sp, #32
 8012504:	f854 3b26 	ldr.w	r3, [r4], #38
 8012508:	2500      	movs	r5, #0
 801250a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801250c:	460f      	mov	r7, r1
 801250e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8012512:	a904      	add	r1, sp, #16
 8012514:	4606      	mov	r6, r0
 8012516:	4798      	blx	r3
 8012518:	4620      	mov	r0, r4
 801251a:	f006 f8cf 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801251e:	4680      	mov	r8, r0
 8012520:	4620      	mov	r0, r4
 8012522:	f006 f8ff 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012526:	9506      	str	r5, [sp, #24]
 8012528:	ad06      	add	r5, sp, #24
 801252a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801252e:	4639      	mov	r1, r7
 8012530:	4628      	mov	r0, r5
 8012532:	f8ad 801c 	strh.w	r8, [sp, #28]
 8012536:	f7fd fa99 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 801253a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801253e:	2b00      	cmp	r3, #0
 8012540:	dd19      	ble.n	8012576 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012542:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012546:	2b00      	cmp	r3, #0
 8012548:	dd15      	ble.n	8012576 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801254a:	4b0c      	ldr	r3, [pc, #48]	; (801257c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 801254c:	681b      	ldr	r3, [r3, #0]
 801254e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012552:	b10a      	cbz	r2, 8012558 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8012554:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012556:	b900      	cbnz	r0, 801255a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012558:	6898      	ldr	r0, [r3, #8]
 801255a:	6801      	ldr	r1, [r0, #0]
 801255c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012560:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8012564:	2701      	movs	r7, #1
 8012566:	9702      	str	r7, [sp, #8]
 8012568:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 801256c:	e9cd 5600 	strd	r5, r6, [sp]
 8012570:	688d      	ldr	r5, [r1, #8]
 8012572:	4621      	mov	r1, r4
 8012574:	47a8      	blx	r5
 8012576:	b008      	add	sp, #32
 8012578:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801257c:	2000ef1c 	.word	0x2000ef1c

08012580 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8012580:	4770      	bx	lr

08012582 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8012582:	b510      	push	{r4, lr}
 8012584:	2148      	movs	r1, #72	; 0x48
 8012586:	4604      	mov	r4, r0
 8012588:	f014 f81a 	bl	80265c0 <_ZdlPvj>
 801258c:	4620      	mov	r0, r4
 801258e:	bd10      	pop	{r4, pc}

08012590 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8012590:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012594:	b08d      	sub	sp, #52	; 0x34
 8012596:	4604      	mov	r4, r0
 8012598:	460f      	mov	r7, r1
 801259a:	f7ff fdf9 	bl	8012190 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 801259e:	4a55      	ldr	r2, [pc, #340]	; (80126f4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80125a0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80125a2:	8812      	ldrh	r2, [r2, #0]
 80125a4:	429a      	cmp	r2, r3
 80125a6:	f240 8082 	bls.w	80126ae <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80125aa:	4d53      	ldr	r5, [pc, #332]	; (80126f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80125ac:	682a      	ldr	r2, [r5, #0]
 80125ae:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80125b2:	4b52      	ldr	r3, [pc, #328]	; (80126fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80125b4:	681b      	ldr	r3, [r3, #0]
 80125b6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80125ba:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80125be:	2200      	movs	r2, #0
 80125c0:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80125c4:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80125c8:	2a03      	cmp	r2, #3
 80125ca:	d811      	bhi.n	80125f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80125cc:	e8df f002 	tbb	[pc, r2]
 80125d0:	89727902 	.word	0x89727902
 80125d4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80125d8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80125dc:	1ad2      	subs	r2, r2, r3
 80125de:	2002      	movs	r0, #2
 80125e0:	f8ad 1010 	strh.w	r1, [sp, #16]
 80125e4:	fb92 f2f0 	sdiv	r2, r2, r0
 80125e8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80125ec:	f8ad 200e 	strh.w	r2, [sp, #14]
 80125f0:	f10d 080c 	add.w	r8, sp, #12
 80125f4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80125f8:	f10d 0914 	add.w	r9, sp, #20
 80125fc:	e889 0003 	stmia.w	r9, {r0, r1}
 8012600:	4639      	mov	r1, r7
 8012602:	4648      	mov	r0, r9
 8012604:	f7fd fa32 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 8012608:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801260c:	2b00      	cmp	r3, #0
 801260e:	dd4e      	ble.n	80126ae <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012610:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012614:	2b00      	cmp	r3, #0
 8012616:	dd4a      	ble.n	80126ae <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012618:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801261c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012620:	1a9b      	subs	r3, r3, r2
 8012622:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012626:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 801262a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 801262e:	1a9b      	subs	r3, r3, r2
 8012630:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012634:	6823      	ldr	r3, [r4, #0]
 8012636:	4641      	mov	r1, r8
 8012638:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801263a:	4620      	mov	r0, r4
 801263c:	4798      	blx	r3
 801263e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012642:	2b00      	cmp	r3, #0
 8012644:	d053      	beq.n	80126ee <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8012646:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8012648:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 801264a:	682b      	ldr	r3, [r5, #0]
 801264c:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8012650:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8012654:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012658:	785b      	ldrb	r3, [r3, #1]
 801265a:	9209      	str	r2, [sp, #36]	; 0x24
 801265c:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012660:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012664:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012668:	2300      	movs	r3, #0
 801266a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801266e:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8012672:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012676:	4b22      	ldr	r3, [pc, #136]	; (8012700 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012678:	9607      	str	r6, [sp, #28]
 801267a:	681b      	ldr	r3, [r3, #0]
 801267c:	f88d 5020 	strb.w	r5, [sp, #32]
 8012680:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012684:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012688:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 801268c:	b10a      	cbz	r2, 8012692 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 801268e:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012690:	b904      	cbnz	r4, 8012694 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8012692:	689c      	ldr	r4, [r3, #8]
 8012694:	4b1b      	ldr	r3, [pc, #108]	; (8012704 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8012696:	6818      	ldr	r0, [r3, #0]
 8012698:	f7f5 fd58 	bl	800814c <_ZNK8touchgfx5Texts7getTextEt>
 801269c:	ab07      	add	r3, sp, #28
 801269e:	9001      	str	r0, [sp, #4]
 80126a0:	9300      	str	r3, [sp, #0]
 80126a2:	e898 0006 	ldmia.w	r8, {r1, r2}
 80126a6:	464b      	mov	r3, r9
 80126a8:	4620      	mov	r0, r4
 80126aa:	f7f5 fd01 	bl	80080b0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80126ae:	b00d      	add	sp, #52	; 0x34
 80126b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80126b4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80126b8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80126bc:	1ad2      	subs	r2, r2, r3
 80126be:	3201      	adds	r2, #1
 80126c0:	e78d      	b.n	80125de <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80126c2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80126c6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80126ca:	1ad2      	subs	r2, r2, r3
 80126cc:	3201      	adds	r2, #1
 80126ce:	2002      	movs	r0, #2
 80126d0:	f8ad 3010 	strh.w	r3, [sp, #16]
 80126d4:	fb92 f2f0 	sdiv	r2, r2, r0
 80126d8:	f8ad 1012 	strh.w	r1, [sp, #18]
 80126dc:	f8ad 200c 	strh.w	r2, [sp, #12]
 80126e0:	e786      	b.n	80125f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80126e2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80126e6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80126ea:	1ad2      	subs	r2, r2, r3
 80126ec:	e7ef      	b.n	80126ce <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80126ee:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80126f0:	e7aa      	b.n	8012648 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80126f2:	bf00      	nop
 80126f4:	2000ef78 	.word	0x2000ef78
 80126f8:	2000ef74 	.word	0x2000ef74
 80126fc:	2000ef7c 	.word	0x2000ef7c
 8012700:	2000ef1c 	.word	0x2000ef1c
 8012704:	2000ef80 	.word	0x2000ef80

08012708 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8012708:	b510      	push	{r4, lr}
 801270a:	2101      	movs	r1, #1
 801270c:	4c13      	ldr	r4, [pc, #76]	; (801275c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 801270e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8012712:	2200      	movs	r2, #0
 8012714:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8012718:	6004      	str	r4, [r0, #0]
 801271a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801271e:	4c10      	ldr	r4, [pc, #64]	; (8012760 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8012720:	8082      	strh	r2, [r0, #4]
 8012722:	80c2      	strh	r2, [r0, #6]
 8012724:	8102      	strh	r2, [r0, #8]
 8012726:	8142      	strh	r2, [r0, #10]
 8012728:	8182      	strh	r2, [r0, #12]
 801272a:	81c2      	strh	r2, [r0, #14]
 801272c:	8202      	strh	r2, [r0, #16]
 801272e:	8242      	strh	r2, [r0, #18]
 8012730:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012734:	61c2      	str	r2, [r0, #28]
 8012736:	8402      	strh	r2, [r0, #32]
 8012738:	8442      	strh	r2, [r0, #34]	; 0x22
 801273a:	6282      	str	r2, [r0, #40]	; 0x28
 801273c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012740:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012742:	8601      	strh	r1, [r0, #48]	; 0x30
 8012744:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8012748:	6344      	str	r4, [r0, #52]	; 0x34
 801274a:	8701      	strh	r1, [r0, #56]	; 0x38
 801274c:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8012750:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8012754:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8012758:	bd10      	pop	{r4, pc}
 801275a:	bf00      	nop
 801275c:	0802a538 	.word	0x0802a538
 8012760:	080284a8 	.word	0x080284a8

08012764 <_ZN8touchgfx7OutlineD1Ev>:
 8012764:	4770      	bx	lr

08012766 <_ZN8touchgfx7OutlineD0Ev>:
 8012766:	b510      	push	{r4, lr}
 8012768:	2130      	movs	r1, #48	; 0x30
 801276a:	4604      	mov	r4, r0
 801276c:	f013 ff28 	bl	80265c0 <_ZdlPvj>
 8012770:	4620      	mov	r0, r4
 8012772:	bd10      	pop	{r4, pc}

08012774 <_ZN8touchgfx7Outline5resetEv>:
 8012774:	b510      	push	{r4, lr}
 8012776:	4604      	mov	r4, r0
 8012778:	f000 fe96 	bl	80134a8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 801277c:	60e0      	str	r0, [r4, #12]
 801277e:	f000 fe99 	bl	80134b4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8012782:	68e3      	ldr	r3, [r4, #12]
 8012784:	6123      	str	r3, [r4, #16]
 8012786:	08c0      	lsrs	r0, r0, #3
 8012788:	2200      	movs	r2, #0
 801278a:	f647 71ff 	movw	r1, #32767	; 0x7fff
 801278e:	3801      	subs	r0, #1
 8012790:	6060      	str	r0, [r4, #4]
 8012792:	60a2      	str	r2, [r4, #8]
 8012794:	8019      	strh	r1, [r3, #0]
 8012796:	8059      	strh	r1, [r3, #2]
 8012798:	809a      	strh	r2, [r3, #4]
 801279a:	80da      	strh	r2, [r3, #6]
 801279c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801279e:	f023 0301 	bic.w	r3, r3, #1
 80127a2:	f043 0302 	orr.w	r3, r3, #2
 80127a6:	6263      	str	r3, [r4, #36]	; 0x24
 80127a8:	bd10      	pop	{r4, pc}
	...

080127ac <_ZN8touchgfx7OutlineC1Ev>:
 80127ac:	b510      	push	{r4, lr}
 80127ae:	4b0a      	ldr	r3, [pc, #40]	; (80127d8 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80127b0:	6003      	str	r3, [r0, #0]
 80127b2:	2300      	movs	r3, #0
 80127b4:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80127b8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80127bc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80127c0:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80127c4:	6243      	str	r3, [r0, #36]	; 0x24
 80127c6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80127ca:	4604      	mov	r4, r0
 80127cc:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80127d0:	f7ff ffd0 	bl	8012774 <_ZN8touchgfx7Outline5resetEv>
 80127d4:	4620      	mov	r0, r4
 80127d6:	bd10      	pop	{r4, pc}
 80127d8:	0802a5ac 	.word	0x0802a5ac

080127dc <_ZN8touchgfx7Outline10renderLineEiiii>:
 80127dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127e0:	b093      	sub	sp, #76	; 0x4c
 80127e2:	1156      	asrs	r6, r2, #5
 80127e4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80127e6:	9305      	str	r3, [sp, #20]
 80127e8:	f004 051f 	and.w	r5, r4, #31
 80127ec:	1153      	asrs	r3, r2, #5
 80127ee:	9504      	str	r5, [sp, #16]
 80127f0:	1165      	asrs	r5, r4, #5
 80127f2:	9303      	str	r3, [sp, #12]
 80127f4:	42ae      	cmp	r6, r5
 80127f6:	ea4f 1364 	mov.w	r3, r4, asr #5
 80127fa:	9306      	str	r3, [sp, #24]
 80127fc:	f002 031f 	and.w	r3, r2, #31
 8012800:	f040 80f8 	bne.w	80129f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8012804:	9c04      	ldr	r4, [sp, #16]
 8012806:	9a05      	ldr	r2, [sp, #20]
 8012808:	42a3      	cmp	r3, r4
 801280a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 801280e:	6902      	ldr	r2, [r0, #16]
 8012810:	d125      	bne.n	801285e <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8012812:	f9b2 3000 	ldrsh.w	r3, [r2]
 8012816:	459e      	cmp	lr, r3
 8012818:	d103      	bne.n	8012822 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 801281a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801281e:	429e      	cmp	r6, r3
 8012820:	d035      	beq.n	801288e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012822:	88d1      	ldrh	r1, [r2, #6]
 8012824:	8893      	ldrh	r3, [r2, #4]
 8012826:	430b      	orrs	r3, r1
 8012828:	d010      	beq.n	801284c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801282a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801282e:	2b00      	cmp	r3, #0
 8012830:	db0c      	blt.n	801284c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012832:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012834:	428b      	cmp	r3, r1
 8012836:	da09      	bge.n	801284c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012838:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 801283c:	428b      	cmp	r3, r1
 801283e:	bf38      	it	cc
 8012840:	3208      	addcc	r2, #8
 8012842:	f103 0301 	add.w	r3, r3, #1
 8012846:	bf38      	it	cc
 8012848:	6102      	strcc	r2, [r0, #16]
 801284a:	6083      	str	r3, [r0, #8]
 801284c:	6903      	ldr	r3, [r0, #16]
 801284e:	9a03      	ldr	r2, [sp, #12]
 8012850:	f8a3 e000 	strh.w	lr, [r3]
 8012854:	805a      	strh	r2, [r3, #2]
 8012856:	2200      	movs	r2, #0
 8012858:	809a      	strh	r2, [r3, #4]
 801285a:	80da      	strh	r2, [r3, #6]
 801285c:	e017      	b.n	801288e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801285e:	9c05      	ldr	r4, [sp, #20]
 8012860:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8012864:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012868:	f004 041f 	and.w	r4, r4, #31
 801286c:	114e      	asrs	r6, r1, #5
 801286e:	9402      	str	r4, [sp, #8]
 8012870:	9c04      	ldr	r4, [sp, #16]
 8012872:	4576      	cmp	r6, lr
 8012874:	f001 0c1f 	and.w	ip, r1, #31
 8012878:	eba4 0403 	sub.w	r4, r4, r3
 801287c:	d10a      	bne.n	8012894 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 801287e:	9b02      	ldr	r3, [sp, #8]
 8012880:	449c      	add	ip, r3
 8012882:	44a0      	add	r8, r4
 8012884:	fb04 a40c 	mla	r4, r4, ip, sl
 8012888:	f8a2 8004 	strh.w	r8, [r2, #4]
 801288c:	80d4      	strh	r4, [r2, #6]
 801288e:	b013      	add	sp, #76	; 0x4c
 8012890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012894:	9d05      	ldr	r5, [sp, #20]
 8012896:	1a69      	subs	r1, r5, r1
 8012898:	bf5b      	ittet	pl
 801289a:	f1cc 0520 	rsbpl	r5, ip, #32
 801289e:	436c      	mulpl	r4, r5
 80128a0:	2500      	movmi	r5, #0
 80128a2:	2520      	movpl	r5, #32
 80128a4:	bf44      	itt	mi
 80128a6:	fb04 f40c 	mulmi.w	r4, r4, ip
 80128aa:	4249      	negmi	r1, r1
 80128ac:	9501      	str	r5, [sp, #4]
 80128ae:	9f01      	ldr	r7, [sp, #4]
 80128b0:	fb94 f5f1 	sdiv	r5, r4, r1
 80128b4:	fb01 4415 	mls	r4, r1, r5, r4
 80128b8:	bf54      	ite	pl
 80128ba:	f04f 0901 	movpl.w	r9, #1
 80128be:	f04f 39ff 	movmi.w	r9, #4294967295
 80128c2:	2c00      	cmp	r4, #0
 80128c4:	bfb8      	it	lt
 80128c6:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80128ca:	44bc      	add	ip, r7
 80128cc:	44a8      	add	r8, r5
 80128ce:	fb05 ac0c 	mla	ip, r5, ip, sl
 80128d2:	f8a2 8004 	strh.w	r8, [r2, #4]
 80128d6:	f8a2 c006 	strh.w	ip, [r2, #6]
 80128da:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80128de:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80128e2:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80128e6:	bfb8      	it	lt
 80128e8:	1864      	addlt	r4, r4, r1
 80128ea:	ea58 0202 	orrs.w	r2, r8, r2
 80128ee:	444e      	add	r6, r9
 80128f0:	d011      	beq.n	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80128f2:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80128f6:	f1b8 0f00 	cmp.w	r8, #0
 80128fa:	db0c      	blt.n	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80128fc:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80128fe:	4590      	cmp	r8, r2
 8012900:	da09      	bge.n	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012902:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8012906:	4590      	cmp	r8, r2
 8012908:	bf3c      	itt	cc
 801290a:	f10c 0208 	addcc.w	r2, ip, #8
 801290e:	6102      	strcc	r2, [r0, #16]
 8012910:	f108 0201 	add.w	r2, r8, #1
 8012914:	6082      	str	r2, [r0, #8]
 8012916:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801291a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801291e:	f8ac 6000 	strh.w	r6, [ip]
 8012922:	2700      	movs	r7, #0
 8012924:	45b6      	cmp	lr, r6
 8012926:	f8ac 2002 	strh.w	r2, [ip, #2]
 801292a:	f8ac 7004 	strh.w	r7, [ip, #4]
 801292e:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012932:	442b      	add	r3, r5
 8012934:	d04d      	beq.n	80129d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8012936:	9f04      	ldr	r7, [sp, #16]
 8012938:	1aff      	subs	r7, r7, r3
 801293a:	443d      	add	r5, r7
 801293c:	016d      	lsls	r5, r5, #5
 801293e:	fb95 f8f1 	sdiv	r8, r5, r1
 8012942:	fb01 5518 	mls	r5, r1, r8, r5
 8012946:	2d00      	cmp	r5, #0
 8012948:	bfb8      	it	lt
 801294a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801294e:	f108 0701 	add.w	r7, r8, #1
 8012952:	bfb8      	it	lt
 8012954:	186d      	addlt	r5, r5, r1
 8012956:	1a64      	subs	r4, r4, r1
 8012958:	9703      	str	r7, [sp, #12]
 801295a:	f04f 0a00 	mov.w	sl, #0
 801295e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012962:	1964      	adds	r4, r4, r5
 8012964:	bf58      	it	pl
 8012966:	9f03      	ldrpl	r7, [sp, #12]
 8012968:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801296c:	bf48      	it	mi
 801296e:	4647      	movmi	r7, r8
 8012970:	44bb      	add	fp, r7
 8012972:	f8ac b004 	strh.w	fp, [ip, #4]
 8012976:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801297a:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801297e:	f8ac b006 	strh.w	fp, [ip, #6]
 8012982:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012986:	443b      	add	r3, r7
 8012988:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801298c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012990:	bf58      	it	pl
 8012992:	1a64      	subpl	r4, r4, r1
 8012994:	ea5b 0707 	orrs.w	r7, fp, r7
 8012998:	444e      	add	r6, r9
 801299a:	d011      	beq.n	80129c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801299c:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80129a0:	f1bb 0f00 	cmp.w	fp, #0
 80129a4:	db0c      	blt.n	80129c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80129a6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80129a8:	45bb      	cmp	fp, r7
 80129aa:	da09      	bge.n	80129c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80129ac:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80129b0:	45bb      	cmp	fp, r7
 80129b2:	bf3c      	itt	cc
 80129b4:	f10c 0708 	addcc.w	r7, ip, #8
 80129b8:	6107      	strcc	r7, [r0, #16]
 80129ba:	f10b 0701 	add.w	r7, fp, #1
 80129be:	6087      	str	r7, [r0, #8]
 80129c0:	6907      	ldr	r7, [r0, #16]
 80129c2:	45b6      	cmp	lr, r6
 80129c4:	803e      	strh	r6, [r7, #0]
 80129c6:	807a      	strh	r2, [r7, #2]
 80129c8:	f8a7 a004 	strh.w	sl, [r7, #4]
 80129cc:	f8a7 a006 	strh.w	sl, [r7, #6]
 80129d0:	d1c5      	bne.n	801295e <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80129d2:	9a04      	ldr	r2, [sp, #16]
 80129d4:	1ad3      	subs	r3, r2, r3
 80129d6:	6902      	ldr	r2, [r0, #16]
 80129d8:	8891      	ldrh	r1, [r2, #4]
 80129da:	88d6      	ldrh	r6, [r2, #6]
 80129dc:	4419      	add	r1, r3
 80129de:	8091      	strh	r1, [r2, #4]
 80129e0:	9902      	ldr	r1, [sp, #8]
 80129e2:	f101 0c20 	add.w	ip, r1, #32
 80129e6:	9901      	ldr	r1, [sp, #4]
 80129e8:	ebac 0c01 	sub.w	ip, ip, r1
 80129ec:	fb03 630c 	mla	r3, r3, ip, r6
 80129f0:	80d3      	strh	r3, [r2, #6]
 80129f2:	e74c      	b.n	801288e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80129f4:	9d05      	ldr	r5, [sp, #20]
 80129f6:	1aa2      	subs	r2, r4, r2
 80129f8:	eba5 0501 	sub.w	r5, r5, r1
 80129fc:	9508      	str	r5, [sp, #32]
 80129fe:	9202      	str	r2, [sp, #8]
 8012a00:	f140 8128 	bpl.w	8012c54 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8012a04:	9a03      	ldr	r2, [sp, #12]
 8012a06:	2a00      	cmp	r2, #0
 8012a08:	f6ff af41 	blt.w	801288e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012a0c:	9a02      	ldr	r2, [sp, #8]
 8012a0e:	4252      	negs	r2, r2
 8012a10:	9202      	str	r2, [sp, #8]
 8012a12:	9a06      	ldr	r2, [sp, #24]
 8012a14:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012a18:	f04f 34ff 	mov.w	r4, #4294967295
 8012a1c:	9206      	str	r2, [sp, #24]
 8012a1e:	462a      	mov	r2, r5
 8012a20:	940b      	str	r4, [sp, #44]	; 0x2c
 8012a22:	435a      	muls	r2, r3
 8012a24:	2400      	movs	r4, #0
 8012a26:	9d02      	ldr	r5, [sp, #8]
 8012a28:	9401      	str	r4, [sp, #4]
 8012a2a:	9c02      	ldr	r4, [sp, #8]
 8012a2c:	fb92 f4f4 	sdiv	r4, r2, r4
 8012a30:	fb05 2214 	mls	r2, r5, r4, r2
 8012a34:	2a00      	cmp	r2, #0
 8012a36:	9207      	str	r2, [sp, #28]
 8012a38:	bfbc      	itt	lt
 8012a3a:	1952      	addlt	r2, r2, r5
 8012a3c:	9207      	strlt	r2, [sp, #28]
 8012a3e:	9a01      	ldr	r2, [sp, #4]
 8012a40:	6905      	ldr	r5, [r0, #16]
 8012a42:	bfb8      	it	lt
 8012a44:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012a48:	eb04 0901 	add.w	r9, r4, r1
 8012a4c:	429a      	cmp	r2, r3
 8012a4e:	ea4f 1669 	mov.w	r6, r9, asr #5
 8012a52:	f040 8112 	bne.w	8012c7a <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8012a56:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012a5a:	429e      	cmp	r6, r3
 8012a5c:	d104      	bne.n	8012a68 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012a5e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012a62:	9a03      	ldr	r2, [sp, #12]
 8012a64:	429a      	cmp	r2, r3
 8012a66:	d01b      	beq.n	8012aa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012a68:	88ea      	ldrh	r2, [r5, #6]
 8012a6a:	88ab      	ldrh	r3, [r5, #4]
 8012a6c:	4313      	orrs	r3, r2
 8012a6e:	d010      	beq.n	8012a92 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012a70:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012a74:	2a00      	cmp	r2, #0
 8012a76:	db0c      	blt.n	8012a92 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012a78:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012a7a:	429a      	cmp	r2, r3
 8012a7c:	da09      	bge.n	8012a92 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012a7e:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8012a82:	429a      	cmp	r2, r3
 8012a84:	bf38      	it	cc
 8012a86:	3508      	addcc	r5, #8
 8012a88:	f102 0201 	add.w	r2, r2, #1
 8012a8c:	bf38      	it	cc
 8012a8e:	6105      	strcc	r5, [r0, #16]
 8012a90:	6082      	str	r2, [r0, #8]
 8012a92:	6903      	ldr	r3, [r0, #16]
 8012a94:	9a03      	ldr	r2, [sp, #12]
 8012a96:	805a      	strh	r2, [r3, #2]
 8012a98:	2200      	movs	r2, #0
 8012a9a:	801e      	strh	r6, [r3, #0]
 8012a9c:	809a      	strh	r2, [r3, #4]
 8012a9e:	80da      	strh	r2, [r3, #6]
 8012aa0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012aa2:	9a03      	ldr	r2, [sp, #12]
 8012aa4:	6901      	ldr	r1, [r0, #16]
 8012aa6:	441a      	add	r2, r3
 8012aa8:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012aac:	42b3      	cmp	r3, r6
 8012aae:	d103      	bne.n	8012ab8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8012ab0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012ab4:	429a      	cmp	r2, r3
 8012ab6:	d01a      	beq.n	8012aee <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012ab8:	88cc      	ldrh	r4, [r1, #6]
 8012aba:	888b      	ldrh	r3, [r1, #4]
 8012abc:	4323      	orrs	r3, r4
 8012abe:	d010      	beq.n	8012ae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012ac0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012ac4:	2c00      	cmp	r4, #0
 8012ac6:	db0c      	blt.n	8012ae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012ac8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012aca:	429c      	cmp	r4, r3
 8012acc:	da09      	bge.n	8012ae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012ace:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012ad2:	429c      	cmp	r4, r3
 8012ad4:	bf38      	it	cc
 8012ad6:	3108      	addcc	r1, #8
 8012ad8:	f104 0401 	add.w	r4, r4, #1
 8012adc:	bf38      	it	cc
 8012ade:	6101      	strcc	r1, [r0, #16]
 8012ae0:	6084      	str	r4, [r0, #8]
 8012ae2:	6903      	ldr	r3, [r0, #16]
 8012ae4:	2100      	movs	r1, #0
 8012ae6:	801e      	strh	r6, [r3, #0]
 8012ae8:	805a      	strh	r2, [r3, #2]
 8012aea:	8099      	strh	r1, [r3, #4]
 8012aec:	80d9      	strh	r1, [r3, #6]
 8012aee:	9b06      	ldr	r3, [sp, #24]
 8012af0:	4293      	cmp	r3, r2
 8012af2:	f000 8082 	beq.w	8012bfa <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8012af6:	9b08      	ldr	r3, [sp, #32]
 8012af8:	9c02      	ldr	r4, [sp, #8]
 8012afa:	9902      	ldr	r1, [sp, #8]
 8012afc:	015b      	lsls	r3, r3, #5
 8012afe:	fb93 f1f1 	sdiv	r1, r3, r1
 8012b02:	fb04 3311 	mls	r3, r4, r1, r3
 8012b06:	2b00      	cmp	r3, #0
 8012b08:	9103      	str	r1, [sp, #12]
 8012b0a:	9308      	str	r3, [sp, #32]
 8012b0c:	da04      	bge.n	8012b18 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8012b0e:	1e4b      	subs	r3, r1, #1
 8012b10:	9303      	str	r3, [sp, #12]
 8012b12:	9b08      	ldr	r3, [sp, #32]
 8012b14:	4423      	add	r3, r4
 8012b16:	9308      	str	r3, [sp, #32]
 8012b18:	9b07      	ldr	r3, [sp, #28]
 8012b1a:	9902      	ldr	r1, [sp, #8]
 8012b1c:	1a5b      	subs	r3, r3, r1
 8012b1e:	9307      	str	r3, [sp, #28]
 8012b20:	9b01      	ldr	r3, [sp, #4]
 8012b22:	f1c3 0320 	rsb	r3, r3, #32
 8012b26:	930e      	str	r3, [sp, #56]	; 0x38
 8012b28:	990e      	ldr	r1, [sp, #56]	; 0x38
 8012b2a:	9b01      	ldr	r3, [sp, #4]
 8012b2c:	1a5b      	subs	r3, r3, r1
 8012b2e:	464f      	mov	r7, r9
 8012b30:	930a      	str	r3, [sp, #40]	; 0x28
 8012b32:	2600      	movs	r6, #0
 8012b34:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012b38:	185b      	adds	r3, r3, r1
 8012b3a:	bf58      	it	pl
 8012b3c:	9902      	ldrpl	r1, [sp, #8]
 8012b3e:	9307      	str	r3, [sp, #28]
 8012b40:	bf5d      	ittte	pl
 8012b42:	1a5b      	subpl	r3, r3, r1
 8012b44:	9307      	strpl	r3, [sp, #28]
 8012b46:	9b03      	ldrpl	r3, [sp, #12]
 8012b48:	9903      	ldrmi	r1, [sp, #12]
 8012b4a:	bf58      	it	pl
 8012b4c:	1c59      	addpl	r1, r3, #1
 8012b4e:	4489      	add	r9, r1
 8012b50:	2a00      	cmp	r2, #0
 8012b52:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8012b56:	db2e      	blt.n	8012bb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012b58:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012b5a:	4293      	cmp	r3, r2
 8012b5c:	dd2b      	ble.n	8012bb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012b5e:	9c01      	ldr	r4, [sp, #4]
 8012b60:	6905      	ldr	r5, [r0, #16]
 8012b62:	46a0      	mov	r8, r4
 8012b64:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8012b66:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012b6a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8012b6e:	45a0      	cmp	r8, r4
 8012b70:	f040 814f 	bne.w	8012e12 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8012b74:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012b78:	4551      	cmp	r1, sl
 8012b7a:	d103      	bne.n	8012b84 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8012b7c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012b80:	4291      	cmp	r1, r2
 8012b82:	d018      	beq.n	8012bb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012b84:	ea5c 010e 	orrs.w	r1, ip, lr
 8012b88:	d00f      	beq.n	8012baa <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012b8a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012b8e:	2900      	cmp	r1, #0
 8012b90:	db0b      	blt.n	8012baa <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012b92:	428b      	cmp	r3, r1
 8012b94:	dd09      	ble.n	8012baa <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012b96:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8012b9a:	4299      	cmp	r1, r3
 8012b9c:	bf38      	it	cc
 8012b9e:	3508      	addcc	r5, #8
 8012ba0:	f101 0101 	add.w	r1, r1, #1
 8012ba4:	bf38      	it	cc
 8012ba6:	6105      	strcc	r5, [r0, #16]
 8012ba8:	6081      	str	r1, [r0, #8]
 8012baa:	6903      	ldr	r3, [r0, #16]
 8012bac:	f8a3 a000 	strh.w	sl, [r3]
 8012bb0:	805a      	strh	r2, [r3, #2]
 8012bb2:	809e      	strh	r6, [r3, #4]
 8012bb4:	80de      	strh	r6, [r3, #6]
 8012bb6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012bb8:	6901      	ldr	r1, [r0, #16]
 8012bba:	441a      	add	r2, r3
 8012bbc:	88cc      	ldrh	r4, [r1, #6]
 8012bbe:	888b      	ldrh	r3, [r1, #4]
 8012bc0:	4323      	orrs	r3, r4
 8012bc2:	d010      	beq.n	8012be6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012bc4:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012bc8:	2c00      	cmp	r4, #0
 8012bca:	db0c      	blt.n	8012be6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012bcc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012bce:	429c      	cmp	r4, r3
 8012bd0:	da09      	bge.n	8012be6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012bd2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012bd6:	429c      	cmp	r4, r3
 8012bd8:	bf38      	it	cc
 8012bda:	3108      	addcc	r1, #8
 8012bdc:	f104 0401 	add.w	r4, r4, #1
 8012be0:	bf38      	it	cc
 8012be2:	6101      	strcc	r1, [r0, #16]
 8012be4:	6084      	str	r4, [r0, #8]
 8012be6:	6903      	ldr	r3, [r0, #16]
 8012be8:	f8a3 a000 	strh.w	sl, [r3]
 8012bec:	805a      	strh	r2, [r3, #2]
 8012bee:	809e      	strh	r6, [r3, #4]
 8012bf0:	80de      	strh	r6, [r3, #6]
 8012bf2:	9b06      	ldr	r3, [sp, #24]
 8012bf4:	4293      	cmp	r3, r2
 8012bf6:	464f      	mov	r7, r9
 8012bf8:	d19c      	bne.n	8012b34 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8012bfa:	9b01      	ldr	r3, [sp, #4]
 8012bfc:	6907      	ldr	r7, [r0, #16]
 8012bfe:	f1c3 0620 	rsb	r6, r3, #32
 8012c02:	9b05      	ldr	r3, [sp, #20]
 8012c04:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8012c08:	9b04      	ldr	r3, [sp, #16]
 8012c0a:	429e      	cmp	r6, r3
 8012c0c:	f040 81cc 	bne.w	8012fa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8012c10:	f9b7 3000 	ldrsh.w	r3, [r7]
 8012c14:	459e      	cmp	lr, r3
 8012c16:	d104      	bne.n	8012c22 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8012c18:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012c1c:	429a      	cmp	r2, r3
 8012c1e:	f43f ae36 	beq.w	801288e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012c22:	88f9      	ldrh	r1, [r7, #6]
 8012c24:	88bb      	ldrh	r3, [r7, #4]
 8012c26:	430b      	orrs	r3, r1
 8012c28:	d010      	beq.n	8012c4c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012c2a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012c2e:	2b00      	cmp	r3, #0
 8012c30:	db0c      	blt.n	8012c4c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012c32:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012c34:	428b      	cmp	r3, r1
 8012c36:	da09      	bge.n	8012c4c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012c38:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012c3c:	428b      	cmp	r3, r1
 8012c3e:	bf38      	it	cc
 8012c40:	3708      	addcc	r7, #8
 8012c42:	f103 0301 	add.w	r3, r3, #1
 8012c46:	bf38      	it	cc
 8012c48:	6107      	strcc	r7, [r0, #16]
 8012c4a:	6083      	str	r3, [r0, #8]
 8012c4c:	6903      	ldr	r3, [r0, #16]
 8012c4e:	f8a3 e000 	strh.w	lr, [r3]
 8012c52:	e5ff      	b.n	8012854 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8012c54:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012c56:	9c03      	ldr	r4, [sp, #12]
 8012c58:	42a2      	cmp	r2, r4
 8012c5a:	f6ff ae18 	blt.w	801288e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012c5e:	9c06      	ldr	r4, [sp, #24]
 8012c60:	42a2      	cmp	r2, r4
 8012c62:	bfb8      	it	lt
 8012c64:	3201      	addlt	r2, #1
 8012c66:	9c08      	ldr	r4, [sp, #32]
 8012c68:	bfb8      	it	lt
 8012c6a:	9206      	strlt	r2, [sp, #24]
 8012c6c:	f1c3 0220 	rsb	r2, r3, #32
 8012c70:	4362      	muls	r2, r4
 8012c72:	2401      	movs	r4, #1
 8012c74:	940b      	str	r4, [sp, #44]	; 0x2c
 8012c76:	2420      	movs	r4, #32
 8012c78:	e6d5      	b.n	8012a26 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8012c7a:	f009 021f 	and.w	r2, r9, #31
 8012c7e:	ea4f 1861 	mov.w	r8, r1, asr #5
 8012c82:	920c      	str	r2, [sp, #48]	; 0x30
 8012c84:	9a01      	ldr	r2, [sp, #4]
 8012c86:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8012c8a:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8012c8e:	45b0      	cmp	r8, r6
 8012c90:	f001 011f 	and.w	r1, r1, #31
 8012c94:	eba2 0203 	sub.w	r2, r2, r3
 8012c98:	d108      	bne.n	8012cac <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8012c9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012c9c:	4419      	add	r1, r3
 8012c9e:	4496      	add	lr, r2
 8012ca0:	fb02 a101 	mla	r1, r2, r1, sl
 8012ca4:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012ca8:	80e9      	strh	r1, [r5, #6]
 8012caa:	e6f9      	b.n	8012aa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012cac:	2c00      	cmp	r4, #0
 8012cae:	f2c0 80a9 	blt.w	8012e04 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8012cb2:	2701      	movs	r7, #1
 8012cb4:	f1c1 0c20 	rsb	ip, r1, #32
 8012cb8:	970a      	str	r7, [sp, #40]	; 0x28
 8012cba:	fb02 f20c 	mul.w	r2, r2, ip
 8012cbe:	2720      	movs	r7, #32
 8012cc0:	9709      	str	r7, [sp, #36]	; 0x24
 8012cc2:	fb92 fcf4 	sdiv	ip, r2, r4
 8012cc6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8012cc8:	fb04 221c 	mls	r2, r4, ip, r2
 8012ccc:	2a00      	cmp	r2, #0
 8012cce:	bfb8      	it	lt
 8012cd0:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8012cd4:	4439      	add	r1, r7
 8012cd6:	fb0c a101 	mla	r1, ip, r1, sl
 8012cda:	80e9      	strh	r1, [r5, #6]
 8012cdc:	44e6      	add	lr, ip
 8012cde:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012ce0:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012ce4:	eb08 0501 	add.w	r5, r8, r1
 8012ce8:	6901      	ldr	r1, [r0, #16]
 8012cea:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8012cee:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8012cf2:	bfb8      	it	lt
 8012cf4:	1912      	addlt	r2, r2, r4
 8012cf6:	ea58 070e 	orrs.w	r7, r8, lr
 8012cfa:	d010      	beq.n	8012d1e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012cfc:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8012d00:	f1be 0f00 	cmp.w	lr, #0
 8012d04:	db0b      	blt.n	8012d1e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012d06:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012d08:	45be      	cmp	lr, r7
 8012d0a:	da08      	bge.n	8012d1e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012d0c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012d10:	45be      	cmp	lr, r7
 8012d12:	bf3c      	itt	cc
 8012d14:	3108      	addcc	r1, #8
 8012d16:	6101      	strcc	r1, [r0, #16]
 8012d18:	f10e 0101 	add.w	r1, lr, #1
 8012d1c:	6081      	str	r1, [r0, #8]
 8012d1e:	6901      	ldr	r1, [r0, #16]
 8012d20:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012d24:	800d      	strh	r5, [r1, #0]
 8012d26:	f04f 0e00 	mov.w	lr, #0
 8012d2a:	42ae      	cmp	r6, r5
 8012d2c:	f8a1 8002 	strh.w	r8, [r1, #2]
 8012d30:	f8a1 e004 	strh.w	lr, [r1, #4]
 8012d34:	f8a1 e006 	strh.w	lr, [r1, #6]
 8012d38:	4463      	add	r3, ip
 8012d3a:	d054      	beq.n	8012de6 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8012d3c:	9901      	ldr	r1, [sp, #4]
 8012d3e:	1ac9      	subs	r1, r1, r3
 8012d40:	4461      	add	r1, ip
 8012d42:	0149      	lsls	r1, r1, #5
 8012d44:	fb91 fef4 	sdiv	lr, r1, r4
 8012d48:	fb04 111e 	mls	r1, r4, lr, r1
 8012d4c:	2900      	cmp	r1, #0
 8012d4e:	bfb8      	it	lt
 8012d50:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8012d54:	f10e 0701 	add.w	r7, lr, #1
 8012d58:	bfb8      	it	lt
 8012d5a:	1909      	addlt	r1, r1, r4
 8012d5c:	1b12      	subs	r2, r2, r4
 8012d5e:	970d      	str	r7, [sp, #52]	; 0x34
 8012d60:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8012d64:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8012d66:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012d6a:	1852      	adds	r2, r2, r1
 8012d6c:	bf54      	ite	pl
 8012d6e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8012d72:	46f4      	movmi	ip, lr
 8012d74:	44e3      	add	fp, ip
 8012d76:	f8aa b004 	strh.w	fp, [sl, #4]
 8012d7a:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8012d7e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8012d82:	f8aa b006 	strh.w	fp, [sl, #6]
 8012d86:	4463      	add	r3, ip
 8012d88:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012d8c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012d90:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8012d94:	bf58      	it	pl
 8012d96:	1b12      	subpl	r2, r2, r4
 8012d98:	443d      	add	r5, r7
 8012d9a:	ea5b 070a 	orrs.w	r7, fp, sl
 8012d9e:	d014      	beq.n	8012dca <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012da0:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8012da4:	f1ba 0f00 	cmp.w	sl, #0
 8012da8:	db0f      	blt.n	8012dca <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012daa:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012dac:	45ba      	cmp	sl, r7
 8012dae:	da0c      	bge.n	8012dca <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012db0:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8012db4:	45ba      	cmp	sl, r7
 8012db6:	bf38      	it	cc
 8012db8:	f10c 0c08 	addcc.w	ip, ip, #8
 8012dbc:	f10a 0a01 	add.w	sl, sl, #1
 8012dc0:	bf38      	it	cc
 8012dc2:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8012dc6:	f8c0 a008 	str.w	sl, [r0, #8]
 8012dca:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012dce:	f04f 0700 	mov.w	r7, #0
 8012dd2:	42ae      	cmp	r6, r5
 8012dd4:	f8ac 5000 	strh.w	r5, [ip]
 8012dd8:	f8ac 8002 	strh.w	r8, [ip, #2]
 8012ddc:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012de0:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012de4:	d1bc      	bne.n	8012d60 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8012de6:	6904      	ldr	r4, [r0, #16]
 8012de8:	9a01      	ldr	r2, [sp, #4]
 8012dea:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012dec:	1ad3      	subs	r3, r2, r3
 8012dee:	88a2      	ldrh	r2, [r4, #4]
 8012df0:	441a      	add	r2, r3
 8012df2:	80a2      	strh	r2, [r4, #4]
 8012df4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012df6:	3120      	adds	r1, #32
 8012df8:	1a89      	subs	r1, r1, r2
 8012dfa:	88e2      	ldrh	r2, [r4, #6]
 8012dfc:	fb03 2301 	mla	r3, r3, r1, r2
 8012e00:	80e3      	strh	r3, [r4, #6]
 8012e02:	e64d      	b.n	8012aa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012e04:	f04f 37ff 	mov.w	r7, #4294967295
 8012e08:	970a      	str	r7, [sp, #40]	; 0x28
 8012e0a:	434a      	muls	r2, r1
 8012e0c:	4264      	negs	r4, r4
 8012e0e:	2700      	movs	r7, #0
 8012e10:	e756      	b.n	8012cc0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8012e12:	ea4f 1867 	mov.w	r8, r7, asr #5
 8012e16:	f009 031f 	and.w	r3, r9, #31
 8012e1a:	45d0      	cmp	r8, sl
 8012e1c:	f007 071f 	and.w	r7, r7, #31
 8012e20:	930f      	str	r3, [sp, #60]	; 0x3c
 8012e22:	fa1f fc8c 	uxth.w	ip, ip
 8012e26:	fa1f fe8e 	uxth.w	lr, lr
 8012e2a:	d10a      	bne.n	8012e42 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8012e2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012e2e:	449c      	add	ip, r3
 8012e30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012e32:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012e36:	441f      	add	r7, r3
 8012e38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012e3a:	fb03 e707 	mla	r7, r3, r7, lr
 8012e3e:	80ef      	strh	r7, [r5, #6]
 8012e40:	e6b9      	b.n	8012bb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012e42:	2900      	cmp	r1, #0
 8012e44:	f2c0 80a8 	blt.w	8012f98 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8012e48:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012e4a:	f1c7 0320 	rsb	r3, r7, #32
 8012e4e:	4363      	muls	r3, r4
 8012e50:	2401      	movs	r4, #1
 8012e52:	940d      	str	r4, [sp, #52]	; 0x34
 8012e54:	2420      	movs	r4, #32
 8012e56:	940c      	str	r4, [sp, #48]	; 0x30
 8012e58:	fb93 f4f1 	sdiv	r4, r3, r1
 8012e5c:	fb01 3b14 	mls	fp, r1, r4, r3
 8012e60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012e62:	f1bb 0f00 	cmp.w	fp, #0
 8012e66:	bfb8      	it	lt
 8012e68:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012e6c:	441f      	add	r7, r3
 8012e6e:	fb04 e707 	mla	r7, r4, r7, lr
 8012e72:	44a4      	add	ip, r4
 8012e74:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012e78:	80ef      	strh	r7, [r5, #6]
 8012e7a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e7e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012e80:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8012e84:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012e88:	bfb8      	it	lt
 8012e8a:	448b      	addlt	fp, r1
 8012e8c:	eb08 0503 	add.w	r5, r8, r3
 8012e90:	ea5e 0307 	orrs.w	r3, lr, r7
 8012e94:	d011      	beq.n	8012eba <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012e96:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012e9a:	f1be 0f00 	cmp.w	lr, #0
 8012e9e:	db0c      	blt.n	8012eba <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012ea0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012ea2:	45be      	cmp	lr, r7
 8012ea4:	da09      	bge.n	8012eba <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012ea6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012eaa:	45be      	cmp	lr, r7
 8012eac:	bf3c      	itt	cc
 8012eae:	f10c 0708 	addcc.w	r7, ip, #8
 8012eb2:	6107      	strcc	r7, [r0, #16]
 8012eb4:	f10e 0701 	add.w	r7, lr, #1
 8012eb8:	6087      	str	r7, [r0, #8]
 8012eba:	6907      	ldr	r7, [r0, #16]
 8012ebc:	b213      	sxth	r3, r2
 8012ebe:	9310      	str	r3, [sp, #64]	; 0x40
 8012ec0:	807b      	strh	r3, [r7, #2]
 8012ec2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012ec4:	803d      	strh	r5, [r7, #0]
 8012ec6:	4555      	cmp	r5, sl
 8012ec8:	80be      	strh	r6, [r7, #4]
 8012eca:	80fe      	strh	r6, [r7, #6]
 8012ecc:	eb04 0c03 	add.w	ip, r4, r3
 8012ed0:	d051      	beq.n	8012f76 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8012ed2:	9b01      	ldr	r3, [sp, #4]
 8012ed4:	eba3 070c 	sub.w	r7, r3, ip
 8012ed8:	443c      	add	r4, r7
 8012eda:	0164      	lsls	r4, r4, #5
 8012edc:	fb94 f8f1 	sdiv	r8, r4, r1
 8012ee0:	fb01 4418 	mls	r4, r1, r8, r4
 8012ee4:	2c00      	cmp	r4, #0
 8012ee6:	bfb8      	it	lt
 8012ee8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012eec:	ebab 0301 	sub.w	r3, fp, r1
 8012ef0:	f108 0701 	add.w	r7, r8, #1
 8012ef4:	bfb8      	it	lt
 8012ef6:	1864      	addlt	r4, r4, r1
 8012ef8:	9309      	str	r3, [sp, #36]	; 0x24
 8012efa:	9711      	str	r7, [sp, #68]	; 0x44
 8012efc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012efe:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012f02:	191b      	adds	r3, r3, r4
 8012f04:	bf58      	it	pl
 8012f06:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8012f08:	f8be b004 	ldrh.w	fp, [lr, #4]
 8012f0c:	9309      	str	r3, [sp, #36]	; 0x24
 8012f0e:	bf48      	it	mi
 8012f10:	4647      	movmi	r7, r8
 8012f12:	44bb      	add	fp, r7
 8012f14:	f8ae b004 	strh.w	fp, [lr, #4]
 8012f18:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012f1c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012f20:	f8ae b006 	strh.w	fp, [lr, #6]
 8012f24:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012f28:	44bc      	add	ip, r7
 8012f2a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8012f2c:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012f30:	443d      	add	r5, r7
 8012f32:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8012f36:	bf5c      	itt	pl
 8012f38:	1a5b      	subpl	r3, r3, r1
 8012f3a:	9309      	strpl	r3, [sp, #36]	; 0x24
 8012f3c:	ea5b 0307 	orrs.w	r3, fp, r7
 8012f40:	d011      	beq.n	8012f66 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012f42:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8012f46:	f1bb 0f00 	cmp.w	fp, #0
 8012f4a:	db0c      	blt.n	8012f66 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012f4c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012f4e:	45bb      	cmp	fp, r7
 8012f50:	da09      	bge.n	8012f66 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012f52:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012f56:	45bb      	cmp	fp, r7
 8012f58:	bf3c      	itt	cc
 8012f5a:	f10e 0708 	addcc.w	r7, lr, #8
 8012f5e:	6107      	strcc	r7, [r0, #16]
 8012f60:	f10b 0701 	add.w	r7, fp, #1
 8012f64:	6087      	str	r7, [r0, #8]
 8012f66:	6907      	ldr	r7, [r0, #16]
 8012f68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012f6a:	803d      	strh	r5, [r7, #0]
 8012f6c:	4555      	cmp	r5, sl
 8012f6e:	807b      	strh	r3, [r7, #2]
 8012f70:	80be      	strh	r6, [r7, #4]
 8012f72:	80fe      	strh	r6, [r7, #6]
 8012f74:	d1c2      	bne.n	8012efc <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8012f76:	9b01      	ldr	r3, [sp, #4]
 8012f78:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012f7a:	eba3 0c0c 	sub.w	ip, r3, ip
 8012f7e:	6903      	ldr	r3, [r0, #16]
 8012f80:	8899      	ldrh	r1, [r3, #4]
 8012f82:	4461      	add	r1, ip
 8012f84:	8099      	strh	r1, [r3, #4]
 8012f86:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012f88:	3720      	adds	r7, #32
 8012f8a:	1a7f      	subs	r7, r7, r1
 8012f8c:	88d9      	ldrh	r1, [r3, #6]
 8012f8e:	fb0c 1c07 	mla	ip, ip, r7, r1
 8012f92:	f8a3 c006 	strh.w	ip, [r3, #6]
 8012f96:	e60e      	b.n	8012bb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012f98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012f9a:	f04f 34ff 	mov.w	r4, #4294967295
 8012f9e:	940d      	str	r4, [sp, #52]	; 0x34
 8012fa0:	437b      	muls	r3, r7
 8012fa2:	4249      	negs	r1, r1
 8012fa4:	2400      	movs	r4, #0
 8012fa6:	e756      	b.n	8012e56 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8012fa8:	9905      	ldr	r1, [sp, #20]
 8012faa:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8012fae:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8012fb2:	f001 011f 	and.w	r1, r1, #31
 8012fb6:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8012fba:	9102      	str	r1, [sp, #8]
 8012fbc:	9904      	ldr	r1, [sp, #16]
 8012fbe:	45f3      	cmp	fp, lr
 8012fc0:	f009 0c1f 	and.w	ip, r9, #31
 8012fc4:	eba1 0406 	sub.w	r4, r1, r6
 8012fc8:	d108      	bne.n	8012fdc <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8012fca:	9b02      	ldr	r3, [sp, #8]
 8012fcc:	449c      	add	ip, r3
 8012fce:	44a0      	add	r8, r4
 8012fd0:	fb04 a40c 	mla	r4, r4, ip, sl
 8012fd4:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012fd8:	80fc      	strh	r4, [r7, #6]
 8012fda:	e458      	b.n	801288e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012fdc:	9905      	ldr	r1, [sp, #20]
 8012fde:	ebb1 0109 	subs.w	r1, r1, r9
 8012fe2:	bf5b      	ittet	pl
 8012fe4:	f1cc 0520 	rsbpl	r5, ip, #32
 8012fe8:	436c      	mulpl	r4, r5
 8012fea:	2500      	movmi	r5, #0
 8012fec:	2520      	movpl	r5, #32
 8012fee:	bf44      	itt	mi
 8012ff0:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012ff4:	4249      	negmi	r1, r1
 8012ff6:	9501      	str	r5, [sp, #4]
 8012ff8:	9b01      	ldr	r3, [sp, #4]
 8012ffa:	fb94 f5f1 	sdiv	r5, r4, r1
 8012ffe:	fb01 4415 	mls	r4, r1, r5, r4
 8013002:	bf54      	ite	pl
 8013004:	f04f 0901 	movpl.w	r9, #1
 8013008:	f04f 39ff 	movmi.w	r9, #4294967295
 801300c:	2c00      	cmp	r4, #0
 801300e:	bfb8      	it	lt
 8013010:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013014:	449c      	add	ip, r3
 8013016:	44a8      	add	r8, r5
 8013018:	fb05 ac0c 	mla	ip, r5, ip, sl
 801301c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013020:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013024:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013028:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801302c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013030:	bfb8      	it	lt
 8013032:	1864      	addlt	r4, r4, r1
 8013034:	ea58 0707 	orrs.w	r7, r8, r7
 8013038:	eb0b 0309 	add.w	r3, fp, r9
 801303c:	d011      	beq.n	8013062 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801303e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013042:	f1b8 0f00 	cmp.w	r8, #0
 8013046:	db0c      	blt.n	8013062 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013048:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801304a:	45b8      	cmp	r8, r7
 801304c:	da09      	bge.n	8013062 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801304e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8013052:	45b8      	cmp	r8, r7
 8013054:	bf3c      	itt	cc
 8013056:	f10c 0708 	addcc.w	r7, ip, #8
 801305a:	6107      	strcc	r7, [r0, #16]
 801305c:	f108 0701 	add.w	r7, r8, #1
 8013060:	6087      	str	r7, [r0, #8]
 8013062:	6907      	ldr	r7, [r0, #16]
 8013064:	f04f 0c00 	mov.w	ip, #0
 8013068:	b212      	sxth	r2, r2
 801306a:	459e      	cmp	lr, r3
 801306c:	803b      	strh	r3, [r7, #0]
 801306e:	807a      	strh	r2, [r7, #2]
 8013070:	f8a7 c004 	strh.w	ip, [r7, #4]
 8013074:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013078:	442e      	add	r6, r5
 801307a:	d04d      	beq.n	8013118 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 801307c:	9f04      	ldr	r7, [sp, #16]
 801307e:	1bbf      	subs	r7, r7, r6
 8013080:	443d      	add	r5, r7
 8013082:	016d      	lsls	r5, r5, #5
 8013084:	fb95 f8f1 	sdiv	r8, r5, r1
 8013088:	fb01 5518 	mls	r5, r1, r8, r5
 801308c:	4565      	cmp	r5, ip
 801308e:	bfb8      	it	lt
 8013090:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013094:	f108 0701 	add.w	r7, r8, #1
 8013098:	bfb8      	it	lt
 801309a:	186d      	addlt	r5, r5, r1
 801309c:	1a64      	subs	r4, r4, r1
 801309e:	9703      	str	r7, [sp, #12]
 80130a0:	f04f 0a00 	mov.w	sl, #0
 80130a4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80130a8:	1964      	adds	r4, r4, r5
 80130aa:	bf58      	it	pl
 80130ac:	9f03      	ldrpl	r7, [sp, #12]
 80130ae:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80130b2:	bf48      	it	mi
 80130b4:	4647      	movmi	r7, r8
 80130b6:	44bb      	add	fp, r7
 80130b8:	f8ac b004 	strh.w	fp, [ip, #4]
 80130bc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80130c0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80130c4:	f8ac b006 	strh.w	fp, [ip, #6]
 80130c8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80130cc:	443e      	add	r6, r7
 80130ce:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80130d2:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80130d6:	bf58      	it	pl
 80130d8:	1a64      	subpl	r4, r4, r1
 80130da:	ea5b 0707 	orrs.w	r7, fp, r7
 80130de:	444b      	add	r3, r9
 80130e0:	d011      	beq.n	8013106 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80130e2:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80130e6:	f1bb 0f00 	cmp.w	fp, #0
 80130ea:	db0c      	blt.n	8013106 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80130ec:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80130ee:	45bb      	cmp	fp, r7
 80130f0:	da09      	bge.n	8013106 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80130f2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80130f6:	45bb      	cmp	fp, r7
 80130f8:	bf3c      	itt	cc
 80130fa:	f10c 0708 	addcc.w	r7, ip, #8
 80130fe:	6107      	strcc	r7, [r0, #16]
 8013100:	f10b 0701 	add.w	r7, fp, #1
 8013104:	6087      	str	r7, [r0, #8]
 8013106:	6907      	ldr	r7, [r0, #16]
 8013108:	459e      	cmp	lr, r3
 801310a:	803b      	strh	r3, [r7, #0]
 801310c:	807a      	strh	r2, [r7, #2]
 801310e:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013112:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013116:	d1c5      	bne.n	80130a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8013118:	9b04      	ldr	r3, [sp, #16]
 801311a:	1b9e      	subs	r6, r3, r6
 801311c:	6903      	ldr	r3, [r0, #16]
 801311e:	889a      	ldrh	r2, [r3, #4]
 8013120:	4432      	add	r2, r6
 8013122:	809a      	strh	r2, [r3, #4]
 8013124:	9a02      	ldr	r2, [sp, #8]
 8013126:	f102 0c20 	add.w	ip, r2, #32
 801312a:	9a01      	ldr	r2, [sp, #4]
 801312c:	ebac 0c02 	sub.w	ip, ip, r2
 8013130:	88da      	ldrh	r2, [r3, #6]
 8013132:	fb06 260c 	mla	r6, r6, ip, r2
 8013136:	80de      	strh	r6, [r3, #6]
 8013138:	f7ff bba9 	b.w	801288e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0801313c <_ZN8touchgfx7Outline6lineToEii>:
 801313c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801313e:	079b      	lsls	r3, r3, #30
 8013140:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013142:	460e      	mov	r6, r1
 8013144:	4615      	mov	r5, r2
 8013146:	d511      	bpl.n	801316c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013148:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 801314c:	ea86 0701 	eor.w	r7, r6, r1
 8013150:	ea85 0302 	eor.w	r3, r5, r2
 8013154:	433b      	orrs	r3, r7
 8013156:	d009      	beq.n	801316c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013158:	4633      	mov	r3, r6
 801315a:	9500      	str	r5, [sp, #0]
 801315c:	f7ff fb3e 	bl	80127dc <_ZN8touchgfx7Outline10renderLineEiiii>
 8013160:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013162:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8013166:	f043 0301 	orr.w	r3, r3, #1
 801316a:	6243      	str	r3, [r0, #36]	; 0x24
 801316c:	b003      	add	sp, #12
 801316e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013170 <_ZN8touchgfx7Outline6moveToEii>:
 8013170:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013172:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013174:	4615      	mov	r5, r2
 8013176:	079a      	lsls	r2, r3, #30
 8013178:	4604      	mov	r4, r0
 801317a:	460e      	mov	r6, r1
 801317c:	d401      	bmi.n	8013182 <_ZN8touchgfx7Outline6moveToEii+0x12>
 801317e:	f7ff faf9 	bl	8012774 <_ZN8touchgfx7Outline5resetEv>
 8013182:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013184:	07db      	lsls	r3, r3, #31
 8013186:	d504      	bpl.n	8013192 <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013188:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 801318c:	4620      	mov	r0, r4
 801318e:	f7ff ffd5 	bl	801313c <_ZN8touchgfx7Outline6lineToEii>
 8013192:	6923      	ldr	r3, [r4, #16]
 8013194:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013198:	1170      	asrs	r0, r6, #5
 801319a:	4290      	cmp	r0, r2
 801319c:	ea4f 1165 	mov.w	r1, r5, asr #5
 80131a0:	d103      	bne.n	80131aa <_ZN8touchgfx7Outline6moveToEii+0x3a>
 80131a2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80131a6:	4291      	cmp	r1, r2
 80131a8:	d01a      	beq.n	80131e0 <_ZN8touchgfx7Outline6moveToEii+0x70>
 80131aa:	88df      	ldrh	r7, [r3, #6]
 80131ac:	889a      	ldrh	r2, [r3, #4]
 80131ae:	433a      	orrs	r2, r7
 80131b0:	d010      	beq.n	80131d4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80131b2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80131b6:	2a00      	cmp	r2, #0
 80131b8:	db0c      	blt.n	80131d4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80131ba:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80131bc:	42ba      	cmp	r2, r7
 80131be:	da09      	bge.n	80131d4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80131c0:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80131c4:	42ba      	cmp	r2, r7
 80131c6:	bf38      	it	cc
 80131c8:	3308      	addcc	r3, #8
 80131ca:	f102 0201 	add.w	r2, r2, #1
 80131ce:	bf38      	it	cc
 80131d0:	6123      	strcc	r3, [r4, #16]
 80131d2:	60a2      	str	r2, [r4, #8]
 80131d4:	6923      	ldr	r3, [r4, #16]
 80131d6:	2200      	movs	r2, #0
 80131d8:	8018      	strh	r0, [r3, #0]
 80131da:	8059      	strh	r1, [r3, #2]
 80131dc:	809a      	strh	r2, [r3, #4]
 80131de:	80da      	strh	r2, [r3, #6]
 80131e0:	6166      	str	r6, [r4, #20]
 80131e2:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80131e6:	6225      	str	r5, [r4, #32]
 80131e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080131ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80131ea:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80131ee:	b0d0      	sub	sp, #320	; 0x140
 80131f0:	466c      	mov	r4, sp
 80131f2:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80131f6:	4627      	mov	r7, r4
 80131f8:	1a0d      	subs	r5, r1, r0
 80131fa:	2d48      	cmp	r5, #72	; 0x48
 80131fc:	f100 0308 	add.w	r3, r0, #8
 8013200:	f340 80d5 	ble.w	80133ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8013204:	112d      	asrs	r5, r5, #4
 8013206:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 801320a:	f9b0 9000 	ldrsh.w	r9, [r0]
 801320e:	6816      	ldr	r6, [r2, #0]
 8013210:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8013214:	6006      	str	r6, [r0, #0]
 8013216:	6856      	ldr	r6, [r2, #4]
 8013218:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801321c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013220:	6046      	str	r6, [r0, #4]
 8013222:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8013226:	f8a2 8002 	strh.w	r8, [r2, #2]
 801322a:	f8a2 e004 	strh.w	lr, [r2, #4]
 801322e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013232:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8013236:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 801323a:	4565      	cmp	r5, ip
 801323c:	f1a1 0208 	sub.w	r2, r1, #8
 8013240:	db06      	blt.n	8013250 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8013242:	d119      	bne.n	8013278 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013244:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8013248:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801324c:	42ae      	cmp	r6, r5
 801324e:	dd13      	ble.n	8013278 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013250:	460e      	mov	r6, r1
 8013252:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8013256:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 801325a:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 801325e:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8013262:	601d      	str	r5, [r3, #0]
 8013264:	6875      	ldr	r5, [r6, #4]
 8013266:	605d      	str	r5, [r3, #4]
 8013268:	f821 9c08 	strh.w	r9, [r1, #-8]
 801326c:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013270:	f821 8c04 	strh.w	r8, [r1, #-4]
 8013274:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013278:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801327c:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8013280:	42ae      	cmp	r6, r5
 8013282:	db06      	blt.n	8013292 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8013284:	d116      	bne.n	80132b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8013286:	f9b0 c000 	ldrsh.w	ip, [r0]
 801328a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 801328e:	45ac      	cmp	ip, r5
 8013290:	da10      	bge.n	80132b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8013292:	681d      	ldr	r5, [r3, #0]
 8013294:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013298:	6005      	str	r5, [r0, #0]
 801329a:	685d      	ldr	r5, [r3, #4]
 801329c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80132a0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80132a4:	f8a0 8008 	strh.w	r8, [r0, #8]
 80132a8:	6045      	str	r5, [r0, #4]
 80132aa:	8146      	strh	r6, [r0, #10]
 80132ac:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80132b0:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80132b4:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80132b8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80132bc:	4565      	cmp	r5, ip
 80132be:	db06      	blt.n	80132ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80132c0:	d119      	bne.n	80132f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80132c2:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80132c6:	f9b0 5000 	ldrsh.w	r5, [r0]
 80132ca:	42ae      	cmp	r6, r5
 80132cc:	da13      	bge.n	80132f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80132ce:	460e      	mov	r6, r1
 80132d0:	f9b0 9000 	ldrsh.w	r9, [r0]
 80132d4:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80132d8:	6005      	str	r5, [r0, #0]
 80132da:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80132de:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80132e2:	6875      	ldr	r5, [r6, #4]
 80132e4:	6045      	str	r5, [r0, #4]
 80132e6:	f821 9c08 	strh.w	r9, [r1, #-8]
 80132ea:	f821 cc06 	strh.w	ip, [r1, #-6]
 80132ee:	f821 8c04 	strh.w	r8, [r1, #-4]
 80132f2:	f821 ec02 	strh.w	lr, [r1, #-2]
 80132f6:	3308      	adds	r3, #8
 80132f8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80132fc:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8013300:	45e6      	cmp	lr, ip
 8013302:	dbf8      	blt.n	80132f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013304:	d105      	bne.n	8013312 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013306:	f9b3 6000 	ldrsh.w	r6, [r3]
 801330a:	f9b0 5000 	ldrsh.w	r5, [r0]
 801330e:	42ae      	cmp	r6, r5
 8013310:	dbf1      	blt.n	80132f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013312:	4615      	mov	r5, r2
 8013314:	3a08      	subs	r2, #8
 8013316:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 801331a:	45b4      	cmp	ip, r6
 801331c:	dbf9      	blt.n	8013312 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801331e:	d105      	bne.n	801332c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8013320:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013324:	f9b2 6000 	ldrsh.w	r6, [r2]
 8013328:	45b0      	cmp	r8, r6
 801332a:	dbf2      	blt.n	8013312 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801332c:	4293      	cmp	r3, r2
 801332e:	f1a5 0608 	sub.w	r6, r5, #8
 8013332:	d816      	bhi.n	8013362 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8013334:	f8d6 c000 	ldr.w	ip, [r6]
 8013338:	f9b3 a000 	ldrsh.w	sl, [r3]
 801333c:	f8c3 c000 	str.w	ip, [r3]
 8013340:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8013344:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8013348:	f8d6 c004 	ldr.w	ip, [r6, #4]
 801334c:	f8c3 c004 	str.w	ip, [r3, #4]
 8013350:	f825 ac08 	strh.w	sl, [r5, #-8]
 8013354:	f825 ec06 	strh.w	lr, [r5, #-6]
 8013358:	f825 9c04 	strh.w	r9, [r5, #-4]
 801335c:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013360:	e7c9      	b.n	80132f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013362:	f8d6 e000 	ldr.w	lr, [r6]
 8013366:	f9b0 a000 	ldrsh.w	sl, [r0]
 801336a:	f8c0 e000 	str.w	lr, [r0]
 801336e:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8013372:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8013376:	f8d6 e004 	ldr.w	lr, [r6, #4]
 801337a:	f8c0 e004 	str.w	lr, [r0, #4]
 801337e:	f825 ac08 	strh.w	sl, [r5, #-8]
 8013382:	f825 cc06 	strh.w	ip, [r5, #-6]
 8013386:	f825 9c04 	strh.w	r9, [r5, #-4]
 801338a:	f825 8c02 	strh.w	r8, [r5, #-2]
 801338e:	1acd      	subs	r5, r1, r3
 8013390:	1a16      	subs	r6, r2, r0
 8013392:	10ed      	asrs	r5, r5, #3
 8013394:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8013398:	bfb5      	itete	lt
 801339a:	e9c4 0200 	strdlt	r0, r2, [r4]
 801339e:	e9c4 3100 	strdge	r3, r1, [r4]
 80133a2:	460a      	movlt	r2, r1
 80133a4:	4603      	movge	r3, r0
 80133a6:	3408      	adds	r4, #8
 80133a8:	4618      	mov	r0, r3
 80133aa:	4611      	mov	r1, r2
 80133ac:	e724      	b.n	80131f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80133ae:	4299      	cmp	r1, r3
 80133b0:	d928      	bls.n	8013404 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80133b2:	f1a3 0210 	sub.w	r2, r3, #16
 80133b6:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80133ba:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80133be:	45ac      	cmp	ip, r5
 80133c0:	db06      	blt.n	80133d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80133c2:	d11d      	bne.n	8013400 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80133c4:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80133c8:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80133cc:	42ae      	cmp	r6, r5
 80133ce:	da17      	bge.n	8013400 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80133d0:	4615      	mov	r5, r2
 80133d2:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80133d6:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80133da:	6116      	str	r6, [r2, #16]
 80133dc:	686e      	ldr	r6, [r5, #4]
 80133de:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80133e2:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80133e6:	f8a2 9008 	strh.w	r9, [r2, #8]
 80133ea:	42a8      	cmp	r0, r5
 80133ec:	6156      	str	r6, [r2, #20]
 80133ee:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80133f2:	f8a2 800c 	strh.w	r8, [r2, #12]
 80133f6:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80133fa:	f1a2 0208 	sub.w	r2, r2, #8
 80133fe:	d1da      	bne.n	80133b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8013400:	3308      	adds	r3, #8
 8013402:	e7d4      	b.n	80133ae <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8013404:	42bc      	cmp	r4, r7
 8013406:	d903      	bls.n	8013410 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8013408:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 801340c:	3c08      	subs	r4, #8
 801340e:	e6f3      	b.n	80131f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013410:	b050      	add	sp, #320	; 0x140
 8013412:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08013416 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8013416:	b510      	push	{r4, lr}
 8013418:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801341a:	07da      	lsls	r2, r3, #31
 801341c:	4604      	mov	r4, r0
 801341e:	d507      	bpl.n	8013430 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8013420:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8013424:	f7ff fe8a 	bl	801313c <_ZN8touchgfx7Outline6lineToEii>
 8013428:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801342a:	f023 0301 	bic.w	r3, r3, #1
 801342e:	6243      	str	r3, [r0, #36]	; 0x24
 8013430:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013432:	079b      	lsls	r3, r3, #30
 8013434:	d521      	bpl.n	801347a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8013436:	6923      	ldr	r3, [r4, #16]
 8013438:	88d9      	ldrh	r1, [r3, #6]
 801343a:	889a      	ldrh	r2, [r3, #4]
 801343c:	430a      	orrs	r2, r1
 801343e:	d010      	beq.n	8013462 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013440:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8013444:	2a00      	cmp	r2, #0
 8013446:	db0c      	blt.n	8013462 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013448:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801344a:	428a      	cmp	r2, r1
 801344c:	da09      	bge.n	8013462 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801344e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8013452:	4291      	cmp	r1, r2
 8013454:	bf88      	it	hi
 8013456:	3308      	addhi	r3, #8
 8013458:	f102 0201 	add.w	r2, r2, #1
 801345c:	bf88      	it	hi
 801345e:	6123      	strhi	r3, [r4, #16]
 8013460:	60a2      	str	r2, [r4, #8]
 8013462:	68a1      	ldr	r1, [r4, #8]
 8013464:	b129      	cbz	r1, 8013472 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013466:	6863      	ldr	r3, [r4, #4]
 8013468:	4299      	cmp	r1, r3
 801346a:	d802      	bhi.n	8013472 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801346c:	68e0      	ldr	r0, [r4, #12]
 801346e:	f7ff febc 	bl	80131ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8013472:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013474:	f023 0302 	bic.w	r3, r3, #2
 8013478:	6263      	str	r3, [r4, #36]	; 0x24
 801347a:	68e0      	ldr	r0, [r4, #12]
 801347c:	bd10      	pop	{r4, pc}
	...

08013480 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8013480:	4b02      	ldr	r3, [pc, #8]	; (801348c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8013482:	6018      	str	r0, [r3, #0]
 8013484:	4b02      	ldr	r3, [pc, #8]	; (8013490 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8013486:	6019      	str	r1, [r3, #0]
 8013488:	4770      	bx	lr
 801348a:	bf00      	nop
 801348c:	2000ef24 	.word	0x2000ef24
 8013490:	2000ef28 	.word	0x2000ef28

08013494 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8013494:	4a02      	ldr	r2, [pc, #8]	; (80134a0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8013496:	2300      	movs	r3, #0
 8013498:	6013      	str	r3, [r2, #0]
 801349a:	4a02      	ldr	r2, [pc, #8]	; (80134a4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 801349c:	6013      	str	r3, [r2, #0]
 801349e:	4770      	bx	lr
 80134a0:	2000ef24 	.word	0x2000ef24
 80134a4:	2000ef28 	.word	0x2000ef28

080134a8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80134a8:	4b01      	ldr	r3, [pc, #4]	; (80134b0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80134aa:	6818      	ldr	r0, [r3, #0]
 80134ac:	4770      	bx	lr
 80134ae:	bf00      	nop
 80134b0:	2000ef24 	.word	0x2000ef24

080134b4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80134b4:	4b01      	ldr	r3, [pc, #4]	; (80134bc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80134b6:	6818      	ldr	r0, [r3, #0]
 80134b8:	4770      	bx	lr
 80134ba:	bf00      	nop
 80134bc:	2000ef28 	.word	0x2000ef28

080134c0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80134c0:	b510      	push	{r4, lr}
 80134c2:	6803      	ldr	r3, [r0, #0]
 80134c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80134c6:	460c      	mov	r4, r1
 80134c8:	4798      	blx	r3
 80134ca:	1b03      	subs	r3, r0, r4
 80134cc:	4258      	negs	r0, r3
 80134ce:	4158      	adcs	r0, r3
 80134d0:	bd10      	pop	{r4, pc}
	...

080134d4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80134d4:	4b01      	ldr	r3, [pc, #4]	; (80134dc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80134d6:	6019      	str	r1, [r3, #0]
 80134d8:	4770      	bx	lr
 80134da:	bf00      	nop
 80134dc:	2000ef2c 	.word	0x2000ef2c

080134e0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80134e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134e4:	4696      	mov	lr, r2
 80134e6:	4605      	mov	r5, r0
 80134e8:	4614      	mov	r4, r2
 80134ea:	460e      	mov	r6, r1
 80134ec:	461f      	mov	r7, r3
 80134ee:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80134f2:	b097      	sub	sp, #92	; 0x5c
 80134f4:	f10d 0c1c 	add.w	ip, sp, #28
 80134f8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80134fc:	f8de 3000 	ldr.w	r3, [lr]
 8013500:	f8cc 3000 	str.w	r3, [ip]
 8013504:	f104 0e14 	add.w	lr, r4, #20
 8013508:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801350c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013510:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013514:	f8de 3000 	ldr.w	r3, [lr]
 8013518:	f8cc 3000 	str.w	r3, [ip]
 801351c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013520:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013524:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013528:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801352c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013530:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8013534:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013538:	f8de 3000 	ldr.w	r3, [lr]
 801353c:	f8cc 3000 	str.w	r3, [ip]
 8013540:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013542:	682b      	ldr	r3, [r5, #0]
 8013544:	9201      	str	r2, [sp, #4]
 8013546:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801354a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801354c:	9200      	str	r2, [sp, #0]
 801354e:	f8cd 8008 	str.w	r8, [sp, #8]
 8013552:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8013556:	aa07      	add	r2, sp, #28
 8013558:	463b      	mov	r3, r7
 801355a:	4631      	mov	r1, r6
 801355c:	4628      	mov	r0, r5
 801355e:	47d8      	blx	fp
 8013560:	46a6      	mov	lr, r4
 8013562:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013566:	f10d 0c1c 	add.w	ip, sp, #28
 801356a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801356e:	f8de 3000 	ldr.w	r3, [lr]
 8013572:	f8cc 3000 	str.w	r3, [ip]
 8013576:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 801357a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801357e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013582:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013586:	343c      	adds	r4, #60	; 0x3c
 8013588:	f8de 3000 	ldr.w	r3, [lr]
 801358c:	f8cc 3000 	str.w	r3, [ip]
 8013590:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013592:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013596:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801359a:	6823      	ldr	r3, [r4, #0]
 801359c:	f8cc 3000 	str.w	r3, [ip]
 80135a0:	682b      	ldr	r3, [r5, #0]
 80135a2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80135a6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80135a8:	9201      	str	r2, [sp, #4]
 80135aa:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80135ac:	9200      	str	r2, [sp, #0]
 80135ae:	f8cd 8008 	str.w	r8, [sp, #8]
 80135b2:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80135b4:	aa07      	add	r2, sp, #28
 80135b6:	463b      	mov	r3, r7
 80135b8:	4631      	mov	r1, r6
 80135ba:	4628      	mov	r0, r5
 80135bc:	47a0      	blx	r4
 80135be:	b017      	add	sp, #92	; 0x5c
 80135c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080135c4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80135c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135c8:	b08d      	sub	sp, #52	; 0x34
 80135ca:	4688      	mov	r8, r1
 80135cc:	9916      	ldr	r1, [sp, #88]	; 0x58
 80135ce:	f8d3 c000 	ldr.w	ip, [r3]
 80135d2:	680f      	ldr	r7, [r1, #0]
 80135d4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80135d8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80135dc:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80135e0:	edd3 6a07 	vldr	s13, [r3, #28]
 80135e4:	9918      	ldr	r1, [sp, #96]	; 0x60
 80135e6:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80135ea:	f9b1 9000 	ldrsh.w	r9, [r1]
 80135ee:	f9ba 1000 	ldrsh.w	r1, [sl]
 80135f2:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80135f6:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80135fa:	eba7 070c 	sub.w	r7, r7, ip
 80135fe:	42bc      	cmp	r4, r7
 8013600:	bfa8      	it	ge
 8013602:	463c      	movge	r4, r7
 8013604:	ee07 4a90 	vmov	s15, r4
 8013608:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801360c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013610:	ee25 4a04 	vmul.f32	s8, s10, s8
 8013614:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013618:	ee25 5a27 	vmul.f32	s10, s10, s15
 801361c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013620:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013624:	eb09 0e0c 	add.w	lr, r9, ip
 8013628:	4571      	cmp	r1, lr
 801362a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801362e:	ee32 1a05 	vadd.f32	s2, s4, s10
 8013632:	ee36 0a84 	vadd.f32	s0, s13, s8
 8013636:	ee61 1a87 	vmul.f32	s3, s3, s14
 801363a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801363e:	f340 808d 	ble.w	801375c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8013642:	eba1 060e 	sub.w	r6, r1, lr
 8013646:	fb96 f5f4 	sdiv	r5, r6, r4
 801364a:	ee07 5a10 	vmov	s14, r5
 801364e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013652:	2d00      	cmp	r5, #0
 8013654:	fb04 6615 	mls	r6, r4, r5, r6
 8013658:	eea7 0a04 	vfma.f32	s0, s14, s8
 801365c:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013660:	eea7 1a05 	vfma.f32	s2, s14, s10
 8013664:	dd13      	ble.n	801368e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8013666:	ee70 6a44 	vsub.f32	s13, s0, s8
 801366a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801366e:	eef5 6a40 	vcmp.f32	s13, #0.0
 8013672:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013676:	bf18      	it	ne
 8013678:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 801367c:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013680:	bf08      	it	eq
 8013682:	eeb0 7a67 	vmoveq.f32	s14, s15
 8013686:	ee61 1a87 	vmul.f32	s3, s3, s14
 801368a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801368e:	fb05 f204 	mul.w	r2, r5, r4
 8013692:	1abf      	subs	r7, r7, r2
 8013694:	4494      	add	ip, r2
 8013696:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 801369a:	4411      	add	r1, r2
 801369c:	eb09 020c 	add.w	r2, r9, ip
 80136a0:	443a      	add	r2, r7
 80136a2:	b209      	sxth	r1, r1
 80136a4:	428a      	cmp	r2, r1
 80136a6:	bfc4      	itt	gt
 80136a8:	eba1 0209 	subgt.w	r2, r1, r9
 80136ac:	eba2 070c 	subgt.w	r7, r2, ip
 80136b0:	2f00      	cmp	r7, #0
 80136b2:	dd50      	ble.n	8013756 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80136b4:	fb97 f1f4 	sdiv	r1, r7, r4
 80136b8:	fb04 7211 	mls	r2, r4, r1, r7
 80136bc:	b90a      	cbnz	r2, 80136c2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80136be:	3901      	subs	r1, #1
 80136c0:	4622      	mov	r2, r4
 80136c2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80136c6:	6840      	ldr	r0, [r0, #4]
 80136c8:	900b      	str	r0, [sp, #44]	; 0x2c
 80136ca:	f8d0 a000 	ldr.w	sl, [r0]
 80136ce:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80136d0:	9008      	str	r0, [sp, #32]
 80136d2:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80136d6:	9818      	ldr	r0, [sp, #96]	; 0x60
 80136d8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80136dc:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80136e0:	695b      	ldr	r3, [r3, #20]
 80136e2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80136e4:	445b      	add	r3, fp
 80136e6:	eef0 6a42 	vmov.f32	s13, s4
 80136ea:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80136ee:	ee21 3a23 	vmul.f32	s6, s2, s7
 80136f2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80136f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80136fa:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80136fe:	9307      	str	r3, [sp, #28]
 8013700:	ee17 7a90 	vmov	r7, s15
 8013704:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013708:	eeb0 7a61 	vmov.f32	s14, s3
 801370c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013710:	ee16 3a90 	vmov	r3, s13
 8013714:	fb97 f7f4 	sdiv	r7, r7, r4
 8013718:	ee17 ca90 	vmov	ip, s15
 801371c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013720:	fb9c fcf4 	sdiv	ip, ip, r4
 8013724:	fb0c 3306 	mla	r3, ip, r6, r3
 8013728:	9302      	str	r3, [sp, #8]
 801372a:	ee17 3a10 	vmov	r3, s14
 801372e:	44b6      	add	lr, r6
 8013730:	fb04 e505 	mla	r5, r4, r5, lr
 8013734:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013738:	fb07 3706 	mla	r7, r7, r6, r3
 801373c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013740:	e9cd 4700 	strd	r4, r7, [sp]
 8013744:	2900      	cmp	r1, #0
 8013746:	bfcc      	ite	gt
 8013748:	46a1      	movgt	r9, r4
 801374a:	4691      	movle	r9, r2
 801374c:	eba9 0306 	sub.w	r3, r9, r6
 8013750:	f8da 4008 	ldr.w	r4, [sl, #8]
 8013754:	47a0      	blx	r4
 8013756:	b00d      	add	sp, #52	; 0x34
 8013758:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801375c:	2500      	movs	r5, #0
 801375e:	462e      	mov	r6, r5
 8013760:	e799      	b.n	8013696 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08013764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013768:	b0db      	sub	sp, #364	; 0x16c
 801376a:	461d      	mov	r5, r3
 801376c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013770:	930a      	str	r3, [sp, #40]	; 0x28
 8013772:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8013776:	930b      	str	r3, [sp, #44]	; 0x2c
 8013778:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 801377c:	9310      	str	r3, [sp, #64]	; 0x40
 801377e:	6803      	ldr	r3, [r0, #0]
 8013780:	910f      	str	r1, [sp, #60]	; 0x3c
 8013782:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8013784:	9009      	str	r0, [sp, #36]	; 0x24
 8013786:	4614      	mov	r4, r2
 8013788:	4629      	mov	r1, r5
 801378a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 801378e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8013792:	47b8      	blx	r7
 8013794:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013796:	6058      	str	r0, [r3, #4]
 8013798:	2800      	cmp	r0, #0
 801379a:	f000 83a1 	beq.w	8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801379e:	682b      	ldr	r3, [r5, #0]
 80137a0:	9314      	str	r3, [sp, #80]	; 0x50
 80137a2:	686b      	ldr	r3, [r5, #4]
 80137a4:	9315      	str	r3, [sp, #84]	; 0x54
 80137a6:	4bc4      	ldr	r3, [pc, #784]	; (8013ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80137a8:	ed94 7a02 	vldr	s14, [r4, #8]
 80137ac:	7819      	ldrb	r1, [r3, #0]
 80137ae:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80137b2:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80137b6:	2900      	cmp	r1, #0
 80137b8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80137bc:	bf16      	itet	ne
 80137be:	4619      	movne	r1, r3
 80137c0:	4611      	moveq	r1, r2
 80137c2:	4613      	movne	r3, r2
 80137c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137c8:	9116      	str	r1, [sp, #88]	; 0x58
 80137ca:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80137ce:	f240 8387 	bls.w	8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80137d2:	ed94 7a07 	vldr	s14, [r4, #28]
 80137d6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80137da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137de:	f240 837f 	bls.w	8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80137e2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80137e6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80137ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137ee:	f240 8377 	bls.w	8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80137f2:	6822      	ldr	r2, [r4, #0]
 80137f4:	4bb1      	ldr	r3, [pc, #708]	; (8013abc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80137f6:	429a      	cmp	r2, r3
 80137f8:	f2c0 8372 	blt.w	8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80137fc:	49b0      	ldr	r1, [pc, #704]	; (8013ac0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80137fe:	6963      	ldr	r3, [r4, #20]
 8013800:	428a      	cmp	r2, r1
 8013802:	f300 836d 	bgt.w	8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013806:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801380a:	48ae      	ldr	r0, [pc, #696]	; (8013ac4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 801380c:	33ff      	adds	r3, #255	; 0xff
 801380e:	4283      	cmp	r3, r0
 8013810:	f200 8366 	bhi.w	8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013814:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8013816:	4dac      	ldr	r5, [pc, #688]	; (8013ac8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013818:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801381c:	33ff      	adds	r3, #255	; 0xff
 801381e:	42ab      	cmp	r3, r5
 8013820:	f200 835e 	bhi.w	8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013824:	6862      	ldr	r2, [r4, #4]
 8013826:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 801382a:	33ff      	adds	r3, #255	; 0xff
 801382c:	4283      	cmp	r3, r0
 801382e:	f200 8357 	bhi.w	8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013832:	69a1      	ldr	r1, [r4, #24]
 8013834:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013838:	33ff      	adds	r3, #255	; 0xff
 801383a:	4283      	cmp	r3, r0
 801383c:	f200 8350 	bhi.w	8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013840:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8013842:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8013846:	30ff      	adds	r0, #255	; 0xff
 8013848:	42a8      	cmp	r0, r5
 801384a:	f200 8349 	bhi.w	8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801384e:	428a      	cmp	r2, r1
 8013850:	f280 8110 	bge.w	8013a74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8013854:	429a      	cmp	r2, r3
 8013856:	f300 8119 	bgt.w	8013a8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801385a:	4299      	cmp	r1, r3
 801385c:	f280 811d 	bge.w	8013a9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013860:	2502      	movs	r5, #2
 8013862:	2701      	movs	r7, #1
 8013864:	46a9      	mov	r9, r5
 8013866:	46b8      	mov	r8, r7
 8013868:	f04f 0a00 	mov.w	sl, #0
 801386c:	4621      	mov	r1, r4
 801386e:	a849      	add	r0, sp, #292	; 0x124
 8013870:	f003 feec 	bl	801764c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8013874:	4622      	mov	r2, r4
 8013876:	4653      	mov	r3, sl
 8013878:	a949      	add	r1, sp, #292	; 0x124
 801387a:	f8cd 9000 	str.w	r9, [sp]
 801387e:	a819      	add	r0, sp, #100	; 0x64
 8013880:	f004 f814 	bl	80178ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013884:	4622      	mov	r2, r4
 8013886:	4653      	mov	r3, sl
 8013888:	a949      	add	r1, sp, #292	; 0x124
 801388a:	f8cd 8000 	str.w	r8, [sp]
 801388e:	a829      	add	r0, sp, #164	; 0xa4
 8013890:	f004 f80c 	bl	80178ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013894:	4643      	mov	r3, r8
 8013896:	4622      	mov	r2, r4
 8013898:	a949      	add	r1, sp, #292	; 0x124
 801389a:	f8cd 9000 	str.w	r9, [sp]
 801389e:	a839      	add	r0, sp, #228	; 0xe4
 80138a0:	f004 f804 	bl	80178ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80138a4:	42af      	cmp	r7, r5
 80138a6:	bfb5      	itete	lt
 80138a8:	2300      	movlt	r3, #0
 80138aa:	2301      	movge	r3, #1
 80138ac:	930e      	strlt	r3, [sp, #56]	; 0x38
 80138ae:	930e      	strge	r3, [sp, #56]	; 0x38
 80138b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80138b2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80138b6:	af12      	add	r7, sp, #72	; 0x48
 80138b8:	bfb9      	ittee	lt
 80138ba:	ad29      	addlt	r5, sp, #164	; 0xa4
 80138bc:	ac19      	addlt	r4, sp, #100	; 0x64
 80138be:	ad19      	addge	r5, sp, #100	; 0x64
 80138c0:	ac29      	addge	r4, sp, #164	; 0xa4
 80138c2:	e887 0003 	stmia.w	r7, {r0, r1}
 80138c6:	b928      	cbnz	r0, 80138d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80138c8:	4b80      	ldr	r3, [pc, #512]	; (8013acc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80138ca:	6818      	ldr	r0, [r3, #0]
 80138cc:	6803      	ldr	r3, [r0, #0]
 80138ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80138d0:	4798      	blx	r3
 80138d2:	6038      	str	r0, [r7, #0]
 80138d4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80138d6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80138da:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80138de:	930c      	str	r3, [sp, #48]	; 0x30
 80138e0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80138e2:	6963      	ldr	r3, [r4, #20]
 80138e4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80138e6:	440b      	add	r3, r1
 80138e8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80138ec:	4408      	add	r0, r1
 80138ee:	b200      	sxth	r0, r0
 80138f0:	4283      	cmp	r3, r0
 80138f2:	900d      	str	r0, [sp, #52]	; 0x34
 80138f4:	f280 80dd 	bge.w	8013ab2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80138f8:	428b      	cmp	r3, r1
 80138fa:	da08      	bge.n	801390e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80138fc:	2a00      	cmp	r2, #0
 80138fe:	dd06      	ble.n	801390e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013900:	1acb      	subs	r3, r1, r3
 8013902:	429a      	cmp	r2, r3
 8013904:	f2c0 80e4 	blt.w	8013ad0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013908:	2b00      	cmp	r3, #0
 801390a:	f300 80e2 	bgt.w	8013ad2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801390e:	6967      	ldr	r7, [r4, #20]
 8013910:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013912:	443b      	add	r3, r7
 8013914:	461f      	mov	r7, r3
 8013916:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013918:	1bdf      	subs	r7, r3, r7
 801391a:	4297      	cmp	r7, r2
 801391c:	bfa8      	it	ge
 801391e:	4617      	movge	r7, r2
 8013920:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013924:	2f00      	cmp	r7, #0
 8013926:	f340 8166 	ble.w	8013bf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801392a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801392c:	6829      	ldr	r1, [r5, #0]
 801392e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013932:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013936:	6820      	ldr	r0, [r4, #0]
 8013938:	4411      	add	r1, r2
 801393a:	4299      	cmp	r1, r3
 801393c:	dd1a      	ble.n	8013974 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801393e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013942:	440b      	add	r3, r1
 8013944:	4402      	add	r2, r0
 8013946:	b21b      	sxth	r3, r3
 8013948:	429a      	cmp	r2, r3
 801394a:	dc13      	bgt.n	8013974 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801394c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801394e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013950:	681b      	ldr	r3, [r3, #0]
 8013952:	9206      	str	r2, [sp, #24]
 8013954:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013956:	9205      	str	r2, [sp, #20]
 8013958:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801395a:	9500      	str	r5, [sp, #0]
 801395c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013960:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013962:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013964:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013968:	a912      	add	r1, sp, #72	; 0x48
 801396a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801396e:	aa49      	add	r2, sp, #292	; 0x124
 8013970:	4623      	mov	r3, r4
 8013972:	47c8      	blx	r9
 8013974:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013978:	441a      	add	r2, r3
 801397a:	6963      	ldr	r3, [r4, #20]
 801397c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013980:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013984:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013988:	68a1      	ldr	r1, [r4, #8]
 801398a:	ed94 6a08 	vldr	s12, [r4, #32]
 801398e:	6022      	str	r2, [r4, #0]
 8013990:	3301      	adds	r3, #1
 8013992:	6163      	str	r3, [r4, #20]
 8013994:	69a3      	ldr	r3, [r4, #24]
 8013996:	ee37 7a27 	vadd.f32	s14, s14, s15
 801399a:	3b01      	subs	r3, #1
 801399c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80139a0:	61a3      	str	r3, [r4, #24]
 80139a2:	6923      	ldr	r3, [r4, #16]
 80139a4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80139a8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80139ac:	edd4 6a07 	vldr	s13, [r4, #28]
 80139b0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80139b4:	440b      	add	r3, r1
 80139b6:	68e1      	ldr	r1, [r4, #12]
 80139b8:	6123      	str	r3, [r4, #16]
 80139ba:	ee76 6a86 	vadd.f32	s13, s13, s12
 80139be:	428b      	cmp	r3, r1
 80139c0:	edc4 6a07 	vstr	s13, [r4, #28]
 80139c4:	db15      	blt.n	80139f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80139c6:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80139ca:	ee76 6a26 	vadd.f32	s13, s12, s13
 80139ce:	3201      	adds	r2, #1
 80139d0:	edc4 6a07 	vstr	s13, [r4, #28]
 80139d4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80139d8:	6022      	str	r2, [r4, #0]
 80139da:	ee36 7a87 	vadd.f32	s14, s13, s14
 80139de:	1a5b      	subs	r3, r3, r1
 80139e0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80139e4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80139e8:	6123      	str	r3, [r4, #16]
 80139ea:	ee77 7a27 	vadd.f32	s15, s14, s15
 80139ee:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80139f2:	e9d5 2300 	ldrd	r2, r3, [r5]
 80139f6:	441a      	add	r2, r3
 80139f8:	696b      	ldr	r3, [r5, #20]
 80139fa:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80139fe:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013a02:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013a06:	68a9      	ldr	r1, [r5, #8]
 8013a08:	ed95 6a08 	vldr	s12, [r5, #32]
 8013a0c:	602a      	str	r2, [r5, #0]
 8013a0e:	3301      	adds	r3, #1
 8013a10:	616b      	str	r3, [r5, #20]
 8013a12:	69ab      	ldr	r3, [r5, #24]
 8013a14:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013a18:	3b01      	subs	r3, #1
 8013a1a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013a1e:	61ab      	str	r3, [r5, #24]
 8013a20:	692b      	ldr	r3, [r5, #16]
 8013a22:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013a26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013a2a:	edd5 6a07 	vldr	s13, [r5, #28]
 8013a2e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013a32:	440b      	add	r3, r1
 8013a34:	68e9      	ldr	r1, [r5, #12]
 8013a36:	612b      	str	r3, [r5, #16]
 8013a38:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013a3c:	428b      	cmp	r3, r1
 8013a3e:	edc5 6a07 	vstr	s13, [r5, #28]
 8013a42:	db15      	blt.n	8013a70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8013a44:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013a48:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013a4c:	3201      	adds	r2, #1
 8013a4e:	edc5 6a07 	vstr	s13, [r5, #28]
 8013a52:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013a56:	602a      	str	r2, [r5, #0]
 8013a58:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013a5c:	1a5b      	subs	r3, r3, r1
 8013a5e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013a62:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013a66:	612b      	str	r3, [r5, #16]
 8013a68:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013a6c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013a70:	3f01      	subs	r7, #1
 8013a72:	e757      	b.n	8013924 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8013a74:	4299      	cmp	r1, r3
 8013a76:	dc13      	bgt.n	8013aa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013a78:	429a      	cmp	r2, r3
 8013a7a:	da14      	bge.n	8013aa6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013a7c:	2502      	movs	r5, #2
 8013a7e:	2703      	movs	r7, #3
 8013a80:	46a9      	mov	r9, r5
 8013a82:	f04f 0800 	mov.w	r8, #0
 8013a86:	f04f 0a01 	mov.w	sl, #1
 8013a8a:	e6ef      	b.n	801386c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013a8c:	2501      	movs	r5, #1
 8013a8e:	2700      	movs	r7, #0
 8013a90:	46a9      	mov	r9, r5
 8013a92:	46b8      	mov	r8, r7
 8013a94:	f04f 0a02 	mov.w	sl, #2
 8013a98:	e6e8      	b.n	801386c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013a9a:	2501      	movs	r5, #1
 8013a9c:	2702      	movs	r7, #2
 8013a9e:	e6e1      	b.n	8013864 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013aa0:	2500      	movs	r5, #0
 8013aa2:	2701      	movs	r7, #1
 8013aa4:	e7f4      	b.n	8013a90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013aa6:	2702      	movs	r7, #2
 8013aa8:	2503      	movs	r5, #3
 8013aaa:	f04f 0900 	mov.w	r9, #0
 8013aae:	46b8      	mov	r8, r7
 8013ab0:	e7e9      	b.n	8013a86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8013ab2:	4613      	mov	r3, r2
 8013ab4:	e728      	b.n	8013908 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013ab6:	bf00      	nop
 8013ab8:	2000ef14 	.word	0x2000ef14
 8013abc:	fffd8f01 	.word	0xfffd8f01
 8013ac0:	00027100 	.word	0x00027100
 8013ac4:	0004e1ff 	.word	0x0004e1ff
 8013ac8:	0004e1fe 	.word	0x0004e1fe
 8013acc:	2000ef1c 	.word	0x2000ef1c
 8013ad0:	4613      	mov	r3, r2
 8013ad2:	992b      	ldr	r1, [sp, #172]	; 0xac
 8013ad4:	9111      	str	r1, [sp, #68]	; 0x44
 8013ad6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8013ada:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8013ade:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8013ae0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8013ae4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8013ae8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8013aec:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8013af0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8013af4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8013af8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8013afc:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8013b00:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8013b04:	469e      	mov	lr, r3
 8013b06:	469c      	mov	ip, r3
 8013b08:	f04f 0900 	mov.w	r9, #0
 8013b0c:	f1bc 0f00 	cmp.w	ip, #0
 8013b10:	d147      	bne.n	8013ba2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8013b12:	eb03 0c07 	add.w	ip, r3, r7
 8013b16:	1ad7      	subs	r7, r2, r3
 8013b18:	f1b9 0f00 	cmp.w	r9, #0
 8013b1c:	d009      	beq.n	8013b32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8013b1e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8013b22:	9029      	str	r0, [sp, #164]	; 0xa4
 8013b24:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8013b28:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8013b2c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8013b30:	912d      	str	r1, [sp, #180]	; 0xb4
 8013b32:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013b34:	9111      	str	r1, [sp, #68]	; 0x44
 8013b36:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013b3a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013b3e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013b42:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013b46:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013b4a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013b4e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013b52:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013b56:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013b5a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013b5e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013b62:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013b66:	f04f 0800 	mov.w	r8, #0
 8013b6a:	f1be 0f00 	cmp.w	lr, #0
 8013b6e:	d031      	beq.n	8013bd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013b70:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013b72:	4431      	add	r1, r6
 8013b74:	4549      	cmp	r1, r9
 8013b76:	4450      	add	r0, sl
 8013b78:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013b7c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013b80:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013b84:	db08      	blt.n	8013b98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8013b86:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013b8a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013b8e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013b92:	3001      	adds	r0, #1
 8013b94:	eba1 0109 	sub.w	r1, r1, r9
 8013b98:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013b9c:	f04f 0801 	mov.w	r8, #1
 8013ba0:	e7e3      	b.n	8013b6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8013ba2:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013ba4:	4431      	add	r1, r6
 8013ba6:	4541      	cmp	r1, r8
 8013ba8:	4450      	add	r0, sl
 8013baa:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013bae:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013bb2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013bb6:	db08      	blt.n	8013bca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013bb8:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013bbc:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013bc0:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013bc4:	3001      	adds	r0, #1
 8013bc6:	eba1 0108 	sub.w	r1, r1, r8
 8013bca:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013bce:	f04f 0901 	mov.w	r9, #1
 8013bd2:	e79b      	b.n	8013b0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8013bd4:	449c      	add	ip, r3
 8013bd6:	1aff      	subs	r7, r7, r3
 8013bd8:	f1b8 0f00 	cmp.w	r8, #0
 8013bdc:	d009      	beq.n	8013bf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8013bde:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013be2:	9019      	str	r0, [sp, #100]	; 0x64
 8013be4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013be8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013bec:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013bf0:	911d      	str	r1, [sp, #116]	; 0x74
 8013bf2:	1ad2      	subs	r2, r2, r3
 8013bf4:	e68b      	b.n	801390e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013bf6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013bf8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8013bfa:	2b00      	cmp	r3, #0
 8013bfc:	f000 80d1 	beq.w	8013da2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8013c00:	ad19      	add	r5, sp, #100	; 0x64
 8013c02:	ac39      	add	r4, sp, #228	; 0xe4
 8013c04:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013c06:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013c0a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013c0e:	930c      	str	r3, [sp, #48]	; 0x30
 8013c10:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013c12:	6963      	ldr	r3, [r4, #20]
 8013c14:	440b      	add	r3, r1
 8013c16:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013c1a:	4408      	add	r0, r1
 8013c1c:	b200      	sxth	r0, r0
 8013c1e:	4283      	cmp	r3, r0
 8013c20:	900d      	str	r0, [sp, #52]	; 0x34
 8013c22:	f280 80c1 	bge.w	8013da8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8013c26:	428b      	cmp	r3, r1
 8013c28:	da08      	bge.n	8013c3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013c2a:	2a00      	cmp	r2, #0
 8013c2c:	dd06      	ble.n	8013c3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013c2e:	1acb      	subs	r3, r1, r3
 8013c30:	429a      	cmp	r2, r3
 8013c32:	f2c0 80bb 	blt.w	8013dac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8013c36:	2b00      	cmp	r3, #0
 8013c38:	f300 80b9 	bgt.w	8013dae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8013c3c:	6967      	ldr	r7, [r4, #20]
 8013c3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013c40:	443b      	add	r3, r7
 8013c42:	461f      	mov	r7, r3
 8013c44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013c46:	1bdf      	subs	r7, r3, r7
 8013c48:	4297      	cmp	r7, r2
 8013c4a:	bfa8      	it	ge
 8013c4c:	4617      	movge	r7, r2
 8013c4e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013c52:	2f00      	cmp	r7, #0
 8013c54:	f340 813c 	ble.w	8013ed0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013c58:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013c5a:	6829      	ldr	r1, [r5, #0]
 8013c5c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013c60:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013c64:	6820      	ldr	r0, [r4, #0]
 8013c66:	4411      	add	r1, r2
 8013c68:	4299      	cmp	r1, r3
 8013c6a:	dd1a      	ble.n	8013ca2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013c6c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013c70:	440b      	add	r3, r1
 8013c72:	4402      	add	r2, r0
 8013c74:	b21b      	sxth	r3, r3
 8013c76:	429a      	cmp	r2, r3
 8013c78:	dc13      	bgt.n	8013ca2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013c7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013c7c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013c7e:	681b      	ldr	r3, [r3, #0]
 8013c80:	9206      	str	r2, [sp, #24]
 8013c82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013c84:	9205      	str	r2, [sp, #20]
 8013c86:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013c88:	9500      	str	r5, [sp, #0]
 8013c8a:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013c8e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013c90:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013c92:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013c96:	a912      	add	r1, sp, #72	; 0x48
 8013c98:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013c9c:	aa49      	add	r2, sp, #292	; 0x124
 8013c9e:	4623      	mov	r3, r4
 8013ca0:	47c8      	blx	r9
 8013ca2:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013ca6:	441a      	add	r2, r3
 8013ca8:	6963      	ldr	r3, [r4, #20]
 8013caa:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013cae:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013cb2:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013cb6:	68a1      	ldr	r1, [r4, #8]
 8013cb8:	ed94 6a08 	vldr	s12, [r4, #32]
 8013cbc:	6022      	str	r2, [r4, #0]
 8013cbe:	3301      	adds	r3, #1
 8013cc0:	6163      	str	r3, [r4, #20]
 8013cc2:	69a3      	ldr	r3, [r4, #24]
 8013cc4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013cc8:	3b01      	subs	r3, #1
 8013cca:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013cce:	61a3      	str	r3, [r4, #24]
 8013cd0:	6923      	ldr	r3, [r4, #16]
 8013cd2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013cd6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013cda:	edd4 6a07 	vldr	s13, [r4, #28]
 8013cde:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013ce2:	440b      	add	r3, r1
 8013ce4:	68e1      	ldr	r1, [r4, #12]
 8013ce6:	6123      	str	r3, [r4, #16]
 8013ce8:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013cec:	428b      	cmp	r3, r1
 8013cee:	edc4 6a07 	vstr	s13, [r4, #28]
 8013cf2:	db15      	blt.n	8013d20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8013cf4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013cf8:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013cfc:	3201      	adds	r2, #1
 8013cfe:	edc4 6a07 	vstr	s13, [r4, #28]
 8013d02:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013d06:	6022      	str	r2, [r4, #0]
 8013d08:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013d0c:	1a5b      	subs	r3, r3, r1
 8013d0e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013d12:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013d16:	6123      	str	r3, [r4, #16]
 8013d18:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013d1c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013d20:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013d24:	441a      	add	r2, r3
 8013d26:	696b      	ldr	r3, [r5, #20]
 8013d28:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013d2c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013d30:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013d34:	68a9      	ldr	r1, [r5, #8]
 8013d36:	ed95 6a08 	vldr	s12, [r5, #32]
 8013d3a:	602a      	str	r2, [r5, #0]
 8013d3c:	3301      	adds	r3, #1
 8013d3e:	616b      	str	r3, [r5, #20]
 8013d40:	69ab      	ldr	r3, [r5, #24]
 8013d42:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013d46:	3b01      	subs	r3, #1
 8013d48:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013d4c:	61ab      	str	r3, [r5, #24]
 8013d4e:	692b      	ldr	r3, [r5, #16]
 8013d50:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013d54:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013d58:	edd5 6a07 	vldr	s13, [r5, #28]
 8013d5c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013d60:	440b      	add	r3, r1
 8013d62:	68e9      	ldr	r1, [r5, #12]
 8013d64:	612b      	str	r3, [r5, #16]
 8013d66:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013d6a:	428b      	cmp	r3, r1
 8013d6c:	edc5 6a07 	vstr	s13, [r5, #28]
 8013d70:	db15      	blt.n	8013d9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8013d72:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013d76:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013d7a:	3201      	adds	r2, #1
 8013d7c:	edc5 6a07 	vstr	s13, [r5, #28]
 8013d80:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013d84:	602a      	str	r2, [r5, #0]
 8013d86:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013d8a:	1a5b      	subs	r3, r3, r1
 8013d8c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013d90:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013d94:	612b      	str	r3, [r5, #16]
 8013d96:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013d9a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013d9e:	3f01      	subs	r7, #1
 8013da0:	e757      	b.n	8013c52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8013da2:	ad39      	add	r5, sp, #228	; 0xe4
 8013da4:	ac19      	add	r4, sp, #100	; 0x64
 8013da6:	e72d      	b.n	8013c04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013da8:	4613      	mov	r3, r2
 8013daa:	e744      	b.n	8013c36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8013dac:	4613      	mov	r3, r2
 8013dae:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8013db2:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8013db4:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8013db8:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8013dbc:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8013dc0:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8013dc4:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8013dc8:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8013dcc:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8013dd0:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8013dd2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8013dd6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8013dda:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8013dde:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8013de2:	960e      	str	r6, [sp, #56]	; 0x38
 8013de4:	469e      	mov	lr, r3
 8013de6:	461f      	mov	r7, r3
 8013de8:	f04f 0900 	mov.w	r9, #0
 8013dec:	2f00      	cmp	r7, #0
 8013dee:	d146      	bne.n	8013e7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8013df0:	449c      	add	ip, r3
 8013df2:	1ad7      	subs	r7, r2, r3
 8013df4:	f1b9 0f00 	cmp.w	r9, #0
 8013df8:	d009      	beq.n	8013e0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8013dfa:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8013dfe:	9039      	str	r0, [sp, #228]	; 0xe4
 8013e00:	913d      	str	r1, [sp, #244]	; 0xf4
 8013e02:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8013e06:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8013e0a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8013e0e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013e10:	910e      	str	r1, [sp, #56]	; 0x38
 8013e12:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013e16:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013e1a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013e1e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013e22:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013e26:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013e2a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013e2e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013e32:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013e36:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013e3a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013e3e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013e42:	f04f 0800 	mov.w	r8, #0
 8013e46:	f1be 0f00 	cmp.w	lr, #0
 8013e4a:	d030      	beq.n	8013eae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013e4c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013e4e:	4431      	add	r1, r6
 8013e50:	4549      	cmp	r1, r9
 8013e52:	4450      	add	r0, sl
 8013e54:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013e58:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013e5c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013e60:	db08      	blt.n	8013e74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8013e62:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013e66:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013e6a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013e6e:	3001      	adds	r0, #1
 8013e70:	eba1 0109 	sub.w	r1, r1, r9
 8013e74:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013e78:	f04f 0801 	mov.w	r8, #1
 8013e7c:	e7e3      	b.n	8013e46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8013e7e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013e80:	4431      	add	r1, r6
 8013e82:	4541      	cmp	r1, r8
 8013e84:	4450      	add	r0, sl
 8013e86:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013e8a:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013e8e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013e92:	db08      	blt.n	8013ea6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013e94:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013e98:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013e9c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013ea0:	3001      	adds	r0, #1
 8013ea2:	eba1 0108 	sub.w	r1, r1, r8
 8013ea6:	3f01      	subs	r7, #1
 8013ea8:	f04f 0901 	mov.w	r9, #1
 8013eac:	e79e      	b.n	8013dec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8013eae:	449c      	add	ip, r3
 8013eb0:	1aff      	subs	r7, r7, r3
 8013eb2:	f1b8 0f00 	cmp.w	r8, #0
 8013eb6:	d009      	beq.n	8013ecc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013eb8:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013ebc:	9019      	str	r0, [sp, #100]	; 0x64
 8013ebe:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013ec2:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013ec6:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013eca:	911d      	str	r1, [sp, #116]	; 0x74
 8013ecc:	1ad2      	subs	r2, r2, r3
 8013ece:	e6b5      	b.n	8013c3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013ed0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013ed2:	681b      	ldr	r3, [r3, #0]
 8013ed4:	b923      	cbnz	r3, 8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013ed6:	4b04      	ldr	r3, [pc, #16]	; (8013ee8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013ed8:	6818      	ldr	r0, [r3, #0]
 8013eda:	6803      	ldr	r3, [r0, #0]
 8013edc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ede:	4798      	blx	r3
 8013ee0:	b05b      	add	sp, #364	; 0x16c
 8013ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ee6:	bf00      	nop
 8013ee8:	2000ef1c 	.word	0x2000ef1c

08013eec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8013eec:	b570      	push	{r4, r5, r6, lr}
 8013eee:	4604      	mov	r4, r0
 8013ef0:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8013ef4:	9805      	ldr	r0, [sp, #20]
 8013ef6:	6061      	str	r1, [r4, #4]
 8013ef8:	2500      	movs	r5, #0
 8013efa:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8013efe:	8263      	strh	r3, [r4, #18]
 8013f00:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013f04:	8025      	strh	r5, [r4, #0]
 8013f06:	7221      	strb	r1, [r4, #8]
 8013f08:	7266      	strb	r6, [r4, #9]
 8013f0a:	60e0      	str	r0, [r4, #12]
 8013f0c:	8222      	strh	r2, [r4, #16]
 8013f0e:	82a3      	strh	r3, [r4, #20]
 8013f10:	82e5      	strh	r5, [r4, #22]
 8013f12:	8325      	strh	r5, [r4, #24]
 8013f14:	8365      	strh	r5, [r4, #26]
 8013f16:	83a5      	strh	r5, [r4, #28]
 8013f18:	83e5      	strh	r5, [r4, #30]
 8013f1a:	8425      	strh	r5, [r4, #32]
 8013f1c:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8013f20:	b32e      	cbz	r6, 8013f6e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013f22:	6803      	ldr	r3, [r0, #0]
 8013f24:	695b      	ldr	r3, [r3, #20]
 8013f26:	4798      	blx	r3
 8013f28:	4606      	mov	r6, r0
 8013f2a:	b300      	cbz	r0, 8013f6e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013f2c:	68e0      	ldr	r0, [r4, #12]
 8013f2e:	6803      	ldr	r3, [r0, #0]
 8013f30:	4631      	mov	r1, r6
 8013f32:	68db      	ldr	r3, [r3, #12]
 8013f34:	4798      	blx	r3
 8013f36:	4605      	mov	r5, r0
 8013f38:	b1c8      	cbz	r0, 8013f6e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013f3a:	7b43      	ldrb	r3, [r0, #13]
 8013f3c:	7a82      	ldrb	r2, [r0, #10]
 8013f3e:	005b      	lsls	r3, r3, #1
 8013f40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013f44:	4313      	orrs	r3, r2
 8013f46:	8423      	strh	r3, [r4, #32]
 8013f48:	7a63      	ldrb	r3, [r4, #9]
 8013f4a:	2b06      	cmp	r3, #6
 8013f4c:	d10f      	bne.n	8013f6e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013f4e:	68e0      	ldr	r0, [r4, #12]
 8013f50:	6803      	ldr	r3, [r0, #0]
 8013f52:	462a      	mov	r2, r5
 8013f54:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013f56:	4631      	mov	r1, r6
 8013f58:	4798      	blx	r3
 8013f5a:	7b6b      	ldrb	r3, [r5, #13]
 8013f5c:	005b      	lsls	r3, r3, #1
 8013f5e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013f62:	7aab      	ldrb	r3, [r5, #10]
 8013f64:	4313      	orrs	r3, r2
 8013f66:	4418      	add	r0, r3
 8013f68:	8c23      	ldrh	r3, [r4, #32]
 8013f6a:	4418      	add	r0, r3
 8013f6c:	8420      	strh	r0, [r4, #32]
 8013f6e:	4620      	mov	r0, r4
 8013f70:	bd70      	pop	{r4, r5, r6, pc}

08013f72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8013f72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f76:	2400      	movs	r4, #0
 8013f78:	b085      	sub	sp, #20
 8013f7a:	4681      	mov	r9, r0
 8013f7c:	4688      	mov	r8, r1
 8013f7e:	4692      	mov	sl, r2
 8013f80:	469b      	mov	fp, r3
 8013f82:	4627      	mov	r7, r4
 8013f84:	4625      	mov	r5, r4
 8013f86:	4626      	mov	r6, r4
 8013f88:	4554      	cmp	r4, sl
 8013f8a:	da2a      	bge.n	8013fe2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013f8c:	2300      	movs	r3, #0
 8013f8e:	9303      	str	r3, [sp, #12]
 8013f90:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013f94:	429d      	cmp	r5, r3
 8013f96:	d004      	beq.n	8013fa2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013f98:	f242 030b 	movw	r3, #8203	; 0x200b
 8013f9c:	429d      	cmp	r5, r3
 8013f9e:	bf18      	it	ne
 8013fa0:	462f      	movne	r7, r5
 8013fa2:	ab03      	add	r3, sp, #12
 8013fa4:	4642      	mov	r2, r8
 8013fa6:	4659      	mov	r1, fp
 8013fa8:	4648      	mov	r0, r9
 8013faa:	f003 f965 	bl	8017278 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013fae:	4605      	mov	r5, r0
 8013fb0:	b1b8      	cbz	r0, 8013fe2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013fb2:	280a      	cmp	r0, #10
 8013fb4:	d015      	beq.n	8013fe2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013fb6:	9a03      	ldr	r2, [sp, #12]
 8013fb8:	b18a      	cbz	r2, 8013fde <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8013fba:	7b50      	ldrb	r0, [r2, #13]
 8013fbc:	7a93      	ldrb	r3, [r2, #10]
 8013fbe:	8895      	ldrh	r5, [r2, #4]
 8013fc0:	0040      	lsls	r0, r0, #1
 8013fc2:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8013fc6:	4303      	orrs	r3, r0
 8013fc8:	9301      	str	r3, [sp, #4]
 8013fca:	f8d8 3000 	ldr.w	r3, [r8]
 8013fce:	4639      	mov	r1, r7
 8013fd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013fd2:	4640      	mov	r0, r8
 8013fd4:	4798      	blx	r3
 8013fd6:	9b01      	ldr	r3, [sp, #4]
 8013fd8:	4418      	add	r0, r3
 8013fda:	4406      	add	r6, r0
 8013fdc:	b2b6      	uxth	r6, r6
 8013fde:	3401      	adds	r4, #1
 8013fe0:	e7d2      	b.n	8013f88 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8013fe2:	4630      	mov	r0, r6
 8013fe4:	b005      	add	sp, #20
 8013fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013fea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8013fea:	2a02      	cmp	r2, #2
 8013fec:	b530      	push	{r4, r5, lr}
 8013fee:	d011      	beq.n	8014014 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8013ff0:	2a03      	cmp	r2, #3
 8013ff2:	d01c      	beq.n	801402e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8013ff4:	2a01      	cmp	r2, #1
 8013ff6:	d10c      	bne.n	8014012 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013ff8:	888b      	ldrh	r3, [r1, #4]
 8013ffa:	8801      	ldrh	r1, [r0, #0]
 8013ffc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014000:	8844      	ldrh	r4, [r0, #2]
 8014002:	8004      	strh	r4, [r0, #0]
 8014004:	1a5b      	subs	r3, r3, r1
 8014006:	1a9b      	subs	r3, r3, r2
 8014008:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801400c:	8043      	strh	r3, [r0, #2]
 801400e:	8081      	strh	r1, [r0, #4]
 8014010:	80c2      	strh	r2, [r0, #6]
 8014012:	bd30      	pop	{r4, r5, pc}
 8014014:	88cb      	ldrh	r3, [r1, #6]
 8014016:	8842      	ldrh	r2, [r0, #2]
 8014018:	1a9b      	subs	r3, r3, r2
 801401a:	88c2      	ldrh	r2, [r0, #6]
 801401c:	1a9b      	subs	r3, r3, r2
 801401e:	888a      	ldrh	r2, [r1, #4]
 8014020:	8801      	ldrh	r1, [r0, #0]
 8014022:	8043      	strh	r3, [r0, #2]
 8014024:	1a52      	subs	r2, r2, r1
 8014026:	8881      	ldrh	r1, [r0, #4]
 8014028:	1a52      	subs	r2, r2, r1
 801402a:	8002      	strh	r2, [r0, #0]
 801402c:	e7f1      	b.n	8014012 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801402e:	88cb      	ldrh	r3, [r1, #6]
 8014030:	8841      	ldrh	r1, [r0, #2]
 8014032:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8014036:	f9b0 5000 	ldrsh.w	r5, [r0]
 801403a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801403e:	8045      	strh	r5, [r0, #2]
 8014040:	1a5b      	subs	r3, r3, r1
 8014042:	1a9b      	subs	r3, r3, r2
 8014044:	8003      	strh	r3, [r0, #0]
 8014046:	8082      	strh	r2, [r0, #4]
 8014048:	80c4      	strh	r4, [r0, #6]
 801404a:	e7e2      	b.n	8014012 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801404c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801404c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014050:	b09f      	sub	sp, #124	; 0x7c
 8014052:	9116      	str	r1, [sp, #88]	; 0x58
 8014054:	9317      	str	r3, [sp, #92]	; 0x5c
 8014056:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014058:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801405a:	8809      	ldrh	r1, [r1, #0]
 801405c:	889b      	ldrh	r3, [r3, #4]
 801405e:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8014062:	9212      	str	r2, [sp, #72]	; 0x48
 8014064:	440b      	add	r3, r1
 8014066:	b21b      	sxth	r3, r3
 8014068:	9310      	str	r3, [sp, #64]	; 0x40
 801406a:	f8d8 3000 	ldr.w	r3, [r8]
 801406e:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8014072:	7b19      	ldrb	r1, [r3, #12]
 8014074:	7adb      	ldrb	r3, [r3, #11]
 8014076:	9011      	str	r0, [sp, #68]	; 0x44
 8014078:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 801407c:	9114      	str	r1, [sp, #80]	; 0x50
 801407e:	9315      	str	r3, [sp, #84]	; 0x54
 8014080:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8014084:	2a00      	cmp	r2, #0
 8014086:	d06a      	beq.n	801415e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014088:	f898 3010 	ldrb.w	r3, [r8, #16]
 801408c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801408e:	2b06      	cmp	r3, #6
 8014090:	bf14      	ite	ne
 8014092:	2301      	movne	r3, #1
 8014094:	2302      	moveq	r3, #2
 8014096:	4413      	add	r3, r2
 8014098:	f04f 0900 	mov.w	r9, #0
 801409c:	930f      	str	r3, [sp, #60]	; 0x3c
 801409e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80140a2:	464c      	mov	r4, r9
 80140a4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80140a8:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80140ac:	4293      	cmp	r3, r2
 80140ae:	f280 808f 	bge.w	80141d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80140b2:	2300      	movs	r3, #0
 80140b4:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80140b8:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80140bc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80140c0:	429c      	cmp	r4, r3
 80140c2:	d006      	beq.n	80140d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80140c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80140c6:	f242 020b 	movw	r2, #8203	; 0x200b
 80140ca:	4294      	cmp	r4, r2
 80140cc:	bf18      	it	ne
 80140ce:	4623      	movne	r3, r4
 80140d0:	930d      	str	r3, [sp, #52]	; 0x34
 80140d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80140d4:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80140d6:	f8d8 2000 	ldr.w	r2, [r8]
 80140da:	428b      	cmp	r3, r1
 80140dc:	db41      	blt.n	8014162 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80140de:	6813      	ldr	r3, [r2, #0]
 80140e0:	4610      	mov	r0, r2
 80140e2:	695b      	ldr	r3, [r3, #20]
 80140e4:	4798      	blx	r3
 80140e6:	4604      	mov	r4, r0
 80140e8:	f8d8 0000 	ldr.w	r0, [r8]
 80140ec:	6803      	ldr	r3, [r0, #0]
 80140ee:	aa1d      	add	r2, sp, #116	; 0x74
 80140f0:	689d      	ldr	r5, [r3, #8]
 80140f2:	4621      	mov	r1, r4
 80140f4:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80140f8:	47a8      	blx	r5
 80140fa:	901c      	str	r0, [sp, #112]	; 0x70
 80140fc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014100:	429c      	cmp	r4, r3
 8014102:	f000 80eb 	beq.w	80142dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014106:	f242 030b 	movw	r3, #8203	; 0x200b
 801410a:	429c      	cmp	r4, r3
 801410c:	f000 80e6 	beq.w	80142dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014110:	2c00      	cmp	r4, #0
 8014112:	f000 80f8 	beq.w	8014306 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014116:	2c0a      	cmp	r4, #10
 8014118:	d060      	beq.n	80141dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801411a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801411c:	b36a      	cbz	r2, 801417a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801411e:	8894      	ldrh	r4, [r2, #4]
 8014120:	f1bb 0f00 	cmp.w	fp, #0
 8014124:	d03b      	beq.n	801419e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8014126:	f892 900d 	ldrb.w	r9, [r2, #13]
 801412a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801412e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8014132:	f892 900a 	ldrb.w	r9, [r2, #10]
 8014136:	f1bb 0f01 	cmp.w	fp, #1
 801413a:	ea49 0903 	orr.w	r9, r9, r3
 801413e:	d134      	bne.n	80141aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014140:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014142:	eba6 0609 	sub.w	r6, r6, r9
 8014146:	2b00      	cmp	r3, #0
 8014148:	d14f      	bne.n	80141ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 801414a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801414c:	eb09 0306 	add.w	r3, r9, r6
 8014150:	4413      	add	r3, r2
 8014152:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014154:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014158:	4293      	cmp	r3, r2
 801415a:	da51      	bge.n	8014200 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801415c:	e038      	b.n	80141d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801415e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014160:	e79a      	b.n	8014098 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8014162:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014166:	9301      	str	r3, [sp, #4]
 8014168:	ab1d      	add	r3, sp, #116	; 0x74
 801416a:	9300      	str	r3, [sp, #0]
 801416c:	4659      	mov	r1, fp
 801416e:	ab1c      	add	r3, sp, #112	; 0x70
 8014170:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014172:	f003 f8ca 	bl	801730a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8014176:	4604      	mov	r4, r0
 8014178:	e7c0      	b.n	80140fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 801417a:	f8d8 0000 	ldr.w	r0, [r8]
 801417e:	6803      	ldr	r3, [r0, #0]
 8014180:	691b      	ldr	r3, [r3, #16]
 8014182:	4798      	blx	r3
 8014184:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014188:	4298      	cmp	r0, r3
 801418a:	f000 80a7 	beq.w	80142dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801418e:	f242 030b 	movw	r3, #8203	; 0x200b
 8014192:	4298      	cmp	r0, r3
 8014194:	f000 80a2 	beq.w	80142dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014198:	f1bb 0f00 	cmp.w	fp, #0
 801419c:	d100      	bne.n	80141a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 801419e:	444e      	add	r6, r9
 80141a0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80141a2:	2a00      	cmp	r2, #0
 80141a4:	d1bf      	bne.n	8014126 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80141a6:	4691      	mov	r9, r2
 80141a8:	e098      	b.n	80142dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80141aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80141ac:	2b00      	cmp	r3, #0
 80141ae:	f000 80ac 	beq.w	801430a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 80141b2:	f1bb 0f00 	cmp.w	fp, #0
 80141b6:	d118      	bne.n	80141ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80141b8:	f8d8 0000 	ldr.w	r0, [r8]
 80141bc:	990d      	ldr	r1, [sp, #52]	; 0x34
 80141be:	6803      	ldr	r3, [r0, #0]
 80141c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80141c2:	4798      	blx	r3
 80141c4:	4406      	add	r6, r0
 80141c6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80141c8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80141ca:	1af3      	subs	r3, r6, r3
 80141cc:	4293      	cmp	r3, r2
 80141ce:	dd17      	ble.n	8014200 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80141d0:	2c00      	cmp	r4, #0
 80141d2:	f000 8098 	beq.w	8014306 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80141d6:	2c0a      	cmp	r4, #10
 80141d8:	f040 8086 	bne.w	80142e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 80141dc:	240a      	movs	r4, #10
 80141de:	fab4 f084 	clz	r0, r4
 80141e2:	0940      	lsrs	r0, r0, #5
 80141e4:	b01f      	add	sp, #124	; 0x7c
 80141e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80141ea:	f8d8 0000 	ldr.w	r0, [r8]
 80141ee:	990d      	ldr	r1, [sp, #52]	; 0x34
 80141f0:	6803      	ldr	r3, [r0, #0]
 80141f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80141f4:	4798      	blx	r3
 80141f6:	f1bb 0f01 	cmp.w	fp, #1
 80141fa:	eba6 0600 	sub.w	r6, r6, r0
 80141fe:	d0a4      	beq.n	801414a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8014200:	981c      	ldr	r0, [sp, #112]	; 0x70
 8014202:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014204:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8014208:	f9b3 7000 	ldrsh.w	r7, [r3]
 801420c:	7b43      	ldrb	r3, [r0, #13]
 801420e:	015b      	lsls	r3, r3, #5
 8014210:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014214:	7983      	ldrb	r3, [r0, #6]
 8014216:	4431      	add	r1, r6
 8014218:	4313      	orrs	r3, r2
 801421a:	440b      	add	r3, r1
 801421c:	42bb      	cmp	r3, r7
 801421e:	db5d      	blt.n	80142dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014220:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014222:	4299      	cmp	r1, r3
 8014224:	da5a      	bge.n	80142dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014226:	f8d8 0000 	ldr.w	r0, [r8]
 801422a:	6803      	ldr	r3, [r0, #0]
 801422c:	42b7      	cmp	r7, r6
 801422e:	bfc8      	it	gt
 8014230:	1bbf      	subgt	r7, r7, r6
 8014232:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014234:	bfcc      	ite	gt
 8014236:	b2bf      	uxthgt	r7, r7
 8014238:	2700      	movle	r7, #0
 801423a:	4798      	blx	r3
 801423c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801423e:	7b5a      	ldrb	r2, [r3, #13]
 8014240:	00d1      	lsls	r1, r2, #3
 8014242:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8014246:	7a19      	ldrb	r1, [r3, #8]
 8014248:	4329      	orrs	r1, r5
 801424a:	0655      	lsls	r5, r2, #25
 801424c:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 801424e:	bf44      	itt	mi
 8014250:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8014254:	b209      	sxthmi	r1, r1
 8014256:	1945      	adds	r5, r0, r5
 8014258:	1a6d      	subs	r5, r5, r1
 801425a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801425c:	b2ad      	uxth	r5, r5
 801425e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8014262:	fa0f fa85 	sxth.w	sl, r5
 8014266:	4551      	cmp	r1, sl
 8014268:	dd3c      	ble.n	80142e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801426a:	0112      	lsls	r2, r2, #4
 801426c:	79d8      	ldrb	r0, [r3, #7]
 801426e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8014272:	4302      	orrs	r2, r0
 8014274:	4492      	add	sl, r2
 8014276:	4551      	cmp	r1, sl
 8014278:	dc30      	bgt.n	80142dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801427a:	1b4d      	subs	r5, r1, r5
 801427c:	b22d      	sxth	r5, r5
 801427e:	468a      	mov	sl, r1
 8014280:	9319      	str	r3, [sp, #100]	; 0x64
 8014282:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014284:	f8d8 0000 	ldr.w	r0, [r8]
 8014288:	681a      	ldr	r2, [r3, #0]
 801428a:	6801      	ldr	r1, [r0, #0]
 801428c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 801428e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014290:	9313      	str	r3, [sp, #76]	; 0x4c
 8014292:	9218      	str	r2, [sp, #96]	; 0x60
 8014294:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8014296:	4788      	blx	r1
 8014298:	f898 1006 	ldrb.w	r1, [r8, #6]
 801429c:	910b      	str	r1, [sp, #44]	; 0x2c
 801429e:	f898 100e 	ldrb.w	r1, [r8, #14]
 80142a2:	910a      	str	r1, [sp, #40]	; 0x28
 80142a4:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80142a8:	9109      	str	r1, [sp, #36]	; 0x24
 80142aa:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80142ae:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80142b0:	9305      	str	r3, [sp, #20]
 80142b2:	b2ad      	uxth	r5, r5
 80142b4:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80142b8:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80142bc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80142be:	9304      	str	r3, [sp, #16]
 80142c0:	4437      	add	r7, r6
 80142c2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80142c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80142c6:	9206      	str	r2, [sp, #24]
 80142c8:	b23f      	sxth	r7, r7
 80142ca:	f8cd a004 	str.w	sl, [sp, #4]
 80142ce:	9700      	str	r7, [sp, #0]
 80142d0:	681a      	ldr	r2, [r3, #0]
 80142d2:	9916      	ldr	r1, [sp, #88]	; 0x58
 80142d4:	685b      	ldr	r3, [r3, #4]
 80142d6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80142d8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80142da:	47a8      	blx	r5
 80142dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80142de:	3301      	adds	r3, #1
 80142e0:	930e      	str	r3, [sp, #56]	; 0x38
 80142e2:	e6e1      	b.n	80140a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80142e4:	2500      	movs	r5, #0
 80142e6:	e7cb      	b.n	8014280 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80142e8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80142ea:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80142ec:	3501      	adds	r5, #1
 80142ee:	429d      	cmp	r5, r3
 80142f0:	f6bf af75 	bge.w	80141de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80142f4:	4659      	mov	r1, fp
 80142f6:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80142f8:	f7f3 fe96 	bl	8008028 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80142fc:	4604      	mov	r4, r0
 80142fe:	b110      	cbz	r0, 8014306 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014300:	280a      	cmp	r0, #10
 8014302:	d1f2      	bne.n	80142ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8014304:	e76a      	b.n	80141dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014306:	2400      	movs	r4, #0
 8014308:	e769      	b.n	80141de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801430a:	f1bb 0f00 	cmp.w	fp, #0
 801430e:	f43f af5a 	beq.w	80141c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8014312:	e775      	b.n	8014200 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08014314 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8014314:	b530      	push	{r4, r5, lr}
 8014316:	8ac4      	ldrh	r4, [r0, #22]
 8014318:	8b45      	ldrh	r5, [r0, #26]
 801431a:	8343      	strh	r3, [r0, #26]
 801431c:	442c      	add	r4, r5
 801431e:	1ae4      	subs	r4, r4, r3
 8014320:	82c4      	strh	r4, [r0, #22]
 8014322:	8b83      	ldrh	r3, [r0, #28]
 8014324:	8b04      	ldrh	r4, [r0, #24]
 8014326:	4422      	add	r2, r4
 8014328:	440c      	add	r4, r1
 801432a:	1a59      	subs	r1, r3, r1
 801432c:	83c2      	strh	r2, [r0, #30]
 801432e:	8304      	strh	r4, [r0, #24]
 8014330:	8381      	strh	r1, [r0, #28]
 8014332:	bd30      	pop	{r4, r5, pc}

08014334 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8014334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014338:	4604      	mov	r4, r0
 801433a:	8a47      	ldrh	r7, [r0, #18]
 801433c:	68c0      	ldr	r0, [r0, #12]
 801433e:	6803      	ldr	r3, [r0, #0]
 8014340:	b085      	sub	sp, #20
 8014342:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014344:	4798      	blx	r3
 8014346:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801434a:	7a63      	ldrb	r3, [r4, #9]
 801434c:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8014350:	42b7      	cmp	r7, r6
 8014352:	f103 33ff 	add.w	r3, r3, #4294967295
 8014356:	bfac      	ite	ge
 8014358:	f04f 0900 	movge.w	r9, #0
 801435c:	f04f 0901 	movlt.w	r9, #1
 8014360:	2b05      	cmp	r3, #5
 8014362:	d804      	bhi.n	801436e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8014364:	e8df f003 	tbb	[pc, r3]
 8014368:	470e0854 	.word	0x470e0854
 801436c:	4c4c      	.short	0x4c4c
 801436e:	2500      	movs	r5, #0
 8014370:	46a9      	mov	r9, r5
 8014372:	462e      	mov	r6, r5
 8014374:	462f      	mov	r7, r5
 8014376:	e00d      	b.n	8014394 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014378:	42b7      	cmp	r7, r6
 801437a:	bfb4      	ite	lt
 801437c:	2600      	movlt	r6, #0
 801437e:	2601      	movge	r6, #1
 8014380:	2500      	movs	r5, #0
 8014382:	e7f7      	b.n	8014374 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8014384:	42b7      	cmp	r7, r6
 8014386:	464d      	mov	r5, r9
 8014388:	f04f 0900 	mov.w	r9, #0
 801438c:	bfb4      	ite	lt
 801438e:	2600      	movlt	r6, #0
 8014390:	2601      	movge	r6, #1
 8014392:	464f      	mov	r7, r9
 8014394:	f04f 0800 	mov.w	r8, #0
 8014398:	f8a4 8016 	strh.w	r8, [r4, #22]
 801439c:	f8a4 8018 	strh.w	r8, [r4, #24]
 80143a0:	f8cd 8004 	str.w	r8, [sp, #4]
 80143a4:	2300      	movs	r3, #0
 80143a6:	9303      	str	r3, [sp, #12]
 80143a8:	8823      	ldrh	r3, [r4, #0]
 80143aa:	2b20      	cmp	r3, #32
 80143ac:	d034      	beq.n	8014418 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80143ae:	f242 010b 	movw	r1, #8203	; 0x200b
 80143b2:	1a5a      	subs	r2, r3, r1
 80143b4:	f1d2 0a00 	rsbs	sl, r2, #0
 80143b8:	eb4a 0a02 	adc.w	sl, sl, r2
 80143bc:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80143c0:	4293      	cmp	r3, r2
 80143c2:	d009      	beq.n	80143d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80143c4:	428b      	cmp	r3, r1
 80143c6:	9a01      	ldr	r2, [sp, #4]
 80143c8:	bf18      	it	ne
 80143ca:	461a      	movne	r2, r3
 80143cc:	9201      	str	r2, [sp, #4]
 80143ce:	bf0c      	ite	eq
 80143d0:	f04f 0a01 	moveq.w	sl, #1
 80143d4:	f04f 0a00 	movne.w	sl, #0
 80143d8:	ab03      	add	r3, sp, #12
 80143da:	68e2      	ldr	r2, [r4, #12]
 80143dc:	7a21      	ldrb	r1, [r4, #8]
 80143de:	6860      	ldr	r0, [r4, #4]
 80143e0:	f002 ff4a 	bl	8017278 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80143e4:	8020      	strh	r0, [r4, #0]
 80143e6:	b9d8      	cbnz	r0, 8014420 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80143e8:	8ba2      	ldrh	r2, [r4, #28]
 80143ea:	2300      	movs	r3, #0
 80143ec:	4611      	mov	r1, r2
 80143ee:	4620      	mov	r0, r4
 80143f0:	f7ff ff90 	bl	8014314 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80143f4:	e06e      	b.n	80144d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80143f6:	2500      	movs	r5, #0
 80143f8:	46a9      	mov	r9, r5
 80143fa:	462e      	mov	r6, r5
 80143fc:	2701      	movs	r7, #1
 80143fe:	e7c9      	b.n	8014394 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014400:	42b7      	cmp	r7, r6
 8014402:	f04f 0500 	mov.w	r5, #0
 8014406:	bfb4      	ite	lt
 8014408:	2700      	movlt	r7, #0
 801440a:	2701      	movge	r7, #1
 801440c:	462e      	mov	r6, r5
 801440e:	e7c1      	b.n	8014394 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014410:	2500      	movs	r5, #0
 8014412:	46a9      	mov	r9, r5
 8014414:	2601      	movs	r6, #1
 8014416:	e7ad      	b.n	8014374 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8014418:	9301      	str	r3, [sp, #4]
 801441a:	f04f 0a01 	mov.w	sl, #1
 801441e:	e7db      	b.n	80143d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8014420:	8b63      	ldrh	r3, [r4, #26]
 8014422:	280a      	cmp	r0, #10
 8014424:	f103 0301 	add.w	r3, r3, #1
 8014428:	8363      	strh	r3, [r4, #26]
 801442a:	d0dd      	beq.n	80143e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 801442c:	9a03      	ldr	r2, [sp, #12]
 801442e:	bb62      	cbnz	r2, 801448a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8014430:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014434:	4298      	cmp	r0, r3
 8014436:	d003      	beq.n	8014440 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8014438:	f242 030b 	movw	r3, #8203	; 0x200b
 801443c:	4298      	cmp	r0, r3
 801443e:	d1b1      	bne.n	80143a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014440:	8823      	ldrh	r3, [r4, #0]
 8014442:	8ba1      	ldrh	r1, [r4, #28]
 8014444:	2b20      	cmp	r3, #32
 8014446:	d003      	beq.n	8014450 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8014448:	f242 000b 	movw	r0, #8203	; 0x200b
 801444c:	4283      	cmp	r3, r0
 801444e:	d131      	bne.n	80144b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8014450:	f1ba 0f00 	cmp.w	sl, #0
 8014454:	bf0a      	itet	eq
 8014456:	4688      	moveq	r8, r1
 8014458:	4650      	movne	r0, sl
 801445a:	2001      	moveq	r0, #1
 801445c:	440a      	add	r2, r1
 801445e:	8b23      	ldrh	r3, [r4, #24]
 8014460:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8014464:	b292      	uxth	r2, r2
 8014466:	83a2      	strh	r2, [r4, #28]
 8014468:	4413      	add	r3, r2
 801446a:	f1b9 0f00 	cmp.w	r9, #0
 801446e:	d102      	bne.n	8014476 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8014470:	2d00      	cmp	r5, #0
 8014472:	d042      	beq.n	80144fa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8014474:	b300      	cbz	r0, 80144b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8014476:	8c21      	ldrh	r1, [r4, #32]
 8014478:	4419      	add	r1, r3
 801447a:	458c      	cmp	ip, r1
 801447c:	da37      	bge.n	80144ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801447e:	8ae1      	ldrh	r1, [r4, #22]
 8014480:	2900      	cmp	r1, #0
 8014482:	d034      	beq.n	80144ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8014484:	4563      	cmp	r3, ip
 8014486:	dd8d      	ble.n	80143a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014488:	e01d      	b.n	80144c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 801448a:	8893      	ldrh	r3, [r2, #4]
 801448c:	8023      	strh	r3, [r4, #0]
 801448e:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8014492:	9901      	ldr	r1, [sp, #4]
 8014494:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8014498:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 801449c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80144a0:	ea4b 0b00 	orr.w	fp, fp, r0
 80144a4:	68e0      	ldr	r0, [r4, #12]
 80144a6:	6803      	ldr	r3, [r0, #0]
 80144a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80144aa:	4798      	blx	r3
 80144ac:	eb0b 0200 	add.w	r2, fp, r0
 80144b0:	b292      	uxth	r2, r2
 80144b2:	e7c5      	b.n	8014440 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80144b4:	2000      	movs	r0, #0
 80144b6:	e7d1      	b.n	801445c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80144b8:	4563      	cmp	r3, ip
 80144ba:	f77f af73 	ble.w	80143a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80144be:	8ae3      	ldrh	r3, [r4, #22]
 80144c0:	2b00      	cmp	r3, #0
 80144c2:	f43f af6f 	beq.w	80143a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80144c6:	2301      	movs	r3, #1
 80144c8:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80144cc:	8c22      	ldrh	r2, [r4, #32]
 80144ce:	8be3      	ldrh	r3, [r4, #30]
 80144d0:	4413      	add	r3, r2
 80144d2:	83e3      	strh	r3, [r4, #30]
 80144d4:	68e0      	ldr	r0, [r4, #12]
 80144d6:	6803      	ldr	r3, [r0, #0]
 80144d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80144da:	4798      	blx	r3
 80144dc:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80144e0:	4418      	add	r0, r3
 80144e2:	8a63      	ldrh	r3, [r4, #18]
 80144e4:	1a18      	subs	r0, r3, r0
 80144e6:	8260      	strh	r0, [r4, #18]
 80144e8:	b005      	add	sp, #20
 80144ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144ee:	2300      	movs	r3, #0
 80144f0:	4611      	mov	r1, r2
 80144f2:	4620      	mov	r0, r4
 80144f4:	f7ff ff0e 	bl	8014314 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80144f8:	e754      	b.n	80143a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80144fa:	4563      	cmp	r3, ip
 80144fc:	dd14      	ble.n	8014528 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80144fe:	b117      	cbz	r7, 8014506 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8014500:	2301      	movs	r3, #1
 8014502:	460a      	mov	r2, r1
 8014504:	e772      	b.n	80143ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8014506:	2e00      	cmp	r6, #0
 8014508:	f43f af4c 	beq.w	80143a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801450c:	2800      	cmp	r0, #0
 801450e:	f47f af49 	bne.w	80143a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014512:	f1ba 0f00 	cmp.w	sl, #0
 8014516:	d002      	beq.n	801451e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8014518:	2301      	movs	r3, #1
 801451a:	4642      	mov	r2, r8
 801451c:	e767      	b.n	80143ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 801451e:	8ae3      	ldrh	r3, [r4, #22]
 8014520:	2b00      	cmp	r3, #0
 8014522:	f43f af3f 	beq.w	80143a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014526:	e7d5      	b.n	80144d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8014528:	2800      	cmp	r0, #0
 801452a:	f47f af3b 	bne.w	80143a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801452e:	f1ba 0f00 	cmp.w	sl, #0
 8014532:	f43f af37 	beq.w	80143a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014536:	2301      	movs	r3, #1
 8014538:	4642      	mov	r2, r8
 801453a:	e7da      	b.n	80144f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0801453c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801453c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801453e:	4605      	mov	r5, r0
 8014540:	b08f      	sub	sp, #60	; 0x3c
 8014542:	4617      	mov	r7, r2
 8014544:	461c      	mov	r4, r3
 8014546:	460e      	mov	r6, r1
 8014548:	b1d1      	cbz	r1, 8014580 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801454a:	681b      	ldr	r3, [r3, #0]
 801454c:	4620      	mov	r0, r4
 801454e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014550:	4798      	blx	r3
 8014552:	4240      	negs	r0, r0
 8014554:	b200      	sxth	r0, r0
 8014556:	e9cd 4001 	strd	r4, r0, [sp, #4]
 801455a:	9603      	str	r6, [sp, #12]
 801455c:	9700      	str	r7, [sp, #0]
 801455e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014562:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8014566:	4629      	mov	r1, r5
 8014568:	a805      	add	r0, sp, #20
 801456a:	f7ff fcbf 	bl	8013eec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801456e:	2401      	movs	r4, #1
 8014570:	a805      	add	r0, sp, #20
 8014572:	f7ff fedf 	bl	8014334 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014576:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801457a:	b163      	cbz	r3, 8014596 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 801457c:	3401      	adds	r4, #1
 801457e:	e7f7      	b.n	8014570 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014580:	f002 ff48 	bl	8017414 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014584:	2401      	movs	r4, #1
 8014586:	280a      	cmp	r0, #10
 8014588:	4628      	mov	r0, r5
 801458a:	bf08      	it	eq
 801458c:	3401      	addeq	r4, #1
 801458e:	f002 ff41 	bl	8017414 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014592:	2800      	cmp	r0, #0
 8014594:	d1f7      	bne.n	8014586 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8014596:	b2a0      	uxth	r0, r4
 8014598:	b00f      	add	sp, #60	; 0x3c
 801459a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801459c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 801459c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145a0:	b0e3      	sub	sp, #396	; 0x18c
 80145a2:	461c      	mov	r4, r3
 80145a4:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80145a6:	4683      	mov	fp, r0
 80145a8:	4688      	mov	r8, r1
 80145aa:	2b00      	cmp	r3, #0
 80145ac:	f000 8112 	beq.w	80147d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80145b0:	6823      	ldr	r3, [r4, #0]
 80145b2:	2b00      	cmp	r3, #0
 80145b4:	f000 810e 	beq.w	80147d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80145b8:	7ba3      	ldrb	r3, [r4, #14]
 80145ba:	2b00      	cmp	r3, #0
 80145bc:	f000 810a 	beq.w	80147d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80145c0:	6810      	ldr	r0, [r2, #0]
 80145c2:	6851      	ldr	r1, [r2, #4]
 80145c4:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80145c8:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80145cc:	ad0a      	add	r5, sp, #40	; 0x28
 80145ce:	462b      	mov	r3, r5
 80145d0:	c303      	stmia	r3!, {r0, r1}
 80145d2:	2100      	movs	r1, #0
 80145d4:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80145d8:	910c      	str	r1, [sp, #48]	; 0x30
 80145da:	79a2      	ldrb	r2, [r4, #6]
 80145dc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80145e0:	a90c      	add	r1, sp, #48	; 0x30
 80145e2:	4628      	mov	r0, r5
 80145e4:	f7ff fd01 	bl	8013fea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80145e8:	a90c      	add	r1, sp, #48	; 0x30
 80145ea:	4608      	mov	r0, r1
 80145ec:	79a2      	ldrb	r2, [r4, #6]
 80145ee:	f7ff fcfc 	bl	8013fea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80145f2:	a817      	add	r0, sp, #92	; 0x5c
 80145f4:	f002 fae2 	bl	8016bbc <_ZN8touchgfx12TextProviderC1Ev>
 80145f8:	6820      	ldr	r0, [r4, #0]
 80145fa:	6803      	ldr	r3, [r0, #0]
 80145fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80145fe:	4798      	blx	r3
 8014600:	4606      	mov	r6, r0
 8014602:	6820      	ldr	r0, [r4, #0]
 8014604:	6803      	ldr	r3, [r0, #0]
 8014606:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014608:	4798      	blx	r3
 801460a:	4633      	mov	r3, r6
 801460c:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801460e:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014610:	9000      	str	r0, [sp, #0]
 8014612:	a817      	add	r0, sp, #92	; 0x5c
 8014614:	f002 fb2d 	bl	8016c72 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014618:	6820      	ldr	r0, [r4, #0]
 801461a:	f894 a004 	ldrb.w	sl, [r4, #4]
 801461e:	6803      	ldr	r3, [r0, #0]
 8014620:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014622:	4798      	blx	r3
 8014624:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014628:	6823      	ldr	r3, [r4, #0]
 801462a:	4607      	mov	r7, r0
 801462c:	4406      	add	r6, r0
 801462e:	a830      	add	r0, sp, #192	; 0xc0
 8014630:	f893 9009 	ldrb.w	r9, [r3, #9]
 8014634:	f002 fac2 	bl	8016bbc <_ZN8touchgfx12TextProviderC1Ev>
 8014638:	7c23      	ldrb	r3, [r4, #16]
 801463a:	b17b      	cbz	r3, 801465c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 801463c:	6820      	ldr	r0, [r4, #0]
 801463e:	6803      	ldr	r3, [r0, #0]
 8014640:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014642:	4798      	blx	r3
 8014644:	9009      	str	r0, [sp, #36]	; 0x24
 8014646:	6820      	ldr	r0, [r4, #0]
 8014648:	6802      	ldr	r2, [r0, #0]
 801464a:	6d12      	ldr	r2, [r2, #80]	; 0x50
 801464c:	4790      	blx	r2
 801464e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014650:	9000      	str	r0, [sp, #0]
 8014652:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014654:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014656:	a830      	add	r0, sp, #192	; 0xc0
 8014658:	f002 fb0b 	bl	8016c72 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801465c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014660:	7be2      	ldrb	r2, [r4, #15]
 8014662:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014666:	1a8a      	subs	r2, r1, r2
 8014668:	7c21      	ldrb	r1, [r4, #16]
 801466a:	9103      	str	r1, [sp, #12]
 801466c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014670:	9102      	str	r1, [sp, #8]
 8014672:	6821      	ldr	r1, [r4, #0]
 8014674:	9101      	str	r1, [sp, #4]
 8014676:	7961      	ldrb	r1, [r4, #5]
 8014678:	9100      	str	r1, [sp, #0]
 801467a:	b292      	uxth	r2, r2
 801467c:	a930      	add	r1, sp, #192	; 0xc0
 801467e:	a80e      	add	r0, sp, #56	; 0x38
 8014680:	f7ff fc34 	bl	8013eec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014684:	2e00      	cmp	r6, #0
 8014686:	dc5b      	bgt.n	8014740 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014688:	af17      	add	r7, sp, #92	; 0x5c
 801468a:	f04f 0900 	mov.w	r9, #0
 801468e:	7c23      	ldrb	r3, [r4, #16]
 8014690:	2b00      	cmp	r3, #0
 8014692:	f000 80b1 	beq.w	80147f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8014696:	a80e      	add	r0, sp, #56	; 0x38
 8014698:	f7ff fe4c 	bl	8014334 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801469c:	f1ba 0f00 	cmp.w	sl, #0
 80146a0:	f000 80a5 	beq.w	80147ee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80146a4:	7c23      	ldrb	r3, [r4, #16]
 80146a6:	9309      	str	r3, [sp, #36]	; 0x24
 80146a8:	2264      	movs	r2, #100	; 0x64
 80146aa:	4639      	mov	r1, r7
 80146ac:	a849      	add	r0, sp, #292	; 0x124
 80146ae:	f012 f833 	bl	8026718 <memcpy>
 80146b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80146b4:	2b00      	cmp	r3, #0
 80146b6:	f000 80a7 	beq.w	8014808 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80146ba:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80146be:	7922      	ldrb	r2, [r4, #4]
 80146c0:	2a01      	cmp	r2, #1
 80146c2:	f040 808a 	bne.w	80147da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80146c6:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80146ca:	1ac0      	subs	r0, r0, r3
 80146cc:	2302      	movs	r3, #2
 80146ce:	fb90 f0f3 	sdiv	r0, r0, r3
 80146d2:	b200      	sxth	r0, r0
 80146d4:	7c23      	ldrb	r3, [r4, #16]
 80146d6:	2b00      	cmp	r3, #0
 80146d8:	f000 808b 	beq.w	80147f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80146dc:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80146e0:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80146e4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80146e8:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80146ec:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80146f0:	4410      	add	r0, r2
 80146f2:	b200      	sxth	r0, r0
 80146f4:	9000      	str	r0, [sp, #0]
 80146f6:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80146fa:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80146fe:	4642      	mov	r2, r8
 8014700:	2100      	movs	r1, #0
 8014702:	4658      	mov	r0, fp
 8014704:	f7ff fca2 	bl	801404c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014708:	2800      	cmp	r0, #0
 801470a:	d163      	bne.n	80147d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801470c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014710:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8014714:	b2b2      	uxth	r2, r6
 8014716:	4413      	add	r3, r2
 8014718:	1a8a      	subs	r2, r1, r2
 801471a:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 801471e:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8014722:	b21b      	sxth	r3, r3
 8014724:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014728:	2a00      	cmp	r2, #0
 801472a:	d153      	bne.n	80147d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801472c:	6822      	ldr	r2, [r4, #0]
 801472e:	8869      	ldrh	r1, [r5, #2]
 8014730:	7a12      	ldrb	r2, [r2, #8]
 8014732:	1a9b      	subs	r3, r3, r2
 8014734:	88ea      	ldrh	r2, [r5, #6]
 8014736:	440a      	add	r2, r1
 8014738:	b212      	sxth	r2, r2
 801473a:	4293      	cmp	r3, r2
 801473c:	dda7      	ble.n	801468e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 801473e:	e049      	b.n	80147d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014740:	7c23      	ldrb	r3, [r4, #16]
 8014742:	444f      	add	r7, r9
 8014744:	b1c3      	cbz	r3, 8014778 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8014746:	f64f 79ff 	movw	r9, #65535	; 0xffff
 801474a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801474e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014752:	443b      	add	r3, r7
 8014754:	4293      	cmp	r3, r2
 8014756:	da97      	bge.n	8014688 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014758:	a80e      	add	r0, sp, #56	; 0x38
 801475a:	f7ff fdeb 	bl	8014334 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801475e:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8014762:	3b01      	subs	r3, #1
 8014764:	b29b      	uxth	r3, r3
 8014766:	454b      	cmp	r3, r9
 8014768:	9309      	str	r3, [sp, #36]	; 0x24
 801476a:	d021      	beq.n	80147b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 801476c:	7961      	ldrb	r1, [r4, #5]
 801476e:	a817      	add	r0, sp, #92	; 0x5c
 8014770:	f7f3 fc5a 	bl	8008028 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014774:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014776:	e7f4      	b.n	8014762 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014778:	fa1f f986 	uxth.w	r9, r6
 801477c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014780:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014784:	443b      	add	r3, r7
 8014786:	4293      	cmp	r3, r2
 8014788:	f6bf af7e 	bge.w	8014688 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801478c:	a817      	add	r0, sp, #92	; 0x5c
 801478e:	f002 fe41 	bl	8017414 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014792:	b1f8      	cbz	r0, 80147d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014794:	280a      	cmp	r0, #10
 8014796:	d1f1      	bne.n	801477c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014798:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801479c:	444b      	add	r3, r9
 801479e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80147a2:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80147a6:	eba3 0309 	sub.w	r3, r3, r9
 80147aa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80147ae:	e7e5      	b.n	801477c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80147b0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80147b4:	b2b3      	uxth	r3, r6
 80147b6:	441a      	add	r2, r3
 80147b8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80147bc:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80147c0:	1ad3      	subs	r3, r2, r3
 80147c2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80147c6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80147ca:	b11b      	cbz	r3, 80147d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80147cc:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80147d0:	2b00      	cmp	r3, #0
 80147d2:	d0ba      	beq.n	801474a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80147d4:	b063      	add	sp, #396	; 0x18c
 80147d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147da:	2a02      	cmp	r2, #2
 80147dc:	d105      	bne.n	80147ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80147de:	7be2      	ldrb	r2, [r4, #15]
 80147e0:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80147e4:	1a80      	subs	r0, r0, r2
 80147e6:	1ac0      	subs	r0, r0, r3
 80147e8:	e773      	b.n	80146d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80147ea:	2000      	movs	r0, #0
 80147ec:	e772      	b.n	80146d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80147ee:	7be0      	ldrb	r0, [r4, #15]
 80147f0:	e770      	b.n	80146d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80147f2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80147f6:	e773      	b.n	80146e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80147f8:	f1ba 0f00 	cmp.w	sl, #0
 80147fc:	d0f7      	beq.n	80147ee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80147fe:	2264      	movs	r2, #100	; 0x64
 8014800:	4639      	mov	r1, r7
 8014802:	a849      	add	r0, sp, #292	; 0x124
 8014804:	f011 ff88 	bl	8026718 <memcpy>
 8014808:	2300      	movs	r3, #0
 801480a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801480e:	6821      	ldr	r1, [r4, #0]
 8014810:	a849      	add	r0, sp, #292	; 0x124
 8014812:	f7ff fbae 	bl	8013f72 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014816:	b203      	sxth	r3, r0
 8014818:	e751      	b.n	80146be <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0801481a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801481a:	2b03      	cmp	r3, #3
 801481c:	d818      	bhi.n	8014850 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 801481e:	e8df f003 	tbb	[pc, r3]
 8014822:	0602      	.short	0x0602
 8014824:	130d      	.short	0x130d
 8014826:	f9b0 2000 	ldrsh.w	r2, [r0]
 801482a:	1850      	adds	r0, r2, r1
 801482c:	4770      	bx	lr
 801482e:	8803      	ldrh	r3, [r0, #0]
 8014830:	8880      	ldrh	r0, [r0, #4]
 8014832:	4418      	add	r0, r3
 8014834:	b200      	sxth	r0, r0
 8014836:	1a80      	subs	r0, r0, r2
 8014838:	3801      	subs	r0, #1
 801483a:	4770      	bx	lr
 801483c:	8803      	ldrh	r3, [r0, #0]
 801483e:	8880      	ldrh	r0, [r0, #4]
 8014840:	4418      	add	r0, r3
 8014842:	b200      	sxth	r0, r0
 8014844:	1a40      	subs	r0, r0, r1
 8014846:	e7f7      	b.n	8014838 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014848:	f9b0 0000 	ldrsh.w	r0, [r0]
 801484c:	4410      	add	r0, r2
 801484e:	4770      	bx	lr
 8014850:	2000      	movs	r0, #0
 8014852:	4770      	bx	lr

08014854 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8014854:	2b03      	cmp	r3, #3
 8014856:	d817      	bhi.n	8014888 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014858:	e8df f003 	tbb	[pc, r3]
 801485c:	10090602 	.word	0x10090602
 8014860:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014864:	1850      	adds	r0, r2, r1
 8014866:	4770      	bx	lr
 8014868:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801486c:	e7fa      	b.n	8014864 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 801486e:	8843      	ldrh	r3, [r0, #2]
 8014870:	88c0      	ldrh	r0, [r0, #6]
 8014872:	4418      	add	r0, r3
 8014874:	b200      	sxth	r0, r0
 8014876:	1a80      	subs	r0, r0, r2
 8014878:	3801      	subs	r0, #1
 801487a:	4770      	bx	lr
 801487c:	8843      	ldrh	r3, [r0, #2]
 801487e:	88c0      	ldrh	r0, [r0, #6]
 8014880:	4418      	add	r0, r3
 8014882:	b200      	sxth	r0, r0
 8014884:	1a40      	subs	r0, r0, r1
 8014886:	e7f7      	b.n	8014878 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014888:	2000      	movs	r0, #0
 801488a:	4770      	bx	lr

0801488c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801488c:	4b01      	ldr	r3, [pc, #4]	; (8014894 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801488e:	2200      	movs	r2, #0
 8014890:	601a      	str	r2, [r3, #0]
 8014892:	4770      	bx	lr
 8014894:	2000ef2c 	.word	0x2000ef2c

08014898 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014898:	4603      	mov	r3, r0
 801489a:	b1c8      	cbz	r0, 80148d0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801489c:	0c02      	lsrs	r2, r0, #16
 801489e:	0412      	lsls	r2, r2, #16
 80148a0:	b9a2      	cbnz	r2, 80148cc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80148a2:	0403      	lsls	r3, r0, #16
 80148a4:	2010      	movs	r0, #16
 80148a6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80148aa:	bf04      	itt	eq
 80148ac:	021b      	lsleq	r3, r3, #8
 80148ae:	3008      	addeq	r0, #8
 80148b0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80148b4:	bf04      	itt	eq
 80148b6:	011b      	lsleq	r3, r3, #4
 80148b8:	3004      	addeq	r0, #4
 80148ba:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80148be:	bf04      	itt	eq
 80148c0:	009b      	lsleq	r3, r3, #2
 80148c2:	3002      	addeq	r0, #2
 80148c4:	2b00      	cmp	r3, #0
 80148c6:	db04      	blt.n	80148d2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80148c8:	3001      	adds	r0, #1
 80148ca:	4770      	bx	lr
 80148cc:	2000      	movs	r0, #0
 80148ce:	e7ea      	b.n	80148a6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80148d0:	2020      	movs	r0, #32
 80148d2:	4770      	bx	lr

080148d4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80148d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148d8:	b087      	sub	sp, #28
 80148da:	460d      	mov	r5, r1
 80148dc:	4616      	mov	r6, r2
 80148de:	4698      	mov	r8, r3
 80148e0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80148e4:	4601      	mov	r1, r0
 80148e6:	b120      	cbz	r0, 80148f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80148e8:	b11a      	cbz	r2, 80148f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80148ea:	2d1f      	cmp	r5, #31
 80148ec:	d801      	bhi.n	80148f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80148ee:	2b1f      	cmp	r3, #31
 80148f0:	d904      	bls.n	80148fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80148f2:	2000      	movs	r0, #0
 80148f4:	6038      	str	r0, [r7, #0]
 80148f6:	b007      	add	sp, #28
 80148f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80148fc:	b97d      	cbnz	r5, 801491e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80148fe:	b143      	cbz	r3, 8014912 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014900:	4602      	mov	r2, r0
 8014902:	e9cd 4700 	strd	r4, r7, [sp]
 8014906:	462b      	mov	r3, r5
 8014908:	4641      	mov	r1, r8
 801490a:	4630      	mov	r0, r6
 801490c:	f7ff ffe2 	bl	80148d4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014910:	e7f1      	b.n	80148f6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014912:	f04f 33ff 	mov.w	r3, #4294967295
 8014916:	603b      	str	r3, [r7, #0]
 8014918:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801491c:	e7eb      	b.n	80148f6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801491e:	fa32 fa05 	lsrs.w	sl, r2, r5
 8014922:	d106      	bne.n	8014932 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8014924:	4346      	muls	r6, r0
 8014926:	fbb6 f0f4 	udiv	r0, r6, r4
 801492a:	fb04 6610 	mls	r6, r4, r0, r6
 801492e:	603e      	str	r6, [r7, #0]
 8014930:	e7e1      	b.n	80148f6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014932:	2201      	movs	r2, #1
 8014934:	40aa      	lsls	r2, r5
 8014936:	3a01      	subs	r2, #1
 8014938:	4016      	ands	r6, r2
 801493a:	fa00 fb05 	lsl.w	fp, r0, r5
 801493e:	4630      	mov	r0, r6
 8014940:	fbbb f9f4 	udiv	r9, fp, r4
 8014944:	fb0a f309 	mul.w	r3, sl, r9
 8014948:	9303      	str	r3, [sp, #12]
 801494a:	f7ff ffa5 	bl	8014898 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801494e:	462b      	mov	r3, r5
 8014950:	460a      	mov	r2, r1
 8014952:	e9cd 4700 	strd	r4, r7, [sp]
 8014956:	4601      	mov	r1, r0
 8014958:	4630      	mov	r0, r6
 801495a:	f7ff ffbb 	bl	80148d4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801495e:	fb04 b919 	mls	r9, r4, r9, fp
 8014962:	4606      	mov	r6, r0
 8014964:	4648      	mov	r0, r9
 8014966:	eb05 0108 	add.w	r1, r5, r8
 801496a:	f7ff ff95 	bl	8014898 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801496e:	ab05      	add	r3, sp, #20
 8014970:	e9cd 4300 	strd	r4, r3, [sp]
 8014974:	464a      	mov	r2, r9
 8014976:	4603      	mov	r3, r0
 8014978:	4650      	mov	r0, sl
 801497a:	f7ff ffab 	bl	80148d4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801497e:	6839      	ldr	r1, [r7, #0]
 8014980:	9a05      	ldr	r2, [sp, #20]
 8014982:	9b03      	ldr	r3, [sp, #12]
 8014984:	4411      	add	r1, r2
 8014986:	fbb1 f2f4 	udiv	r2, r1, r4
 801498a:	18d3      	adds	r3, r2, r3
 801498c:	441e      	add	r6, r3
 801498e:	fb04 1412 	mls	r4, r4, r2, r1
 8014992:	4430      	add	r0, r6
 8014994:	603c      	str	r4, [r7, #0]
 8014996:	e7ae      	b.n	80148f6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08014998 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014998:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801499c:	b085      	sub	sp, #20
 801499e:	f1b0 0900 	subs.w	r9, r0, #0
 80149a2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80149a4:	461d      	mov	r5, r3
 80149a6:	bfbf      	itttt	lt
 80149a8:	6823      	ldrlt	r3, [r4, #0]
 80149aa:	425b      	neglt	r3, r3
 80149ac:	f1c9 0900 	rsblt	r9, r9, #0
 80149b0:	6023      	strlt	r3, [r4, #0]
 80149b2:	bfb4      	ite	lt
 80149b4:	f04f 36ff 	movlt.w	r6, #4294967295
 80149b8:	2601      	movge	r6, #1
 80149ba:	2a00      	cmp	r2, #0
 80149bc:	4617      	mov	r7, r2
 80149be:	da04      	bge.n	80149ca <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80149c0:	6823      	ldr	r3, [r4, #0]
 80149c2:	425b      	negs	r3, r3
 80149c4:	4257      	negs	r7, r2
 80149c6:	4276      	negs	r6, r6
 80149c8:	6023      	str	r3, [r4, #0]
 80149ca:	2d00      	cmp	r5, #0
 80149cc:	4638      	mov	r0, r7
 80149ce:	bfba      	itte	lt
 80149d0:	426d      	neglt	r5, r5
 80149d2:	f04f 38ff 	movlt.w	r8, #4294967295
 80149d6:	f04f 0801 	movge.w	r8, #1
 80149da:	f7ff ff5d 	bl	8014898 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80149de:	ab03      	add	r3, sp, #12
 80149e0:	e9cd 5300 	strd	r5, r3, [sp]
 80149e4:	463a      	mov	r2, r7
 80149e6:	4603      	mov	r3, r0
 80149e8:	4648      	mov	r0, r9
 80149ea:	f7ff ff73 	bl	80148d4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80149ee:	6823      	ldr	r3, [r4, #0]
 80149f0:	9a03      	ldr	r2, [sp, #12]
 80149f2:	4546      	cmp	r6, r8
 80149f4:	441a      	add	r2, r3
 80149f6:	fb92 f3f5 	sdiv	r3, r2, r5
 80149fa:	4418      	add	r0, r3
 80149fc:	bf18      	it	ne
 80149fe:	4240      	negne	r0, r0
 8014a00:	fb05 2313 	mls	r3, r5, r3, r2
 8014a04:	1c72      	adds	r2, r6, #1
 8014a06:	6023      	str	r3, [r4, #0]
 8014a08:	d105      	bne.n	8014a16 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014a0a:	2b00      	cmp	r3, #0
 8014a0c:	f1c3 0200 	rsb	r2, r3, #0
 8014a10:	db0b      	blt.n	8014a2a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8014a12:	6022      	str	r2, [r4, #0]
 8014a14:	e006      	b.n	8014a24 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014a16:	2e01      	cmp	r6, #1
 8014a18:	d104      	bne.n	8014a24 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014a1a:	2b00      	cmp	r3, #0
 8014a1c:	da02      	bge.n	8014a24 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014a1e:	442b      	add	r3, r5
 8014a20:	3801      	subs	r0, #1
 8014a22:	6023      	str	r3, [r4, #0]
 8014a24:	b005      	add	sp, #20
 8014a26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014a2a:	3801      	subs	r0, #1
 8014a2c:	1b52      	subs	r2, r2, r5
 8014a2e:	e7f0      	b.n	8014a12 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014a30 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014a30:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8014a34:	4c1c      	ldr	r4, [pc, #112]	; (8014aa8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8014a36:	6807      	ldr	r7, [r0, #0]
 8014a38:	69a3      	ldr	r3, [r4, #24]
 8014a3a:	4605      	mov	r5, r0
 8014a3c:	b92b      	cbnz	r3, 8014a4a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014a3e:	6840      	ldr	r0, [r0, #4]
 8014a40:	e9c5 7000 	strd	r7, r0, [r5]
 8014a44:	b004      	add	sp, #16
 8014a46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014a4a:	68a2      	ldr	r2, [r4, #8]
 8014a4c:	6820      	ldr	r0, [r4, #0]
 8014a4e:	ae04      	add	r6, sp, #16
 8014a50:	f04f 0802 	mov.w	r8, #2
 8014a54:	fb93 f1f8 	sdiv	r1, r3, r8
 8014a58:	440a      	add	r2, r1
 8014a5a:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014a5e:	69e1      	ldr	r1, [r4, #28]
 8014a60:	9600      	str	r6, [sp, #0]
 8014a62:	463a      	mov	r2, r7
 8014a64:	f7ff ff98 	bl	8014998 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014a68:	69a3      	ldr	r3, [r4, #24]
 8014a6a:	686a      	ldr	r2, [r5, #4]
 8014a6c:	6a21      	ldr	r1, [r4, #32]
 8014a6e:	9600      	str	r6, [sp, #0]
 8014a70:	4607      	mov	r7, r0
 8014a72:	6860      	ldr	r0, [r4, #4]
 8014a74:	f7ff ff90 	bl	8014998 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014a78:	6962      	ldr	r2, [r4, #20]
 8014a7a:	69a3      	ldr	r3, [r4, #24]
 8014a7c:	fb93 f8f8 	sdiv	r8, r3, r8
 8014a80:	4442      	add	r2, r8
 8014a82:	9203      	str	r2, [sp, #12]
 8014a84:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8014a86:	682a      	ldr	r2, [r5, #0]
 8014a88:	9600      	str	r6, [sp, #0]
 8014a8a:	4407      	add	r7, r0
 8014a8c:	68e0      	ldr	r0, [r4, #12]
 8014a8e:	f7ff ff83 	bl	8014998 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014a92:	9600      	str	r6, [sp, #0]
 8014a94:	4680      	mov	r8, r0
 8014a96:	69a3      	ldr	r3, [r4, #24]
 8014a98:	686a      	ldr	r2, [r5, #4]
 8014a9a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8014a9c:	6920      	ldr	r0, [r4, #16]
 8014a9e:	f7ff ff7b 	bl	8014998 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014aa2:	4440      	add	r0, r8
 8014aa4:	e7cc      	b.n	8014a40 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8014aa6:	bf00      	nop
 8014aa8:	2000ef30 	.word	0x2000ef30

08014aac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014aac:	4b07      	ldr	r3, [pc, #28]	; (8014acc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014aae:	781b      	ldrb	r3, [r3, #0]
 8014ab0:	2b01      	cmp	r3, #1
 8014ab2:	d109      	bne.n	8014ac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8014ab4:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014ab8:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014abc:	8003      	strh	r3, [r0, #0]
 8014abe:	4b04      	ldr	r3, [pc, #16]	; (8014ad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014ac0:	881b      	ldrh	r3, [r3, #0]
 8014ac2:	3b01      	subs	r3, #1
 8014ac4:	1a9b      	subs	r3, r3, r2
 8014ac6:	800b      	strh	r3, [r1, #0]
 8014ac8:	4770      	bx	lr
 8014aca:	bf00      	nop
 8014acc:	2000ef14 	.word	0x2000ef14
 8014ad0:	2000ef10 	.word	0x2000ef10

08014ad4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8014ad4:	b510      	push	{r4, lr}
 8014ad6:	4b07      	ldr	r3, [pc, #28]	; (8014af4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014ad8:	781b      	ldrb	r3, [r3, #0]
 8014ada:	2b01      	cmp	r3, #1
 8014adc:	d108      	bne.n	8014af0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8014ade:	4b06      	ldr	r3, [pc, #24]	; (8014af8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014ae0:	880c      	ldrh	r4, [r1, #0]
 8014ae2:	881b      	ldrh	r3, [r3, #0]
 8014ae4:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014ae8:	3b01      	subs	r3, #1
 8014aea:	1b1b      	subs	r3, r3, r4
 8014aec:	8003      	strh	r3, [r0, #0]
 8014aee:	800a      	strh	r2, [r1, #0]
 8014af0:	bd10      	pop	{r4, pc}
 8014af2:	bf00      	nop
 8014af4:	2000ef14 	.word	0x2000ef14
 8014af8:	2000ef10 	.word	0x2000ef10

08014afc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014afc:	b510      	push	{r4, lr}
 8014afe:	4b0a      	ldr	r3, [pc, #40]	; (8014b28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014b00:	781b      	ldrb	r3, [r3, #0]
 8014b02:	2b01      	cmp	r3, #1
 8014b04:	d10e      	bne.n	8014b24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8014b06:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014b0a:	8843      	ldrh	r3, [r0, #2]
 8014b0c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014b10:	8044      	strh	r4, [r0, #2]
 8014b12:	18ca      	adds	r2, r1, r3
 8014b14:	4b05      	ldr	r3, [pc, #20]	; (8014b2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8014b16:	881b      	ldrh	r3, [r3, #0]
 8014b18:	1a9b      	subs	r3, r3, r2
 8014b1a:	8003      	strh	r3, [r0, #0]
 8014b1c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014b20:	80c3      	strh	r3, [r0, #6]
 8014b22:	8081      	strh	r1, [r0, #4]
 8014b24:	bd10      	pop	{r4, pc}
 8014b26:	bf00      	nop
 8014b28:	2000ef14 	.word	0x2000ef14
 8014b2c:	2000ef10 	.word	0x2000ef10

08014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014b30:	4b08      	ldr	r3, [pc, #32]	; (8014b54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8014b32:	781b      	ldrb	r3, [r3, #0]
 8014b34:	2b01      	cmp	r3, #1
 8014b36:	d10c      	bne.n	8014b52 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8014b38:	8803      	ldrh	r3, [r0, #0]
 8014b3a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014b3e:	8842      	ldrh	r2, [r0, #2]
 8014b40:	8002      	strh	r2, [r0, #0]
 8014b42:	185a      	adds	r2, r3, r1
 8014b44:	4b04      	ldr	r3, [pc, #16]	; (8014b58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8014b46:	881b      	ldrh	r3, [r3, #0]
 8014b48:	1a9b      	subs	r3, r3, r2
 8014b4a:	8043      	strh	r3, [r0, #2]
 8014b4c:	88c3      	ldrh	r3, [r0, #6]
 8014b4e:	8083      	strh	r3, [r0, #4]
 8014b50:	80c1      	strh	r1, [r0, #6]
 8014b52:	4770      	bx	lr
 8014b54:	2000ef14 	.word	0x2000ef14
 8014b58:	2000ef10 	.word	0x2000ef10

08014b5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014b5c:	b510      	push	{r4, lr}
 8014b5e:	4b07      	ldr	r3, [pc, #28]	; (8014b7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014b60:	781b      	ldrb	r3, [r3, #0]
 8014b62:	2b01      	cmp	r3, #1
 8014b64:	d108      	bne.n	8014b78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8014b66:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014b6a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014b6e:	8003      	strh	r3, [r0, #0]
 8014b70:	8893      	ldrh	r3, [r2, #4]
 8014b72:	3b01      	subs	r3, #1
 8014b74:	1b1b      	subs	r3, r3, r4
 8014b76:	800b      	strh	r3, [r1, #0]
 8014b78:	bd10      	pop	{r4, pc}
 8014b7a:	bf00      	nop
 8014b7c:	2000ef14 	.word	0x2000ef14

08014b80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8014b80:	4b0b      	ldr	r3, [pc, #44]	; (8014bb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8014b82:	781b      	ldrb	r3, [r3, #0]
 8014b84:	2b01      	cmp	r3, #1
 8014b86:	d111      	bne.n	8014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8014b88:	680b      	ldr	r3, [r1, #0]
 8014b8a:	ed90 7a00 	vldr	s14, [r0]
 8014b8e:	6003      	str	r3, [r0, #0]
 8014b90:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8014b94:	eddf 6a07 	vldr	s13, [pc, #28]	; 8014bb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8014b98:	ee07 3a90 	vmov	s15, r3
 8014b9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014ba0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014ba4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014ba8:	edc1 7a00 	vstr	s15, [r1]
 8014bac:	4770      	bx	lr
 8014bae:	bf00      	nop
 8014bb0:	2000ef14 	.word	0x2000ef14
 8014bb4:	38d1b717 	.word	0x38d1b717

08014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014bb8:	b510      	push	{r4, lr}
 8014bba:	4b0a      	ldr	r3, [pc, #40]	; (8014be4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8014bbc:	781b      	ldrb	r3, [r3, #0]
 8014bbe:	2b01      	cmp	r3, #1
 8014bc0:	460a      	mov	r2, r1
 8014bc2:	d10d      	bne.n	8014be0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8014bc4:	8881      	ldrh	r1, [r0, #4]
 8014bc6:	8803      	ldrh	r3, [r0, #0]
 8014bc8:	440b      	add	r3, r1
 8014bca:	4601      	mov	r1, r0
 8014bcc:	3b01      	subs	r3, #1
 8014bce:	f821 3b02 	strh.w	r3, [r1], #2
 8014bd2:	f7ff ffc3 	bl	8014b5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8014bd6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014bda:	88c2      	ldrh	r2, [r0, #6]
 8014bdc:	8082      	strh	r2, [r0, #4]
 8014bde:	80c3      	strh	r3, [r0, #6]
 8014be0:	bd10      	pop	{r4, pc}
 8014be2:	bf00      	nop
 8014be4:	2000ef14 	.word	0x2000ef14

08014be8 <_ZN8touchgfx11Application13requestRedrawEv>:
 8014be8:	4b06      	ldr	r3, [pc, #24]	; (8014c04 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8014bea:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014bee:	4b06      	ldr	r3, [pc, #24]	; (8014c08 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8014bf0:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8014bf4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014bf8:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8014bfc:	2100      	movs	r1, #0
 8014bfe:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8014c02:	4770      	bx	lr
 8014c04:	2000ef10 	.word	0x2000ef10
 8014c08:	2000ef12 	.word	0x2000ef12

08014c0c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8014c0c:	4b03      	ldr	r3, [pc, #12]	; (8014c1c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8014c0e:	6818      	ldr	r0, [r3, #0]
 8014c10:	b110      	cbz	r0, 8014c18 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8014c12:	6803      	ldr	r3, [r0, #0]
 8014c14:	699b      	ldr	r3, [r3, #24]
 8014c16:	4718      	bx	r3
 8014c18:	4770      	bx	lr
 8014c1a:	bf00      	nop
 8014c1c:	2000ef60 	.word	0x2000ef60

08014c20 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8014c20:	4770      	bx	lr
	...

08014c24 <_ZN8touchgfx11Application4drawEv>:
 8014c24:	b507      	push	{r0, r1, r2, lr}
 8014c26:	4b09      	ldr	r3, [pc, #36]	; (8014c4c <_ZN8touchgfx11Application4drawEv+0x28>)
 8014c28:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014c2c:	4b08      	ldr	r3, [pc, #32]	; (8014c50 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8014c2e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014c32:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014c36:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014c3a:	6803      	ldr	r3, [r0, #0]
 8014c3c:	2100      	movs	r1, #0
 8014c3e:	9100      	str	r1, [sp, #0]
 8014c40:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014c42:	4669      	mov	r1, sp
 8014c44:	4798      	blx	r3
 8014c46:	b003      	add	sp, #12
 8014c48:	f85d fb04 	ldr.w	pc, [sp], #4
 8014c4c:	2000ef10 	.word	0x2000ef10
 8014c50:	2000ef12 	.word	0x2000ef12

08014c54 <_ZN8touchgfx11Application10invalidateEv>:
 8014c54:	4b09      	ldr	r3, [pc, #36]	; (8014c7c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8014c56:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014c5a:	4b09      	ldr	r3, [pc, #36]	; (8014c80 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014c5c:	b082      	sub	sp, #8
 8014c5e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014c62:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014c66:	2100      	movs	r1, #0
 8014c68:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014c6c:	9100      	str	r1, [sp, #0]
 8014c6e:	6803      	ldr	r3, [r0, #0]
 8014c70:	aa02      	add	r2, sp, #8
 8014c72:	e912 0006 	ldmdb	r2, {r1, r2}
 8014c76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014c78:	b002      	add	sp, #8
 8014c7a:	4718      	bx	r3
 8014c7c:	2000ef10 	.word	0x2000ef10
 8014c80:	2000ef12 	.word	0x2000ef12

08014c84 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8014c84:	4b03      	ldr	r3, [pc, #12]	; (8014c94 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8014c86:	6818      	ldr	r0, [r3, #0]
 8014c88:	b110      	cbz	r0, 8014c90 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014c8a:	6803      	ldr	r3, [r0, #0]
 8014c8c:	69db      	ldr	r3, [r3, #28]
 8014c8e:	4718      	bx	r3
 8014c90:	4770      	bx	lr
 8014c92:	bf00      	nop
 8014c94:	2000ef60 	.word	0x2000ef60

08014c98 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8014c98:	4b03      	ldr	r3, [pc, #12]	; (8014ca8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8014c9a:	6818      	ldr	r0, [r3, #0]
 8014c9c:	b110      	cbz	r0, 8014ca4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8014c9e:	6803      	ldr	r3, [r0, #0]
 8014ca0:	6a1b      	ldr	r3, [r3, #32]
 8014ca2:	4718      	bx	r3
 8014ca4:	4770      	bx	lr
 8014ca6:	bf00      	nop
 8014ca8:	2000ef60 	.word	0x2000ef60

08014cac <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8014cac:	2300      	movs	r3, #0
 8014cae:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8014cb2:	4770      	bx	lr

08014cb4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014cb4:	4b03      	ldr	r3, [pc, #12]	; (8014cc4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014cb6:	6818      	ldr	r0, [r3, #0]
 8014cb8:	b110      	cbz	r0, 8014cc0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8014cba:	6803      	ldr	r3, [r0, #0]
 8014cbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014cbe:	4718      	bx	r3
 8014cc0:	4770      	bx	lr
 8014cc2:	bf00      	nop
 8014cc4:	2000ef60 	.word	0x2000ef60

08014cc8 <_ZN8touchgfx11ApplicationD1Ev>:
 8014cc8:	4770      	bx	lr

08014cca <_ZN8touchgfx11ApplicationD0Ev>:
 8014cca:	b510      	push	{r4, lr}
 8014ccc:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8014cd0:	4604      	mov	r4, r0
 8014cd2:	f011 fc75 	bl	80265c0 <_ZdlPvj>
 8014cd6:	4620      	mov	r0, r4
 8014cd8:	bd10      	pop	{r4, pc}

08014cda <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014cda:	b510      	push	{r4, lr}
 8014cdc:	f9b1 4000 	ldrsh.w	r4, [r1]
 8014ce0:	888a      	ldrh	r2, [r1, #4]
 8014ce2:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014ce6:	4422      	add	r2, r4
 8014ce8:	b212      	sxth	r2, r2
 8014cea:	4293      	cmp	r3, r2
 8014cec:	da15      	bge.n	8014d1a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014cee:	8882      	ldrh	r2, [r0, #4]
 8014cf0:	4413      	add	r3, r2
 8014cf2:	b21b      	sxth	r3, r3
 8014cf4:	429c      	cmp	r4, r3
 8014cf6:	da10      	bge.n	8014d1a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014cf8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014cfc:	88c9      	ldrh	r1, [r1, #6]
 8014cfe:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014d02:	4419      	add	r1, r3
 8014d04:	b209      	sxth	r1, r1
 8014d06:	428a      	cmp	r2, r1
 8014d08:	da07      	bge.n	8014d1a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014d0a:	88c0      	ldrh	r0, [r0, #6]
 8014d0c:	4410      	add	r0, r2
 8014d0e:	b200      	sxth	r0, r0
 8014d10:	4283      	cmp	r3, r0
 8014d12:	bfac      	ite	ge
 8014d14:	2000      	movge	r0, #0
 8014d16:	2001      	movlt	r0, #1
 8014d18:	bd10      	pop	{r4, pc}
 8014d1a:	2000      	movs	r0, #0
 8014d1c:	e7fc      	b.n	8014d18 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08014d1e <_ZN8touchgfx4Rect10restrictToEss>:
 8014d1e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014d22:	2b00      	cmp	r3, #0
 8014d24:	b510      	push	{r4, lr}
 8014d26:	da04      	bge.n	8014d32 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8014d28:	8884      	ldrh	r4, [r0, #4]
 8014d2a:	4423      	add	r3, r4
 8014d2c:	8083      	strh	r3, [r0, #4]
 8014d2e:	2300      	movs	r3, #0
 8014d30:	8003      	strh	r3, [r0, #0]
 8014d32:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014d36:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014d3a:	1b09      	subs	r1, r1, r4
 8014d3c:	428b      	cmp	r3, r1
 8014d3e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8014d42:	bfc8      	it	gt
 8014d44:	8081      	strhgt	r1, [r0, #4]
 8014d46:	2b00      	cmp	r3, #0
 8014d48:	da04      	bge.n	8014d54 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014d4a:	88c1      	ldrh	r1, [r0, #6]
 8014d4c:	440b      	add	r3, r1
 8014d4e:	80c3      	strh	r3, [r0, #6]
 8014d50:	2300      	movs	r3, #0
 8014d52:	8043      	strh	r3, [r0, #2]
 8014d54:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014d58:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014d5c:	1a52      	subs	r2, r2, r1
 8014d5e:	4293      	cmp	r3, r2
 8014d60:	bfc8      	it	gt
 8014d62:	80c2      	strhgt	r2, [r0, #6]
 8014d64:	bd10      	pop	{r4, pc}
	...

08014d68 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014d68:	b510      	push	{r4, lr}
 8014d6a:	4b10      	ldr	r3, [pc, #64]	; (8014dac <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8014d6c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014d70:	4b0f      	ldr	r3, [pc, #60]	; (8014db0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8014d72:	460c      	mov	r4, r1
 8014d74:	4620      	mov	r0, r4
 8014d76:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014d7a:	f7ff ffd0 	bl	8014d1e <_ZN8touchgfx4Rect10restrictToEss>
 8014d7e:	4b0d      	ldr	r3, [pc, #52]	; (8014db4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8014d80:	6818      	ldr	r0, [r3, #0]
 8014d82:	b190      	cbz	r0, 8014daa <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8014d84:	6803      	ldr	r3, [r0, #0]
 8014d86:	4621      	mov	r1, r4
 8014d88:	689b      	ldr	r3, [r3, #8]
 8014d8a:	4798      	blx	r3
 8014d8c:	4b0a      	ldr	r3, [pc, #40]	; (8014db8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8014d8e:	6818      	ldr	r0, [r3, #0]
 8014d90:	b118      	cbz	r0, 8014d9a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8014d92:	6803      	ldr	r3, [r0, #0]
 8014d94:	4621      	mov	r1, r4
 8014d96:	689b      	ldr	r3, [r3, #8]
 8014d98:	4798      	blx	r3
 8014d9a:	4b08      	ldr	r3, [pc, #32]	; (8014dbc <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8014d9c:	6818      	ldr	r0, [r3, #0]
 8014d9e:	6803      	ldr	r3, [r0, #0]
 8014da0:	4621      	mov	r1, r4
 8014da2:	69db      	ldr	r3, [r3, #28]
 8014da4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014da8:	4718      	bx	r3
 8014daa:	bd10      	pop	{r4, pc}
 8014dac:	2000ef12 	.word	0x2000ef12
 8014db0:	2000ef10 	.word	0x2000ef10
 8014db4:	2000ef60 	.word	0x2000ef60
 8014db8:	2000ef5c 	.word	0x2000ef5c
 8014dbc:	2000ef1c 	.word	0x2000ef1c

08014dc0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8014dc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014dc2:	4606      	mov	r6, r0
 8014dc4:	4608      	mov	r0, r1
 8014dc6:	460f      	mov	r7, r1
 8014dc8:	f7fa fe93 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014dcc:	b9e8      	cbnz	r0, 8014e0a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014dce:	f9b7 5000 	ldrsh.w	r5, [r7]
 8014dd2:	f9b6 4000 	ldrsh.w	r4, [r6]
 8014dd6:	42a5      	cmp	r5, r4
 8014dd8:	db17      	blt.n	8014e0a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014dda:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8014dde:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8014de2:	429a      	cmp	r2, r3
 8014de4:	db11      	blt.n	8014e0a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014de6:	88b9      	ldrh	r1, [r7, #4]
 8014de8:	440d      	add	r5, r1
 8014dea:	88b1      	ldrh	r1, [r6, #4]
 8014dec:	440c      	add	r4, r1
 8014dee:	b22d      	sxth	r5, r5
 8014df0:	b224      	sxth	r4, r4
 8014df2:	42a5      	cmp	r5, r4
 8014df4:	dc09      	bgt.n	8014e0a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014df6:	88f8      	ldrh	r0, [r7, #6]
 8014df8:	4410      	add	r0, r2
 8014dfa:	88f2      	ldrh	r2, [r6, #6]
 8014dfc:	4413      	add	r3, r2
 8014dfe:	b200      	sxth	r0, r0
 8014e00:	b21b      	sxth	r3, r3
 8014e02:	4298      	cmp	r0, r3
 8014e04:	bfcc      	ite	gt
 8014e06:	2000      	movgt	r0, #0
 8014e08:	2001      	movle	r0, #1
 8014e0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014e0c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8014e0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014e0e:	4604      	mov	r4, r0
 8014e10:	4608      	mov	r0, r1
 8014e12:	460d      	mov	r5, r1
 8014e14:	f7fa fe6d 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e18:	b978      	cbnz	r0, 8014e3a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8014e1a:	4620      	mov	r0, r4
 8014e1c:	f7fa fe69 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e20:	f9b5 6000 	ldrsh.w	r6, [r5]
 8014e24:	b150      	cbz	r0, 8014e3c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8014e26:	8026      	strh	r6, [r4, #0]
 8014e28:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014e2c:	8063      	strh	r3, [r4, #2]
 8014e2e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8014e32:	80a3      	strh	r3, [r4, #4]
 8014e34:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8014e38:	80e3      	strh	r3, [r4, #6]
 8014e3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014e3c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014e40:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014e44:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014e48:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014e4c:	88ed      	ldrh	r5, [r5, #6]
 8014e4e:	42b1      	cmp	r1, r6
 8014e50:	460f      	mov	r7, r1
 8014e52:	bfa8      	it	ge
 8014e54:	4637      	movge	r7, r6
 8014e56:	4293      	cmp	r3, r2
 8014e58:	4618      	mov	r0, r3
 8014e5a:	4466      	add	r6, ip
 8014e5c:	bfa8      	it	ge
 8014e5e:	4610      	movge	r0, r2
 8014e60:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014e64:	8027      	strh	r7, [r4, #0]
 8014e66:	442a      	add	r2, r5
 8014e68:	88e5      	ldrh	r5, [r4, #6]
 8014e6a:	8060      	strh	r0, [r4, #2]
 8014e6c:	4461      	add	r1, ip
 8014e6e:	442b      	add	r3, r5
 8014e70:	b236      	sxth	r6, r6
 8014e72:	b209      	sxth	r1, r1
 8014e74:	b212      	sxth	r2, r2
 8014e76:	b21b      	sxth	r3, r3
 8014e78:	428e      	cmp	r6, r1
 8014e7a:	bfac      	ite	ge
 8014e7c:	ebc7 0106 	rsbge	r1, r7, r6
 8014e80:	ebc7 0101 	rsblt	r1, r7, r1
 8014e84:	429a      	cmp	r2, r3
 8014e86:	bfac      	ite	ge
 8014e88:	ebc0 0202 	rsbge	r2, r0, r2
 8014e8c:	ebc0 0203 	rsblt	r2, r0, r3
 8014e90:	80a1      	strh	r1, [r4, #4]
 8014e92:	80e2      	strh	r2, [r4, #6]
 8014e94:	e7d1      	b.n	8014e3a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014e98 <_ZN8touchgfx11Application11getInstanceEv>:
 8014e98:	4b01      	ldr	r3, [pc, #4]	; (8014ea0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014e9a:	6818      	ldr	r0, [r3, #0]
 8014e9c:	4770      	bx	lr
 8014e9e:	bf00      	nop
 8014ea0:	2000ef70 	.word	0x2000ef70

08014ea4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8014ea4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014ea6:	4b10      	ldr	r3, [pc, #64]	; (8014ee8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8014ea8:	781b      	ldrb	r3, [r3, #0]
 8014eaa:	4605      	mov	r5, r0
 8014eac:	b1d3      	cbz	r3, 8014ee4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8014eae:	4b0f      	ldr	r3, [pc, #60]	; (8014eec <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8014eb0:	4f0f      	ldr	r7, [pc, #60]	; (8014ef0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8014eb2:	881c      	ldrh	r4, [r3, #0]
 8014eb4:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8014eb8:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8014ebc:	42a3      	cmp	r3, r4
 8014ebe:	d90e      	bls.n	8014ede <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8014ec0:	683b      	ldr	r3, [r7, #0]
 8014ec2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014ec6:	b10a      	cbz	r2, 8014ecc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8014ec8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014eca:	b900      	cbnz	r0, 8014ece <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8014ecc:	6898      	ldr	r0, [r3, #8]
 8014ece:	6803      	ldr	r3, [r0, #0]
 8014ed0:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8014ed4:	69db      	ldr	r3, [r3, #28]
 8014ed6:	3401      	adds	r4, #1
 8014ed8:	4798      	blx	r3
 8014eda:	b2a4      	uxth	r4, r4
 8014edc:	e7ec      	b.n	8014eb8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8014ede:	2300      	movs	r3, #0
 8014ee0:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8014ee4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014ee6:	bf00      	nop
 8014ee8:	2000ef1a 	.word	0x2000ef1a
 8014eec:	20000060 	.word	0x20000060
 8014ef0:	2000ef1c 	.word	0x2000ef1c

08014ef4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8014ef4:	b510      	push	{r4, lr}
 8014ef6:	2300      	movs	r3, #0
 8014ef8:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8014efc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014f00:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014f04:	4604      	mov	r4, r0
 8014f06:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014f0a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8014f0e:	429a      	cmp	r2, r3
 8014f10:	d90e      	bls.n	8014f30 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8014f12:	18e2      	adds	r2, r4, r3
 8014f14:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8014f18:	b122      	cbz	r2, 8014f24 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014f1a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014f1e:	6803      	ldr	r3, [r0, #0]
 8014f20:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014f22:	4798      	blx	r3
 8014f24:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014f28:	3301      	adds	r3, #1
 8014f2a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8014f2e:	e7ea      	b.n	8014f06 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8014f30:	bd10      	pop	{r4, pc}

08014f32 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8014f32:	b530      	push	{r4, r5, lr}
 8014f34:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8014f38:	2200      	movs	r2, #0
 8014f3a:	b293      	uxth	r3, r2
 8014f3c:	429d      	cmp	r5, r3
 8014f3e:	d90e      	bls.n	8014f5e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014f40:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8014f44:	428b      	cmp	r3, r1
 8014f46:	d10b      	bne.n	8014f60 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014f48:	1884      	adds	r4, r0, r2
 8014f4a:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8014f4e:	b13b      	cbz	r3, 8014f60 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014f50:	3b01      	subs	r3, #1
 8014f52:	b2db      	uxtb	r3, r3
 8014f54:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8014f58:	b90b      	cbnz	r3, 8014f5e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014f5a:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8014f5e:	bd30      	pop	{r4, r5, pc}
 8014f60:	3201      	adds	r2, #1
 8014f62:	e7ea      	b.n	8014f3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08014f64 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8014f64:	2300      	movs	r3, #0
 8014f66:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014f6a:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8014f6e:	30a4      	adds	r0, #164	; 0xa4
 8014f70:	f802 3b01 	strb.w	r3, [r2], #1
 8014f74:	4282      	cmp	r2, r0
 8014f76:	d1fb      	bne.n	8014f70 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8014f78:	4770      	bx	lr
	...

08014f7c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8014f7c:	b570      	push	{r4, r5, r6, lr}
 8014f7e:	4c0b      	ldr	r4, [pc, #44]	; (8014fac <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8014f80:	4605      	mov	r5, r0
 8014f82:	6820      	ldr	r0, [r4, #0]
 8014f84:	460e      	mov	r6, r1
 8014f86:	b110      	cbz	r0, 8014f8e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8014f88:	6803      	ldr	r3, [r0, #0]
 8014f8a:	695b      	ldr	r3, [r3, #20]
 8014f8c:	4798      	blx	r3
 8014f8e:	1d28      	adds	r0, r5, #4
 8014f90:	f7ff ffe8 	bl	8014f64 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014f94:	6026      	str	r6, [r4, #0]
 8014f96:	6833      	ldr	r3, [r6, #0]
 8014f98:	4630      	mov	r0, r6
 8014f9a:	68db      	ldr	r3, [r3, #12]
 8014f9c:	4798      	blx	r3
 8014f9e:	682b      	ldr	r3, [r5, #0]
 8014fa0:	4628      	mov	r0, r5
 8014fa2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014fa4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014fa8:	4718      	bx	r3
 8014faa:	bf00      	nop
 8014fac:	2000ef60 	.word	0x2000ef60

08014fb0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8014fb0:	2300      	movs	r3, #0
 8014fb2:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8014fb6:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8014fba:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014fbc:	461a      	mov	r2, r3
 8014fbe:	461c      	mov	r4, r3
 8014fc0:	461d      	mov	r5, r3
 8014fc2:	459c      	cmp	ip, r3
 8014fc4:	dd1a      	ble.n	8014ffc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8014fc6:	18c6      	adds	r6, r0, r3
 8014fc8:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8014fcc:	b16e      	cbz	r6, 8014fea <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8014fce:	429a      	cmp	r2, r3
 8014fd0:	d008      	beq.n	8014fe4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8014fd2:	fa1f fe82 	uxth.w	lr, r2
 8014fd6:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8014fda:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8014fde:	1887      	adds	r7, r0, r2
 8014fe0:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8014fe4:	3201      	adds	r2, #1
 8014fe6:	3301      	adds	r3, #1
 8014fe8:	e7eb      	b.n	8014fc2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8014fea:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8014fee:	4299      	cmp	r1, r3
 8014ff0:	bfa8      	it	ge
 8014ff2:	3501      	addge	r5, #1
 8014ff4:	429e      	cmp	r6, r3
 8014ff6:	bfc8      	it	gt
 8014ff8:	3401      	addgt	r4, #1
 8014ffa:	e7f4      	b.n	8014fe6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8014ffc:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015000:	1b49      	subs	r1, r1, r5
 8015002:	1b1b      	subs	r3, r3, r4
 8015004:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015008:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 801500c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015010:	4293      	cmp	r3, r2
 8015012:	dd03      	ble.n	801501c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8015014:	3b01      	subs	r3, #1
 8015016:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 801501a:	e7f7      	b.n	801500c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 801501c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015020 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015020:	b570      	push	{r4, r5, r6, lr}
 8015022:	4d16      	ldr	r5, [pc, #88]	; (801507c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8015024:	4604      	mov	r4, r0
 8015026:	6828      	ldr	r0, [r5, #0]
 8015028:	b140      	cbz	r0, 801503c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801502a:	7a03      	ldrb	r3, [r0, #8]
 801502c:	b933      	cbnz	r3, 801503c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801502e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015032:	6803      	ldr	r3, [r0, #0]
 8015034:	689b      	ldr	r3, [r3, #8]
 8015036:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801503a:	4718      	bx	r3
 801503c:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015040:	4e0f      	ldr	r6, [pc, #60]	; (8015080 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8015042:	b973      	cbnz	r3, 8015062 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015044:	b168      	cbz	r0, 8015062 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015046:	7a03      	ldrb	r3, [r0, #8]
 8015048:	b15b      	cbz	r3, 8015062 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801504a:	6830      	ldr	r0, [r6, #0]
 801504c:	b110      	cbz	r0, 8015054 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801504e:	6803      	ldr	r3, [r0, #0]
 8015050:	691b      	ldr	r3, [r3, #16]
 8015052:	4798      	blx	r3
 8015054:	6828      	ldr	r0, [r5, #0]
 8015056:	6803      	ldr	r3, [r0, #0]
 8015058:	68db      	ldr	r3, [r3, #12]
 801505a:	4798      	blx	r3
 801505c:	2301      	movs	r3, #1
 801505e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015062:	3404      	adds	r4, #4
 8015064:	4620      	mov	r0, r4
 8015066:	f7ff ff45 	bl	8014ef4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801506a:	4620      	mov	r0, r4
 801506c:	f7ff ffa0 	bl	8014fb0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015070:	6830      	ldr	r0, [r6, #0]
 8015072:	b110      	cbz	r0, 801507a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8015074:	6803      	ldr	r3, [r0, #0]
 8015076:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015078:	e7dd      	b.n	8015036 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801507a:	bd70      	pop	{r4, r5, r6, pc}
 801507c:	2000ef64 	.word	0x2000ef64
 8015080:	2000ef60 	.word	0x2000ef60

08015084 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8015084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015086:	2300      	movs	r3, #0
 8015088:	4604      	mov	r4, r0
 801508a:	460d      	mov	r5, r1
 801508c:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015090:	4618      	mov	r0, r3
 8015092:	b29a      	uxth	r2, r3
 8015094:	4291      	cmp	r1, r2
 8015096:	d911      	bls.n	80150bc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015098:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 801509c:	18e6      	adds	r6, r4, r3
 801509e:	42af      	cmp	r7, r5
 80150a0:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 80150a4:	d105      	bne.n	80150b2 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 80150a6:	2aff      	cmp	r2, #255	; 0xff
 80150a8:	d002      	beq.n	80150b0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80150aa:	3201      	adds	r2, #1
 80150ac:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 80150b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80150b2:	2a00      	cmp	r2, #0
 80150b4:	bf08      	it	eq
 80150b6:	2001      	moveq	r0, #1
 80150b8:	3301      	adds	r3, #1
 80150ba:	e7ea      	b.n	8015092 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 80150bc:	b120      	cbz	r0, 80150c8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80150be:	2920      	cmp	r1, #32
 80150c0:	d102      	bne.n	80150c8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80150c2:	4620      	mov	r0, r4
 80150c4:	f7ff ff74 	bl	8014fb0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80150c8:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 80150cc:	2b1f      	cmp	r3, #31
 80150ce:	d8ef      	bhi.n	80150b0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80150d0:	18e2      	adds	r2, r4, r3
 80150d2:	2101      	movs	r1, #1
 80150d4:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 80150d8:	185a      	adds	r2, r3, r1
 80150da:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 80150de:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80150e2:	e7e5      	b.n	80150b0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

080150e4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80150e4:	4603      	mov	r3, r0
 80150e6:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80150ea:	2200      	movs	r2, #0
 80150ec:	801a      	strh	r2, [r3, #0]
 80150ee:	805a      	strh	r2, [r3, #2]
 80150f0:	809a      	strh	r2, [r3, #4]
 80150f2:	80da      	strh	r2, [r3, #6]
 80150f4:	3308      	adds	r3, #8
 80150f6:	428b      	cmp	r3, r1
 80150f8:	d1f8      	bne.n	80150ec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80150fa:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80150fe:	4770      	bx	lr

08015100 <_ZN8touchgfx11ApplicationC1Ev>:
 8015100:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015102:	4606      	mov	r6, r0
 8015104:	4b1c      	ldr	r3, [pc, #112]	; (8015178 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8015106:	f846 3b04 	str.w	r3, [r6], #4
 801510a:	4604      	mov	r4, r0
 801510c:	2500      	movs	r5, #0
 801510e:	22a8      	movs	r2, #168	; 0xa8
 8015110:	2100      	movs	r1, #0
 8015112:	4630      	mov	r0, r6
 8015114:	f011 fb0e 	bl	8026734 <memset>
 8015118:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 801511c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015120:	f7ff ffe0 	bl	80150e4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015124:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015128:	f7ff ffdc 	bl	80150e4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801512c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015130:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8015134:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015138:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 801513c:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015140:	490e      	ldr	r1, [pc, #56]	; (801517c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8015142:	480f      	ldr	r0, [pc, #60]	; (8015180 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8015144:	4f0f      	ldr	r7, [pc, #60]	; (8015184 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8015146:	f010 fde9 	bl	8025d1c <CRC_Lock>
 801514a:	4b0f      	ldr	r3, [pc, #60]	; (8015188 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 801514c:	b158      	cbz	r0, 8015166 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801514e:	801d      	strh	r5, [r3, #0]
 8015150:	4a0e      	ldr	r2, [pc, #56]	; (801518c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8015152:	2300      	movs	r3, #0
 8015154:	6013      	str	r3, [r2, #0]
 8015156:	4a0e      	ldr	r2, [pc, #56]	; (8015190 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015158:	603b      	str	r3, [r7, #0]
 801515a:	4630      	mov	r0, r6
 801515c:	6013      	str	r3, [r2, #0]
 801515e:	f7ff ff01 	bl	8014f64 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015162:	4620      	mov	r0, r4
 8015164:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015166:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801516a:	2002      	movs	r0, #2
 801516c:	801a      	strh	r2, [r3, #0]
 801516e:	6038      	str	r0, [r7, #0]
 8015170:	f001 fb4a 	bl	8016808 <_ZN8touchgfx6Screen4drawEv>
 8015174:	e7ec      	b.n	8015150 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8015176:	bf00      	nop
 8015178:	0802a5bc 	.word	0x0802a5bc
 801517c:	b5e8b5cd 	.word	0xb5e8b5cd
 8015180:	f407a5c2 	.word	0xf407a5c2
 8015184:	2000ef60 	.word	0x2000ef60
 8015188:	20000060 	.word	0x20000060
 801518c:	2000ef70 	.word	0x2000ef70
 8015190:	2000ef64 	.word	0x2000ef64

08015194 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8015194:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015198:	3b01      	subs	r3, #1
 801519a:	b29b      	uxth	r3, r3
 801519c:	428b      	cmp	r3, r1
 801519e:	b510      	push	{r4, lr}
 80151a0:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80151a4:	d908      	bls.n	80151b8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80151a6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80151aa:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80151ae:	681a      	ldr	r2, [r3, #0]
 80151b0:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80151b4:	685a      	ldr	r2, [r3, #4]
 80151b6:	6062      	str	r2, [r4, #4]
 80151b8:	bd10      	pop	{r4, pc}
	...

080151bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80151bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151c0:	4b8f      	ldr	r3, [pc, #572]	; (8015400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80151c2:	b08f      	sub	sp, #60	; 0x3c
 80151c4:	ac0a      	add	r4, sp, #40	; 0x28
 80151c6:	e884 0006 	stmia.w	r4, {r1, r2}
 80151ca:	f9b3 2000 	ldrsh.w	r2, [r3]
 80151ce:	4b8d      	ldr	r3, [pc, #564]	; (8015404 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80151d0:	4683      	mov	fp, r0
 80151d2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80151d6:	4620      	mov	r0, r4
 80151d8:	f7ff fda1 	bl	8014d1e <_ZN8touchgfx4Rect10restrictToEss>
 80151dc:	4620      	mov	r0, r4
 80151de:	f7fa fc88 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80151e2:	2800      	cmp	r0, #0
 80151e4:	d16a      	bne.n	80152bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80151e6:	9403      	str	r4, [sp, #12]
 80151e8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80151ec:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80151f0:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80151f4:	35a4      	adds	r5, #164	; 0xa4
 80151f6:	9301      	str	r3, [sp, #4]
 80151f8:	b15c      	cbz	r4, 8015212 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80151fa:	4629      	mov	r1, r5
 80151fc:	9803      	ldr	r0, [sp, #12]
 80151fe:	f7ff fddf 	bl	8014dc0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015202:	3c01      	subs	r4, #1
 8015204:	b118      	cbz	r0, 801520e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8015206:	b2a1      	uxth	r1, r4
 8015208:	9801      	ldr	r0, [sp, #4]
 801520a:	f7ff ffc3 	bl	8015194 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801520e:	3d08      	subs	r5, #8
 8015210:	e7f2      	b.n	80151f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8015212:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8015216:	f8cd a010 	str.w	sl, [sp, #16]
 801521a:	f10a 33ff 	add.w	r3, sl, #4294967295
 801521e:	9302      	str	r3, [sp, #8]
 8015220:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8015224:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8015228:	9306      	str	r3, [sp, #24]
 801522a:	445c      	add	r4, fp
 801522c:	2500      	movs	r5, #0
 801522e:	4626      	mov	r6, r4
 8015230:	f8cd a014 	str.w	sl, [sp, #20]
 8015234:	462f      	mov	r7, r5
 8015236:	9b05      	ldr	r3, [sp, #20]
 8015238:	2b00      	cmp	r3, #0
 801523a:	d073      	beq.n	8015324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801523c:	9903      	ldr	r1, [sp, #12]
 801523e:	4630      	mov	r0, r6
 8015240:	f7ff fd4b 	bl	8014cda <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015244:	b350      	cbz	r0, 801529c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8015246:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 801524a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801524e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8015252:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8015256:	45e6      	cmp	lr, ip
 8015258:	db33      	blt.n	80152c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801525a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801525e:	88b3      	ldrh	r3, [r6, #4]
 8015260:	4472      	add	r2, lr
 8015262:	4463      	add	r3, ip
 8015264:	b212      	sxth	r2, r2
 8015266:	b21b      	sxth	r3, r3
 8015268:	429a      	cmp	r2, r3
 801526a:	dc2a      	bgt.n	80152c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801526c:	88f3      	ldrh	r3, [r6, #6]
 801526e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015272:	fa1f f289 	uxth.w	r2, r9
 8015276:	4413      	add	r3, r2
 8015278:	b29b      	uxth	r3, r3
 801527a:	45c8      	cmp	r8, r9
 801527c:	fa1f fc88 	uxth.w	ip, r8
 8015280:	fa0f fe83 	sxth.w	lr, r3
 8015284:	db0f      	blt.n	80152a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8015286:	eba3 030c 	sub.w	r3, r3, ip
 801528a:	1ac9      	subs	r1, r1, r3
 801528c:	b209      	sxth	r1, r1
 801528e:	2900      	cmp	r1, #0
 8015290:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015294:	dd12      	ble.n	80152bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015296:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801529a:	4605      	mov	r5, r0
 801529c:	9b05      	ldr	r3, [sp, #20]
 801529e:	3b01      	subs	r3, #1
 80152a0:	9305      	str	r3, [sp, #20]
 80152a2:	3e08      	subs	r6, #8
 80152a4:	e7c7      	b.n	8015236 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80152a6:	4461      	add	r1, ip
 80152a8:	b209      	sxth	r1, r1
 80152aa:	4571      	cmp	r1, lr
 80152ac:	dc38      	bgt.n	8015320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80152ae:	eba2 020c 	sub.w	r2, r2, ip
 80152b2:	b212      	sxth	r2, r2
 80152b4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80152b8:	2a00      	cmp	r2, #0
 80152ba:	dcee      	bgt.n	801529a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80152bc:	b00f      	add	sp, #60	; 0x3c
 80152be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152c2:	45c8      	cmp	r8, r9
 80152c4:	db2c      	blt.n	8015320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80152c6:	88f3      	ldrh	r3, [r6, #6]
 80152c8:	4499      	add	r9, r3
 80152ca:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80152ce:	4498      	add	r8, r3
 80152d0:	fa0f f989 	sxth.w	r9, r9
 80152d4:	fa0f f888 	sxth.w	r8, r8
 80152d8:	45c1      	cmp	r9, r8
 80152da:	db21      	blt.n	8015320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80152dc:	88b3      	ldrh	r3, [r6, #4]
 80152de:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80152e2:	fa1f f28c 	uxth.w	r2, ip
 80152e6:	4413      	add	r3, r2
 80152e8:	b29b      	uxth	r3, r3
 80152ea:	45e6      	cmp	lr, ip
 80152ec:	fa1f f88e 	uxth.w	r8, lr
 80152f0:	fa0f f983 	sxth.w	r9, r3
 80152f4:	db0a      	blt.n	801530c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80152f6:	eba3 0308 	sub.w	r3, r3, r8
 80152fa:	1ac9      	subs	r1, r1, r3
 80152fc:	b209      	sxth	r1, r1
 80152fe:	2900      	cmp	r1, #0
 8015300:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8015304:	ddda      	ble.n	80152bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015306:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801530a:	e7c6      	b.n	801529a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801530c:	4441      	add	r1, r8
 801530e:	b209      	sxth	r1, r1
 8015310:	4549      	cmp	r1, r9
 8015312:	dc05      	bgt.n	8015320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015314:	eba2 0208 	sub.w	r2, r2, r8
 8015318:	b212      	sxth	r2, r2
 801531a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801531e:	e7cb      	b.n	80152b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8015320:	4607      	mov	r7, r0
 8015322:	e7bb      	b.n	801529c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8015324:	2d00      	cmp	r5, #0
 8015326:	d181      	bne.n	801522c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8015328:	2f00      	cmp	r7, #0
 801532a:	f000 81dd 	beq.w	80156e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801532e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8015332:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8015336:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 801533a:	b2b3      	uxth	r3, r6
 801533c:	9305      	str	r3, [sp, #20]
 801533e:	9a05      	ldr	r2, [sp, #20]
 8015340:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8015344:	4413      	add	r3, r2
 8015346:	b2ba      	uxth	r2, r7
 8015348:	4492      	add	sl, r2
 801534a:	b29b      	uxth	r3, r3
 801534c:	fa1f fa8a 	uxth.w	sl, sl
 8015350:	fa0f f883 	sxth.w	r8, r3
 8015354:	fa0f f98a 	sxth.w	r9, sl
 8015358:	e9cd 2307 	strd	r2, r3, [sp, #28]
 801535c:	9b04      	ldr	r3, [sp, #16]
 801535e:	2b00      	cmp	r3, #0
 8015360:	d052      	beq.n	8015408 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8015362:	9903      	ldr	r1, [sp, #12]
 8015364:	4620      	mov	r0, r4
 8015366:	f7ff fcb8 	bl	8014cda <_ZNK8touchgfx4Rect9intersectERKS0_>
 801536a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801536e:	b1c0      	cbz	r0, 80153a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015370:	f9b4 e000 	ldrsh.w	lr, [r4]
 8015374:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015378:	4576      	cmp	r6, lr
 801537a:	dc22      	bgt.n	80153c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801537c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015380:	44f4      	add	ip, lr
 8015382:	fa0f fc8c 	sxth.w	ip, ip
 8015386:	45e0      	cmp	r8, ip
 8015388:	db1b      	blt.n	80153c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801538a:	428f      	cmp	r7, r1
 801538c:	fa1f fc81 	uxth.w	ip, r1
 8015390:	88e1      	ldrh	r1, [r4, #6]
 8015392:	dc0d      	bgt.n	80153b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8015394:	ebaa 0c0c 	sub.w	ip, sl, ip
 8015398:	eba1 010c 	sub.w	r1, r1, ip
 801539c:	f8a4 9002 	strh.w	r9, [r4, #2]
 80153a0:	80e1      	strh	r1, [r4, #6]
 80153a2:	4628      	mov	r0, r5
 80153a4:	9904      	ldr	r1, [sp, #16]
 80153a6:	3901      	subs	r1, #1
 80153a8:	9104      	str	r1, [sp, #16]
 80153aa:	3c08      	subs	r4, #8
 80153ac:	4605      	mov	r5, r0
 80153ae:	e7d3      	b.n	8015358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80153b0:	4461      	add	r1, ip
 80153b2:	b209      	sxth	r1, r1
 80153b4:	4549      	cmp	r1, r9
 80153b6:	dcf5      	bgt.n	80153a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80153b8:	eba2 0c0c 	sub.w	ip, r2, ip
 80153bc:	f8a4 c006 	strh.w	ip, [r4, #6]
 80153c0:	e7ef      	b.n	80153a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80153c2:	428f      	cmp	r7, r1
 80153c4:	dcee      	bgt.n	80153a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80153c6:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80153ca:	4461      	add	r1, ip
 80153cc:	b209      	sxth	r1, r1
 80153ce:	4589      	cmp	r9, r1
 80153d0:	dbe8      	blt.n	80153a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80153d2:	4576      	cmp	r6, lr
 80153d4:	fa1f fc8e 	uxth.w	ip, lr
 80153d8:	88a1      	ldrh	r1, [r4, #4]
 80153da:	dc07      	bgt.n	80153ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80153dc:	eba3 0c0c 	sub.w	ip, r3, ip
 80153e0:	eba1 010c 	sub.w	r1, r1, ip
 80153e4:	f8a4 8000 	strh.w	r8, [r4]
 80153e8:	80a1      	strh	r1, [r4, #4]
 80153ea:	e7da      	b.n	80153a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80153ec:	4461      	add	r1, ip
 80153ee:	b209      	sxth	r1, r1
 80153f0:	4588      	cmp	r8, r1
 80153f2:	dbd7      	blt.n	80153a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80153f4:	9905      	ldr	r1, [sp, #20]
 80153f6:	eba1 0c0c 	sub.w	ip, r1, ip
 80153fa:	f8a4 c004 	strh.w	ip, [r4, #4]
 80153fe:	e7d0      	b.n	80153a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015400:	2000ef12 	.word	0x2000ef12
 8015404:	2000ef10 	.word	0x2000ef10
 8015408:	2d00      	cmp	r5, #0
 801540a:	f000 816d 	beq.w	80156e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801540e:	9b06      	ldr	r3, [sp, #24]
 8015410:	445b      	add	r3, fp
 8015412:	461c      	mov	r4, r3
 8015414:	9b02      	ldr	r3, [sp, #8]
 8015416:	3301      	adds	r3, #1
 8015418:	f000 8166 	beq.w	80156e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801541c:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8015420:	4629      	mov	r1, r5
 8015422:	9803      	ldr	r0, [sp, #12]
 8015424:	f7ff fccc 	bl	8014dc0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015428:	b120      	cbz	r0, 8015434 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 801542a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801542e:	9801      	ldr	r0, [sp, #4]
 8015430:	f7ff feb0 	bl	8015194 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015434:	9903      	ldr	r1, [sp, #12]
 8015436:	4628      	mov	r0, r5
 8015438:	f7ff fc4f 	bl	8014cda <_ZNK8touchgfx4Rect9intersectERKS0_>
 801543c:	2800      	cmp	r0, #0
 801543e:	f000 809c 	beq.w	801557a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015442:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8015446:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 801544a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801544e:	9309      	str	r3, [sp, #36]	; 0x24
 8015450:	fa1f f189 	uxth.w	r1, r9
 8015454:	eb01 0c03 	add.w	ip, r1, r3
 8015458:	fa1f fa8c 	uxth.w	sl, ip
 801545c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015460:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8015464:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015468:	b283      	uxth	r3, r0
 801546a:	eb03 050c 	add.w	r5, r3, ip
 801546e:	b2ad      	uxth	r5, r5
 8015470:	9505      	str	r5, [sp, #20]
 8015472:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8015476:	9504      	str	r5, [sp, #16]
 8015478:	4548      	cmp	r0, r9
 801547a:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 801547e:	f340 8099 	ble.w	80155b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8015482:	1a5b      	subs	r3, r3, r1
 8015484:	b29b      	uxth	r3, r3
 8015486:	4596      	cmp	lr, r2
 8015488:	fa0f f08a 	sxth.w	r0, sl
 801548c:	b21e      	sxth	r6, r3
 801548e:	dd2e      	ble.n	80154ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8015490:	9f02      	ldr	r7, [sp, #8]
 8015492:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8015496:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801549a:	9f04      	ldr	r7, [sp, #16]
 801549c:	1a3f      	subs	r7, r7, r0
 801549e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80154a2:	fa1f fe8e 	uxth.w	lr, lr
 80154a6:	b292      	uxth	r2, r2
 80154a8:	ebae 0102 	sub.w	r1, lr, r2
 80154ac:	44a6      	add	lr, r4
 80154ae:	4402      	add	r2, r0
 80154b0:	b289      	uxth	r1, r1
 80154b2:	fa0f fe8e 	sxth.w	lr, lr
 80154b6:	b212      	sxth	r2, r2
 80154b8:	b20d      	sxth	r5, r1
 80154ba:	ebae 0202 	sub.w	r2, lr, r2
 80154be:	436f      	muls	r7, r5
 80154c0:	4372      	muls	r2, r6
 80154c2:	4297      	cmp	r7, r2
 80154c4:	db09      	blt.n	80154da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80154c6:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80154ca:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80154ce:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80154d2:	449c      	add	ip, r3
 80154d4:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80154d8:	e686      	b.n	80151e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80154da:	4421      	add	r1, r4
 80154dc:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80154e0:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80154e4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80154e8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80154ec:	e67c      	b.n	80151e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80154ee:	9f04      	ldr	r7, [sp, #16]
 80154f0:	42b8      	cmp	r0, r7
 80154f2:	da27      	bge.n	8015544 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80154f4:	9902      	ldr	r1, [sp, #8]
 80154f6:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80154fa:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80154fe:	eb05 010e 	add.w	r1, r5, lr
 8015502:	fa1f f881 	uxth.w	r8, r1
 8015506:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 801550a:	4411      	add	r1, r2
 801550c:	eba1 0108 	sub.w	r1, r1, r8
 8015510:	b289      	uxth	r1, r1
 8015512:	fa0f f988 	sxth.w	r9, r8
 8015516:	eba2 020e 	sub.w	r2, r2, lr
 801551a:	fa0f f881 	sxth.w	r8, r1
 801551e:	1a3f      	subs	r7, r7, r0
 8015520:	4372      	muls	r2, r6
 8015522:	fb08 f707 	mul.w	r7, r8, r7
 8015526:	42ba      	cmp	r2, r7
 8015528:	dc06      	bgt.n	8015538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 801552a:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 801552e:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8015532:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8015536:	e7ca      	b.n	80154ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8015538:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 801553c:	4429      	add	r1, r5
 801553e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015542:	e651      	b.n	80151e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015544:	9805      	ldr	r0, [sp, #20]
 8015546:	ebaa 0000 	sub.w	r0, sl, r0
 801554a:	b280      	uxth	r0, r0
 801554c:	2d06      	cmp	r5, #6
 801554e:	fa0f fe80 	sxth.w	lr, r0
 8015552:	d817      	bhi.n	8015584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8015554:	9b04      	ldr	r3, [sp, #16]
 8015556:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 801555a:	1c6b      	adds	r3, r5, #1
 801555c:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015560:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8015564:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015568:	9b01      	ldr	r3, [sp, #4]
 801556a:	9801      	ldr	r0, [sp, #4]
 801556c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015570:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8015574:	805a      	strh	r2, [r3, #2]
 8015576:	809e      	strh	r6, [r3, #4]
 8015578:	80d9      	strh	r1, [r3, #6]
 801557a:	9b02      	ldr	r3, [sp, #8]
 801557c:	3b01      	subs	r3, #1
 801557e:	9302      	str	r3, [sp, #8]
 8015580:	3c08      	subs	r4, #8
 8015582:	e747      	b.n	8015414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8015584:	9a02      	ldr	r2, [sp, #8]
 8015586:	45b6      	cmp	lr, r6
 8015588:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801558c:	db0d      	blt.n	80155aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 801558e:	449c      	add	ip, r3
 8015590:	fa1f fc8c 	uxth.w	ip, ip
 8015594:	445a      	add	r2, fp
 8015596:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 801559a:	448c      	add	ip, r1
 801559c:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80155a0:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80155a4:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80155a8:	e61e      	b.n	80151e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80155aa:	445a      	add	r2, fp
 80155ac:	4484      	add	ip, r0
 80155ae:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80155b2:	e78f      	b.n	80154d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80155b4:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80155b8:	fa1f f18e 	uxth.w	r1, lr
 80155bc:	eb01 0806 	add.w	r8, r1, r6
 80155c0:	b293      	uxth	r3, r2
 80155c2:	fa1f f888 	uxth.w	r8, r8
 80155c6:	9306      	str	r3, [sp, #24]
 80155c8:	fa0f f388 	sxth.w	r3, r8
 80155cc:	9307      	str	r3, [sp, #28]
 80155ce:	9f06      	ldr	r7, [sp, #24]
 80155d0:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80155d4:	443b      	add	r3, r7
 80155d6:	b29b      	uxth	r3, r3
 80155d8:	4596      	cmp	lr, r2
 80155da:	9308      	str	r3, [sp, #32]
 80155dc:	da24      	bge.n	8015628 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80155de:	9905      	ldr	r1, [sp, #20]
 80155e0:	eba3 0308 	sub.w	r3, r3, r8
 80155e4:	ebaa 0401 	sub.w	r4, sl, r1
 80155e8:	b2a4      	uxth	r4, r4
 80155ea:	b29b      	uxth	r3, r3
 80155ec:	b225      	sxth	r5, r4
 80155ee:	b219      	sxth	r1, r3
 80155f0:	eba2 020e 	sub.w	r2, r2, lr
 80155f4:	eba9 0000 	sub.w	r0, r9, r0
 80155f8:	436a      	muls	r2, r5
 80155fa:	4348      	muls	r0, r1
 80155fc:	4282      	cmp	r2, r0
 80155fe:	9a02      	ldr	r2, [sp, #8]
 8015600:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015604:	445a      	add	r2, fp
 8015606:	dc06      	bgt.n	8015616 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8015608:	9b07      	ldr	r3, [sp, #28]
 801560a:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 801560e:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8015612:	44a4      	add	ip, r4
 8015614:	e75e      	b.n	80154d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015616:	9904      	ldr	r1, [sp, #16]
 8015618:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 801561c:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8015620:	4433      	add	r3, r6
 8015622:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015626:	e5df      	b.n	80151e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015628:	9f06      	ldr	r7, [sp, #24]
 801562a:	9b04      	ldr	r3, [sp, #16]
 801562c:	1bc9      	subs	r1, r1, r7
 801562e:	fa0f f78a 	sxth.w	r7, sl
 8015632:	b289      	uxth	r1, r1
 8015634:	429f      	cmp	r7, r3
 8015636:	fa0f fe81 	sxth.w	lr, r1
 801563a:	dd23      	ble.n	8015684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 801563c:	9a05      	ldr	r2, [sp, #20]
 801563e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015642:	9d07      	ldr	r5, [sp, #28]
 8015644:	ebaa 0202 	sub.w	r2, sl, r2
 8015648:	b292      	uxth	r2, r2
 801564a:	eba5 0a03 	sub.w	sl, r5, r3
 801564e:	b214      	sxth	r4, r2
 8015650:	eba9 0000 	sub.w	r0, r9, r0
 8015654:	9b02      	ldr	r3, [sp, #8]
 8015656:	fb0e f000 	mul.w	r0, lr, r0
 801565a:	fb04 fa0a 	mul.w	sl, r4, sl
 801565e:	00db      	lsls	r3, r3, #3
 8015660:	4550      	cmp	r0, sl
 8015662:	445b      	add	r3, fp
 8015664:	db03      	blt.n	801566e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8015666:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 801566a:	4494      	add	ip, r2
 801566c:	e732      	b.n	80154d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801566e:	9a04      	ldr	r2, [sp, #16]
 8015670:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8015674:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015678:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 801567c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015680:	4431      	add	r1, r6
 8015682:	e75c      	b.n	801553e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8015684:	9b08      	ldr	r3, [sp, #32]
 8015686:	eba3 0308 	sub.w	r3, r3, r8
 801568a:	b29b      	uxth	r3, r3
 801568c:	2d06      	cmp	r5, #6
 801568e:	b218      	sxth	r0, r3
 8015690:	d813      	bhi.n	80156ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8015692:	9b07      	ldr	r3, [sp, #28]
 8015694:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8015698:	1c6b      	adds	r3, r5, #1
 801569a:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 801569e:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80156a2:	9b01      	ldr	r3, [sp, #4]
 80156a4:	9901      	ldr	r1, [sp, #4]
 80156a6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80156aa:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80156ae:	805a      	strh	r2, [r3, #2]
 80156b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80156b2:	809a      	strh	r2, [r3, #4]
 80156b4:	f8a3 e006 	strh.w	lr, [r3, #6]
 80156b8:	e75f      	b.n	801557a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80156ba:	9c02      	ldr	r4, [sp, #8]
 80156bc:	4570      	cmp	r0, lr
 80156be:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80156c2:	db0d      	blt.n	80156e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80156c4:	4431      	add	r1, r6
 80156c6:	9b06      	ldr	r3, [sp, #24]
 80156c8:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80156cc:	b289      	uxth	r1, r1
 80156ce:	445c      	add	r4, fp
 80156d0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80156d4:	4419      	add	r1, r3
 80156d6:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80156da:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80156de:	e583      	b.n	80151e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80156e0:	445c      	add	r4, fp
 80156e2:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80156e6:	e79b      	b.n	8015620 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80156e8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80156ec:	1e65      	subs	r5, r4, #1
 80156ee:	b2ad      	uxth	r5, r5
 80156f0:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80156f4:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80156f8:	42b5      	cmp	r5, r6
 80156fa:	d044      	beq.n	8015786 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80156fc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8015700:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8015704:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015708:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 801570c:	4282      	cmp	r2, r0
 801570e:	d11f      	bne.n	8015750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015710:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8015714:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015718:	459c      	cmp	ip, r3
 801571a:	d119      	bne.n	8015750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 801571c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8015720:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015724:	19d8      	adds	r0, r3, r7
 8015726:	b200      	sxth	r0, r0
 8015728:	4288      	cmp	r0, r1
 801572a:	d109      	bne.n	8015740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 801572c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015730:	4413      	add	r3, r2
 8015732:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8015736:	4629      	mov	r1, r5
 8015738:	9801      	ldr	r0, [sp, #4]
 801573a:	f7ff fd2b 	bl	8015194 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801573e:	e003      	b.n	8015748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015740:	4411      	add	r1, r2
 8015742:	b209      	sxth	r1, r1
 8015744:	42b9      	cmp	r1, r7
 8015746:	d0f3      	beq.n	8015730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015748:	3d01      	subs	r5, #1
 801574a:	b2ad      	uxth	r5, r5
 801574c:	3c08      	subs	r4, #8
 801574e:	e7d3      	b.n	80156f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015750:	42b9      	cmp	r1, r7
 8015752:	d1f9      	bne.n	8015748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015754:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015758:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 801575c:	4299      	cmp	r1, r3
 801575e:	d1f3      	bne.n	8015748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015760:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015764:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015768:	181f      	adds	r7, r3, r0
 801576a:	b23f      	sxth	r7, r7
 801576c:	42ba      	cmp	r2, r7
 801576e:	d105      	bne.n	801577c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015770:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8015774:	440b      	add	r3, r1
 8015776:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801577a:	e7dc      	b.n	8015736 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 801577c:	440a      	add	r2, r1
 801577e:	b212      	sxth	r2, r2
 8015780:	4290      	cmp	r0, r2
 8015782:	d1e1      	bne.n	8015748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015784:	e7f6      	b.n	8015774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8015786:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 801578a:	2e07      	cmp	r6, #7
 801578c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015790:	d812      	bhi.n	80157b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8015792:	1c75      	adds	r5, r6, #1
 8015794:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8015798:	9d01      	ldr	r5, [sp, #4]
 801579a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801579e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80157a2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80157a6:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80157aa:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80157ae:	442c      	add	r4, r5
 80157b0:	8061      	strh	r1, [r4, #2]
 80157b2:	80a2      	strh	r2, [r4, #4]
 80157b4:	80e3      	strh	r3, [r4, #6]
 80157b6:	e581      	b.n	80152bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80157b8:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80157bc:	3e01      	subs	r6, #1
 80157be:	445c      	add	r4, fp
 80157c0:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80157c4:	f04f 37ff 	mov.w	r7, #4294967295
 80157c8:	2500      	movs	r5, #0
 80157ca:	9305      	str	r3, [sp, #20]
 80157cc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80157d0:	9302      	str	r3, [sp, #8]
 80157d2:	1e72      	subs	r2, r6, #1
 80157d4:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80157d8:	9304      	str	r3, [sp, #16]
 80157da:	4691      	mov	r9, r2
 80157dc:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80157e0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80157e4:	bf14      	ite	ne
 80157e6:	9905      	ldrne	r1, [sp, #20]
 80157e8:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80157ec:	6818      	ldr	r0, [r3, #0]
 80157ee:	9207      	str	r2, [sp, #28]
 80157f0:	bf18      	it	ne
 80157f2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80157f6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80157fa:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80157fe:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8015802:	9306      	str	r3, [sp, #24]
 8015804:	fb18 f801 	smulbb	r8, r8, r1
 8015808:	6859      	ldr	r1, [r3, #4]
 801580a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801580e:	4671      	mov	r1, lr
 8015810:	a80c      	add	r0, sp, #48	; 0x30
 8015812:	f7ff fafb 	bl	8014e0c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015816:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801581a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801581e:	9b04      	ldr	r3, [sp, #16]
 8015820:	9a02      	ldr	r2, [sp, #8]
 8015822:	fb10 f001 	smulbb	r0, r0, r1
 8015826:	fb02 8803 	mla	r8, r2, r3, r8
 801582a:	eba0 0108 	sub.w	r1, r0, r8
 801582e:	f04f 0c08 	mov.w	ip, #8
 8015832:	fb90 f0fc 	sdiv	r0, r0, ip
 8015836:	4288      	cmp	r0, r1
 8015838:	dc20      	bgt.n	801587c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801583a:	4551      	cmp	r1, sl
 801583c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015840:	da03      	bge.n	801584a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8015842:	b1d9      	cbz	r1, 801587c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015844:	468a      	mov	sl, r1
 8015846:	464f      	mov	r7, r9
 8015848:	4635      	mov	r5, r6
 801584a:	f109 39ff 	add.w	r9, r9, #4294967295
 801584e:	f119 0f02 	cmn.w	r9, #2
 8015852:	d1c5      	bne.n	80157e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8015854:	4616      	mov	r6, r2
 8015856:	3201      	adds	r2, #1
 8015858:	f1a4 0408 	sub.w	r4, r4, #8
 801585c:	d1b6      	bne.n	80157cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 801585e:	9b01      	ldr	r3, [sp, #4]
 8015860:	b2ac      	uxth	r4, r5
 8015862:	00ed      	lsls	r5, r5, #3
 8015864:	1958      	adds	r0, r3, r5
 8015866:	1c7b      	adds	r3, r7, #1
 8015868:	d10b      	bne.n	8015882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 801586a:	4601      	mov	r1, r0
 801586c:	9803      	ldr	r0, [sp, #12]
 801586e:	f7ff facd 	bl	8014e0c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015872:	4621      	mov	r1, r4
 8015874:	9801      	ldr	r0, [sp, #4]
 8015876:	f7ff fc8d 	bl	8015194 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801587a:	e4b5      	b.n	80151e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801587c:	464f      	mov	r7, r9
 801587e:	4635      	mov	r5, r6
 8015880:	e7ed      	b.n	801585e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8015882:	9b01      	ldr	r3, [sp, #4]
 8015884:	00ff      	lsls	r7, r7, #3
 8015886:	19d9      	adds	r1, r3, r7
 8015888:	f7ff fac0 	bl	8014e0c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801588c:	9b03      	ldr	r3, [sp, #12]
 801588e:	cb03      	ldmia	r3!, {r0, r1}
 8015890:	445f      	add	r7, fp
 8015892:	445d      	add	r5, fp
 8015894:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8015898:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 801589c:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80158a0:	9b03      	ldr	r3, [sp, #12]
 80158a2:	6869      	ldr	r1, [r5, #4]
 80158a4:	c303      	stmia	r3!, {r0, r1}
 80158a6:	e7e4      	b.n	8015872 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080158a8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80158a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158ac:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80158b0:	b09b      	sub	sp, #108	; 0x6c
 80158b2:	4604      	mov	r4, r0
 80158b4:	4630      	mov	r0, r6
 80158b6:	f7fa f91c 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80158ba:	4605      	mov	r5, r0
 80158bc:	b948      	cbnz	r0, 80158d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80158be:	6823      	ldr	r3, [r4, #0]
 80158c0:	e896 0006 	ldmia.w	r6, {r1, r2}
 80158c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80158c6:	4620      	mov	r0, r4
 80158c8:	4798      	blx	r3
 80158ca:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80158ce:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80158d2:	4bc6      	ldr	r3, [pc, #792]	; (8015bec <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80158d4:	681b      	ldr	r3, [r3, #0]
 80158d6:	2b00      	cmp	r3, #0
 80158d8:	d03f      	beq.n	801595a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80158da:	4dc5      	ldr	r5, [pc, #788]	; (8015bf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80158dc:	4628      	mov	r0, r5
 80158de:	f7fa f908 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80158e2:	4606      	mov	r6, r0
 80158e4:	2800      	cmp	r0, #0
 80158e6:	d138      	bne.n	801595a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80158e8:	4628      	mov	r0, r5
 80158ea:	f7ff f907 	bl	8014afc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80158ee:	6823      	ldr	r3, [r4, #0]
 80158f0:	6829      	ldr	r1, [r5, #0]
 80158f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80158f4:	686a      	ldr	r2, [r5, #4]
 80158f6:	4620      	mov	r0, r4
 80158f8:	4798      	blx	r3
 80158fa:	802e      	strh	r6, [r5, #0]
 80158fc:	806e      	strh	r6, [r5, #2]
 80158fe:	80ae      	strh	r6, [r5, #4]
 8015900:	80ee      	strh	r6, [r5, #6]
 8015902:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8015906:	4dbb      	ldr	r5, [pc, #748]	; (8015bf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015908:	4640      	mov	r0, r8
 801590a:	f7ff fbeb 	bl	80150e4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801590e:	882e      	ldrh	r6, [r5, #0]
 8015910:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015914:	4633      	mov	r3, r6
 8015916:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 801591a:	42bb      	cmp	r3, r7
 801591c:	d224      	bcs.n	8015968 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801591e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8015922:	2907      	cmp	r1, #7
 8015924:	d816      	bhi.n	8015954 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8015926:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801592a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 801592e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8015932:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8015936:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 801593a:	1c4a      	adds	r2, r1, #1
 801593c:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8015940:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8015944:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015948:	f8a2 a002 	strh.w	sl, [r2, #2]
 801594c:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015950:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015954:	3301      	adds	r3, #1
 8015956:	b29b      	uxth	r3, r3
 8015958:	e7df      	b.n	801591a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 801595a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801595e:	2b00      	cmp	r3, #0
 8015960:	d1cf      	bne.n	8015902 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8015962:	b01b      	add	sp, #108	; 0x6c
 8015964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015968:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 801596c:	42b3      	cmp	r3, r6
 801596e:	d90c      	bls.n	801598a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015970:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8015974:	6822      	ldr	r2, [r4, #0]
 8015976:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 801597a:	6c17      	ldr	r7, [r2, #64]	; 0x40
 801597c:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015980:	4620      	mov	r0, r4
 8015982:	3601      	adds	r6, #1
 8015984:	47b8      	blx	r7
 8015986:	b2b6      	uxth	r6, r6
 8015988:	e7ee      	b.n	8015968 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801598a:	4a9b      	ldr	r2, [pc, #620]	; (8015bf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801598c:	6813      	ldr	r3, [r2, #0]
 801598e:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8015992:	2b01      	cmp	r3, #1
 8015994:	4691      	mov	r9, r2
 8015996:	f040 80e2 	bne.w	8015b5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 801599a:	8829      	ldrh	r1, [r5, #0]
 801599c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80159a0:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80159a4:	33ae      	adds	r3, #174	; 0xae
 80159a6:	2600      	movs	r6, #0
 80159a8:	428f      	cmp	r7, r1
 80159aa:	f103 0308 	add.w	r3, r3, #8
 80159ae:	dd0a      	ble.n	80159c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80159b0:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80159b4:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80159b8:	4402      	add	r2, r0
 80159ba:	b212      	sxth	r2, r2
 80159bc:	4296      	cmp	r6, r2
 80159be:	bfb8      	it	lt
 80159c0:	4616      	movlt	r6, r2
 80159c2:	3101      	adds	r1, #1
 80159c4:	e7f0      	b.n	80159a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80159c6:	4b8d      	ldr	r3, [pc, #564]	; (8015bfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80159c8:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8015bf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80159cc:	881b      	ldrh	r3, [r3, #0]
 80159ce:	2b0f      	cmp	r3, #15
 80159d0:	bf88      	it	hi
 80159d2:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80159d6:	f04f 0300 	mov.w	r3, #0
 80159da:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80159de:	bf98      	it	ls
 80159e0:	f04f 0b01 	movls.w	fp, #1
 80159e4:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80159e8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80159ec:	4b82      	ldr	r3, [pc, #520]	; (8015bf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80159ee:	4438      	add	r0, r7
 80159f0:	b207      	sxth	r7, r0
 80159f2:	6818      	ldr	r0, [r3, #0]
 80159f4:	42b7      	cmp	r7, r6
 80159f6:	6803      	ldr	r3, [r0, #0]
 80159f8:	f280 8083 	bge.w	8015b02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80159fc:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015a00:	4798      	blx	r3
 8015a02:	eb07 030b 	add.w	r3, r7, fp
 8015a06:	4298      	cmp	r0, r3
 8015a08:	da07      	bge.n	8015a1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015a0a:	42b0      	cmp	r0, r6
 8015a0c:	da05      	bge.n	8015a1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015a0e:	4287      	cmp	r7, r0
 8015a10:	dd6c      	ble.n	8015aec <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015a12:	2f00      	cmp	r7, #0
 8015a14:	dd6a      	ble.n	8015aec <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015a16:	4630      	mov	r0, r6
 8015a18:	e004      	b.n	8015a24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8015a1a:	4287      	cmp	r7, r0
 8015a1c:	dcfb      	bgt.n	8015a16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015a1e:	42b0      	cmp	r0, r6
 8015a20:	bfa8      	it	ge
 8015a22:	4630      	movge	r0, r6
 8015a24:	4b76      	ldr	r3, [pc, #472]	; (8015c00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8015a26:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015a2a:	1bc0      	subs	r0, r0, r7
 8015a2c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015a30:	882f      	ldrh	r7, [r5, #0]
 8015a32:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015a36:	2200      	movs	r2, #0
 8015a38:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015a3c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015a40:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015a44:	42bb      	cmp	r3, r7
 8015a46:	d9cd      	bls.n	80159e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015a48:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015a4c:	ab07      	add	r3, sp, #28
 8015a4e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015a52:	6851      	ldr	r1, [r2, #4]
 8015a54:	c303      	stmia	r3!, {r0, r1}
 8015a56:	a905      	add	r1, sp, #20
 8015a58:	a807      	add	r0, sp, #28
 8015a5a:	f7ff f93e 	bl	8014cda <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015a5e:	2800      	cmp	r0, #0
 8015a60:	d04c      	beq.n	8015afc <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8015a62:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8015a66:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015a6a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015a6e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8015a72:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015a76:	9302      	str	r3, [sp, #8]
 8015a78:	4686      	mov	lr, r0
 8015a7a:	4290      	cmp	r0, r2
 8015a7c:	4450      	add	r0, sl
 8015a7e:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8015a82:	bfb8      	it	lt
 8015a84:	4696      	movlt	lr, r2
 8015a86:	4452      	add	r2, sl
 8015a88:	4299      	cmp	r1, r3
 8015a8a:	b280      	uxth	r0, r0
 8015a8c:	b292      	uxth	r2, r2
 8015a8e:	468c      	mov	ip, r1
 8015a90:	fa0f fa82 	sxth.w	sl, r2
 8015a94:	bfb8      	it	lt
 8015a96:	469c      	movlt	ip, r3
 8015a98:	b203      	sxth	r3, r0
 8015a9a:	4553      	cmp	r3, sl
 8015a9c:	bfb8      	it	lt
 8015a9e:	4602      	movlt	r2, r0
 8015aa0:	eba2 020e 	sub.w	r2, r2, lr
 8015aa4:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015aa8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8015aac:	9b02      	ldr	r3, [sp, #8]
 8015aae:	f8ad e01c 	strh.w	lr, [sp, #28]
 8015ab2:	4411      	add	r1, r2
 8015ab4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015ab8:	f8ad c01e 	strh.w	ip, [sp, #30]
 8015abc:	4413      	add	r3, r2
 8015abe:	b289      	uxth	r1, r1
 8015ac0:	b29b      	uxth	r3, r3
 8015ac2:	b208      	sxth	r0, r1
 8015ac4:	b21a      	sxth	r2, r3
 8015ac6:	4290      	cmp	r0, r2
 8015ac8:	bfb8      	it	lt
 8015aca:	460b      	movlt	r3, r1
 8015acc:	eba3 030c 	sub.w	r3, r3, ip
 8015ad0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015ad4:	a807      	add	r0, sp, #28
 8015ad6:	f7fa f80c 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015ada:	b920      	cbnz	r0, 8015ae6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8015adc:	6823      	ldr	r3, [r4, #0]
 8015ade:	a907      	add	r1, sp, #28
 8015ae0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015ae2:	4620      	mov	r0, r4
 8015ae4:	4798      	blx	r3
 8015ae6:	3701      	adds	r7, #1
 8015ae8:	b2bf      	uxth	r7, r7
 8015aea:	e7a9      	b.n	8015a40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8015aec:	f8d9 0000 	ldr.w	r0, [r9]
 8015af0:	6803      	ldr	r3, [r0, #0]
 8015af2:	2101      	movs	r1, #1
 8015af4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015af8:	4798      	blx	r3
 8015afa:	e773      	b.n	80159e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015afc:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015b00:	e7e8      	b.n	8015ad4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8015b02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015b04:	4798      	blx	r3
 8015b06:	4b3f      	ldr	r3, [pc, #252]	; (8015c04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015b08:	781b      	ldrb	r3, [r3, #0]
 8015b0a:	2b00      	cmp	r3, #0
 8015b0c:	f43f af29 	beq.w	8015962 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015b10:	2300      	movs	r3, #0
 8015b12:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8015b16:	882b      	ldrh	r3, [r5, #0]
 8015b18:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8015b1c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015b20:	42ab      	cmp	r3, r5
 8015b22:	f4bf af1e 	bcs.w	8015962 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015b26:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8015b2a:	2907      	cmp	r1, #7
 8015b2c:	d814      	bhi.n	8015b58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8015b2e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8015b32:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8015b36:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8015b3a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8015b3e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8015b42:	1c4a      	adds	r2, r1, #1
 8015b44:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8015b48:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015b4c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015b50:	f8a2 c002 	strh.w	ip, [r2, #2]
 8015b54:	8097      	strh	r7, [r2, #4]
 8015b56:	80d6      	strh	r6, [r2, #6]
 8015b58:	3301      	adds	r3, #1
 8015b5a:	b29b      	uxth	r3, r3
 8015b5c:	e7e0      	b.n	8015b20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015b5e:	2b02      	cmp	r3, #2
 8015b60:	f040 8133 	bne.w	8015dca <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8015b64:	4b28      	ldr	r3, [pc, #160]	; (8015c08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8015b66:	781b      	ldrb	r3, [r3, #0]
 8015b68:	2b01      	cmp	r3, #1
 8015b6a:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8015b6e:	f000 8098 	beq.w	8015ca2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015b72:	882a      	ldrh	r2, [r5, #0]
 8015b74:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8015b78:	3201      	adds	r2, #1
 8015b7a:	b292      	uxth	r2, r2
 8015b7c:	2900      	cmp	r1, #0
 8015b7e:	d0c2      	beq.n	8015b06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015b80:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8015b84:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8015b88:	441e      	add	r6, r3
 8015b8a:	b236      	sxth	r6, r6
 8015b8c:	4694      	mov	ip, r2
 8015b8e:	f04f 0900 	mov.w	r9, #0
 8015b92:	fa1f f38c 	uxth.w	r3, ip
 8015b96:	4299      	cmp	r1, r3
 8015b98:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8015b9c:	f240 80bf 	bls.w	8015d1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8015ba0:	4427      	add	r7, r4
 8015ba2:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8015ba6:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8015baa:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8015bae:	4283      	cmp	r3, r0
 8015bb0:	f340 80a1 	ble.w	8015cf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8015bb4:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8015bb8:	4406      	add	r6, r0
 8015bba:	b236      	sxth	r6, r6
 8015bbc:	429e      	cmp	r6, r3
 8015bbe:	bfa8      	it	ge
 8015bc0:	461e      	movge	r6, r3
 8015bc2:	46e1      	mov	r9, ip
 8015bc4:	f10c 0c01 	add.w	ip, ip, #1
 8015bc8:	e7e3      	b.n	8015b92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8015bca:	d10a      	bne.n	8015be2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8015bcc:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8015bd0:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8015bd4:	4562      	cmp	r2, ip
 8015bd6:	bfb8      	it	lt
 8015bd8:	4662      	movlt	r2, ip
 8015bda:	4288      	cmp	r0, r1
 8015bdc:	bfb8      	it	lt
 8015bde:	461f      	movlt	r7, r3
 8015be0:	e087      	b.n	8015cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015be2:	428a      	cmp	r2, r1
 8015be4:	bfb8      	it	lt
 8015be6:	460a      	movlt	r2, r1
 8015be8:	e083      	b.n	8015cf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015bea:	bf00      	nop
 8015bec:	2000ef5c 	.word	0x2000ef5c
 8015bf0:	2000ef68 	.word	0x2000ef68
 8015bf4:	20000060 	.word	0x20000060
 8015bf8:	2000ef1c 	.word	0x2000ef1c
 8015bfc:	2000ef12 	.word	0x2000ef12
 8015c00:	2000ef10 	.word	0x2000ef10
 8015c04:	2000ef1a 	.word	0x2000ef1a
 8015c08:	2000ef14 	.word	0x2000ef14
 8015c0c:	19a1      	adds	r1, r4, r6
 8015c0e:	ab07      	add	r3, sp, #28
 8015c10:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8015c14:	6849      	ldr	r1, [r1, #4]
 8015c16:	c303      	stmia	r3!, {r0, r1}
 8015c18:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015c1c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015c20:	2b13      	cmp	r3, #19
 8015c22:	bfd8      	it	le
 8015c24:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8015c28:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015c2c:	440b      	add	r3, r1
 8015c2e:	1a9b      	subs	r3, r3, r2
 8015c30:	a807      	add	r0, sp, #28
 8015c32:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015c36:	f7fe ff7b 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015c3a:	a807      	add	r0, sp, #28
 8015c3c:	f7f9 ff59 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015c40:	bb78      	cbnz	r0, 8015ca2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015c42:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8015c46:	f8d9 0000 	ldr.w	r0, [r9]
 8015c4a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015c4e:	f8d0 e000 	ldr.w	lr, [r0]
 8015c52:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8015c56:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015c5a:	f1bc 0f14 	cmp.w	ip, #20
 8015c5e:	bfa8      	it	ge
 8015c60:	f04f 0c14 	movge.w	ip, #20
 8015c64:	fa1f fc8c 	uxth.w	ip, ip
 8015c68:	f8cd c000 	str.w	ip, [sp]
 8015c6c:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8015c70:	47d8      	blx	fp
 8015c72:	4683      	mov	fp, r0
 8015c74:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015c78:	a807      	add	r0, sp, #28
 8015c7a:	f7fe ff3f 	bl	8014afc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015c7e:	6823      	ldr	r3, [r4, #0]
 8015c80:	4426      	add	r6, r4
 8015c82:	4620      	mov	r0, r4
 8015c84:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015c86:	a907      	add	r1, sp, #28
 8015c88:	4798      	blx	r3
 8015c8a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015c8e:	eba0 000b 	sub.w	r0, r0, fp
 8015c92:	b200      	sxth	r0, r0
 8015c94:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8015c98:	b918      	cbnz	r0, 8015ca2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015c9a:	b2b9      	uxth	r1, r7
 8015c9c:	4650      	mov	r0, sl
 8015c9e:	f7ff fa79 	bl	8015194 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015ca2:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8015ca6:	f1bb 0f00 	cmp.w	fp, #0
 8015caa:	f43f af2c 	beq.w	8015b06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015cae:	882b      	ldrh	r3, [r5, #0]
 8015cb0:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8015cb4:	3301      	adds	r3, #1
 8015cb6:	b29b      	uxth	r3, r3
 8015cb8:	2700      	movs	r7, #0
 8015cba:	b299      	uxth	r1, r3
 8015cbc:	458b      	cmp	fp, r1
 8015cbe:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8015cc2:	d9a3      	bls.n	8015c0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8015cc4:	4426      	add	r6, r4
 8015cc6:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8015cca:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8015cce:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015cd2:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8015cd6:	4408      	add	r0, r1
 8015cd8:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8015cdc:	4461      	add	r1, ip
 8015cde:	b200      	sxth	r0, r0
 8015ce0:	b209      	sxth	r1, r1
 8015ce2:	4288      	cmp	r0, r1
 8015ce4:	f6bf af71 	bge.w	8015bca <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8015ce8:	4584      	cmp	ip, r0
 8015cea:	4662      	mov	r2, ip
 8015cec:	461f      	mov	r7, r3
 8015cee:	bfb8      	it	lt
 8015cf0:	4602      	movlt	r2, r0
 8015cf2:	3301      	adds	r3, #1
 8015cf4:	e7e1      	b.n	8015cba <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8015cf6:	d10e      	bne.n	8015d16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8015cf8:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8015cfc:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8015d00:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8015d04:	4473      	add	r3, lr
 8015d06:	b21b      	sxth	r3, r3
 8015d08:	429e      	cmp	r6, r3
 8015d0a:	bfa8      	it	ge
 8015d0c:	461e      	movge	r6, r3
 8015d0e:	4287      	cmp	r7, r0
 8015d10:	bfb8      	it	lt
 8015d12:	46e1      	movlt	r9, ip
 8015d14:	e756      	b.n	8015bc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015d16:	4286      	cmp	r6, r0
 8015d18:	bfa8      	it	ge
 8015d1a:	4606      	movge	r6, r0
 8015d1c:	e752      	b.n	8015bc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015d1e:	eb0a 0007 	add.w	r0, sl, r7
 8015d22:	4427      	add	r7, r4
 8015d24:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015d28:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8015d2c:	f1bb 0f13 	cmp.w	fp, #19
 8015d30:	bfde      	ittt	le
 8015d32:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8015d36:	445e      	addle	r6, fp
 8015d38:	b236      	sxthle	r6, r6
 8015d3a:	f7f9 feda 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015d3e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8015d42:	2800      	cmp	r0, #0
 8015d44:	f47f af1a 	bne.w	8015b7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8015d48:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8015d4c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015d50:	482a      	ldr	r0, [pc, #168]	; (8015dfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8015d52:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8015d56:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8015d5a:	6800      	ldr	r0, [r0, #0]
 8015d5c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015d60:	1ab6      	subs	r6, r6, r2
 8015d62:	2e14      	cmp	r6, #20
 8015d64:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015d68:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015d6c:	bfa8      	it	ge
 8015d6e:	2614      	movge	r6, #20
 8015d70:	f8d0 c000 	ldr.w	ip, [r0]
 8015d74:	b2b6      	uxth	r6, r6
 8015d76:	fa1f fb8b 	uxth.w	fp, fp
 8015d7a:	455e      	cmp	r6, fp
 8015d7c:	bf94      	ite	ls
 8015d7e:	9600      	strls	r6, [sp, #0]
 8015d80:	f8cd b000 	strhi.w	fp, [sp]
 8015d84:	b292      	uxth	r2, r2
 8015d86:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8015d8a:	b29b      	uxth	r3, r3
 8015d8c:	b289      	uxth	r1, r1
 8015d8e:	47b0      	blx	r6
 8015d90:	6823      	ldr	r3, [r4, #0]
 8015d92:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015d96:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015d98:	a907      	add	r1, sp, #28
 8015d9a:	4620      	mov	r0, r4
 8015d9c:	4798      	blx	r3
 8015d9e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015da2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8015da6:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8015daa:	1a5b      	subs	r3, r3, r1
 8015dac:	440a      	add	r2, r1
 8015dae:	b21b      	sxth	r3, r3
 8015db0:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8015db4:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8015db8:	2b00      	cmp	r3, #0
 8015dba:	f47f aeda 	bne.w	8015b72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015dbe:	fa1f f189 	uxth.w	r1, r9
 8015dc2:	4650      	mov	r0, sl
 8015dc4:	f7ff f9e6 	bl	8015194 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015dc8:	e6d3      	b.n	8015b72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015dca:	882e      	ldrh	r6, [r5, #0]
 8015dcc:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015dd0:	42b3      	cmp	r3, r6
 8015dd2:	f67f ae98 	bls.w	8015b06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015dd6:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8015dda:	ab07      	add	r3, sp, #28
 8015ddc:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015de0:	6851      	ldr	r1, [r2, #4]
 8015de2:	c303      	stmia	r3!, {r0, r1}
 8015de4:	a807      	add	r0, sp, #28
 8015de6:	f7f9 fe84 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015dea:	b920      	cbnz	r0, 8015df6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8015dec:	6823      	ldr	r3, [r4, #0]
 8015dee:	a907      	add	r1, sp, #28
 8015df0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015df2:	4620      	mov	r0, r4
 8015df4:	4798      	blx	r3
 8015df6:	3601      	adds	r6, #1
 8015df8:	b2b6      	uxth	r6, r6
 8015dfa:	e7e7      	b.n	8015dcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8015dfc:	2000ef1c 	.word	0x2000ef1c

08015e00 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015e00:	4b03      	ldr	r3, [pc, #12]	; (8015e10 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015e02:	2200      	movs	r2, #0
 8015e04:	801a      	strh	r2, [r3, #0]
 8015e06:	805a      	strh	r2, [r3, #2]
 8015e08:	809a      	strh	r2, [r3, #4]
 8015e0a:	80da      	strh	r2, [r3, #6]
 8015e0c:	4770      	bx	lr
 8015e0e:	bf00      	nop
 8015e10:	2000ef68 	.word	0x2000ef68

08015e14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8015e14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e18:	4606      	mov	r6, r0
 8015e1a:	b09d      	sub	sp, #116	; 0x74
 8015e1c:	a803      	add	r0, sp, #12
 8015e1e:	4614      	mov	r4, r2
 8015e20:	468a      	mov	sl, r1
 8015e22:	461d      	mov	r5, r3
 8015e24:	f000 feca 	bl	8016bbc <_ZN8touchgfx12TextProviderC1Ev>
 8015e28:	6833      	ldr	r3, [r6, #0]
 8015e2a:	4630      	mov	r0, r6
 8015e2c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015e2e:	4798      	blx	r3
 8015e30:	6833      	ldr	r3, [r6, #0]
 8015e32:	4607      	mov	r7, r0
 8015e34:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015e36:	4630      	mov	r0, r6
 8015e38:	4798      	blx	r3
 8015e3a:	462a      	mov	r2, r5
 8015e3c:	9000      	str	r0, [sp, #0]
 8015e3e:	4621      	mov	r1, r4
 8015e40:	463b      	mov	r3, r7
 8015e42:	a803      	add	r0, sp, #12
 8015e44:	f000 ff15 	bl	8016c72 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015e48:	2500      	movs	r5, #0
 8015e4a:	462c      	mov	r4, r5
 8015e4c:	46a9      	mov	r9, r5
 8015e4e:	46a8      	mov	r8, r5
 8015e50:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8015e54:	2300      	movs	r3, #0
 8015e56:	9302      	str	r3, [sp, #8]
 8015e58:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015e5c:	429c      	cmp	r4, r3
 8015e5e:	d002      	beq.n	8015e66 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015e60:	455c      	cmp	r4, fp
 8015e62:	bf18      	it	ne
 8015e64:	4625      	movne	r5, r4
 8015e66:	ab02      	add	r3, sp, #8
 8015e68:	4632      	mov	r2, r6
 8015e6a:	4651      	mov	r1, sl
 8015e6c:	a803      	add	r0, sp, #12
 8015e6e:	f001 fa03 	bl	8017278 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015e72:	4604      	mov	r4, r0
 8015e74:	b108      	cbz	r0, 8015e7a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8015e76:	280a      	cmp	r0, #10
 8015e78:	d10a      	bne.n	8015e90 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8015e7a:	45c1      	cmp	r9, r8
 8015e7c:	bf38      	it	cc
 8015e7e:	46c1      	movcc	r9, r8
 8015e80:	f04f 0800 	mov.w	r8, #0
 8015e84:	2c00      	cmp	r4, #0
 8015e86:	d1e5      	bne.n	8015e54 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015e88:	4648      	mov	r0, r9
 8015e8a:	b01d      	add	sp, #116	; 0x74
 8015e8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e90:	9a02      	ldr	r2, [sp, #8]
 8015e92:	2a00      	cmp	r2, #0
 8015e94:	d0de      	beq.n	8015e54 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015e96:	7b57      	ldrb	r7, [r2, #13]
 8015e98:	6833      	ldr	r3, [r6, #0]
 8015e9a:	8894      	ldrh	r4, [r2, #4]
 8015e9c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015e9e:	007f      	lsls	r7, r7, #1
 8015ea0:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8015ea4:	7a97      	ldrb	r7, [r2, #10]
 8015ea6:	4629      	mov	r1, r5
 8015ea8:	4307      	orrs	r7, r0
 8015eaa:	4630      	mov	r0, r6
 8015eac:	4798      	blx	r3
 8015eae:	4438      	add	r0, r7
 8015eb0:	4480      	add	r8, r0
 8015eb2:	fa1f f888 	uxth.w	r8, r8
 8015eb6:	e7e5      	b.n	8015e84 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08015eb8 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8015eb8:	b508      	push	{r3, lr}
 8015eba:	6803      	ldr	r3, [r0, #0]
 8015ebc:	68db      	ldr	r3, [r3, #12]
 8015ebe:	4798      	blx	r3
 8015ec0:	b128      	cbz	r0, 8015ece <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8015ec2:	7b43      	ldrb	r3, [r0, #13]
 8015ec4:	7a80      	ldrb	r0, [r0, #10]
 8015ec6:	005b      	lsls	r3, r3, #1
 8015ec8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015ecc:	4318      	orrs	r0, r3
 8015ece:	bd08      	pop	{r3, pc}

08015ed0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8015ed0:	b40e      	push	{r1, r2, r3}
 8015ed2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015ed4:	b09e      	sub	sp, #120	; 0x78
 8015ed6:	ab23      	add	r3, sp, #140	; 0x8c
 8015ed8:	4605      	mov	r5, r0
 8015eda:	f853 4b04 	ldr.w	r4, [r3], #4
 8015ede:	9303      	str	r3, [sp, #12]
 8015ee0:	a805      	add	r0, sp, #20
 8015ee2:	f000 fe6b 	bl	8016bbc <_ZN8touchgfx12TextProviderC1Ev>
 8015ee6:	682b      	ldr	r3, [r5, #0]
 8015ee8:	4628      	mov	r0, r5
 8015eea:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015eec:	4798      	blx	r3
 8015eee:	682b      	ldr	r3, [r5, #0]
 8015ef0:	4606      	mov	r6, r0
 8015ef2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015ef4:	4628      	mov	r0, r5
 8015ef6:	4798      	blx	r3
 8015ef8:	4633      	mov	r3, r6
 8015efa:	ae1e      	add	r6, sp, #120	; 0x78
 8015efc:	4621      	mov	r1, r4
 8015efe:	9000      	str	r0, [sp, #0]
 8015f00:	9a03      	ldr	r2, [sp, #12]
 8015f02:	2400      	movs	r4, #0
 8015f04:	a805      	add	r0, sp, #20
 8015f06:	f000 feb4 	bl	8016c72 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015f0a:	f846 4d68 	str.w	r4, [r6, #-104]!
 8015f0e:	462a      	mov	r2, r5
 8015f10:	4633      	mov	r3, r6
 8015f12:	4621      	mov	r1, r4
 8015f14:	a805      	add	r0, sp, #20
 8015f16:	f001 f9af 	bl	8017278 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015f1a:	b1f0      	cbz	r0, 8015f5a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015f1c:	280a      	cmp	r0, #10
 8015f1e:	d018      	beq.n	8015f52 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015f20:	9f04      	ldr	r7, [sp, #16]
 8015f22:	b1b7      	cbz	r7, 8015f52 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015f24:	7b78      	ldrb	r0, [r7, #13]
 8015f26:	7a3b      	ldrb	r3, [r7, #8]
 8015f28:	88ea      	ldrh	r2, [r5, #6]
 8015f2a:	00c1      	lsls	r1, r0, #3
 8015f2c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015f30:	4319      	orrs	r1, r3
 8015f32:	0643      	lsls	r3, r0, #25
 8015f34:	bf44      	itt	mi
 8015f36:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8015f3a:	b219      	sxthmi	r1, r3
 8015f3c:	0100      	lsls	r0, r0, #4
 8015f3e:	79fb      	ldrb	r3, [r7, #7]
 8015f40:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015f44:	4303      	orrs	r3, r0
 8015f46:	4413      	add	r3, r2
 8015f48:	1a5b      	subs	r3, r3, r1
 8015f4a:	b21b      	sxth	r3, r3
 8015f4c:	429c      	cmp	r4, r3
 8015f4e:	bfb8      	it	lt
 8015f50:	461c      	movlt	r4, r3
 8015f52:	4633      	mov	r3, r6
 8015f54:	462a      	mov	r2, r5
 8015f56:	2100      	movs	r1, #0
 8015f58:	e7dc      	b.n	8015f14 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8015f5a:	b2a0      	uxth	r0, r4
 8015f5c:	b01e      	add	sp, #120	; 0x78
 8015f5e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015f62:	b003      	add	sp, #12
 8015f64:	4770      	bx	lr

08015f66 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8015f66:	7a43      	ldrb	r3, [r0, #9]
 8015f68:	8880      	ldrh	r0, [r0, #4]
 8015f6a:	4418      	add	r0, r3
 8015f6c:	b280      	uxth	r0, r0
 8015f6e:	4770      	bx	lr

08015f70 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8015f70:	6803      	ldr	r3, [r0, #0]
 8015f72:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015f74:	4718      	bx	r3

08015f76 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8015f76:	b40e      	push	{r1, r2, r3}
 8015f78:	b570      	push	{r4, r5, r6, lr}
 8015f7a:	b09d      	sub	sp, #116	; 0x74
 8015f7c:	ab21      	add	r3, sp, #132	; 0x84
 8015f7e:	4604      	mov	r4, r0
 8015f80:	f853 5b04 	ldr.w	r5, [r3], #4
 8015f84:	9302      	str	r3, [sp, #8]
 8015f86:	a803      	add	r0, sp, #12
 8015f88:	f000 fe18 	bl	8016bbc <_ZN8touchgfx12TextProviderC1Ev>
 8015f8c:	6823      	ldr	r3, [r4, #0]
 8015f8e:	4620      	mov	r0, r4
 8015f90:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015f92:	4798      	blx	r3
 8015f94:	6823      	ldr	r3, [r4, #0]
 8015f96:	4606      	mov	r6, r0
 8015f98:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015f9a:	4620      	mov	r0, r4
 8015f9c:	4798      	blx	r3
 8015f9e:	4633      	mov	r3, r6
 8015fa0:	9000      	str	r0, [sp, #0]
 8015fa2:	9a02      	ldr	r2, [sp, #8]
 8015fa4:	4629      	mov	r1, r5
 8015fa6:	a803      	add	r0, sp, #12
 8015fa8:	f000 fe63 	bl	8016c72 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015fac:	a803      	add	r0, sp, #12
 8015fae:	f001 fa31 	bl	8017414 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015fb2:	2401      	movs	r4, #1
 8015fb4:	b2a3      	uxth	r3, r4
 8015fb6:	b140      	cbz	r0, 8015fca <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8015fb8:	280a      	cmp	r0, #10
 8015fba:	bf08      	it	eq
 8015fbc:	3301      	addeq	r3, #1
 8015fbe:	a803      	add	r0, sp, #12
 8015fc0:	bf08      	it	eq
 8015fc2:	b21c      	sxtheq	r4, r3
 8015fc4:	f001 fa26 	bl	8017414 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015fc8:	e7f4      	b.n	8015fb4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8015fca:	4618      	mov	r0, r3
 8015fcc:	b01d      	add	sp, #116	; 0x74
 8015fce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015fd2:	b003      	add	sp, #12
 8015fd4:	4770      	bx	lr

08015fd6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8015fd6:	b40e      	push	{r1, r2, r3}
 8015fd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015fda:	b09e      	sub	sp, #120	; 0x78
 8015fdc:	ab23      	add	r3, sp, #140	; 0x8c
 8015fde:	4604      	mov	r4, r0
 8015fe0:	f853 5b04 	ldr.w	r5, [r3], #4
 8015fe4:	9303      	str	r3, [sp, #12]
 8015fe6:	a805      	add	r0, sp, #20
 8015fe8:	f000 fde8 	bl	8016bbc <_ZN8touchgfx12TextProviderC1Ev>
 8015fec:	6823      	ldr	r3, [r4, #0]
 8015fee:	4620      	mov	r0, r4
 8015ff0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015ff2:	4798      	blx	r3
 8015ff4:	6823      	ldr	r3, [r4, #0]
 8015ff6:	4606      	mov	r6, r0
 8015ff8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015ffa:	4620      	mov	r0, r4
 8015ffc:	4798      	blx	r3
 8015ffe:	4633      	mov	r3, r6
 8016000:	4629      	mov	r1, r5
 8016002:	9000      	str	r0, [sp, #0]
 8016004:	9a03      	ldr	r2, [sp, #12]
 8016006:	a805      	add	r0, sp, #20
 8016008:	ad1e      	add	r5, sp, #120	; 0x78
 801600a:	f000 fe32 	bl	8016c72 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801600e:	2100      	movs	r1, #0
 8016010:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016014:	4622      	mov	r2, r4
 8016016:	462b      	mov	r3, r5
 8016018:	a805      	add	r0, sp, #20
 801601a:	f001 f92d 	bl	8017278 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801601e:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8016022:	b1d8      	cbz	r0, 801605c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8016024:	280a      	cmp	r0, #10
 8016026:	d012      	beq.n	801604e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016028:	9804      	ldr	r0, [sp, #16]
 801602a:	b180      	cbz	r0, 801604e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801602c:	7b47      	ldrb	r7, [r0, #13]
 801602e:	88e2      	ldrh	r2, [r4, #6]
 8016030:	00fb      	lsls	r3, r7, #3
 8016032:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016036:	7a03      	ldrb	r3, [r0, #8]
 8016038:	430b      	orrs	r3, r1
 801603a:	0679      	lsls	r1, r7, #25
 801603c:	bf44      	itt	mi
 801603e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016042:	b21b      	sxthmi	r3, r3
 8016044:	1ad3      	subs	r3, r2, r3
 8016046:	b21b      	sxth	r3, r3
 8016048:	429e      	cmp	r6, r3
 801604a:	bfa8      	it	ge
 801604c:	461e      	movge	r6, r3
 801604e:	462b      	mov	r3, r5
 8016050:	4622      	mov	r2, r4
 8016052:	2100      	movs	r1, #0
 8016054:	a805      	add	r0, sp, #20
 8016056:	f001 f90f 	bl	8017278 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801605a:	e7e2      	b.n	8016022 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801605c:	4630      	mov	r0, r6
 801605e:	b01e      	add	sp, #120	; 0x78
 8016060:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016064:	b003      	add	sp, #12
 8016066:	4770      	bx	lr

08016068 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016068:	b513      	push	{r0, r1, r4, lr}
 801606a:	6803      	ldr	r3, [r0, #0]
 801606c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016070:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016074:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016078:	2400      	movs	r4, #0
 801607a:	9400      	str	r4, [sp, #0]
 801607c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016080:	691b      	ldr	r3, [r3, #16]
 8016082:	4669      	mov	r1, sp
 8016084:	4798      	blx	r3
 8016086:	b002      	add	sp, #8
 8016088:	bd10      	pop	{r4, pc}

0801608a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801608a:	b538      	push	{r3, r4, r5, lr}
 801608c:	680b      	ldr	r3, [r1, #0]
 801608e:	460c      	mov	r4, r1
 8016090:	68db      	ldr	r3, [r3, #12]
 8016092:	4605      	mov	r5, r0
 8016094:	4798      	blx	r3
 8016096:	6823      	ldr	r3, [r4, #0]
 8016098:	4620      	mov	r0, r4
 801609a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801609c:	4629      	mov	r1, r5
 801609e:	4798      	blx	r3
 80160a0:	4628      	mov	r0, r5
 80160a2:	bd38      	pop	{r3, r4, r5, pc}

080160a4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80160a4:	b410      	push	{r4}
 80160a6:	880a      	ldrh	r2, [r1, #0]
 80160a8:	8884      	ldrh	r4, [r0, #4]
 80160aa:	4422      	add	r2, r4
 80160ac:	800a      	strh	r2, [r1, #0]
 80160ae:	88c4      	ldrh	r4, [r0, #6]
 80160b0:	884a      	ldrh	r2, [r1, #2]
 80160b2:	4422      	add	r2, r4
 80160b4:	804a      	strh	r2, [r1, #2]
 80160b6:	6940      	ldr	r0, [r0, #20]
 80160b8:	b120      	cbz	r0, 80160c4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80160ba:	6803      	ldr	r3, [r0, #0]
 80160bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80160c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80160c2:	4718      	bx	r3
 80160c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80160c8:	4770      	bx	lr

080160ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80160ca:	b570      	push	{r4, r5, r6, lr}
 80160cc:	8882      	ldrh	r2, [r0, #4]
 80160ce:	880b      	ldrh	r3, [r1, #0]
 80160d0:	4413      	add	r3, r2
 80160d2:	800b      	strh	r3, [r1, #0]
 80160d4:	88c2      	ldrh	r2, [r0, #6]
 80160d6:	884b      	ldrh	r3, [r1, #2]
 80160d8:	460c      	mov	r4, r1
 80160da:	4413      	add	r3, r2
 80160dc:	804b      	strh	r3, [r1, #2]
 80160de:	4605      	mov	r5, r0
 80160e0:	1d01      	adds	r1, r0, #4
 80160e2:	4620      	mov	r0, r4
 80160e4:	f7f9 fcc2 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 80160e8:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80160ec:	2b00      	cmp	r3, #0
 80160ee:	dd0b      	ble.n	8016108 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80160f0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80160f4:	2b00      	cmp	r3, #0
 80160f6:	dd07      	ble.n	8016108 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80160f8:	6968      	ldr	r0, [r5, #20]
 80160fa:	b128      	cbz	r0, 8016108 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80160fc:	6803      	ldr	r3, [r0, #0]
 80160fe:	4621      	mov	r1, r4
 8016100:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016102:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016106:	4718      	bx	r3
 8016108:	bd70      	pop	{r4, r5, r6, pc}
	...

0801610c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801610c:	b570      	push	{r4, r5, r6, lr}
 801610e:	8882      	ldrh	r2, [r0, #4]
 8016110:	880b      	ldrh	r3, [r1, #0]
 8016112:	4413      	add	r3, r2
 8016114:	800b      	strh	r3, [r1, #0]
 8016116:	88c2      	ldrh	r2, [r0, #6]
 8016118:	884b      	ldrh	r3, [r1, #2]
 801611a:	460c      	mov	r4, r1
 801611c:	4413      	add	r3, r2
 801611e:	804b      	strh	r3, [r1, #2]
 8016120:	4605      	mov	r5, r0
 8016122:	1d01      	adds	r1, r0, #4
 8016124:	4620      	mov	r0, r4
 8016126:	f7f9 fca1 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 801612a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801612e:	2b00      	cmp	r3, #0
 8016130:	dd19      	ble.n	8016166 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016132:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016136:	2b00      	cmp	r3, #0
 8016138:	dd15      	ble.n	8016166 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801613a:	6968      	ldr	r0, [r5, #20]
 801613c:	b128      	cbz	r0, 801614a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801613e:	6803      	ldr	r3, [r0, #0]
 8016140:	4621      	mov	r1, r4
 8016142:	691b      	ldr	r3, [r3, #16]
 8016144:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016148:	4718      	bx	r3
 801614a:	4b07      	ldr	r3, [pc, #28]	; (8016168 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801614c:	681b      	ldr	r3, [r3, #0]
 801614e:	3304      	adds	r3, #4
 8016150:	429d      	cmp	r5, r3
 8016152:	d108      	bne.n	8016166 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016154:	f7fe fea0 	bl	8014e98 <_ZN8touchgfx11Application11getInstanceEv>
 8016158:	6803      	ldr	r3, [r0, #0]
 801615a:	6821      	ldr	r1, [r4, #0]
 801615c:	6862      	ldr	r2, [r4, #4]
 801615e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016160:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016164:	4718      	bx	r3
 8016166:	bd70      	pop	{r4, r5, r6, pc}
 8016168:	2000ef60 	.word	0x2000ef60

0801616c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801616c:	b570      	push	{r4, r5, r6, lr}
 801616e:	4604      	mov	r4, r0
 8016170:	4616      	mov	r6, r2
 8016172:	460d      	mov	r5, r1
 8016174:	b901      	cbnz	r1, 8016178 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8016176:	b192      	cbz	r2, 801619e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016178:	6823      	ldr	r3, [r4, #0]
 801617a:	4620      	mov	r0, r4
 801617c:	699b      	ldr	r3, [r3, #24]
 801617e:	4798      	blx	r3
 8016180:	88e2      	ldrh	r2, [r4, #6]
 8016182:	88a1      	ldrh	r1, [r4, #4]
 8016184:	4432      	add	r2, r6
 8016186:	4429      	add	r1, r5
 8016188:	4620      	mov	r0, r4
 801618a:	b212      	sxth	r2, r2
 801618c:	b209      	sxth	r1, r1
 801618e:	f7ec fd99 	bl	8002cc4 <_ZN8touchgfx8Drawable5setXYEss>
 8016192:	6823      	ldr	r3, [r4, #0]
 8016194:	4620      	mov	r0, r4
 8016196:	699b      	ldr	r3, [r3, #24]
 8016198:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801619c:	4718      	bx	r3
 801619e:	bd70      	pop	{r4, r5, r6, pc}

080161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80161a0:	b510      	push	{r4, lr}
 80161a2:	4604      	mov	r4, r0
 80161a4:	4608      	mov	r0, r1
 80161a6:	2300      	movs	r3, #0
 80161a8:	8023      	strh	r3, [r4, #0]
 80161aa:	8063      	strh	r3, [r4, #2]
 80161ac:	6803      	ldr	r3, [r0, #0]
 80161ae:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80161b2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80161b6:	80a1      	strh	r1, [r4, #4]
 80161b8:	80e2      	strh	r2, [r4, #6]
 80161ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80161bc:	4621      	mov	r1, r4
 80161be:	4798      	blx	r3
 80161c0:	4620      	mov	r0, r4
 80161c2:	bd10      	pop	{r4, pc}

080161c4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80161c4:	b530      	push	{r4, r5, lr}
 80161c6:	8083      	strh	r3, [r0, #4]
 80161c8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80161cc:	80c3      	strh	r3, [r0, #6]
 80161ce:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80161d2:	7203      	strb	r3, [r0, #8]
 80161d4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80161d8:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80161dc:	7243      	strb	r3, [r0, #9]
 80161de:	7a83      	ldrb	r3, [r0, #10]
 80161e0:	6141      	str	r1, [r0, #20]
 80161e2:	f365 0306 	bfi	r3, r5, #0, #7
 80161e6:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80161ea:	8302      	strh	r2, [r0, #24]
 80161ec:	f365 13c7 	bfi	r3, r5, #7, #1
 80161f0:	7283      	strb	r3, [r0, #10]
 80161f2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80161f6:	72c3      	strb	r3, [r0, #11]
 80161f8:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 80161fc:	7303      	strb	r3, [r0, #12]
 80161fe:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016202:	81c3      	strh	r3, [r0, #14]
 8016204:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016208:	8203      	strh	r3, [r0, #16]
 801620a:	4b01      	ldr	r3, [pc, #4]	; (8016210 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 801620c:	6003      	str	r3, [r0, #0]
 801620e:	bd30      	pop	{r4, r5, pc}
 8016210:	0802a678 	.word	0x0802a678

08016214 <_ZNK8touchgfx9ConstFont4findEt>:
 8016214:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016216:	6944      	ldr	r4, [r0, #20]
 8016218:	b3bc      	cbz	r4, 801628a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801621a:	88a3      	ldrh	r3, [r4, #4]
 801621c:	8b02      	ldrh	r2, [r0, #24]
 801621e:	1acb      	subs	r3, r1, r3
 8016220:	f102 32ff 	add.w	r2, r2, #4294967295
 8016224:	d431      	bmi.n	801628a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016226:	4293      	cmp	r3, r2
 8016228:	dd0c      	ble.n	8016244 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801622a:	230e      	movs	r3, #14
 801622c:	fb03 4302 	mla	r3, r3, r2, r4
 8016230:	889b      	ldrh	r3, [r3, #4]
 8016232:	1a5b      	subs	r3, r3, r1
 8016234:	1ad3      	subs	r3, r2, r3
 8016236:	429a      	cmp	r2, r3
 8016238:	db27      	blt.n	801628a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801623a:	2b00      	cmp	r3, #0
 801623c:	bfbc      	itt	lt
 801623e:	2302      	movlt	r3, #2
 8016240:	fb92 f3f3 	sdivlt	r3, r2, r3
 8016244:	2500      	movs	r5, #0
 8016246:	260e      	movs	r6, #14
 8016248:	4295      	cmp	r5, r2
 801624a:	dc1e      	bgt.n	801628a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801624c:	fb06 4003 	mla	r0, r6, r3, r4
 8016250:	8887      	ldrh	r7, [r0, #4]
 8016252:	42b9      	cmp	r1, r7
 8016254:	d01a      	beq.n	801628c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8016256:	d20d      	bcs.n	8016274 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016258:	1e5a      	subs	r2, r3, #1
 801625a:	4295      	cmp	r5, r2
 801625c:	dc15      	bgt.n	801628a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801625e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8016262:	1a5b      	subs	r3, r3, r1
 8016264:	1ad3      	subs	r3, r2, r3
 8016266:	429a      	cmp	r2, r3
 8016268:	db0f      	blt.n	801628a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801626a:	429d      	cmp	r5, r3
 801626c:	ddec      	ble.n	8016248 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801626e:	1953      	adds	r3, r2, r5
 8016270:	105b      	asrs	r3, r3, #1
 8016272:	e7e9      	b.n	8016248 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016274:	1c5d      	adds	r5, r3, #1
 8016276:	42aa      	cmp	r2, r5
 8016278:	db07      	blt.n	801628a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801627a:	8a43      	ldrh	r3, [r0, #18]
 801627c:	1acb      	subs	r3, r1, r3
 801627e:	442b      	add	r3, r5
 8016280:	429d      	cmp	r5, r3
 8016282:	dc02      	bgt.n	801628a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016284:	429a      	cmp	r2, r3
 8016286:	dadf      	bge.n	8016248 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016288:	e7f1      	b.n	801626e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801628a:	2000      	movs	r0, #0
 801628c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801628e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801628e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016290:	4604      	mov	r4, r0
 8016292:	4617      	mov	r7, r2
 8016294:	461e      	mov	r6, r3
 8016296:	b911      	cbnz	r1, 801629e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8016298:	2500      	movs	r5, #0
 801629a:	4628      	mov	r0, r5
 801629c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801629e:	290a      	cmp	r1, #10
 80162a0:	d0fa      	beq.n	8016298 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80162a2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80162a6:	4291      	cmp	r1, r2
 80162a8:	d0f6      	beq.n	8016298 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80162aa:	f242 020b 	movw	r2, #8203	; 0x200b
 80162ae:	4291      	cmp	r1, r2
 80162b0:	d0f2      	beq.n	8016298 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80162b2:	f7ff ffaf 	bl	8016214 <_ZNK8touchgfx9ConstFont4findEt>
 80162b6:	4605      	mov	r5, r0
 80162b8:	b950      	cbnz	r0, 80162d0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80162ba:	6823      	ldr	r3, [r4, #0]
 80162bc:	4620      	mov	r0, r4
 80162be:	691b      	ldr	r3, [r3, #16]
 80162c0:	4798      	blx	r3
 80162c2:	4601      	mov	r1, r0
 80162c4:	4620      	mov	r0, r4
 80162c6:	f7ff ffa5 	bl	8016214 <_ZNK8touchgfx9ConstFont4findEt>
 80162ca:	4605      	mov	r5, r0
 80162cc:	2800      	cmp	r0, #0
 80162ce:	d0e3      	beq.n	8016298 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80162d0:	6823      	ldr	r3, [r4, #0]
 80162d2:	4629      	mov	r1, r5
 80162d4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80162d6:	4620      	mov	r0, r4
 80162d8:	4798      	blx	r3
 80162da:	6038      	str	r0, [r7, #0]
 80162dc:	6823      	ldr	r3, [r4, #0]
 80162de:	4620      	mov	r0, r4
 80162e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80162e2:	4798      	blx	r3
 80162e4:	7030      	strb	r0, [r6, #0]
 80162e6:	e7d8      	b.n	801629a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080162e8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80162e8:	b538      	push	{r3, r4, r5, lr}
 80162ea:	4605      	mov	r5, r0
 80162ec:	f002 fb56 	bl	801899c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80162f0:	4604      	mov	r4, r0
 80162f2:	4628      	mov	r0, r5
 80162f4:	f002 fa96 	bl	8018824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80162f8:	2800      	cmp	r0, #0
 80162fa:	bf14      	ite	ne
 80162fc:	2002      	movne	r0, #2
 80162fe:	2000      	moveq	r0, #0
 8016300:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8016304:	b280      	uxth	r0, r0
 8016306:	bd38      	pop	{r3, r4, r5, pc}

08016308 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8016308:	b538      	push	{r3, r4, r5, lr}
 801630a:	4605      	mov	r5, r0
 801630c:	f002 fb46 	bl	801899c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016310:	4604      	mov	r4, r0
 8016312:	4628      	mov	r0, r5
 8016314:	f002 fa86 	bl	8018824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016318:	2800      	cmp	r0, #0
 801631a:	bf14      	ite	ne
 801631c:	2002      	movne	r0, #2
 801631e:	2000      	moveq	r0, #0
 8016320:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8016324:	f040 0001 	orr.w	r0, r0, #1
 8016328:	b280      	uxth	r0, r0
 801632a:	bd38      	pop	{r3, r4, r5, pc}

0801632c <_ZN8touchgfx4clzuEm>:
 801632c:	4603      	mov	r3, r0
 801632e:	b1c8      	cbz	r0, 8016364 <_ZN8touchgfx4clzuEm+0x38>
 8016330:	0c02      	lsrs	r2, r0, #16
 8016332:	0412      	lsls	r2, r2, #16
 8016334:	b9a2      	cbnz	r2, 8016360 <_ZN8touchgfx4clzuEm+0x34>
 8016336:	0403      	lsls	r3, r0, #16
 8016338:	2010      	movs	r0, #16
 801633a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801633e:	bf04      	itt	eq
 8016340:	021b      	lsleq	r3, r3, #8
 8016342:	3008      	addeq	r0, #8
 8016344:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8016348:	bf04      	itt	eq
 801634a:	011b      	lsleq	r3, r3, #4
 801634c:	3004      	addeq	r0, #4
 801634e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8016352:	bf04      	itt	eq
 8016354:	009b      	lsleq	r3, r3, #2
 8016356:	3002      	addeq	r0, #2
 8016358:	2b00      	cmp	r3, #0
 801635a:	db04      	blt.n	8016366 <_ZN8touchgfx4clzuEm+0x3a>
 801635c:	3001      	adds	r0, #1
 801635e:	4770      	bx	lr
 8016360:	2000      	movs	r0, #0
 8016362:	e7ea      	b.n	801633a <_ZN8touchgfx4clzuEm+0xe>
 8016364:	2020      	movs	r0, #32
 8016366:	4770      	bx	lr

08016368 <_ZN8touchgfx7muldivuEmmmRm>:
 8016368:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801636c:	460f      	mov	r7, r1
 801636e:	4615      	mov	r5, r2
 8016370:	461e      	mov	r6, r3
 8016372:	4601      	mov	r1, r0
 8016374:	b100      	cbz	r0, 8016378 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8016376:	b927      	cbnz	r7, 8016382 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8016378:	2000      	movs	r0, #0
 801637a:	6030      	str	r0, [r6, #0]
 801637c:	b002      	add	sp, #8
 801637e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016382:	f7ff ffd3 	bl	801632c <_ZN8touchgfx4clzuEm>
 8016386:	b980      	cbnz	r0, 80163aa <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8016388:	4638      	mov	r0, r7
 801638a:	f7ff ffcf 	bl	801632c <_ZN8touchgfx4clzuEm>
 801638e:	2800      	cmp	r0, #0
 8016390:	dd05      	ble.n	801639e <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8016392:	4633      	mov	r3, r6
 8016394:	462a      	mov	r2, r5
 8016396:	4638      	mov	r0, r7
 8016398:	f7ff ffe6 	bl	8016368 <_ZN8touchgfx7muldivuEmmmRm>
 801639c:	e7ee      	b.n	801637c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801639e:	f04f 33ff 	mov.w	r3, #4294967295
 80163a2:	6033      	str	r3, [r6, #0]
 80163a4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80163a8:	e7e8      	b.n	801637c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80163aa:	fa37 f800 	lsrs.w	r8, r7, r0
 80163ae:	fb07 f301 	mul.w	r3, r7, r1
 80163b2:	d105      	bne.n	80163c0 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80163b4:	fbb3 f0f5 	udiv	r0, r3, r5
 80163b8:	fb05 3510 	mls	r5, r5, r0, r3
 80163bc:	6035      	str	r5, [r6, #0]
 80163be:	e7dd      	b.n	801637c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80163c0:	2301      	movs	r3, #1
 80163c2:	fa01 fa00 	lsl.w	sl, r1, r0
 80163c6:	fa03 f000 	lsl.w	r0, r3, r0
 80163ca:	3801      	subs	r0, #1
 80163cc:	462a      	mov	r2, r5
 80163ce:	4633      	mov	r3, r6
 80163d0:	4038      	ands	r0, r7
 80163d2:	f7ff ffc9 	bl	8016368 <_ZN8touchgfx7muldivuEmmmRm>
 80163d6:	fbba f9f5 	udiv	r9, sl, r5
 80163da:	462a      	mov	r2, r5
 80163dc:	4607      	mov	r7, r0
 80163de:	ab01      	add	r3, sp, #4
 80163e0:	fb05 a119 	mls	r1, r5, r9, sl
 80163e4:	4640      	mov	r0, r8
 80163e6:	f7ff ffbf 	bl	8016368 <_ZN8touchgfx7muldivuEmmmRm>
 80163ea:	9b01      	ldr	r3, [sp, #4]
 80163ec:	6832      	ldr	r2, [r6, #0]
 80163ee:	fb08 f409 	mul.w	r4, r8, r9
 80163f2:	441a      	add	r2, r3
 80163f4:	fbb2 f3f5 	udiv	r3, r2, r5
 80163f8:	441c      	add	r4, r3
 80163fa:	443c      	add	r4, r7
 80163fc:	4420      	add	r0, r4
 80163fe:	fb05 2513 	mls	r5, r5, r3, r2
 8016402:	e7db      	b.n	80163bc <_ZN8touchgfx7muldivuEmmmRm+0x54>

08016404 <_ZN8touchgfx6muldivElllRl>:
 8016404:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016406:	2800      	cmp	r0, #0
 8016408:	bfba      	itte	lt
 801640a:	4240      	neglt	r0, r0
 801640c:	f04f 34ff 	movlt.w	r4, #4294967295
 8016410:	2401      	movge	r4, #1
 8016412:	2900      	cmp	r1, #0
 8016414:	bfbc      	itt	lt
 8016416:	4249      	neglt	r1, r1
 8016418:	4264      	neglt	r4, r4
 801641a:	2a00      	cmp	r2, #0
 801641c:	bfb6      	itet	lt
 801641e:	4265      	neglt	r5, r4
 8016420:	4625      	movge	r5, r4
 8016422:	4252      	neglt	r2, r2
 8016424:	4288      	cmp	r0, r1
 8016426:	461e      	mov	r6, r3
 8016428:	bfc2      	ittt	gt
 801642a:	4603      	movgt	r3, r0
 801642c:	4608      	movgt	r0, r1
 801642e:	4619      	movgt	r1, r3
 8016430:	ab01      	add	r3, sp, #4
 8016432:	f7ff ff99 	bl	8016368 <_ZN8touchgfx7muldivuEmmmRm>
 8016436:	9b01      	ldr	r3, [sp, #4]
 8016438:	4368      	muls	r0, r5
 801643a:	435c      	muls	r4, r3
 801643c:	6034      	str	r4, [r6, #0]
 801643e:	b002      	add	sp, #8
 8016440:	bd70      	pop	{r4, r5, r6, pc}

08016442 <_ZN8touchgfx6muldivElll>:
 8016442:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016444:	4606      	mov	r6, r0
 8016446:	ab01      	add	r3, sp, #4
 8016448:	460d      	mov	r5, r1
 801644a:	4614      	mov	r4, r2
 801644c:	f7ff ffda 	bl	8016404 <_ZN8touchgfx6muldivElllRl>
 8016450:	2e00      	cmp	r6, #0
 8016452:	db20      	blt.n	8016496 <_ZN8touchgfx6muldivElll+0x54>
 8016454:	bf14      	ite	ne
 8016456:	2301      	movne	r3, #1
 8016458:	2300      	moveq	r3, #0
 801645a:	2d00      	cmp	r5, #0
 801645c:	db1e      	blt.n	801649c <_ZN8touchgfx6muldivElll+0x5a>
 801645e:	bf14      	ite	ne
 8016460:	2201      	movne	r2, #1
 8016462:	2200      	moveq	r2, #0
 8016464:	2c00      	cmp	r4, #0
 8016466:	fb03 f202 	mul.w	r2, r3, r2
 801646a:	db1a      	blt.n	80164a2 <_ZN8touchgfx6muldivElll+0x60>
 801646c:	bf14      	ite	ne
 801646e:	2301      	movne	r3, #1
 8016470:	2300      	moveq	r3, #0
 8016472:	4353      	muls	r3, r2
 8016474:	2b01      	cmp	r3, #1
 8016476:	d117      	bne.n	80164a8 <_ZN8touchgfx6muldivElll+0x66>
 8016478:	9b01      	ldr	r3, [sp, #4]
 801647a:	2c00      	cmp	r4, #0
 801647c:	bfb8      	it	lt
 801647e:	4264      	neglt	r4, r4
 8016480:	2b00      	cmp	r3, #0
 8016482:	f104 0401 	add.w	r4, r4, #1
 8016486:	bfb8      	it	lt
 8016488:	425b      	neglt	r3, r3
 801648a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801648e:	db00      	blt.n	8016492 <_ZN8touchgfx6muldivElll+0x50>
 8016490:	3001      	adds	r0, #1
 8016492:	b002      	add	sp, #8
 8016494:	bd70      	pop	{r4, r5, r6, pc}
 8016496:	f04f 33ff 	mov.w	r3, #4294967295
 801649a:	e7de      	b.n	801645a <_ZN8touchgfx6muldivElll+0x18>
 801649c:	f04f 32ff 	mov.w	r2, #4294967295
 80164a0:	e7e0      	b.n	8016464 <_ZN8touchgfx6muldivElll+0x22>
 80164a2:	f04f 33ff 	mov.w	r3, #4294967295
 80164a6:	e7e4      	b.n	8016472 <_ZN8touchgfx6muldivElll+0x30>
 80164a8:	3301      	adds	r3, #1
 80164aa:	d1f2      	bne.n	8016492 <_ZN8touchgfx6muldivElll+0x50>
 80164ac:	9b01      	ldr	r3, [sp, #4]
 80164ae:	2c00      	cmp	r4, #0
 80164b0:	bfb8      	it	lt
 80164b2:	4264      	neglt	r4, r4
 80164b4:	2b00      	cmp	r3, #0
 80164b6:	bfb8      	it	lt
 80164b8:	425b      	neglt	r3, r3
 80164ba:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80164be:	bfc8      	it	gt
 80164c0:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80164c4:	e7e5      	b.n	8016492 <_ZN8touchgfx6muldivElll+0x50>

080164c6 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80164c6:	2000      	movs	r0, #0
 80164c8:	4770      	bx	lr

080164ca <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80164ca:	2001      	movs	r0, #1
 80164cc:	4770      	bx	lr

080164ce <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80164ce:	2002      	movs	r0, #2
 80164d0:	4770      	bx	lr

080164d2 <_ZN8touchgfx6ScreenD1Ev>:
 80164d2:	4770      	bx	lr

080164d4 <_ZN8touchgfx12GestureEventD1Ev>:
 80164d4:	4770      	bx	lr

080164d6 <_ZN8touchgfx9DragEventD1Ev>:
 80164d6:	4770      	bx	lr

080164d8 <_ZN8touchgfx10ClickEventD1Ev>:
 80164d8:	4770      	bx	lr

080164da <_ZN8touchgfx10ClickEventD0Ev>:
 80164da:	b510      	push	{r4, lr}
 80164dc:	210c      	movs	r1, #12
 80164de:	4604      	mov	r4, r0
 80164e0:	f010 f86e 	bl	80265c0 <_ZdlPvj>
 80164e4:	4620      	mov	r0, r4
 80164e6:	bd10      	pop	{r4, pc}

080164e8 <_ZN8touchgfx9DragEventD0Ev>:
 80164e8:	b510      	push	{r4, lr}
 80164ea:	2110      	movs	r1, #16
 80164ec:	4604      	mov	r4, r0
 80164ee:	f010 f867 	bl	80265c0 <_ZdlPvj>
 80164f2:	4620      	mov	r0, r4
 80164f4:	bd10      	pop	{r4, pc}

080164f6 <_ZN8touchgfx12GestureEventD0Ev>:
 80164f6:	b510      	push	{r4, lr}
 80164f8:	210c      	movs	r1, #12
 80164fa:	4604      	mov	r4, r0
 80164fc:	f010 f860 	bl	80265c0 <_ZdlPvj>
 8016500:	4620      	mov	r0, r4
 8016502:	bd10      	pop	{r4, pc}

08016504 <_ZN8touchgfx6ScreenD0Ev>:
 8016504:	b510      	push	{r4, lr}
 8016506:	213c      	movs	r1, #60	; 0x3c
 8016508:	4604      	mov	r4, r0
 801650a:	f010 f859 	bl	80265c0 <_ZdlPvj>
 801650e:	4620      	mov	r0, r4
 8016510:	bd10      	pop	{r4, pc}
	...

08016514 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8016514:	b530      	push	{r4, r5, lr}
 8016516:	460d      	mov	r5, r1
 8016518:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801651a:	b087      	sub	sp, #28
 801651c:	4604      	mov	r4, r0
 801651e:	b301      	cbz	r1, 8016562 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016520:	a801      	add	r0, sp, #4
 8016522:	f7ff fe3d 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016526:	892a      	ldrh	r2, [r5, #8]
 8016528:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801652c:	7928      	ldrb	r0, [r5, #4]
 801652e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8016532:	f88d 0010 	strb.w	r0, [sp, #16]
 8016536:	1ad2      	subs	r2, r2, r3
 8016538:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801653a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801653c:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016540:	441a      	add	r2, r3
 8016542:	896b      	ldrh	r3, [r5, #10]
 8016544:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016548:	f8ad 2014 	strh.w	r2, [sp, #20]
 801654c:	1b5b      	subs	r3, r3, r5
 801654e:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8016550:	442b      	add	r3, r5
 8016552:	4d05      	ldr	r5, [pc, #20]	; (8016568 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8016554:	9503      	str	r5, [sp, #12]
 8016556:	f8ad 3016 	strh.w	r3, [sp, #22]
 801655a:	6803      	ldr	r3, [r0, #0]
 801655c:	a903      	add	r1, sp, #12
 801655e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016560:	4798      	blx	r3
 8016562:	b007      	add	sp, #28
 8016564:	bd30      	pop	{r4, r5, pc}
 8016566:	bf00      	nop
 8016568:	0802a700 	.word	0x0802a700

0801656c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801656c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016570:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8016572:	b08a      	sub	sp, #40	; 0x28
 8016574:	4604      	mov	r4, r0
 8016576:	460d      	mov	r5, r1
 8016578:	b113      	cbz	r3, 8016580 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801657a:	790b      	ldrb	r3, [r1, #4]
 801657c:	2b00      	cmp	r3, #0
 801657e:	d044      	beq.n	801660a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016580:	f104 0804 	add.w	r8, r4, #4
 8016584:	4641      	mov	r1, r8
 8016586:	a803      	add	r0, sp, #12
 8016588:	f7ff fe0a 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801658c:	792b      	ldrb	r3, [r5, #4]
 801658e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8016592:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8016596:	b983      	cbnz	r3, 80165ba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016598:	892a      	ldrh	r2, [r5, #8]
 801659a:	88e9      	ldrh	r1, [r5, #6]
 801659c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80165a0:	1b92      	subs	r2, r2, r6
 80165a2:	1bc9      	subs	r1, r1, r7
 80165a4:	9301      	str	r3, [sp, #4]
 80165a6:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80165aa:	9300      	str	r3, [sp, #0]
 80165ac:	b212      	sxth	r2, r2
 80165ae:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80165b2:	b209      	sxth	r1, r1
 80165b4:	4640      	mov	r0, r8
 80165b6:	f7f9 f975 	bl	800f8a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80165ba:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80165bc:	b329      	cbz	r1, 801660a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80165be:	a805      	add	r0, sp, #20
 80165c0:	f7ff fdee 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80165c4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80165c8:	792b      	ldrb	r3, [r5, #4]
 80165ca:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80165cc:	f88d 3020 	strb.w	r3, [sp, #32]
 80165d0:	1abf      	subs	r7, r7, r2
 80165d2:	88ea      	ldrh	r2, [r5, #6]
 80165d4:	4417      	add	r7, r2
 80165d6:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80165d8:	4417      	add	r7, r2
 80165da:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80165de:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80165e2:	1ab6      	subs	r6, r6, r2
 80165e4:	892a      	ldrh	r2, [r5, #8]
 80165e6:	4416      	add	r6, r2
 80165e8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80165ea:	4416      	add	r6, r2
 80165ec:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80165f0:	4a07      	ldr	r2, [pc, #28]	; (8016610 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80165f2:	9207      	str	r2, [sp, #28]
 80165f4:	2600      	movs	r6, #0
 80165f6:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80165fa:	6803      	ldr	r3, [r0, #0]
 80165fc:	a907      	add	r1, sp, #28
 80165fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016600:	4798      	blx	r3
 8016602:	792b      	ldrb	r3, [r5, #4]
 8016604:	b10b      	cbz	r3, 801660a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016606:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801660a:	b00a      	add	sp, #40	; 0x28
 801660c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016610:	0802a6d8 	.word	0x0802a6d8

08016614 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8016614:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016618:	460c      	mov	r4, r1
 801661a:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801661c:	b088      	sub	sp, #32
 801661e:	4605      	mov	r5, r0
 8016620:	2900      	cmp	r1, #0
 8016622:	d06d      	beq.n	8016700 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8016624:	4668      	mov	r0, sp
 8016626:	f7ff fdbb 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801662a:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801662c:	88e3      	ldrh	r3, [r4, #6]
 801662e:	f9bd 8000 	ldrsh.w	r8, [sp]
 8016632:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8016636:	440b      	add	r3, r1
 8016638:	b21b      	sxth	r3, r3
 801663a:	4543      	cmp	r3, r8
 801663c:	db31      	blt.n	80166a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801663e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8016642:	44c4      	add	ip, r8
 8016644:	fa0f fc8c 	sxth.w	ip, ip
 8016648:	4563      	cmp	r3, ip
 801664a:	da2a      	bge.n	80166a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801664c:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801664e:	8926      	ldrh	r6, [r4, #8]
 8016650:	4416      	add	r6, r2
 8016652:	b236      	sxth	r6, r6
 8016654:	42be      	cmp	r6, r7
 8016656:	db24      	blt.n	80166a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016658:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801665c:	4438      	add	r0, r7
 801665e:	b200      	sxth	r0, r0
 8016660:	4286      	cmp	r6, r0
 8016662:	da1e      	bge.n	80166a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016664:	8963      	ldrh	r3, [r4, #10]
 8016666:	4419      	add	r1, r3
 8016668:	b209      	sxth	r1, r1
 801666a:	4541      	cmp	r1, r8
 801666c:	db08      	blt.n	8016680 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801666e:	4561      	cmp	r1, ip
 8016670:	da06      	bge.n	8016680 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016672:	89a3      	ldrh	r3, [r4, #12]
 8016674:	441a      	add	r2, r3
 8016676:	b212      	sxth	r2, r2
 8016678:	42ba      	cmp	r2, r7
 801667a:	db01      	blt.n	8016680 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801667c:	4282      	cmp	r2, r0
 801667e:	db10      	blt.n	80166a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016680:	4b21      	ldr	r3, [pc, #132]	; (8016708 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8016682:	9304      	str	r3, [sp, #16]
 8016684:	2302      	movs	r3, #2
 8016686:	f88d 3014 	strb.w	r3, [sp, #20]
 801668a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801668c:	2300      	movs	r3, #0
 801668e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016692:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016696:	f8ad 301a 	strh.w	r3, [sp, #26]
 801669a:	6803      	ldr	r3, [r0, #0]
 801669c:	a904      	add	r1, sp, #16
 801669e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80166a0:	4798      	blx	r3
 80166a2:	1d29      	adds	r1, r5, #4
 80166a4:	a802      	add	r0, sp, #8
 80166a6:	f7ff fd7b 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80166aa:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80166ae:	88e0      	ldrh	r0, [r4, #6]
 80166b0:	7921      	ldrb	r1, [r4, #4]
 80166b2:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80166b6:	8922      	ldrh	r2, [r4, #8]
 80166b8:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80166ba:	f88d 1014 	strb.w	r1, [sp, #20]
 80166be:	eba3 0808 	sub.w	r8, r3, r8
 80166c2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80166c6:	1bdf      	subs	r7, r3, r7
 80166c8:	b2bb      	uxth	r3, r7
 80166ca:	fa1f f888 	uxth.w	r8, r8
 80166ce:	8967      	ldrh	r7, [r4, #10]
 80166d0:	89a4      	ldrh	r4, [r4, #12]
 80166d2:	4440      	add	r0, r8
 80166d4:	4460      	add	r0, ip
 80166d6:	441a      	add	r2, r3
 80166d8:	44b8      	add	r8, r7
 80166da:	4423      	add	r3, r4
 80166dc:	f8ad 0016 	strh.w	r0, [sp, #22]
 80166e0:	4433      	add	r3, r6
 80166e2:	4432      	add	r2, r6
 80166e4:	44e0      	add	r8, ip
 80166e6:	4c09      	ldr	r4, [pc, #36]	; (801670c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80166e8:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80166ea:	9404      	str	r4, [sp, #16]
 80166ec:	f8ad 2018 	strh.w	r2, [sp, #24]
 80166f0:	f8ad 801a 	strh.w	r8, [sp, #26]
 80166f4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80166f8:	6803      	ldr	r3, [r0, #0]
 80166fa:	a904      	add	r1, sp, #16
 80166fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80166fe:	4798      	blx	r3
 8016700:	b008      	add	sp, #32
 8016702:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016706:	bf00      	nop
 8016708:	0802a6d8 	.word	0x0802a6d8
 801670c:	0802a6ec 	.word	0x0802a6ec

08016710 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016710:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016712:	4604      	mov	r4, r0
 8016714:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016718:	3201      	adds	r2, #1
 801671a:	d112      	bne.n	8016742 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801671c:	6803      	ldr	r3, [r0, #0]
 801671e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016722:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016726:	f8ad 1004 	strh.w	r1, [sp, #4]
 801672a:	2500      	movs	r5, #0
 801672c:	9500      	str	r5, [sp, #0]
 801672e:	466d      	mov	r5, sp
 8016730:	4629      	mov	r1, r5
 8016732:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016736:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016738:	4798      	blx	r3
 801673a:	e895 0003 	ldmia.w	r5, {r0, r1}
 801673e:	e884 0003 	stmia.w	r4, {r0, r1}
 8016742:	4620      	mov	r0, r4
 8016744:	b003      	add	sp, #12
 8016746:	bd30      	pop	{r4, r5, pc}

08016748 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016748:	b513      	push	{r0, r1, r4, lr}
 801674a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801674e:	3301      	adds	r3, #1
 8016750:	4604      	mov	r4, r0
 8016752:	d109      	bne.n	8016768 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8016754:	4601      	mov	r1, r0
 8016756:	4668      	mov	r0, sp
 8016758:	f7ff fd22 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801675c:	f8bd 3000 	ldrh.w	r3, [sp]
 8016760:	8423      	strh	r3, [r4, #32]
 8016762:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016766:	8463      	strh	r3, [r4, #34]	; 0x22
 8016768:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801676c:	b002      	add	sp, #8
 801676e:	bd10      	pop	{r4, pc}

08016770 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016770:	b513      	push	{r0, r1, r4, lr}
 8016772:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8016776:	3301      	adds	r3, #1
 8016778:	4604      	mov	r4, r0
 801677a:	d109      	bne.n	8016790 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801677c:	4601      	mov	r1, r0
 801677e:	4668      	mov	r0, sp
 8016780:	f7ff fd0e 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016784:	f8bd 3000 	ldrh.w	r3, [sp]
 8016788:	8423      	strh	r3, [r4, #32]
 801678a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801678e:	8463      	strh	r3, [r4, #34]	; 0x22
 8016790:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8016794:	b002      	add	sp, #8
 8016796:	bd10      	pop	{r4, pc}

08016798 <_ZN8touchgfx6ScreenC1Ev>:
 8016798:	b570      	push	{r4, r5, r6, lr}
 801679a:	4605      	mov	r5, r0
 801679c:	4b16      	ldr	r3, [pc, #88]	; (80167f8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801679e:	f845 3b04 	str.w	r3, [r5], #4
 80167a2:	2300      	movs	r3, #0
 80167a4:	8103      	strh	r3, [r0, #8]
 80167a6:	8143      	strh	r3, [r0, #10]
 80167a8:	8183      	strh	r3, [r0, #12]
 80167aa:	81c3      	strh	r3, [r0, #14]
 80167ac:	8203      	strh	r3, [r0, #16]
 80167ae:	8243      	strh	r3, [r0, #18]
 80167b0:	8283      	strh	r3, [r0, #20]
 80167b2:	82c3      	strh	r3, [r0, #22]
 80167b4:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80167b8:	6203      	str	r3, [r0, #32]
 80167ba:	8483      	strh	r3, [r0, #36]	; 0x24
 80167bc:	84c3      	strh	r3, [r0, #38]	; 0x26
 80167be:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80167c2:	4a0e      	ldr	r2, [pc, #56]	; (80167fc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80167c4:	6343      	str	r3, [r0, #52]	; 0x34
 80167c6:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80167ca:	4b0d      	ldr	r3, [pc, #52]	; (8016800 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80167cc:	6042      	str	r2, [r0, #4]
 80167ce:	f9b3 6000 	ldrsh.w	r6, [r3]
 80167d2:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80167d4:	4a0b      	ldr	r2, [pc, #44]	; (8016804 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80167d6:	4604      	mov	r4, r0
 80167d8:	2101      	movs	r1, #1
 80167da:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80167de:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80167e2:	f9b2 1000 	ldrsh.w	r1, [r2]
 80167e6:	4628      	mov	r0, r5
 80167e8:	4798      	blx	r3
 80167ea:	6863      	ldr	r3, [r4, #4]
 80167ec:	4628      	mov	r0, r5
 80167ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80167f0:	4631      	mov	r1, r6
 80167f2:	4798      	blx	r3
 80167f4:	4620      	mov	r0, r4
 80167f6:	bd70      	pop	{r4, r5, r6, pc}
 80167f8:	0802a714 	.word	0x0802a714
 80167fc:	08029f18 	.word	0x08029f18
 8016800:	2000ef12 	.word	0x2000ef12
 8016804:	2000ef10 	.word	0x2000ef10

08016808 <_ZN8touchgfx6Screen4drawEv>:
 8016808:	b507      	push	{r0, r1, r2, lr}
 801680a:	4b09      	ldr	r3, [pc, #36]	; (8016830 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801680c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016810:	4b08      	ldr	r3, [pc, #32]	; (8016834 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8016812:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016816:	f9b3 3000 	ldrsh.w	r3, [r3]
 801681a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801681e:	6803      	ldr	r3, [r0, #0]
 8016820:	2100      	movs	r1, #0
 8016822:	9100      	str	r1, [sp, #0]
 8016824:	689b      	ldr	r3, [r3, #8]
 8016826:	4669      	mov	r1, sp
 8016828:	4798      	blx	r3
 801682a:	b003      	add	sp, #12
 801682c:	f85d fb04 	ldr.w	pc, [sp], #4
 8016830:	2000ef10 	.word	0x2000ef10
 8016834:	2000ef12 	.word	0x2000ef12

08016838 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801683c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016840:	2b00      	cmp	r3, #0
 8016842:	b089      	sub	sp, #36	; 0x24
 8016844:	4680      	mov	r8, r0
 8016846:	460c      	mov	r4, r1
 8016848:	4615      	mov	r5, r2
 801684a:	dd0e      	ble.n	801686a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801684c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016850:	2b00      	cmp	r3, #0
 8016852:	dd0a      	ble.n	801686a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016854:	4628      	mov	r0, r5
 8016856:	f7ff ff5b 	bl	8016710 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801685a:	4621      	mov	r1, r4
 801685c:	f7fe fa3d 	bl	8014cda <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016860:	69eb      	ldr	r3, [r5, #28]
 8016862:	b928      	cbnz	r0, 8016870 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8016864:	461d      	mov	r5, r3
 8016866:	2b00      	cmp	r3, #0
 8016868:	d1f4      	bne.n	8016854 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801686a:	b009      	add	sp, #36	; 0x24
 801686c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016870:	ae04      	add	r6, sp, #16
 8016872:	2b00      	cmp	r3, #0
 8016874:	f000 80b5 	beq.w	80169e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016878:	682b      	ldr	r3, [r5, #0]
 801687a:	4629      	mov	r1, r5
 801687c:	68db      	ldr	r3, [r3, #12]
 801687e:	a802      	add	r0, sp, #8
 8016880:	4798      	blx	r3
 8016882:	4628      	mov	r0, r5
 8016884:	f7ff ff60 	bl	8016748 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016888:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801688c:	4407      	add	r7, r0
 801688e:	4628      	mov	r0, r5
 8016890:	f7ff ff6e 	bl	8016770 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016894:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016898:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801689c:	f8ad 2014 	strh.w	r2, [sp, #20]
 80168a0:	4418      	add	r0, r3
 80168a2:	4621      	mov	r1, r4
 80168a4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80168a8:	f8ad 0012 	strh.w	r0, [sp, #18]
 80168ac:	b23f      	sxth	r7, r7
 80168ae:	4630      	mov	r0, r6
 80168b0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80168b4:	f8ad 7010 	strh.w	r7, [sp, #16]
 80168b8:	f7f9 f8d8 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 80168bc:	4628      	mov	r0, r5
 80168be:	f7ff ff27 	bl	8016710 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80168c2:	4602      	mov	r2, r0
 80168c4:	e896 0003 	ldmia.w	r6, {r0, r1}
 80168c8:	ab06      	add	r3, sp, #24
 80168ca:	e883 0003 	stmia.w	r3, {r0, r1}
 80168ce:	4611      	mov	r1, r2
 80168d0:	4618      	mov	r0, r3
 80168d2:	f7f9 f8cb 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 80168d6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80168da:	f9b4 1000 	ldrsh.w	r1, [r4]
 80168de:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80168e2:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80168e6:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80168ea:	4299      	cmp	r1, r3
 80168ec:	d10b      	bne.n	8016906 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80168ee:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80168f2:	4552      	cmp	r2, sl
 80168f4:	d107      	bne.n	8016906 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80168f6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80168fa:	455a      	cmp	r2, fp
 80168fc:	d103      	bne.n	8016906 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80168fe:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8016902:	454a      	cmp	r2, r9
 8016904:	d06d      	beq.n	80169e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016906:	f1bb 0f00 	cmp.w	fp, #0
 801690a:	dd65      	ble.n	80169d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801690c:	f1b9 0f00 	cmp.w	r9, #0
 8016910:	dd62      	ble.n	80169d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016912:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016916:	fa1f f08a 	uxth.w	r0, sl
 801691a:	4552      	cmp	r2, sl
 801691c:	9000      	str	r0, [sp, #0]
 801691e:	da12      	bge.n	8016946 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016920:	9301      	str	r3, [sp, #4]
 8016922:	9b00      	ldr	r3, [sp, #0]
 8016924:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016928:	f8ad 2012 	strh.w	r2, [sp, #18]
 801692c:	1a9a      	subs	r2, r3, r2
 801692e:	f8ad 1010 	strh.w	r1, [sp, #16]
 8016932:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016936:	f8ad 2016 	strh.w	r2, [sp, #22]
 801693a:	69ea      	ldr	r2, [r5, #28]
 801693c:	4631      	mov	r1, r6
 801693e:	4640      	mov	r0, r8
 8016940:	f7ff ff7a 	bl	8016838 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016944:	9b01      	ldr	r3, [sp, #4]
 8016946:	f9b4 2000 	ldrsh.w	r2, [r4]
 801694a:	429a      	cmp	r2, r3
 801694c:	b29f      	uxth	r7, r3
 801694e:	da0d      	bge.n	801696c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016950:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016954:	1aba      	subs	r2, r7, r2
 8016956:	f8ad a012 	strh.w	sl, [sp, #18]
 801695a:	f8ad 2014 	strh.w	r2, [sp, #20]
 801695e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016962:	69ea      	ldr	r2, [r5, #28]
 8016964:	4631      	mov	r1, r6
 8016966:	4640      	mov	r0, r8
 8016968:	f7ff ff66 	bl	8016838 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801696c:	8822      	ldrh	r2, [r4, #0]
 801696e:	88a3      	ldrh	r3, [r4, #4]
 8016970:	445f      	add	r7, fp
 8016972:	4413      	add	r3, r2
 8016974:	b29b      	uxth	r3, r3
 8016976:	b2bf      	uxth	r7, r7
 8016978:	b23a      	sxth	r2, r7
 801697a:	b219      	sxth	r1, r3
 801697c:	4291      	cmp	r1, r2
 801697e:	dd0d      	ble.n	801699c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016980:	1bdb      	subs	r3, r3, r7
 8016982:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016986:	f8ad a012 	strh.w	sl, [sp, #18]
 801698a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801698e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016992:	69ea      	ldr	r2, [r5, #28]
 8016994:	4631      	mov	r1, r6
 8016996:	4640      	mov	r0, r8
 8016998:	f7ff ff4e 	bl	8016838 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801699c:	88e2      	ldrh	r2, [r4, #6]
 801699e:	8863      	ldrh	r3, [r4, #2]
 80169a0:	4413      	add	r3, r2
 80169a2:	9a00      	ldr	r2, [sp, #0]
 80169a4:	444a      	add	r2, r9
 80169a6:	b29b      	uxth	r3, r3
 80169a8:	fa1f f982 	uxth.w	r9, r2
 80169ac:	fa0f f289 	sxth.w	r2, r9
 80169b0:	b219      	sxth	r1, r3
 80169b2:	428a      	cmp	r2, r1
 80169b4:	da15      	bge.n	80169e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80169b6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80169ba:	f9b4 0000 	ldrsh.w	r0, [r4]
 80169be:	f8ad 1014 	strh.w	r1, [sp, #20]
 80169c2:	eba3 0309 	sub.w	r3, r3, r9
 80169c6:	f8ad 0010 	strh.w	r0, [sp, #16]
 80169ca:	f8ad 2012 	strh.w	r2, [sp, #18]
 80169ce:	f8ad 3016 	strh.w	r3, [sp, #22]
 80169d2:	69ea      	ldr	r2, [r5, #28]
 80169d4:	4631      	mov	r1, r6
 80169d6:	e001      	b.n	80169dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80169d8:	69ea      	ldr	r2, [r5, #28]
 80169da:	4621      	mov	r1, r4
 80169dc:	4640      	mov	r0, r8
 80169de:	f7ff ff2b 	bl	8016838 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80169e2:	4628      	mov	r0, r5
 80169e4:	f7ff fe94 	bl	8016710 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80169e8:	6861      	ldr	r1, [r4, #4]
 80169ea:	4602      	mov	r2, r0
 80169ec:	6820      	ldr	r0, [r4, #0]
 80169ee:	4633      	mov	r3, r6
 80169f0:	c303      	stmia	r3!, {r0, r1}
 80169f2:	4611      	mov	r1, r2
 80169f4:	4630      	mov	r0, r6
 80169f6:	f7f9 f839 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 80169fa:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80169fe:	2b00      	cmp	r3, #0
 8016a00:	f77f af33 	ble.w	801686a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016a04:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016a08:	2b00      	cmp	r3, #0
 8016a0a:	f77f af2e 	ble.w	801686a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016a0e:	4628      	mov	r0, r5
 8016a10:	f7ff fe9a 	bl	8016748 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016a14:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016a18:	1a18      	subs	r0, r3, r0
 8016a1a:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016a1e:	4628      	mov	r0, r5
 8016a20:	f7ff fea6 	bl	8016770 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016a24:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016a28:	1a18      	subs	r0, r3, r0
 8016a2a:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016a2e:	682b      	ldr	r3, [r5, #0]
 8016a30:	4631      	mov	r1, r6
 8016a32:	689b      	ldr	r3, [r3, #8]
 8016a34:	4628      	mov	r0, r5
 8016a36:	4798      	blx	r3
 8016a38:	e717      	b.n	801686a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016a3a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016a3a:	b570      	push	{r4, r5, r6, lr}
 8016a3c:	460c      	mov	r4, r1
 8016a3e:	b086      	sub	sp, #24
 8016a40:	1d06      	adds	r6, r0, #4
 8016a42:	2300      	movs	r3, #0
 8016a44:	4631      	mov	r1, r6
 8016a46:	4605      	mov	r5, r0
 8016a48:	a802      	add	r0, sp, #8
 8016a4a:	9301      	str	r3, [sp, #4]
 8016a4c:	f7ff fba8 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016a50:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016a54:	8822      	ldrh	r2, [r4, #0]
 8016a56:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016a5a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016a5e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016a62:	1ad2      	subs	r2, r2, r3
 8016a64:	8863      	ldrh	r3, [r4, #2]
 8016a66:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016a6a:	1a5b      	subs	r3, r3, r1
 8016a6c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016a70:	f8ad 1016 	strh.w	r1, [sp, #22]
 8016a74:	aa01      	add	r2, sp, #4
 8016a76:	a904      	add	r1, sp, #16
 8016a78:	4630      	mov	r0, r6
 8016a7a:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016a7e:	f7f9 f8cd 	bl	800fc1c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8016a82:	9a01      	ldr	r2, [sp, #4]
 8016a84:	b11a      	cbz	r2, 8016a8e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8016a86:	4621      	mov	r1, r4
 8016a88:	4628      	mov	r0, r5
 8016a8a:	f7ff fed5 	bl	8016838 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016a8e:	b006      	add	sp, #24
 8016a90:	bd70      	pop	{r4, r5, r6, pc}

08016a92 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8016a92:	b530      	push	{r4, r5, lr}
 8016a94:	4602      	mov	r2, r0
 8016a96:	4604      	mov	r4, r0
 8016a98:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016a9c:	b085      	sub	sp, #20
 8016a9e:	460d      	mov	r5, r1
 8016aa0:	6851      	ldr	r1, [r2, #4]
 8016aa2:	466b      	mov	r3, sp
 8016aa4:	c303      	stmia	r3!, {r0, r1}
 8016aa6:	4629      	mov	r1, r5
 8016aa8:	4668      	mov	r0, sp
 8016aaa:	f7f8 ffdf 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 8016aae:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016ab2:	b12b      	cbz	r3, 8016ac0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8016ab4:	4669      	mov	r1, sp
 8016ab6:	4620      	mov	r0, r4
 8016ab8:	f7ff ffbf 	bl	8016a3a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016abc:	b005      	add	sp, #20
 8016abe:	bd30      	pop	{r4, r5, pc}
 8016ac0:	3404      	adds	r4, #4
 8016ac2:	4621      	mov	r1, r4
 8016ac4:	a802      	add	r0, sp, #8
 8016ac6:	f7ff fb6b 	bl	80161a0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016aca:	f8bd 3000 	ldrh.w	r3, [sp]
 8016ace:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016ad2:	1a9b      	subs	r3, r3, r2
 8016ad4:	f8ad 3000 	strh.w	r3, [sp]
 8016ad8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016adc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016ae0:	4669      	mov	r1, sp
 8016ae2:	1a9b      	subs	r3, r3, r2
 8016ae4:	4620      	mov	r0, r4
 8016ae6:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016aea:	f7f9 f85e 	bl	800fbaa <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016aee:	e7e5      	b.n	8016abc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016af0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016af0:	680a      	ldr	r2, [r1, #0]
 8016af2:	460b      	mov	r3, r1
 8016af4:	6992      	ldr	r2, [r2, #24]
 8016af6:	1d01      	adds	r1, r0, #4
 8016af8:	4618      	mov	r0, r3
 8016afa:	4710      	bx	r2

08016afc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8016afc:	4298      	cmp	r0, r3
 8016afe:	d200      	bcs.n	8016b02 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016b00:	b913      	cbnz	r3, 8016b08 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8016b02:	440a      	add	r2, r1
 8016b04:	b210      	sxth	r0, r2
 8016b06:	4770      	bx	lr
 8016b08:	ee07 0a90 	vmov	s15, r0
 8016b0c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016b10:	ee07 3a90 	vmov	s15, r3
 8016b14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016b18:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016b1c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016b20:	ee37 7a66 	vsub.f32	s14, s14, s13
 8016b24:	ee07 2a90 	vmov	s15, r2
 8016b28:	ee67 5a07 	vmul.f32	s11, s14, s14
 8016b2c:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016b30:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016b34:	ee07 1a90 	vmov	s15, r1
 8016b38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016b3c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016b40:	eee6 7a26 	vfma.f32	s15, s12, s13
 8016b44:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016b48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b4c:	bfcc      	ite	gt
 8016b4e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016b52:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016b56:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016b5a:	ee17 3a90 	vmov	r3, s15
 8016b5e:	b218      	sxth	r0, r3
 8016b60:	4770      	bx	lr

08016b62 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8016b62:	4298      	cmp	r0, r3
 8016b64:	d200      	bcs.n	8016b68 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8016b66:	b913      	cbnz	r3, 8016b6e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8016b68:	440a      	add	r2, r1
 8016b6a:	b210      	sxth	r0, r2
 8016b6c:	4770      	bx	lr
 8016b6e:	ee07 2a90 	vmov	s15, r2
 8016b72:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8016b76:	ee07 0a90 	vmov	s15, r0
 8016b7a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8016b7e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8016b82:	ee07 3a10 	vmov	s14, r3
 8016b86:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8016b8a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016b8e:	ee07 1a90 	vmov	s15, r1
 8016b92:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016b96:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016b9a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016b9e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016ba2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ba6:	bfcc      	ite	gt
 8016ba8:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016bac:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016bb0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016bb4:	ee17 3a90 	vmov	r3, s15
 8016bb8:	b218      	sxth	r0, r3
 8016bba:	4770      	bx	lr

08016bbc <_ZN8touchgfx12TextProviderC1Ev>:
 8016bbc:	b538      	push	{r3, r4, r5, lr}
 8016bbe:	2500      	movs	r5, #0
 8016bc0:	2302      	movs	r3, #2
 8016bc2:	4604      	mov	r4, r0
 8016bc4:	e9c0 5500 	strd	r5, r5, [r0]
 8016bc8:	7403      	strb	r3, [r0, #16]
 8016bca:	6145      	str	r5, [r0, #20]
 8016bcc:	7605      	strb	r5, [r0, #24]
 8016bce:	83c5      	strh	r5, [r0, #30]
 8016bd0:	8405      	strh	r5, [r0, #32]
 8016bd2:	86c5      	strh	r5, [r0, #54]	; 0x36
 8016bd4:	8705      	strh	r5, [r0, #56]	; 0x38
 8016bd6:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8016bd8:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8016bdc:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8016be0:	220e      	movs	r2, #14
 8016be2:	4629      	mov	r1, r5
 8016be4:	304c      	adds	r0, #76	; 0x4c
 8016be6:	f00f fda5 	bl	8026734 <memset>
 8016bea:	2301      	movs	r3, #1
 8016bec:	4620      	mov	r0, r4
 8016bee:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8016bf2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016bf6:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8016bfa:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8016bfe:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8016c02:	f7f1 fa53 	bl	80080ac <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8016c06:	4620      	mov	r0, r4
 8016c08:	bd38      	pop	{r3, r4, r5, pc}

08016c0a <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016c0a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016c0c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016c10:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8016c12:	fab0 f080 	clz	r0, r0
 8016c16:	0940      	lsrs	r0, r0, #5
 8016c18:	4770      	bx	lr

08016c1a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016c1a:	b530      	push	{r4, r5, lr}
 8016c1c:	2500      	movs	r5, #0
 8016c1e:	2401      	movs	r4, #1
 8016c20:	6843      	ldr	r3, [r0, #4]
 8016c22:	b913      	cbnz	r3, 8016c2a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8016c24:	6803      	ldr	r3, [r0, #0]
 8016c26:	b313      	cbz	r3, 8016c6e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016c28:	6043      	str	r3, [r0, #4]
 8016c2a:	7e03      	ldrb	r3, [r0, #24]
 8016c2c:	b143      	cbz	r3, 8016c40 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8016c2e:	6943      	ldr	r3, [r0, #20]
 8016c30:	b12b      	cbz	r3, 8016c3e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016c32:	881a      	ldrh	r2, [r3, #0]
 8016c34:	b11a      	cbz	r2, 8016c3e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016c36:	1c9a      	adds	r2, r3, #2
 8016c38:	6142      	str	r2, [r0, #20]
 8016c3a:	8818      	ldrh	r0, [r3, #0]
 8016c3c:	bd30      	pop	{r4, r5, pc}
 8016c3e:	7605      	strb	r5, [r0, #24]
 8016c40:	6843      	ldr	r3, [r0, #4]
 8016c42:	8819      	ldrh	r1, [r3, #0]
 8016c44:	b199      	cbz	r1, 8016c6e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016c46:	1c9a      	adds	r2, r3, #2
 8016c48:	2902      	cmp	r1, #2
 8016c4a:	6042      	str	r2, [r0, #4]
 8016c4c:	d1f5      	bne.n	8016c3a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8016c4e:	7c03      	ldrb	r3, [r0, #16]
 8016c50:	2b01      	cmp	r3, #1
 8016c52:	d8e5      	bhi.n	8016c20 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016c54:	1c5a      	adds	r2, r3, #1
 8016c56:	3302      	adds	r3, #2
 8016c58:	7402      	strb	r2, [r0, #16]
 8016c5a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016c5e:	6143      	str	r3, [r0, #20]
 8016c60:	2b00      	cmp	r3, #0
 8016c62:	d0dd      	beq.n	8016c20 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016c64:	881b      	ldrh	r3, [r3, #0]
 8016c66:	2b00      	cmp	r3, #0
 8016c68:	d0da      	beq.n	8016c20 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016c6a:	7604      	strb	r4, [r0, #24]
 8016c6c:	e7d8      	b.n	8016c20 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016c6e:	2000      	movs	r0, #0
 8016c70:	e7e4      	b.n	8016c3c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08016c72 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8016c72:	b430      	push	{r4, r5}
 8016c74:	6001      	str	r1, [r0, #0]
 8016c76:	2100      	movs	r1, #0
 8016c78:	6041      	str	r1, [r0, #4]
 8016c7a:	6815      	ldr	r5, [r2, #0]
 8016c7c:	6085      	str	r5, [r0, #8]
 8016c7e:	6852      	ldr	r2, [r2, #4]
 8016c80:	6443      	str	r3, [r0, #68]	; 0x44
 8016c82:	9b02      	ldr	r3, [sp, #8]
 8016c84:	60c2      	str	r2, [r0, #12]
 8016c86:	7401      	strb	r1, [r0, #16]
 8016c88:	6141      	str	r1, [r0, #20]
 8016c8a:	7601      	strb	r1, [r0, #24]
 8016c8c:	8701      	strh	r1, [r0, #56]	; 0x38
 8016c8e:	8401      	strh	r1, [r0, #32]
 8016c90:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8016c94:	6483      	str	r3, [r0, #72]	; 0x48
 8016c96:	bc30      	pop	{r4, r5}
 8016c98:	f7f1 ba08 	b.w	80080ac <_ZN8touchgfx12TextProvider18initializeInternalEv>

08016c9c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8016c9c:	b408      	push	{r3}
 8016c9e:	b510      	push	{r4, lr}
 8016ca0:	b085      	sub	sp, #20
 8016ca2:	ac07      	add	r4, sp, #28
 8016ca4:	f854 3b04 	ldr.w	r3, [r4], #4
 8016ca8:	9300      	str	r3, [sp, #0]
 8016caa:	4613      	mov	r3, r2
 8016cac:	4622      	mov	r2, r4
 8016cae:	9403      	str	r4, [sp, #12]
 8016cb0:	f7ff ffdf 	bl	8016c72 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016cb4:	b005      	add	sp, #20
 8016cb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016cba:	b001      	add	sp, #4
 8016cbc:	4770      	bx	lr

08016cbe <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8016cbe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016cc0:	4605      	mov	r5, r0
 8016cc2:	4608      	mov	r0, r1
 8016cc4:	b1e9      	cbz	r1, 8016d02 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8016cc6:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8016cca:	460b      	mov	r3, r1
 8016ccc:	f101 0708 	add.w	r7, r1, #8
 8016cd0:	4622      	mov	r2, r4
 8016cd2:	6818      	ldr	r0, [r3, #0]
 8016cd4:	6859      	ldr	r1, [r3, #4]
 8016cd6:	4626      	mov	r6, r4
 8016cd8:	c603      	stmia	r6!, {r0, r1}
 8016cda:	3308      	adds	r3, #8
 8016cdc:	42bb      	cmp	r3, r7
 8016cde:	4634      	mov	r4, r6
 8016ce0:	d1f7      	bne.n	8016cd2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016ce2:	6818      	ldr	r0, [r3, #0]
 8016ce4:	6030      	str	r0, [r6, #0]
 8016ce6:	889b      	ldrh	r3, [r3, #4]
 8016ce8:	80b3      	strh	r3, [r6, #4]
 8016cea:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8016cee:	015b      	lsls	r3, r3, #5
 8016cf0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016cf4:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016cf8:	430b      	orrs	r3, r1
 8016cfa:	425b      	negs	r3, r3
 8016cfc:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016d00:	4610      	mov	r0, r2
 8016d02:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016d04 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016d04:	b538      	push	{r3, r4, r5, lr}
 8016d06:	460c      	mov	r4, r1
 8016d08:	6811      	ldr	r1, [r2, #0]
 8016d0a:	4610      	mov	r0, r2
 8016d0c:	68cd      	ldr	r5, [r1, #12]
 8016d0e:	4619      	mov	r1, r3
 8016d10:	47a8      	blx	r5
 8016d12:	2800      	cmp	r0, #0
 8016d14:	bf08      	it	eq
 8016d16:	4620      	moveq	r0, r4
 8016d18:	bd38      	pop	{r3, r4, r5, pc}
	...

08016d1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016d1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016d1e:	4604      	mov	r4, r0
 8016d20:	4615      	mov	r5, r2
 8016d22:	4608      	mov	r0, r1
 8016d24:	b93a      	cbnz	r2, 8016d36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8016d26:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016d2a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8016d2e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8016d32:	4628      	mov	r0, r5
 8016d34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016d36:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8016d3a:	8893      	ldrh	r3, [r2, #4]
 8016d3c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8016d40:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016d44:	79ee      	ldrb	r6, [r5, #7]
 8016d46:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8016d4a:	4316      	orrs	r6, r2
 8016d4c:	19da      	adds	r2, r3, r7
 8016d4e:	b291      	uxth	r1, r2
 8016d50:	291d      	cmp	r1, #29
 8016d52:	b2b7      	uxth	r7, r6
 8016d54:	d87a      	bhi.n	8016e4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016d56:	2201      	movs	r2, #1
 8016d58:	408a      	lsls	r2, r1
 8016d5a:	4975      	ldr	r1, [pc, #468]	; (8016f30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8016d5c:	420a      	tst	r2, r1
 8016d5e:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8016d62:	d12d      	bne.n	8016dc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8016d64:	f412 7f60 	tst.w	r2, #896	; 0x380
 8016d68:	d070      	beq.n	8016e4c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016d6a:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8016d6e:	462b      	mov	r3, r5
 8016d70:	f105 0e08 	add.w	lr, r5, #8
 8016d74:	4615      	mov	r5, r2
 8016d76:	6818      	ldr	r0, [r3, #0]
 8016d78:	6859      	ldr	r1, [r3, #4]
 8016d7a:	4694      	mov	ip, r2
 8016d7c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016d80:	3308      	adds	r3, #8
 8016d82:	4573      	cmp	r3, lr
 8016d84:	4662      	mov	r2, ip
 8016d86:	d1f6      	bne.n	8016d76 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8016d88:	6818      	ldr	r0, [r3, #0]
 8016d8a:	f8cc 0000 	str.w	r0, [ip]
 8016d8e:	889b      	ldrh	r3, [r3, #4]
 8016d90:	f8ac 3004 	strh.w	r3, [ip, #4]
 8016d94:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8016d98:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8016d9c:	b2b3      	uxth	r3, r6
 8016d9e:	1aca      	subs	r2, r1, r3
 8016da0:	b292      	uxth	r2, r2
 8016da2:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8016da6:	10d2      	asrs	r2, r2, #3
 8016da8:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8016dac:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8016db0:	4302      	orrs	r2, r0
 8016db2:	1bcf      	subs	r7, r1, r7
 8016db4:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8016db8:	1afb      	subs	r3, r7, r3
 8016dba:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016dbe:	e7b8      	b.n	8016d32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016dc0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8016dc2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016dc6:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8016dc8:	f640 6333 	movw	r3, #3635	; 0xe33
 8016dcc:	4299      	cmp	r1, r3
 8016dce:	d110      	bne.n	8016df2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8016dd0:	6803      	ldr	r3, [r0, #0]
 8016dd2:	68db      	ldr	r3, [r3, #12]
 8016dd4:	4798      	blx	r3
 8016dd6:	7b41      	ldrb	r1, [r0, #13]
 8016dd8:	00cb      	lsls	r3, r1, #3
 8016dda:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016dde:	7a03      	ldrb	r3, [r0, #8]
 8016de0:	0648      	lsls	r0, r1, #25
 8016de2:	ea43 0302 	orr.w	r3, r3, r2
 8016de6:	bf44      	itt	mi
 8016de8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016dec:	b21b      	sxthmi	r3, r3
 8016dee:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016df2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8016df6:	443b      	add	r3, r7
 8016df8:	4433      	add	r3, r6
 8016dfa:	b29b      	uxth	r3, r3
 8016dfc:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8016e00:	462a      	mov	r2, r5
 8016e02:	f105 0c08 	add.w	ip, r5, #8
 8016e06:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016e0a:	4635      	mov	r5, r6
 8016e0c:	6810      	ldr	r0, [r2, #0]
 8016e0e:	6851      	ldr	r1, [r2, #4]
 8016e10:	4637      	mov	r7, r6
 8016e12:	c703      	stmia	r7!, {r0, r1}
 8016e14:	3208      	adds	r2, #8
 8016e16:	4562      	cmp	r2, ip
 8016e18:	463e      	mov	r6, r7
 8016e1a:	d1f7      	bne.n	8016e0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8016e1c:	6810      	ldr	r0, [r2, #0]
 8016e1e:	6038      	str	r0, [r7, #0]
 8016e20:	8892      	ldrh	r2, [r2, #4]
 8016e22:	80ba      	strh	r2, [r7, #4]
 8016e24:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016e28:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016e2c:	10db      	asrs	r3, r3, #3
 8016e2e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016e32:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016e36:	4313      	orrs	r3, r2
 8016e38:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016e3c:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8016e40:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8016e44:	1a9b      	subs	r3, r3, r2
 8016e46:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8016e4a:	e772      	b.n	8016d32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016e4c:	f023 0204 	bic.w	r2, r3, #4
 8016e50:	f640 611b 	movw	r1, #3611	; 0xe1b
 8016e54:	428a      	cmp	r2, r1
 8016e56:	d003      	beq.n	8016e60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8016e58:	f640 621d 	movw	r2, #3613	; 0xe1d
 8016e5c:	4293      	cmp	r3, r2
 8016e5e:	d120      	bne.n	8016ea2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8016e60:	3b01      	subs	r3, #1
 8016e62:	4602      	mov	r2, r0
 8016e64:	b29b      	uxth	r3, r3
 8016e66:	4629      	mov	r1, r5
 8016e68:	4620      	mov	r0, r4
 8016e6a:	f7ff ff4b 	bl	8016d04 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016e6e:	7b41      	ldrb	r1, [r0, #13]
 8016e70:	00cb      	lsls	r3, r1, #3
 8016e72:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016e76:	7a03      	ldrb	r3, [r0, #8]
 8016e78:	0649      	lsls	r1, r1, #25
 8016e7a:	ea43 0302 	orr.w	r3, r3, r2
 8016e7e:	bf44      	itt	mi
 8016e80:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016e84:	b21b      	sxthmi	r3, r3
 8016e86:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016e8a:	7b6b      	ldrb	r3, [r5, #13]
 8016e8c:	7aaa      	ldrb	r2, [r5, #10]
 8016e8e:	005b      	lsls	r3, r3, #1
 8016e90:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016e94:	4313      	orrs	r3, r2
 8016e96:	115a      	asrs	r2, r3, #5
 8016e98:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016e9c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016ea0:	e036      	b.n	8016f10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8016ea2:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8016ea6:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8016eaa:	7a2a      	ldrb	r2, [r5, #8]
 8016eac:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8016eb0:	ea42 0201 	orr.w	r2, r2, r1
 8016eb4:	bf1c      	itt	ne
 8016eb6:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8016eba:	b212      	sxthne	r2, r2
 8016ebc:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016ec0:	f640 6109 	movw	r1, #3593	; 0xe09
 8016ec4:	f023 0210 	bic.w	r2, r3, #16
 8016ec8:	428a      	cmp	r2, r1
 8016eca:	d003      	beq.n	8016ed4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8016ecc:	f640 6213 	movw	r2, #3603	; 0xe13
 8016ed0:	4293      	cmp	r3, r2
 8016ed2:	d12a      	bne.n	8016f2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8016ed4:	7b6e      	ldrb	r6, [r5, #13]
 8016ed6:	0076      	lsls	r6, r6, #1
 8016ed8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016edc:	7aae      	ldrb	r6, [r5, #10]
 8016ede:	4316      	orrs	r6, r2
 8016ee0:	f640 6213 	movw	r2, #3603	; 0xe13
 8016ee4:	4293      	cmp	r3, r2
 8016ee6:	bf18      	it	ne
 8016ee8:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016eec:	4602      	mov	r2, r0
 8016eee:	bf14      	ite	ne
 8016ef0:	b29b      	uxthne	r3, r3
 8016ef2:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8016ef6:	4629      	mov	r1, r5
 8016ef8:	4620      	mov	r0, r4
 8016efa:	f7ff ff03 	bl	8016d04 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016efe:	7b43      	ldrb	r3, [r0, #13]
 8016f00:	7a82      	ldrb	r2, [r0, #10]
 8016f02:	005b      	lsls	r3, r3, #1
 8016f04:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016f08:	4313      	orrs	r3, r2
 8016f0a:	1af6      	subs	r6, r6, r3
 8016f0c:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8016f10:	7b69      	ldrb	r1, [r5, #13]
 8016f12:	00cb      	lsls	r3, r1, #3
 8016f14:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016f18:	7a2b      	ldrb	r3, [r5, #8]
 8016f1a:	4313      	orrs	r3, r2
 8016f1c:	064a      	lsls	r2, r1, #25
 8016f1e:	bf44      	itt	mi
 8016f20:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016f24:	b21b      	sxthmi	r3, r3
 8016f26:	1bdb      	subs	r3, r3, r7
 8016f28:	e747      	b.n	8016dba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8016f2a:	2300      	movs	r3, #0
 8016f2c:	e7b6      	b.n	8016e9c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8016f2e:	bf00      	nop
 8016f30:	3fc00079 	.word	0x3fc00079

08016f34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016f34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016f38:	4604      	mov	r4, r0
 8016f3a:	b942      	cbnz	r2, 8016f4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8016f3c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016f40:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8016f44:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8016f48:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016f4c:	e047      	b.n	8016fde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016f4e:	7b51      	ldrb	r1, [r2, #13]
 8016f50:	8893      	ldrh	r3, [r2, #4]
 8016f52:	010d      	lsls	r5, r1, #4
 8016f54:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8016f58:	79d5      	ldrb	r5, [r2, #7]
 8016f5a:	4305      	orrs	r5, r0
 8016f5c:	2d04      	cmp	r5, #4
 8016f5e:	bfcc      	ite	gt
 8016f60:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8016f64:	f04f 0e01 	movle.w	lr, #1
 8016f68:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8016f6c:	f200 80ab 	bhi.w	80170c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8016f70:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8016f74:	4283      	cmp	r3, r0
 8016f76:	d216      	bcs.n	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016f78:	f240 605b 	movw	r0, #1627	; 0x65b
 8016f7c:	4283      	cmp	r3, r0
 8016f7e:	d859      	bhi.n	8017034 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8016f80:	f240 6057 	movw	r0, #1623	; 0x657
 8016f84:	4283      	cmp	r3, r0
 8016f86:	d20e      	bcs.n	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016f88:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016f8c:	d24a      	bcs.n	8017024 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8016f8e:	f240 604e 	movw	r0, #1614	; 0x64e
 8016f92:	4283      	cmp	r3, r0
 8016f94:	d207      	bcs.n	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016f96:	f240 601a 	movw	r0, #1562	; 0x61a
 8016f9a:	4283      	cmp	r3, r0
 8016f9c:	d02a      	beq.n	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016f9e:	d821      	bhi.n	8016fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8016fa0:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8016fa4:	d35b      	bcc.n	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016fa6:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8016faa:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016fae:	f040 80d0 	bne.w	8017152 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016fb2:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8016fb6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016fba:	f040 80ca 	bne.w	8017152 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016fbe:	00cb      	lsls	r3, r1, #3
 8016fc0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016fc4:	7a13      	ldrb	r3, [r2, #8]
 8016fc6:	0649      	lsls	r1, r1, #25
 8016fc8:	ea43 0300 	orr.w	r3, r3, r0
 8016fcc:	bf44      	itt	mi
 8016fce:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016fd2:	b21b      	sxthmi	r3, r3
 8016fd4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016fd8:	1b5d      	subs	r5, r3, r5
 8016fda:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016fde:	4610      	mov	r0, r2
 8016fe0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016fe4:	f240 604b 	movw	r0, #1611	; 0x64b
 8016fe8:	4283      	cmp	r3, r0
 8016fea:	d338      	bcc.n	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016fec:	f240 604c 	movw	r0, #1612	; 0x64c
 8016ff0:	4283      	cmp	r3, r0
 8016ff2:	d9d8      	bls.n	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016ff4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8016ff8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8016ffc:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017000:	f040 80f2 	bne.w	80171e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017004:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017008:	f040 80ee 	bne.w	80171e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801700c:	00cb      	lsls	r3, r1, #3
 801700e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017012:	7a13      	ldrb	r3, [r2, #8]
 8017014:	064e      	lsls	r6, r1, #25
 8017016:	ea43 0300 	orr.w	r3, r3, r0
 801701a:	bf44      	itt	mi
 801701c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017020:	b21b      	sxthmi	r3, r3
 8017022:	e7d9      	b.n	8016fd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8017024:	f240 6054 	movw	r0, #1620	; 0x654
 8017028:	4283      	cmp	r3, r0
 801702a:	d8e3      	bhi.n	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801702c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017030:	d9e0      	bls.n	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017032:	e7b8      	b.n	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017034:	f240 6074 	movw	r0, #1652	; 0x674
 8017038:	4283      	cmp	r3, r0
 801703a:	d0b4      	beq.n	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801703c:	d82d      	bhi.n	801709a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801703e:	f240 605e 	movw	r0, #1630	; 0x65e
 8017042:	4283      	cmp	r3, r0
 8017044:	d804      	bhi.n	8017050 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8017046:	f240 605d 	movw	r0, #1629	; 0x65d
 801704a:	4283      	cmp	r3, r0
 801704c:	d3d2      	bcc.n	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801704e:	e7aa      	b.n	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017050:	f240 605f 	movw	r0, #1631	; 0x65f
 8017054:	4283      	cmp	r3, r0
 8017056:	d0cd      	beq.n	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017058:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801705c:	d0a3      	beq.n	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801705e:	00cb      	lsls	r3, r1, #3
 8017060:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017064:	7a13      	ldrb	r3, [r2, #8]
 8017066:	0649      	lsls	r1, r1, #25
 8017068:	ea43 0300 	orr.w	r3, r3, r0
 801706c:	bf44      	itt	mi
 801706e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017072:	b21b      	sxthmi	r3, r3
 8017074:	1b5d      	subs	r5, r3, r5
 8017076:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801707a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801707e:	7b53      	ldrb	r3, [r2, #13]
 8017080:	015b      	lsls	r3, r3, #5
 8017082:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017086:	7993      	ldrb	r3, [r2, #6]
 8017088:	430b      	orrs	r3, r1
 801708a:	005b      	lsls	r3, r3, #1
 801708c:	2105      	movs	r1, #5
 801708e:	fb93 f3f1 	sdiv	r3, r3, r1
 8017092:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8017096:	440b      	add	r3, r1
 8017098:	e756      	b.n	8016f48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801709a:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801709e:	4283      	cmp	r3, r0
 80170a0:	d809      	bhi.n	80170b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80170a2:	f240 60df 	movw	r0, #1759	; 0x6df
 80170a6:	4283      	cmp	r3, r0
 80170a8:	f4bf af7d 	bcs.w	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170ac:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80170b0:	2b05      	cmp	r3, #5
 80170b2:	d8d4      	bhi.n	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80170b4:	e777      	b.n	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170b6:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80170ba:	4283      	cmp	r3, r0
 80170bc:	d09a      	beq.n	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170be:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80170c2:	4283      	cmp	r3, r0
 80170c4:	e7ca      	b.n	801705c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80170c6:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80170ca:	d22b      	bcs.n	8017124 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80170cc:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80170d0:	4283      	cmp	r3, r0
 80170d2:	d28f      	bcs.n	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170d4:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80170d8:	4283      	cmp	r3, r0
 80170da:	d816      	bhi.n	801710a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80170dc:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80170e0:	4283      	cmp	r3, r0
 80170e2:	f4bf af60 	bcs.w	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170e6:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80170ea:	4283      	cmp	r3, r0
 80170ec:	d80a      	bhi.n	8017104 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80170ee:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80170f2:	4283      	cmp	r3, r0
 80170f4:	f4bf af57 	bcs.w	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170f8:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80170fc:	4283      	cmp	r3, r0
 80170fe:	f43f af79 	beq.w	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017102:	e7ac      	b.n	801705e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017104:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8017108:	e7f8      	b.n	80170fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801710a:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801710e:	4283      	cmp	r3, r0
 8017110:	d802      	bhi.n	8017118 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8017112:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8017116:	e798      	b.n	801704a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8017118:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801711c:	4283      	cmp	r3, r0
 801711e:	f47f af42 	bne.w	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017122:	e767      	b.n	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017124:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017128:	4283      	cmp	r3, r0
 801712a:	f43f af63 	beq.w	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801712e:	d802      	bhi.n	8017136 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017130:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8017134:	e7f2      	b.n	801711c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8017136:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801713a:	4283      	cmp	r3, r0
 801713c:	d805      	bhi.n	801714a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801713e:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8017142:	4283      	cmp	r3, r0
 8017144:	f4ff af2f 	bcc.w	8016fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017148:	e754      	b.n	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801714a:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801714e:	4283      	cmp	r3, r0
 8017150:	e7af      	b.n	80170b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8017152:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017156:	4617      	mov	r7, r2
 8017158:	f102 0808 	add.w	r8, r2, #8
 801715c:	4666      	mov	r6, ip
 801715e:	6838      	ldr	r0, [r7, #0]
 8017160:	6879      	ldr	r1, [r7, #4]
 8017162:	46e6      	mov	lr, ip
 8017164:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017168:	3708      	adds	r7, #8
 801716a:	4547      	cmp	r7, r8
 801716c:	46f4      	mov	ip, lr
 801716e:	d1f6      	bne.n	801715e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017170:	6838      	ldr	r0, [r7, #0]
 8017172:	f8ce 0000 	str.w	r0, [lr]
 8017176:	88b9      	ldrh	r1, [r7, #4]
 8017178:	f8ae 1004 	strh.w	r1, [lr, #4]
 801717c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017180:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017184:	d009      	beq.n	801719a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8017186:	7b51      	ldrb	r1, [r2, #13]
 8017188:	7992      	ldrb	r2, [r2, #6]
 801718a:	0149      	lsls	r1, r1, #5
 801718c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017190:	4311      	orrs	r1, r2
 8017192:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017196:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801719a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801719e:	b2ad      	uxth	r5, r5
 80171a0:	d00d      	beq.n	80171be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80171a2:	442b      	add	r3, r5
 80171a4:	b29b      	uxth	r3, r3
 80171a6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80171aa:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80171ae:	10db      	asrs	r3, r3, #3
 80171b0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80171b4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80171b8:	4313      	orrs	r3, r2
 80171ba:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80171be:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80171c2:	00cb      	lsls	r3, r1, #3
 80171c4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80171c8:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80171cc:	064f      	lsls	r7, r1, #25
 80171ce:	ea43 0302 	orr.w	r3, r3, r2
 80171d2:	bf44      	itt	mi
 80171d4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80171d8:	b21b      	sxthmi	r3, r3
 80171da:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80171de:	1b5b      	subs	r3, r3, r5
 80171e0:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80171e4:	4632      	mov	r2, r6
 80171e6:	e6fa      	b.n	8016fde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80171e8:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80171ec:	4617      	mov	r7, r2
 80171ee:	f102 0908 	add.w	r9, r2, #8
 80171f2:	4666      	mov	r6, ip
 80171f4:	6838      	ldr	r0, [r7, #0]
 80171f6:	6879      	ldr	r1, [r7, #4]
 80171f8:	46e0      	mov	r8, ip
 80171fa:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80171fe:	3708      	adds	r7, #8
 8017200:	454f      	cmp	r7, r9
 8017202:	46c4      	mov	ip, r8
 8017204:	d1f6      	bne.n	80171f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8017206:	6838      	ldr	r0, [r7, #0]
 8017208:	f8c8 0000 	str.w	r0, [r8]
 801720c:	88b9      	ldrh	r1, [r7, #4]
 801720e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8017212:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017216:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801721a:	d009      	beq.n	8017230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801721c:	7b51      	ldrb	r1, [r2, #13]
 801721e:	7992      	ldrb	r2, [r2, #6]
 8017220:	0149      	lsls	r1, r1, #5
 8017222:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017226:	4311      	orrs	r1, r2
 8017228:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801722c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017230:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017234:	d00e      	beq.n	8017254 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8017236:	eba3 030e 	sub.w	r3, r3, lr
 801723a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801723e:	b29b      	uxth	r3, r3
 8017240:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017244:	10db      	asrs	r3, r3, #3
 8017246:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801724a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801724e:	4313      	orrs	r3, r2
 8017250:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017254:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017258:	00cb      	lsls	r3, r1, #3
 801725a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801725e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017262:	0648      	lsls	r0, r1, #25
 8017264:	ea43 0302 	orr.w	r3, r3, r2
 8017268:	bf44      	itt	mi
 801726a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801726e:	b21b      	sxthmi	r3, r3
 8017270:	1b5d      	subs	r5, r3, r5
 8017272:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017276:	e7b5      	b.n	80171e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017278 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017278:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801727c:	461e      	mov	r6, r3
 801727e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017280:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017284:	4604      	mov	r4, r0
 8017286:	4617      	mov	r7, r2
 8017288:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801728c:	f7f0 fecc 	bl	8008028 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017290:	4605      	mov	r5, r0
 8017292:	b918      	cbnz	r0, 801729c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8017294:	6030      	str	r0, [r6, #0]
 8017296:	4628      	mov	r0, r5
 8017298:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801729c:	683b      	ldr	r3, [r7, #0]
 801729e:	4601      	mov	r1, r0
 80172a0:	68db      	ldr	r3, [r3, #12]
 80172a2:	4638      	mov	r0, r7
 80172a4:	4798      	blx	r3
 80172a6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80172aa:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80172ae:	4602      	mov	r2, r0
 80172b0:	6030      	str	r0, [r6, #0]
 80172b2:	d213      	bcs.n	80172dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80172b4:	4643      	mov	r3, r8
 80172b6:	4639      	mov	r1, r7
 80172b8:	4620      	mov	r0, r4
 80172ba:	f7ff fe3b 	bl	8016f34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80172be:	6030      	str	r0, [r6, #0]
 80172c0:	6833      	ldr	r3, [r6, #0]
 80172c2:	b143      	cbz	r3, 80172d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80172c4:	7b5a      	ldrb	r2, [r3, #13]
 80172c6:	7a9b      	ldrb	r3, [r3, #10]
 80172c8:	0052      	lsls	r2, r2, #1
 80172ca:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80172ce:	4313      	orrs	r3, r2
 80172d0:	bf0c      	ite	eq
 80172d2:	2301      	moveq	r3, #1
 80172d4:	2300      	movne	r3, #0
 80172d6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80172da:	e7dc      	b.n	8017296 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80172dc:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80172e0:	b29b      	uxth	r3, r3
 80172e2:	2b7f      	cmp	r3, #127	; 0x7f
 80172e4:	d804      	bhi.n	80172f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80172e6:	4639      	mov	r1, r7
 80172e8:	4620      	mov	r0, r4
 80172ea:	f7ff fd17 	bl	8016d1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80172ee:	e7e6      	b.n	80172be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80172f0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80172f4:	2b00      	cmp	r3, #0
 80172f6:	d0e3      	beq.n	80172c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80172f8:	f640 1302 	movw	r3, #2306	; 0x902
 80172fc:	429d      	cmp	r5, r3
 80172fe:	d1df      	bne.n	80172c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017300:	4601      	mov	r1, r0
 8017302:	4620      	mov	r0, r4
 8017304:	f7ff fcdb 	bl	8016cbe <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017308:	e7d9      	b.n	80172be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801730a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801730a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801730e:	461e      	mov	r6, r3
 8017310:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017312:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017316:	4604      	mov	r4, r0
 8017318:	4617      	mov	r7, r2
 801731a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801731e:	f7f0 fe83 	bl	8008028 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017322:	4605      	mov	r5, r0
 8017324:	b918      	cbnz	r0, 801732e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8017326:	6030      	str	r0, [r6, #0]
 8017328:	4628      	mov	r0, r5
 801732a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801732e:	683b      	ldr	r3, [r7, #0]
 8017330:	4601      	mov	r1, r0
 8017332:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8017336:	4638      	mov	r0, r7
 8017338:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801733c:	47c8      	blx	r9
 801733e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017342:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017346:	4602      	mov	r2, r0
 8017348:	6030      	str	r0, [r6, #0]
 801734a:	d213      	bcs.n	8017374 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801734c:	4643      	mov	r3, r8
 801734e:	4639      	mov	r1, r7
 8017350:	4620      	mov	r0, r4
 8017352:	f7ff fdef 	bl	8016f34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8017356:	6030      	str	r0, [r6, #0]
 8017358:	6833      	ldr	r3, [r6, #0]
 801735a:	b143      	cbz	r3, 801736e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801735c:	7b5a      	ldrb	r2, [r3, #13]
 801735e:	7a9b      	ldrb	r3, [r3, #10]
 8017360:	0052      	lsls	r2, r2, #1
 8017362:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017366:	4313      	orrs	r3, r2
 8017368:	bf0c      	ite	eq
 801736a:	2301      	moveq	r3, #1
 801736c:	2300      	movne	r3, #0
 801736e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8017372:	e7d9      	b.n	8017328 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8017374:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017378:	b29b      	uxth	r3, r3
 801737a:	2b7f      	cmp	r3, #127	; 0x7f
 801737c:	d804      	bhi.n	8017388 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801737e:	4639      	mov	r1, r7
 8017380:	4620      	mov	r0, r4
 8017382:	f7ff fccb 	bl	8016d1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8017386:	e7e6      	b.n	8017356 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8017388:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801738c:	2b00      	cmp	r3, #0
 801738e:	d0e3      	beq.n	8017358 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017390:	f640 1302 	movw	r3, #2306	; 0x902
 8017394:	429d      	cmp	r5, r3
 8017396:	d1df      	bne.n	8017358 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017398:	4601      	mov	r1, r0
 801739a:	4620      	mov	r0, r4
 801739c:	f7ff fc8f 	bl	8016cbe <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80173a0:	e7d9      	b.n	8017356 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080173a2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80173a2:	b510      	push	{r4, lr}
 80173a4:	4604      	mov	r4, r0
 80173a6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80173aa:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80173ac:	b1f1      	cbz	r1, 80173ec <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80173ae:	2b0a      	cmp	r3, #10
 80173b0:	d02f      	beq.n	8017412 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80173b2:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80173b4:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80173b8:	3901      	subs	r1, #1
 80173ba:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80173bc:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80173c0:	1c51      	adds	r1, r2, #1
 80173c2:	b289      	uxth	r1, r1
 80173c4:	2901      	cmp	r1, #1
 80173c6:	bf84      	itt	hi
 80173c8:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80173cc:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80173ce:	f103 0201 	add.w	r2, r3, #1
 80173d2:	8722      	strh	r2, [r4, #56]	; 0x38
 80173d4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80173d6:	bf98      	it	ls
 80173d8:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80173da:	4413      	add	r3, r2
 80173dc:	b29b      	uxth	r3, r3
 80173de:	2b09      	cmp	r3, #9
 80173e0:	bf88      	it	hi
 80173e2:	3b0a      	subhi	r3, #10
 80173e4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80173e8:	8458      	strh	r0, [r3, #34]	; 0x22
 80173ea:	e7dc      	b.n	80173a6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80173ec:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80173ee:	2b0a      	cmp	r3, #10
 80173f0:	d00f      	beq.n	8017412 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80173f2:	4620      	mov	r0, r4
 80173f4:	f7ff fc11 	bl	8016c1a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80173f8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80173fa:	1c5a      	adds	r2, r3, #1
 80173fc:	8722      	strh	r2, [r4, #56]	; 0x38
 80173fe:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017400:	4413      	add	r3, r2
 8017402:	b29b      	uxth	r3, r3
 8017404:	2b09      	cmp	r3, #9
 8017406:	bf88      	it	hi
 8017408:	3b0a      	subhi	r3, #10
 801740a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801740e:	8458      	strh	r0, [r3, #34]	; 0x22
 8017410:	e7ec      	b.n	80173ec <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8017412:	bd10      	pop	{r4, pc}

08017414 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8017414:	b538      	push	{r3, r4, r5, lr}
 8017416:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017418:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801741c:	4604      	mov	r4, r0
 801741e:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8017420:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8017422:	3a01      	subs	r2, #1
 8017424:	8702      	strh	r2, [r0, #56]	; 0x38
 8017426:	1c5a      	adds	r2, r3, #1
 8017428:	b292      	uxth	r2, r2
 801742a:	2a09      	cmp	r2, #9
 801742c:	bf86      	itte	hi
 801742e:	3b09      	subhi	r3, #9
 8017430:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8017432:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8017434:	f7ff ffb5 	bl	80173a2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8017438:	8c23      	ldrh	r3, [r4, #32]
 801743a:	2b01      	cmp	r3, #1
 801743c:	bf9c      	itt	ls
 801743e:	3301      	addls	r3, #1
 8017440:	8423      	strhls	r3, [r4, #32]
 8017442:	8be3      	ldrh	r3, [r4, #30]
 8017444:	b90b      	cbnz	r3, 801744a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8017446:	2302      	movs	r3, #2
 8017448:	83e3      	strh	r3, [r4, #30]
 801744a:	8be3      	ldrh	r3, [r4, #30]
 801744c:	3b01      	subs	r3, #1
 801744e:	b29b      	uxth	r3, r3
 8017450:	83e3      	strh	r3, [r4, #30]
 8017452:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017456:	4628      	mov	r0, r5
 8017458:	8365      	strh	r5, [r4, #26]
 801745a:	bd38      	pop	{r3, r4, r5, pc}

0801745c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801745c:	428a      	cmp	r2, r1
 801745e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017462:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8017464:	d931      	bls.n	80174ca <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8017466:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017468:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801746c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017470:	19ee      	adds	r6, r5, r7
 8017472:	1a54      	subs	r4, r2, r1
 8017474:	3e01      	subs	r6, #1
 8017476:	fa1f fe84 	uxth.w	lr, r4
 801747a:	b2b4      	uxth	r4, r6
 801747c:	eba4 090e 	sub.w	r9, r4, lr
 8017480:	fa1f f989 	uxth.w	r9, r9
 8017484:	2c09      	cmp	r4, #9
 8017486:	4626      	mov	r6, r4
 8017488:	bf88      	it	hi
 801748a:	f1a4 060a 	subhi.w	r6, r4, #10
 801748e:	f1bc 0f00 	cmp.w	ip, #0
 8017492:	bf08      	it	eq
 8017494:	f04f 0c02 	moveq.w	ip, #2
 8017498:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801749c:	f10c 3cff 	add.w	ip, ip, #4294967295
 80174a0:	fa1f fc8c 	uxth.w	ip, ip
 80174a4:	3c01      	subs	r4, #1
 80174a6:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80174aa:	b2a4      	uxth	r4, r4
 80174ac:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80174b0:	454c      	cmp	r4, r9
 80174b2:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80174b6:	d1e5      	bne.n	8017484 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80174b8:	eba5 050e 	sub.w	r5, r5, lr
 80174bc:	eb0e 0408 	add.w	r4, lr, r8
 80174c0:	8705      	strh	r5, [r0, #56]	; 0x38
 80174c2:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80174c6:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80174ca:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80174cc:	1a64      	subs	r4, r4, r1
 80174ce:	4439      	add	r1, r7
 80174d0:	b289      	uxth	r1, r1
 80174d2:	2909      	cmp	r1, #9
 80174d4:	bf88      	it	hi
 80174d6:	390a      	subhi	r1, #10
 80174d8:	8704      	strh	r4, [r0, #56]	; 0x38
 80174da:	86c1      	strh	r1, [r0, #54]	; 0x36
 80174dc:	250a      	movs	r5, #10
 80174de:	b18a      	cbz	r2, 8017504 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80174e0:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80174e2:	3a01      	subs	r2, #1
 80174e4:	b292      	uxth	r2, r2
 80174e6:	3101      	adds	r1, #1
 80174e8:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80174ec:	8701      	strh	r1, [r0, #56]	; 0x38
 80174ee:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80174f0:	b901      	cbnz	r1, 80174f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80174f2:	86c5      	strh	r5, [r0, #54]	; 0x36
 80174f4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80174f6:	3901      	subs	r1, #1
 80174f8:	b289      	uxth	r1, r1
 80174fa:	86c1      	strh	r1, [r0, #54]	; 0x36
 80174fc:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8017500:	844c      	strh	r4, [r1, #34]	; 0x22
 8017502:	e7ec      	b.n	80174de <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8017504:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017508:	f7ff bf4b 	b.w	80173a2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801750c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801750c:	b570      	push	{r4, r5, r6, lr}
 801750e:	2500      	movs	r5, #0
 8017510:	4295      	cmp	r5, r2
 8017512:	d011      	beq.n	8017538 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8017514:	8bc4      	ldrh	r4, [r0, #30]
 8017516:	f831 6b02 	ldrh.w	r6, [r1], #2
 801751a:	4414      	add	r4, r2
 801751c:	3c01      	subs	r4, #1
 801751e:	1b64      	subs	r4, r4, r5
 8017520:	b2a4      	uxth	r4, r4
 8017522:	2c01      	cmp	r4, #1
 8017524:	bf88      	it	hi
 8017526:	3c02      	subhi	r4, #2
 8017528:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801752c:	8b64      	ldrh	r4, [r4, #26]
 801752e:	42b4      	cmp	r4, r6
 8017530:	d117      	bne.n	8017562 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8017532:	3501      	adds	r5, #1
 8017534:	b2ad      	uxth	r5, r5
 8017536:	e7eb      	b.n	8017510 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8017538:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801753c:	2400      	movs	r4, #0
 801753e:	4413      	add	r3, r2
 8017540:	b2a2      	uxth	r2, r4
 8017542:	429a      	cmp	r2, r3
 8017544:	da0f      	bge.n	8017566 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8017546:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8017548:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801754c:	4432      	add	r2, r6
 801754e:	b292      	uxth	r2, r2
 8017550:	2a09      	cmp	r2, #9
 8017552:	bf88      	it	hi
 8017554:	3a0a      	subhi	r2, #10
 8017556:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801755a:	3401      	adds	r4, #1
 801755c:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801755e:	42aa      	cmp	r2, r5
 8017560:	d0ee      	beq.n	8017540 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8017562:	2000      	movs	r0, #0
 8017564:	bd70      	pop	{r4, r5, r6, pc}
 8017566:	2001      	movs	r0, #1
 8017568:	e7fc      	b.n	8017564 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801756a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801756a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801756e:	4605      	mov	r5, r0
 8017570:	4616      	mov	r6, r2
 8017572:	1c8c      	adds	r4, r1, #2
 8017574:	8809      	ldrh	r1, [r1, #0]
 8017576:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801757a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801757e:	42b3      	cmp	r3, r6
 8017580:	d124      	bne.n	80175cc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8017582:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8017586:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801758a:	f001 070f 	and.w	r7, r1, #15
 801758e:	f8cd 8000 	str.w	r8, [sp]
 8017592:	464b      	mov	r3, r9
 8017594:	4652      	mov	r2, sl
 8017596:	4621      	mov	r1, r4
 8017598:	4628      	mov	r0, r5
 801759a:	f7ff ffb7 	bl	801750c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801759e:	4683      	mov	fp, r0
 80175a0:	b168      	cbz	r0, 80175be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80175a2:	eb0a 0109 	add.w	r1, sl, r9
 80175a6:	4441      	add	r1, r8
 80175a8:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80175ac:	463a      	mov	r2, r7
 80175ae:	4649      	mov	r1, r9
 80175b0:	4628      	mov	r0, r5
 80175b2:	f7ff ff53 	bl	801745c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80175b6:	4658      	mov	r0, fp
 80175b8:	b003      	add	sp, #12
 80175ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175be:	eb07 010a 	add.w	r1, r7, sl
 80175c2:	4449      	add	r1, r9
 80175c4:	4441      	add	r1, r8
 80175c6:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80175ca:	e7d2      	b.n	8017572 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80175cc:	f04f 0b00 	mov.w	fp, #0
 80175d0:	e7f1      	b.n	80175b6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080175d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80175d2:	b570      	push	{r4, r5, r6, lr}
 80175d4:	8810      	ldrh	r0, [r2, #0]
 80175d6:	4298      	cmp	r0, r3
 80175d8:	d817      	bhi.n	801760a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80175da:	1e48      	subs	r0, r1, #1
 80175dc:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80175e0:	4298      	cmp	r0, r3
 80175e2:	d312      	bcc.n	801760a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80175e4:	2400      	movs	r4, #0
 80175e6:	428c      	cmp	r4, r1
 80175e8:	d20f      	bcs.n	801760a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80175ea:	1860      	adds	r0, r4, r1
 80175ec:	1040      	asrs	r0, r0, #1
 80175ee:	0085      	lsls	r5, r0, #2
 80175f0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80175f4:	42b3      	cmp	r3, r6
 80175f6:	d902      	bls.n	80175fe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80175f8:	3001      	adds	r0, #1
 80175fa:	b284      	uxth	r4, r0
 80175fc:	e7f3      	b.n	80175e6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80175fe:	d201      	bcs.n	8017604 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8017600:	b281      	uxth	r1, r0
 8017602:	e7f0      	b.n	80175e6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017604:	442a      	add	r2, r5
 8017606:	8850      	ldrh	r0, [r2, #2]
 8017608:	bd70      	pop	{r4, r5, r6, pc}
 801760a:	2000      	movs	r0, #0
 801760c:	e7fc      	b.n	8017608 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801760e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801760e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017612:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8017614:	886f      	ldrh	r7, [r5, #2]
 8017616:	4604      	mov	r4, r0
 8017618:	087f      	lsrs	r7, r7, #1
 801761a:	260b      	movs	r6, #11
 801761c:	3e01      	subs	r6, #1
 801761e:	d013      	beq.n	8017648 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017620:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017622:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017626:	462a      	mov	r2, r5
 8017628:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801762c:	4639      	mov	r1, r7
 801762e:	4643      	mov	r3, r8
 8017630:	4620      	mov	r0, r4
 8017632:	f7ff ffce 	bl	80175d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8017636:	b138      	cbz	r0, 8017648 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017638:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801763c:	4642      	mov	r2, r8
 801763e:	4620      	mov	r0, r4
 8017640:	f7ff ff93 	bl	801756a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8017644:	2800      	cmp	r0, #0
 8017646:	d1e9      	bne.n	801761c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017648:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801764c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801764c:	b570      	push	{r4, r5, r6, lr}
 801764e:	694a      	ldr	r2, [r1, #20]
 8017650:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8017652:	684b      	ldr	r3, [r1, #4]
 8017654:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8017656:	1b54      	subs	r4, r2, r5
 8017658:	f000 8106 	beq.w	8017868 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801765c:	1b9b      	subs	r3, r3, r6
 801765e:	d003      	beq.n	8017668 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017660:	4363      	muls	r3, r4
 8017662:	2210      	movs	r2, #16
 8017664:	fb93 f3f2 	sdiv	r3, r3, r2
 8017668:	680c      	ldr	r4, [r1, #0]
 801766a:	698a      	ldr	r2, [r1, #24]
 801766c:	1b65      	subs	r5, r4, r5
 801766e:	f000 80fd 	beq.w	801786c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8017672:	1b92      	subs	r2, r2, r6
 8017674:	d003      	beq.n	801767e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017676:	436a      	muls	r2, r5
 8017678:	2410      	movs	r4, #16
 801767a:	fb92 f2f4 	sdiv	r2, r2, r4
 801767e:	1a9b      	subs	r3, r3, r2
 8017680:	ee07 3a90 	vmov	s15, r3
 8017684:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80178a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017688:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801768c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017690:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017694:	460a      	mov	r2, r1
 8017696:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801769a:	4603      	mov	r3, r0
 801769c:	f100 040c 	add.w	r4, r0, #12
 80176a0:	eeb1 6a43 	vneg.f32	s12, s6
 80176a4:	edd2 7a02 	vldr	s15, [r2, #8]
 80176a8:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80176ac:	3214      	adds	r2, #20
 80176ae:	ece3 6a01 	vstmia	r3!, {s13}
 80176b2:	ed52 7a02 	vldr	s15, [r2, #-8]
 80176b6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80176ba:	429c      	cmp	r4, r3
 80176bc:	edc3 7a02 	vstr	s15, [r3, #8]
 80176c0:	ed52 7a01 	vldr	s15, [r2, #-4]
 80176c4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80176c8:	edc3 7a05 	vstr	s15, [r3, #20]
 80176cc:	d1ea      	bne.n	80176a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80176ce:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80176d0:	698b      	ldr	r3, [r1, #24]
 80176d2:	edd0 4a02 	vldr	s9, [r0, #8]
 80176d6:	edd0 3a00 	vldr	s7, [r0]
 80176da:	edd0 6a01 	vldr	s13, [r0, #4]
 80176de:	ed90 5a05 	vldr	s10, [r0, #20]
 80176e2:	ed90 2a03 	vldr	s4, [r0, #12]
 80176e6:	edd0 5a04 	vldr	s11, [r0, #16]
 80176ea:	ed90 1a07 	vldr	s2, [r0, #28]
 80176ee:	edd0 2a06 	vldr	s5, [r0, #24]
 80176f2:	1a9b      	subs	r3, r3, r2
 80176f4:	ee07 3a90 	vmov	s15, r3
 80176f8:	684b      	ldr	r3, [r1, #4]
 80176fa:	1a9b      	subs	r3, r3, r2
 80176fc:	ee07 3a10 	vmov	s14, r3
 8017700:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017704:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017708:	ee67 7a84 	vmul.f32	s15, s15, s8
 801770c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017710:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017714:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017718:	ee27 7a04 	vmul.f32	s14, s14, s8
 801771c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017720:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017724:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017728:	ee67 7a83 	vmul.f32	s15, s15, s6
 801772c:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017730:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017732:	694a      	ldr	r2, [r1, #20]
 8017734:	1b13      	subs	r3, r2, r4
 8017736:	ee07 3a10 	vmov	s14, r3
 801773a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801773e:	680b      	ldr	r3, [r1, #0]
 8017740:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017744:	1b1b      	subs	r3, r3, r4
 8017746:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801774a:	ee07 3a10 	vmov	s14, r3
 801774e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017752:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017756:	eee6 4a87 	vfma.f32	s9, s13, s14
 801775a:	ee64 4a86 	vmul.f32	s9, s9, s12
 801775e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8017762:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017764:	698b      	ldr	r3, [r1, #24]
 8017766:	1a9b      	subs	r3, r3, r2
 8017768:	ee06 3a90 	vmov	s13, r3
 801776c:	684b      	ldr	r3, [r1, #4]
 801776e:	1a9b      	subs	r3, r3, r2
 8017770:	ee07 3a10 	vmov	s14, r3
 8017774:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017778:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801777c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017780:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017784:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017788:	eee5 6a87 	vfma.f32	s13, s11, s14
 801778c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017790:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8017794:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017796:	694a      	ldr	r2, [r1, #20]
 8017798:	1b13      	subs	r3, r2, r4
 801779a:	ee07 3a10 	vmov	s14, r3
 801779e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177a2:	680b      	ldr	r3, [r1, #0]
 80177a4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177a8:	1b1b      	subs	r3, r3, r4
 80177aa:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80177ae:	ee07 3a10 	vmov	s14, r3
 80177b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177b6:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177ba:	eea5 5a87 	vfma.f32	s10, s11, s14
 80177be:	edd0 5a08 	vldr	s11, [r0, #32]
 80177c2:	ee25 5a06 	vmul.f32	s10, s10, s12
 80177c6:	ee31 1a65 	vsub.f32	s2, s2, s11
 80177ca:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80177ce:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80177d0:	698b      	ldr	r3, [r1, #24]
 80177d2:	1a9b      	subs	r3, r3, r2
 80177d4:	ee07 3a10 	vmov	s14, r3
 80177d8:	684b      	ldr	r3, [r1, #4]
 80177da:	1a9b      	subs	r3, r3, r2
 80177dc:	ee01 3a90 	vmov	s3, r3
 80177e0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177e4:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80177e8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177ec:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80177f0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80177f4:	ee61 1a84 	vmul.f32	s3, s3, s8
 80177f8:	eea1 7a21 	vfma.f32	s14, s2, s3
 80177fc:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017800:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017804:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017806:	694a      	ldr	r2, [r1, #20]
 8017808:	1b13      	subs	r3, r2, r4
 801780a:	ee03 3a10 	vmov	s6, r3
 801780e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017812:	680b      	ldr	r3, [r1, #0]
 8017814:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017818:	1b1b      	subs	r3, r3, r4
 801781a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801781e:	ee03 3a10 	vmov	s6, r3
 8017822:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017826:	ee23 4a04 	vmul.f32	s8, s6, s8
 801782a:	eee1 5a04 	vfma.f32	s11, s2, s8
 801782e:	ee25 6a86 	vmul.f32	s12, s11, s12
 8017832:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8017836:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801783a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801783e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8017842:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017846:	dd13      	ble.n	8017870 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017848:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801784c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017850:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017852:	eee3 7a87 	vfma.f32	s15, s7, s14
 8017856:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801785a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801785e:	dd15      	ble.n	801788c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017860:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017864:	6403      	str	r3, [r0, #64]	; 0x40
 8017866:	bd70      	pop	{r4, r5, r6, pc}
 8017868:	4623      	mov	r3, r4
 801786a:	e6fd      	b.n	8017668 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801786c:	462a      	mov	r2, r5
 801786e:	e706      	b.n	801767e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017870:	d502      	bpl.n	8017878 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8017872:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017876:	e7e9      	b.n	801784c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017878:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801787c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017880:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8017884:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017888:	dade      	bge.n	8017848 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801788a:	e7f2      	b.n	8017872 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801788c:	d502      	bpl.n	8017894 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801788e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017892:	e7e7      	b.n	8017864 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8017894:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017898:	eee3 4a86 	vfma.f32	s9, s7, s12
 801789c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80178a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80178a4:	dadc      	bge.n	8017860 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80178a6:	e7f2      	b.n	801788e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80178a8:	3d800000 	.word	0x3d800000

080178ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80178ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80178b0:	2714      	movs	r7, #20
 80178b2:	435f      	muls	r7, r3
 80178b4:	eb02 0c07 	add.w	ip, r2, r7
 80178b8:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80178bc:	f115 0e0f 	adds.w	lr, r5, #15
 80178c0:	f100 80a2 	bmi.w	8017a08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80178c4:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80178c8:	9c08      	ldr	r4, [sp, #32]
 80178ca:	f8c0 e014 	str.w	lr, [r0, #20]
 80178ce:	2614      	movs	r6, #20
 80178d0:	4366      	muls	r6, r4
 80178d2:	eb02 0806 	add.w	r8, r2, r6
 80178d6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80178da:	f115 040f 	adds.w	r4, r5, #15
 80178de:	f100 809f 	bmi.w	8017a20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80178e2:	1124      	asrs	r4, r4, #4
 80178e4:	eba4 040e 	sub.w	r4, r4, lr
 80178e8:	6184      	str	r4, [r0, #24]
 80178ea:	2c00      	cmp	r4, #0
 80178ec:	f000 808a 	beq.w	8017a04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80178f0:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80178f4:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80178f8:	5995      	ldr	r5, [r2, r6]
 80178fa:	eba4 0809 	sub.w	r8, r4, r9
 80178fe:	59d4      	ldr	r4, [r2, r7]
 8017900:	eba5 0a04 	sub.w	sl, r5, r4
 8017904:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017908:	fb0e fe05 	mul.w	lr, lr, r5
 801790c:	fb0a ee19 	mls	lr, sl, r9, lr
 8017910:	fb08 e404 	mla	r4, r8, r4, lr
 8017914:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017918:	3c01      	subs	r4, #1
 801791a:	19a4      	adds	r4, r4, r6
 801791c:	f100 808c 	bmi.w	8017a38 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017920:	fb94 fef6 	sdiv	lr, r4, r6
 8017924:	f8c0 e000 	str.w	lr, [r0]
 8017928:	fb06 441e 	mls	r4, r6, lr, r4
 801792c:	6104      	str	r4, [r0, #16]
 801792e:	2d00      	cmp	r5, #0
 8017930:	f2c0 8095 	blt.w	8017a5e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8017934:	fb95 f4f6 	sdiv	r4, r5, r6
 8017938:	6044      	str	r4, [r0, #4]
 801793a:	fb06 5514 	mls	r5, r6, r4, r5
 801793e:	6085      	str	r5, [r0, #8]
 8017940:	60c6      	str	r6, [r0, #12]
 8017942:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8017946:	6945      	ldr	r5, [r0, #20]
 8017948:	59d2      	ldr	r2, [r2, r7]
 801794a:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017a80 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801794e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017952:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8017956:	ee07 4a10 	vmov	s14, r4
 801795a:	6804      	ldr	r4, [r0, #0]
 801795c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017960:	ee07 2a90 	vmov	s15, r2
 8017964:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017968:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801796c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017970:	ee27 7a26 	vmul.f32	s14, s14, s13
 8017974:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017978:	edd3 6a00 	vldr	s13, [r3]
 801797c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017980:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8017984:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017988:	edc0 6a07 	vstr	s13, [r0, #28]
 801798c:	edd0 6a01 	vldr	s13, [r0, #4]
 8017990:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8017994:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017998:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801799c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80179a0:	ed80 6a08 	vstr	s12, [r0, #32]
 80179a4:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80179a6:	6242      	str	r2, [r0, #36]	; 0x24
 80179a8:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80179ac:	ed93 6a03 	vldr	s12, [r3, #12]
 80179b0:	eea5 6a87 	vfma.f32	s12, s11, s14
 80179b4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80179b8:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80179bc:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80179c0:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80179c4:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80179c8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80179cc:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80179d0:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80179d2:	6302      	str	r2, [r0, #48]	; 0x30
 80179d4:	ed93 6a06 	vldr	s12, [r3, #24]
 80179d8:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80179dc:	eea5 6a87 	vfma.f32	s12, s11, s14
 80179e0:	eeb0 7a46 	vmov.f32	s14, s12
 80179e4:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80179e8:	eea6 7a27 	vfma.f32	s14, s12, s15
 80179ec:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80179f0:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80179f4:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80179f8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80179fc:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017a00:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8017a02:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017a04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017a08:	f1c5 0501 	rsb	r5, r5, #1
 8017a0c:	f015 050f 	ands.w	r5, r5, #15
 8017a10:	bf18      	it	ne
 8017a12:	2501      	movne	r5, #1
 8017a14:	2410      	movs	r4, #16
 8017a16:	fb9e fef4 	sdiv	lr, lr, r4
 8017a1a:	ebae 0e05 	sub.w	lr, lr, r5
 8017a1e:	e753      	b.n	80178c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017a20:	f1c5 0501 	rsb	r5, r5, #1
 8017a24:	f015 050f 	ands.w	r5, r5, #15
 8017a28:	bf18      	it	ne
 8017a2a:	2501      	movne	r5, #1
 8017a2c:	f04f 0910 	mov.w	r9, #16
 8017a30:	fb94 f4f9 	sdiv	r4, r4, r9
 8017a34:	1b64      	subs	r4, r4, r5
 8017a36:	e755      	b.n	80178e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017a38:	4264      	negs	r4, r4
 8017a3a:	fb94 fef6 	sdiv	lr, r4, r6
 8017a3e:	f1ce 0800 	rsb	r8, lr, #0
 8017a42:	fb06 441e 	mls	r4, r6, lr, r4
 8017a46:	f8c0 8000 	str.w	r8, [r0]
 8017a4a:	6104      	str	r4, [r0, #16]
 8017a4c:	2c00      	cmp	r4, #0
 8017a4e:	f43f af6e 	beq.w	801792e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017a52:	ea6f 0e0e 	mvn.w	lr, lr
 8017a56:	f8c0 e000 	str.w	lr, [r0]
 8017a5a:	1b34      	subs	r4, r6, r4
 8017a5c:	e766      	b.n	801792c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017a5e:	426d      	negs	r5, r5
 8017a60:	fb95 f4f6 	sdiv	r4, r5, r6
 8017a64:	f1c4 0e00 	rsb	lr, r4, #0
 8017a68:	fb06 5514 	mls	r5, r6, r4, r5
 8017a6c:	f8c0 e004 	str.w	lr, [r0, #4]
 8017a70:	6085      	str	r5, [r0, #8]
 8017a72:	2d00      	cmp	r5, #0
 8017a74:	f43f af64 	beq.w	8017940 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017a78:	43e4      	mvns	r4, r4
 8017a7a:	6044      	str	r4, [r0, #4]
 8017a7c:	1b75      	subs	r5, r6, r5
 8017a7e:	e75e      	b.n	801793e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017a80:	3d800000 	.word	0x3d800000

08017a84 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8017a84:	4602      	mov	r2, r0
 8017a86:	b148      	cbz	r0, 8017a9c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017a88:	2300      	movs	r3, #0
 8017a8a:	b298      	uxth	r0, r3
 8017a8c:	3301      	adds	r3, #1
 8017a8e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017a92:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017a96:	2900      	cmp	r1, #0
 8017a98:	d1f7      	bne.n	8017a8a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017a9a:	4770      	bx	lr
 8017a9c:	4770      	bx	lr

08017a9e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017a9e:	b530      	push	{r4, r5, lr}
 8017aa0:	4604      	mov	r4, r0
 8017aa2:	b159      	cbz	r1, 8017abc <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017aa4:	b148      	cbz	r0, 8017aba <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017aa6:	2300      	movs	r3, #0
 8017aa8:	b298      	uxth	r0, r3
 8017aaa:	4282      	cmp	r2, r0
 8017aac:	d905      	bls.n	8017aba <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017aae:	5ccd      	ldrb	r5, [r1, r3]
 8017ab0:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017ab4:	3301      	adds	r3, #1
 8017ab6:	2d00      	cmp	r5, #0
 8017ab8:	d1f6      	bne.n	8017aa8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017aba:	bd30      	pop	{r4, r5, pc}
 8017abc:	4608      	mov	r0, r1
 8017abe:	e7fc      	b.n	8017aba <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017ac0 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017ac0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017ac2:	b08b      	sub	sp, #44	; 0x2c
 8017ac4:	468c      	mov	ip, r1
 8017ac6:	2100      	movs	r1, #0
 8017ac8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017acc:	4604      	mov	r4, r0
 8017ace:	261f      	movs	r6, #31
 8017ad0:	af01      	add	r7, sp, #4
 8017ad2:	fb94 fef3 	sdiv	lr, r4, r3
 8017ad6:	fb03 441e 	mls	r4, r3, lr, r4
 8017ada:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017ade:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017ae2:	b2ec      	uxtb	r4, r5
 8017ae4:	2d09      	cmp	r5, #9
 8017ae6:	bfd4      	ite	le
 8017ae8:	3430      	addle	r4, #48	; 0x30
 8017aea:	3457      	addgt	r4, #87	; 0x57
 8017aec:	b2e4      	uxtb	r4, r4
 8017aee:	55bc      	strb	r4, [r7, r6]
 8017af0:	4674      	mov	r4, lr
 8017af2:	1e71      	subs	r1, r6, #1
 8017af4:	b974      	cbnz	r4, 8017b14 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8017af6:	2800      	cmp	r0, #0
 8017af8:	da05      	bge.n	8017b06 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8017afa:	ab0a      	add	r3, sp, #40	; 0x28
 8017afc:	4419      	add	r1, r3
 8017afe:	232d      	movs	r3, #45	; 0x2d
 8017b00:	f801 3c24 	strb.w	r3, [r1, #-36]
 8017b04:	1eb1      	subs	r1, r6, #2
 8017b06:	3101      	adds	r1, #1
 8017b08:	4439      	add	r1, r7
 8017b0a:	4660      	mov	r0, ip
 8017b0c:	f7ff ffc7 	bl	8017a9e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017b10:	b00b      	add	sp, #44	; 0x2c
 8017b12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017b14:	460e      	mov	r6, r1
 8017b16:	e7dc      	b.n	8017ad2 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017b18 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017b18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017b1a:	b08b      	sub	sp, #44	; 0x2c
 8017b1c:	468c      	mov	ip, r1
 8017b1e:	2100      	movs	r1, #0
 8017b20:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017b24:	ae01      	add	r6, sp, #4
 8017b26:	211f      	movs	r1, #31
 8017b28:	fbb0 f7f3 	udiv	r7, r0, r3
 8017b2c:	fb03 0517 	mls	r5, r3, r7, r0
 8017b30:	b2ec      	uxtb	r4, r5
 8017b32:	2d09      	cmp	r5, #9
 8017b34:	bfd4      	ite	le
 8017b36:	3430      	addle	r4, #48	; 0x30
 8017b38:	3457      	addgt	r4, #87	; 0x57
 8017b3a:	b2e4      	uxtb	r4, r4
 8017b3c:	558c      	strb	r4, [r1, r6]
 8017b3e:	4638      	mov	r0, r7
 8017b40:	1e4c      	subs	r4, r1, #1
 8017b42:	b92f      	cbnz	r7, 8017b50 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8017b44:	4431      	add	r1, r6
 8017b46:	4660      	mov	r0, ip
 8017b48:	f7ff ffa9 	bl	8017a9e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017b4c:	b00b      	add	sp, #44	; 0x2c
 8017b4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017b50:	4621      	mov	r1, r4
 8017b52:	e7e9      	b.n	8017b28 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08017b54 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8017b54:	b410      	push	{r4}
 8017b56:	b131      	cbz	r1, 8017b66 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017b58:	1e9c      	subs	r4, r3, #2
 8017b5a:	2c22      	cmp	r4, #34	; 0x22
 8017b5c:	d803      	bhi.n	8017b66 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017b5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017b62:	f7ff bfad 	b.w	8017ac0 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017b66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017b6a:	4770      	bx	lr

08017b6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8017b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b70:	4691      	mov	r9, r2
 8017b72:	b085      	sub	sp, #20
 8017b74:	6802      	ldr	r2, [r0, #0]
 8017b76:	9201      	str	r2, [sp, #4]
 8017b78:	4688      	mov	r8, r1
 8017b7a:	4683      	mov	fp, r0
 8017b7c:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017b80:	9103      	str	r1, [sp, #12]
 8017b82:	4610      	mov	r0, r2
 8017b84:	461c      	mov	r4, r3
 8017b86:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8017b8a:	9302      	str	r3, [sp, #8]
 8017b8c:	f7ff ff7a 	bl	8017a84 <_ZN8touchgfx7Unicode6strlenEPKt>
 8017b90:	f1b8 0f00 	cmp.w	r8, #0
 8017b94:	bf0c      	ite	eq
 8017b96:	4684      	moveq	ip, r0
 8017b98:	f100 0c01 	addne.w	ip, r0, #1
 8017b9c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017ba0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017ba4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017ba6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017ba8:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8017bac:	9903      	ldr	r1, [sp, #12]
 8017bae:	fa1f fc8c 	uxth.w	ip, ip
 8017bb2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8017bb6:	d041      	beq.n	8017c3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017bb8:	d834      	bhi.n	8017c24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8017bba:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8017bbe:	d059      	beq.n	8017c74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017bc0:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8017bc4:	d03a      	beq.n	8017c3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017bc6:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8017bca:	d034      	beq.n	8017c36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017bcc:	2400      	movs	r4, #0
 8017bce:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017bd2:	3a01      	subs	r2, #1
 8017bd4:	b169      	cbz	r1, 8017bf2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017bd6:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017bd8:	458c      	cmp	ip, r1
 8017bda:	da09      	bge.n	8017bf0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017bdc:	eba1 010c 	sub.w	r1, r1, ip
 8017be0:	b289      	uxth	r1, r1
 8017be2:	b933      	cbnz	r3, 8017bf2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017be4:	2e00      	cmp	r6, #0
 8017be6:	d051      	beq.n	8017c8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017be8:	2800      	cmp	r0, #0
 8017bea:	d04f      	beq.n	8017c8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017bec:	440c      	add	r4, r1
 8017bee:	b2a4      	uxth	r4, r4
 8017bf0:	2100      	movs	r1, #0
 8017bf2:	682b      	ldr	r3, [r5, #0]
 8017bf4:	4293      	cmp	r3, r2
 8017bf6:	da07      	bge.n	8017c08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017bf8:	f1b8 0f00 	cmp.w	r8, #0
 8017bfc:	d004      	beq.n	8017c08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017bfe:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8017c02:	682b      	ldr	r3, [r5, #0]
 8017c04:	3301      	adds	r3, #1
 8017c06:	602b      	str	r3, [r5, #0]
 8017c08:	2730      	movs	r7, #48	; 0x30
 8017c0a:	2c00      	cmp	r4, #0
 8017c0c:	d04e      	beq.n	8017cac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017c0e:	682e      	ldr	r6, [r5, #0]
 8017c10:	3c01      	subs	r4, #1
 8017c12:	42b2      	cmp	r2, r6
 8017c14:	b2a4      	uxth	r4, r4
 8017c16:	dd49      	ble.n	8017cac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017c18:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017c1c:	682b      	ldr	r3, [r5, #0]
 8017c1e:	3301      	adds	r3, #1
 8017c20:	602b      	str	r3, [r5, #0]
 8017c22:	e7f2      	b.n	8017c0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8017c24:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017c28:	d01d      	beq.n	8017c66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8017c2a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8017c2e:	d002      	beq.n	8017c36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017c30:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8017c34:	e7c9      	b.n	8017bca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8017c36:	4684      	mov	ip, r0
 8017c38:	f04f 0800 	mov.w	r8, #0
 8017c3c:	2c00      	cmp	r4, #0
 8017c3e:	d0c6      	beq.n	8017bce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c40:	b947      	cbnz	r7, 8017c54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017c42:	2801      	cmp	r0, #1
 8017c44:	d106      	bne.n	8017c54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017c46:	8814      	ldrh	r4, [r2, #0]
 8017c48:	2c30      	cmp	r4, #48	; 0x30
 8017c4a:	bf02      	ittt	eq
 8017c4c:	3202      	addeq	r2, #2
 8017c4e:	f8cb 2000 	streq.w	r2, [fp]
 8017c52:	4638      	moveq	r0, r7
 8017c54:	45bc      	cmp	ip, r7
 8017c56:	da14      	bge.n	8017c82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8017c58:	b2bf      	uxth	r7, r7
 8017c5a:	eba7 040c 	sub.w	r4, r7, ip
 8017c5e:	b2a4      	uxth	r4, r4
 8017c60:	46bc      	mov	ip, r7
 8017c62:	2600      	movs	r6, #0
 8017c64:	e7b3      	b.n	8017bce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c66:	4684      	mov	ip, r0
 8017c68:	b16c      	cbz	r4, 8017c86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8017c6a:	42b8      	cmp	r0, r7
 8017c6c:	dd00      	ble.n	8017c70 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8017c6e:	b2b8      	uxth	r0, r7
 8017c70:	2400      	movs	r4, #0
 8017c72:	e003      	b.n	8017c7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8017c74:	f04f 0c01 	mov.w	ip, #1
 8017c78:	2400      	movs	r4, #0
 8017c7a:	4660      	mov	r0, ip
 8017c7c:	4626      	mov	r6, r4
 8017c7e:	46a0      	mov	r8, r4
 8017c80:	e7a5      	b.n	8017bce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c82:	2400      	movs	r4, #0
 8017c84:	e7ed      	b.n	8017c62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8017c86:	4626      	mov	r6, r4
 8017c88:	46a0      	mov	r8, r4
 8017c8a:	e7a0      	b.n	8017bce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c8c:	2900      	cmp	r1, #0
 8017c8e:	d0b0      	beq.n	8017bf2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017c90:	2720      	movs	r7, #32
 8017c92:	682e      	ldr	r6, [r5, #0]
 8017c94:	2900      	cmp	r1, #0
 8017c96:	d0ac      	beq.n	8017bf2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017c98:	3901      	subs	r1, #1
 8017c9a:	4296      	cmp	r6, r2
 8017c9c:	b289      	uxth	r1, r1
 8017c9e:	daa7      	bge.n	8017bf0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017ca0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017ca4:	682b      	ldr	r3, [r5, #0]
 8017ca6:	3301      	adds	r3, #1
 8017ca8:	602b      	str	r3, [r5, #0]
 8017caa:	e7f2      	b.n	8017c92 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8017cac:	b188      	cbz	r0, 8017cd2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017cae:	682b      	ldr	r3, [r5, #0]
 8017cb0:	3801      	subs	r0, #1
 8017cb2:	429a      	cmp	r2, r3
 8017cb4:	b280      	uxth	r0, r0
 8017cb6:	dd0c      	ble.n	8017cd2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017cb8:	f8db 3000 	ldr.w	r3, [fp]
 8017cbc:	1c9c      	adds	r4, r3, #2
 8017cbe:	f8cb 4000 	str.w	r4, [fp]
 8017cc2:	881c      	ldrh	r4, [r3, #0]
 8017cc4:	682b      	ldr	r3, [r5, #0]
 8017cc6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8017cca:	682b      	ldr	r3, [r5, #0]
 8017ccc:	3301      	adds	r3, #1
 8017cce:	602b      	str	r3, [r5, #0]
 8017cd0:	e7ec      	b.n	8017cac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017cd2:	2620      	movs	r6, #32
 8017cd4:	b151      	cbz	r1, 8017cec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017cd6:	6828      	ldr	r0, [r5, #0]
 8017cd8:	3901      	subs	r1, #1
 8017cda:	4282      	cmp	r2, r0
 8017cdc:	b289      	uxth	r1, r1
 8017cde:	dd05      	ble.n	8017cec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017ce0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8017ce4:	682b      	ldr	r3, [r5, #0]
 8017ce6:	3301      	adds	r3, #1
 8017ce8:	602b      	str	r3, [r5, #0]
 8017cea:	e7f3      	b.n	8017cd4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8017cec:	b005      	add	sp, #20
 8017cee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017cf2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8017cf2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017cf6:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8017cfa:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8017cfe:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8017d02:	2400      	movs	r4, #0
 8017d04:	8014      	strh	r4, [r2, #0]
 8017d06:	701c      	strb	r4, [r3, #0]
 8017d08:	f888 4000 	strb.w	r4, [r8]
 8017d0c:	f88c 4000 	strb.w	r4, [ip]
 8017d10:	f88e 4000 	strb.w	r4, [lr]
 8017d14:	703c      	strb	r4, [r7, #0]
 8017d16:	6804      	ldr	r4, [r0, #0]
 8017d18:	b1a4      	cbz	r4, 8017d44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8017d1a:	8824      	ldrh	r4, [r4, #0]
 8017d1c:	f04f 0901 	mov.w	r9, #1
 8017d20:	b314      	cbz	r4, 8017d68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017d22:	2c2b      	cmp	r4, #43	; 0x2b
 8017d24:	d001      	beq.n	8017d2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8017d26:	2c20      	cmp	r4, #32
 8017d28:	d110      	bne.n	8017d4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8017d2a:	8014      	strh	r4, [r2, #0]
 8017d2c:	6804      	ldr	r4, [r0, #0]
 8017d2e:	b10c      	cbz	r4, 8017d34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8017d30:	3402      	adds	r4, #2
 8017d32:	6004      	str	r4, [r0, #0]
 8017d34:	680c      	ldr	r4, [r1, #0]
 8017d36:	b10c      	cbz	r4, 8017d3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8017d38:	3401      	adds	r4, #1
 8017d3a:	600c      	str	r4, [r1, #0]
 8017d3c:	6804      	ldr	r4, [r0, #0]
 8017d3e:	b17c      	cbz	r4, 8017d60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8017d40:	8824      	ldrh	r4, [r4, #0]
 8017d42:	e7ed      	b.n	8017d20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017d44:	680c      	ldr	r4, [r1, #0]
 8017d46:	b17c      	cbz	r4, 8017d68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017d48:	7824      	ldrb	r4, [r4, #0]
 8017d4a:	e7e7      	b.n	8017d1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8017d4c:	2c2d      	cmp	r4, #45	; 0x2d
 8017d4e:	d102      	bne.n	8017d56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8017d50:	f883 9000 	strb.w	r9, [r3]
 8017d54:	e7ea      	b.n	8017d2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017d56:	2c23      	cmp	r4, #35	; 0x23
 8017d58:	d107      	bne.n	8017d6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8017d5a:	f888 9000 	strb.w	r9, [r8]
 8017d5e:	e7e5      	b.n	8017d2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017d60:	680c      	ldr	r4, [r1, #0]
 8017d62:	b10c      	cbz	r4, 8017d68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017d64:	7824      	ldrb	r4, [r4, #0]
 8017d66:	e7db      	b.n	8017d20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017d68:	2400      	movs	r4, #0
 8017d6a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8017d6e:	2b09      	cmp	r3, #9
 8017d70:	d901      	bls.n	8017d76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8017d72:	2c2a      	cmp	r4, #42	; 0x2a
 8017d74:	d122      	bne.n	8017dbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017d76:	2301      	movs	r3, #1
 8017d78:	2c30      	cmp	r4, #48	; 0x30
 8017d7a:	f88e 3000 	strb.w	r3, [lr]
 8017d7e:	d10d      	bne.n	8017d9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017d80:	f88c 3000 	strb.w	r3, [ip]
 8017d84:	6803      	ldr	r3, [r0, #0]
 8017d86:	b10b      	cbz	r3, 8017d8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8017d88:	3302      	adds	r3, #2
 8017d8a:	6003      	str	r3, [r0, #0]
 8017d8c:	680b      	ldr	r3, [r1, #0]
 8017d8e:	b10b      	cbz	r3, 8017d94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8017d90:	3301      	adds	r3, #1
 8017d92:	600b      	str	r3, [r1, #0]
 8017d94:	6803      	ldr	r3, [r0, #0]
 8017d96:	2b00      	cmp	r3, #0
 8017d98:	d02f      	beq.n	8017dfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8017d9a:	881c      	ldrh	r4, [r3, #0]
 8017d9c:	2c2a      	cmp	r4, #42	; 0x2a
 8017d9e:	d135      	bne.n	8017e0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017da0:	f04f 33ff 	mov.w	r3, #4294967295
 8017da4:	6033      	str	r3, [r6, #0]
 8017da6:	6803      	ldr	r3, [r0, #0]
 8017da8:	b10b      	cbz	r3, 8017dae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8017daa:	3302      	adds	r3, #2
 8017dac:	6003      	str	r3, [r0, #0]
 8017dae:	680b      	ldr	r3, [r1, #0]
 8017db0:	b10b      	cbz	r3, 8017db6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8017db2:	3301      	adds	r3, #1
 8017db4:	600b      	str	r3, [r1, #0]
 8017db6:	6803      	ldr	r3, [r0, #0]
 8017db8:	b31b      	cbz	r3, 8017e02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8017dba:	881c      	ldrh	r4, [r3, #0]
 8017dbc:	2c2e      	cmp	r4, #46	; 0x2e
 8017dbe:	d11a      	bne.n	8017df6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017dc0:	2301      	movs	r3, #1
 8017dc2:	703b      	strb	r3, [r7, #0]
 8017dc4:	6803      	ldr	r3, [r0, #0]
 8017dc6:	b10b      	cbz	r3, 8017dcc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8017dc8:	3302      	adds	r3, #2
 8017dca:	6003      	str	r3, [r0, #0]
 8017dcc:	680b      	ldr	r3, [r1, #0]
 8017dce:	b10b      	cbz	r3, 8017dd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8017dd0:	3301      	adds	r3, #1
 8017dd2:	600b      	str	r3, [r1, #0]
 8017dd4:	6803      	ldr	r3, [r0, #0]
 8017dd6:	2b00      	cmp	r3, #0
 8017dd8:	d036      	beq.n	8017e48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8017dda:	881b      	ldrh	r3, [r3, #0]
 8017ddc:	2b2a      	cmp	r3, #42	; 0x2a
 8017dde:	d137      	bne.n	8017e50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017de0:	f04f 33ff 	mov.w	r3, #4294967295
 8017de4:	602b      	str	r3, [r5, #0]
 8017de6:	6803      	ldr	r3, [r0, #0]
 8017de8:	b10b      	cbz	r3, 8017dee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8017dea:	3302      	adds	r3, #2
 8017dec:	6003      	str	r3, [r0, #0]
 8017dee:	680b      	ldr	r3, [r1, #0]
 8017df0:	b10b      	cbz	r3, 8017df6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017df2:	3301      	adds	r3, #1
 8017df4:	600b      	str	r3, [r1, #0]
 8017df6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017dfa:	680c      	ldr	r4, [r1, #0]
 8017dfc:	b134      	cbz	r4, 8017e0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017dfe:	7824      	ldrb	r4, [r4, #0]
 8017e00:	e7cc      	b.n	8017d9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017e02:	680b      	ldr	r3, [r1, #0]
 8017e04:	2b00      	cmp	r3, #0
 8017e06:	d0f6      	beq.n	8017df6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017e08:	781c      	ldrb	r4, [r3, #0]
 8017e0a:	e7d7      	b.n	8017dbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017e0c:	2300      	movs	r3, #0
 8017e0e:	6033      	str	r3, [r6, #0]
 8017e10:	220a      	movs	r2, #10
 8017e12:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8017e16:	fa1f f38c 	uxth.w	r3, ip
 8017e1a:	2b09      	cmp	r3, #9
 8017e1c:	d8ce      	bhi.n	8017dbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017e1e:	6833      	ldr	r3, [r6, #0]
 8017e20:	fb02 c303 	mla	r3, r2, r3, ip
 8017e24:	6033      	str	r3, [r6, #0]
 8017e26:	6803      	ldr	r3, [r0, #0]
 8017e28:	b10b      	cbz	r3, 8017e2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8017e2a:	3302      	adds	r3, #2
 8017e2c:	6003      	str	r3, [r0, #0]
 8017e2e:	680b      	ldr	r3, [r1, #0]
 8017e30:	b10b      	cbz	r3, 8017e36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8017e32:	3301      	adds	r3, #1
 8017e34:	600b      	str	r3, [r1, #0]
 8017e36:	6803      	ldr	r3, [r0, #0]
 8017e38:	b10b      	cbz	r3, 8017e3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8017e3a:	881c      	ldrh	r4, [r3, #0]
 8017e3c:	e7e9      	b.n	8017e12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017e3e:	680c      	ldr	r4, [r1, #0]
 8017e40:	2c00      	cmp	r4, #0
 8017e42:	d0e6      	beq.n	8017e12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017e44:	7824      	ldrb	r4, [r4, #0]
 8017e46:	e7e4      	b.n	8017e12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017e48:	680b      	ldr	r3, [r1, #0]
 8017e4a:	b10b      	cbz	r3, 8017e50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017e4c:	781b      	ldrb	r3, [r3, #0]
 8017e4e:	e7c5      	b.n	8017ddc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8017e50:	2200      	movs	r2, #0
 8017e52:	602a      	str	r2, [r5, #0]
 8017e54:	240a      	movs	r4, #10
 8017e56:	3b30      	subs	r3, #48	; 0x30
 8017e58:	b29e      	uxth	r6, r3
 8017e5a:	2e09      	cmp	r6, #9
 8017e5c:	682a      	ldr	r2, [r5, #0]
 8017e5e:	d813      	bhi.n	8017e88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8017e60:	fb04 3302 	mla	r3, r4, r2, r3
 8017e64:	602b      	str	r3, [r5, #0]
 8017e66:	6803      	ldr	r3, [r0, #0]
 8017e68:	b10b      	cbz	r3, 8017e6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8017e6a:	3302      	adds	r3, #2
 8017e6c:	6003      	str	r3, [r0, #0]
 8017e6e:	680b      	ldr	r3, [r1, #0]
 8017e70:	b10b      	cbz	r3, 8017e76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8017e72:	3301      	adds	r3, #1
 8017e74:	600b      	str	r3, [r1, #0]
 8017e76:	6803      	ldr	r3, [r0, #0]
 8017e78:	b10b      	cbz	r3, 8017e7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8017e7a:	881b      	ldrh	r3, [r3, #0]
 8017e7c:	e7eb      	b.n	8017e56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017e7e:	680b      	ldr	r3, [r1, #0]
 8017e80:	2b00      	cmp	r3, #0
 8017e82:	d0e8      	beq.n	8017e56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017e84:	781b      	ldrb	r3, [r3, #0]
 8017e86:	e7e6      	b.n	8017e56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017e88:	2a06      	cmp	r2, #6
 8017e8a:	bfa8      	it	ge
 8017e8c:	2206      	movge	r2, #6
 8017e8e:	602a      	str	r2, [r5, #0]
 8017e90:	e7b1      	b.n	8017df6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08017e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8017e92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e96:	b0a3      	sub	sp, #140	; 0x8c
 8017e98:	2600      	movs	r6, #0
 8017e9a:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8017e9e:	4607      	mov	r7, r0
 8017ea0:	4688      	mov	r8, r1
 8017ea2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017ea6:	4631      	mov	r1, r6
 8017ea8:	2242      	movs	r2, #66	; 0x42
 8017eaa:	4648      	mov	r0, r9
 8017eac:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8017eae:	960d      	str	r6, [sp, #52]	; 0x34
 8017eb0:	f00e fc40 	bl	8026734 <memset>
 8017eb4:	b15f      	cbz	r7, 8017ece <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8017eb6:	f108 3aff 	add.w	sl, r8, #4294967295
 8017eba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017ebc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017ebe:	b152      	cbz	r2, 8017ed6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017ec0:	8812      	ldrh	r2, [r2, #0]
 8017ec2:	b10a      	cbz	r2, 8017ec8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017ec4:	459a      	cmp	sl, r3
 8017ec6:	dc2e      	bgt.n	8017f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017ec8:	2200      	movs	r2, #0
 8017eca:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017ece:	4638      	mov	r0, r7
 8017ed0:	b023      	add	sp, #140	; 0x8c
 8017ed2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ed6:	9a08      	ldr	r2, [sp, #32]
 8017ed8:	2a00      	cmp	r2, #0
 8017eda:	d0f5      	beq.n	8017ec8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017edc:	7812      	ldrb	r2, [r2, #0]
 8017ede:	e7f0      	b.n	8017ec2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017ee0:	2d00      	cmp	r5, #0
 8017ee2:	d0ea      	beq.n	8017eba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017ee4:	782a      	ldrb	r2, [r5, #0]
 8017ee6:	b142      	cbz	r2, 8017efa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017ee8:	2a25      	cmp	r2, #37	; 0x25
 8017eea:	d001      	beq.n	8017ef0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8017eec:	459a      	cmp	sl, r3
 8017eee:	dc08      	bgt.n	8017f02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017ef0:	f1bb 0f00 	cmp.w	fp, #0
 8017ef4:	d121      	bne.n	8017f3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8017ef6:	2d00      	cmp	r5, #0
 8017ef8:	d0df      	beq.n	8017eba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017efa:	782a      	ldrb	r2, [r5, #0]
 8017efc:	f04f 0b00 	mov.w	fp, #0
 8017f00:	e01d      	b.n	8017f3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8017f02:	f1bb 0f00 	cmp.w	fp, #0
 8017f06:	d078      	beq.n	8017ffa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8017f08:	f8bb 2000 	ldrh.w	r2, [fp]
 8017f0c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017f10:	f1bb 0f00 	cmp.w	fp, #0
 8017f14:	d002      	beq.n	8017f1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8017f16:	f10b 0202 	add.w	r2, fp, #2
 8017f1a:	9209      	str	r2, [sp, #36]	; 0x24
 8017f1c:	b10d      	cbz	r5, 8017f22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8017f1e:	3501      	adds	r5, #1
 8017f20:	9508      	str	r5, [sp, #32]
 8017f22:	3301      	adds	r3, #1
 8017f24:	930d      	str	r3, [sp, #52]	; 0x34
 8017f26:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8017f2a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f2c:	f1bb 0f00 	cmp.w	fp, #0
 8017f30:	d0d6      	beq.n	8017ee0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8017f32:	f8bb 2000 	ldrh.w	r2, [fp]
 8017f36:	2a00      	cmp	r2, #0
 8017f38:	d1d6      	bne.n	8017ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8017f3a:	f8bb 2000 	ldrh.w	r2, [fp]
 8017f3e:	2a00      	cmp	r2, #0
 8017f40:	d0bb      	beq.n	8017eba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017f42:	459a      	cmp	sl, r3
 8017f44:	ddb9      	ble.n	8017eba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017f46:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8017f4a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8017f4e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8017f52:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8017f56:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8017f5a:	960e      	str	r6, [sp, #56]	; 0x38
 8017f5c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8017f60:	960f      	str	r6, [sp, #60]	; 0x3c
 8017f62:	f1bb 0f00 	cmp.w	fp, #0
 8017f66:	d002      	beq.n	8017f6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8017f68:	f10b 0302 	add.w	r3, fp, #2
 8017f6c:	9309      	str	r3, [sp, #36]	; 0x24
 8017f6e:	b10d      	cbz	r5, 8017f74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8017f70:	1c6b      	adds	r3, r5, #1
 8017f72:	9308      	str	r3, [sp, #32]
 8017f74:	ab0f      	add	r3, sp, #60	; 0x3c
 8017f76:	9305      	str	r3, [sp, #20]
 8017f78:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8017f7c:	9304      	str	r3, [sp, #16]
 8017f7e:	ab0e      	add	r3, sp, #56	; 0x38
 8017f80:	9303      	str	r3, [sp, #12]
 8017f82:	ab0c      	add	r3, sp, #48	; 0x30
 8017f84:	9302      	str	r3, [sp, #8]
 8017f86:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8017f8a:	9301      	str	r3, [sp, #4]
 8017f8c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8017f90:	9300      	str	r3, [sp, #0]
 8017f92:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8017f96:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8017f9a:	a908      	add	r1, sp, #32
 8017f9c:	a809      	add	r0, sp, #36	; 0x24
 8017f9e:	f7ff fea8 	bl	8017cf2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017fa2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017fa4:	2b00      	cmp	r3, #0
 8017fa6:	bfbe      	ittt	lt
 8017fa8:	6823      	ldrlt	r3, [r4, #0]
 8017faa:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017fae:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017fb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017fb2:	bfb8      	it	lt
 8017fb4:	3404      	addlt	r4, #4
 8017fb6:	2b00      	cmp	r3, #0
 8017fb8:	bfb8      	it	lt
 8017fba:	6823      	ldrlt	r3, [r4, #0]
 8017fbc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017fc0:	bfbe      	ittt	lt
 8017fc2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017fc6:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8017fc8:	3404      	addlt	r4, #4
 8017fca:	b1d9      	cbz	r1, 8018004 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8017fcc:	880b      	ldrh	r3, [r1, #0]
 8017fce:	2b69      	cmp	r3, #105	; 0x69
 8017fd0:	d01f      	beq.n	8018012 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017fd2:	d82f      	bhi.n	8018034 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8017fd4:	2b58      	cmp	r3, #88	; 0x58
 8017fd6:	d01c      	beq.n	8018012 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017fd8:	d818      	bhi.n	801800c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8017fda:	2b25      	cmp	r3, #37	; 0x25
 8017fdc:	d034      	beq.n	8018048 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8017fde:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8017fe2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017fe4:	f1bb 0f00 	cmp.w	fp, #0
 8017fe8:	f000 80b8 	beq.w	801815c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8017fec:	f8bb 5000 	ldrh.w	r5, [fp]
 8017ff0:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8017ff4:	3301      	adds	r3, #1
 8017ff6:	930d      	str	r3, [sp, #52]	; 0x34
 8017ff8:	e029      	b.n	801804e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017ffa:	b10d      	cbz	r5, 8018000 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8017ffc:	782a      	ldrb	r2, [r5, #0]
 8017ffe:	e785      	b.n	8017f0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018000:	462a      	mov	r2, r5
 8018002:	e783      	b.n	8017f0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018004:	2a00      	cmp	r2, #0
 8018006:	d0ea      	beq.n	8017fde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018008:	7813      	ldrb	r3, [r2, #0]
 801800a:	e7e0      	b.n	8017fce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801800c:	3b63      	subs	r3, #99	; 0x63
 801800e:	2b01      	cmp	r3, #1
 8018010:	d8e5      	bhi.n	8017fde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018012:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8018016:	b329      	cbz	r1, 8018064 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018018:	880b      	ldrh	r3, [r1, #0]
 801801a:	2b69      	cmp	r3, #105	; 0x69
 801801c:	d063      	beq.n	80180e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801801e:	d825      	bhi.n	801806c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018020:	2b63      	cmp	r3, #99	; 0x63
 8018022:	d038      	beq.n	8018096 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018024:	2b64      	cmp	r3, #100	; 0x64
 8018026:	d05e      	beq.n	80180e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018028:	2b58      	cmp	r3, #88	; 0x58
 801802a:	d07b      	beq.n	8018124 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801802c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018030:	4625      	mov	r5, r4
 8018032:	e036      	b.n	80180a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018034:	2b73      	cmp	r3, #115	; 0x73
 8018036:	d0ec      	beq.n	8018012 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018038:	d802      	bhi.n	8018040 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801803a:	2b6f      	cmp	r3, #111	; 0x6f
 801803c:	d1cf      	bne.n	8017fde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801803e:	e7e8      	b.n	8018012 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018040:	2b75      	cmp	r3, #117	; 0x75
 8018042:	d0e6      	beq.n	8018012 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018044:	2b78      	cmp	r3, #120	; 0x78
 8018046:	e7f9      	b.n	801803c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018048:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801804a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801804e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018050:	b10b      	cbz	r3, 8018056 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8018052:	3302      	adds	r3, #2
 8018054:	9309      	str	r3, [sp, #36]	; 0x24
 8018056:	9b08      	ldr	r3, [sp, #32]
 8018058:	2b00      	cmp	r3, #0
 801805a:	f43f af2e 	beq.w	8017eba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801805e:	3301      	adds	r3, #1
 8018060:	9308      	str	r3, [sp, #32]
 8018062:	e72a      	b.n	8017eba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018064:	2a00      	cmp	r2, #0
 8018066:	d0e1      	beq.n	801802c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018068:	7813      	ldrb	r3, [r2, #0]
 801806a:	e7d6      	b.n	801801a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801806c:	2b73      	cmp	r3, #115	; 0x73
 801806e:	d036      	beq.n	80180de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018070:	d807      	bhi.n	8018082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8018072:	2b6f      	cmp	r3, #111	; 0x6f
 8018074:	d1da      	bne.n	801802c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018076:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018078:	1d25      	adds	r5, r4, #4
 801807a:	eba8 0202 	sub.w	r2, r8, r2
 801807e:	2308      	movs	r3, #8
 8018080:	e04a      	b.n	8018118 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018082:	2b75      	cmp	r3, #117	; 0x75
 8018084:	d043      	beq.n	801810e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8018086:	2b78      	cmp	r3, #120	; 0x78
 8018088:	d1d0      	bne.n	801802c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801808a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801808c:	1d25      	adds	r5, r4, #4
 801808e:	eba8 0202 	sub.w	r2, r8, r2
 8018092:	2310      	movs	r3, #16
 8018094:	e040      	b.n	8018118 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018096:	6823      	ldr	r3, [r4, #0]
 8018098:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801809c:	1d25      	adds	r5, r4, #4
 801809e:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 80180a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80180a4:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80180a8:	2b00      	cmp	r3, #0
 80180aa:	d052      	beq.n	8018152 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80180ac:	881a      	ldrh	r2, [r3, #0]
 80180ae:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80180b2:	a80d      	add	r0, sp, #52	; 0x34
 80180b4:	9005      	str	r0, [sp, #20]
 80180b6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80180ba:	9004      	str	r0, [sp, #16]
 80180bc:	980e      	ldr	r0, [sp, #56]	; 0x38
 80180be:	9003      	str	r0, [sp, #12]
 80180c0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80180c4:	9002      	str	r0, [sp, #8]
 80180c6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80180c8:	9001      	str	r0, [sp, #4]
 80180ca:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80180ce:	9000      	str	r0, [sp, #0]
 80180d0:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80180d4:	a810      	add	r0, sp, #64	; 0x40
 80180d6:	f7ff fd49 	bl	8017b6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80180da:	462c      	mov	r4, r5
 80180dc:	e7b7      	b.n	801804e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80180de:	6823      	ldr	r3, [r4, #0]
 80180e0:	1d25      	adds	r5, r4, #4
 80180e2:	9310      	str	r3, [sp, #64]	; 0x40
 80180e4:	e7dd      	b.n	80180a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80180e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80180e8:	6820      	ldr	r0, [r4, #0]
 80180ea:	eba8 0202 	sub.w	r2, r8, r2
 80180ee:	230a      	movs	r3, #10
 80180f0:	b292      	uxth	r2, r2
 80180f2:	4649      	mov	r1, r9
 80180f4:	f7ff fce4 	bl	8017ac0 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80180f8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80180fc:	2b2d      	cmp	r3, #45	; 0x2d
 80180fe:	f104 0504 	add.w	r5, r4, #4
 8018102:	d1ce      	bne.n	80180a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018104:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018108:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801810a:	3302      	adds	r3, #2
 801810c:	e7e9      	b.n	80180e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801810e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018110:	1d25      	adds	r5, r4, #4
 8018112:	eba8 0202 	sub.w	r2, r8, r2
 8018116:	230a      	movs	r3, #10
 8018118:	b292      	uxth	r2, r2
 801811a:	4649      	mov	r1, r9
 801811c:	6820      	ldr	r0, [r4, #0]
 801811e:	f7ff fcfb 	bl	8017b18 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018122:	e7be      	b.n	80180a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018124:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018126:	6820      	ldr	r0, [r4, #0]
 8018128:	eba8 0202 	sub.w	r2, r8, r2
 801812c:	b292      	uxth	r2, r2
 801812e:	2310      	movs	r3, #16
 8018130:	4649      	mov	r1, r9
 8018132:	f7ff fcf1 	bl	8017b18 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018136:	1d25      	adds	r5, r4, #4
 8018138:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801813c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018140:	2b00      	cmp	r3, #0
 8018142:	d0ae      	beq.n	80180a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018144:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018148:	2919      	cmp	r1, #25
 801814a:	d8f7      	bhi.n	801813c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801814c:	3b20      	subs	r3, #32
 801814e:	8013      	strh	r3, [r2, #0]
 8018150:	e7f4      	b.n	801813c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018152:	9a08      	ldr	r2, [sp, #32]
 8018154:	2a00      	cmp	r2, #0
 8018156:	d0aa      	beq.n	80180ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018158:	7812      	ldrb	r2, [r2, #0]
 801815a:	e7a8      	b.n	80180ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801815c:	2d00      	cmp	r5, #0
 801815e:	f43f af47 	beq.w	8017ff0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8018162:	782d      	ldrb	r5, [r5, #0]
 8018164:	e744      	b.n	8017ff0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08018166 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8018166:	b507      	push	{r0, r1, r2, lr}
 8018168:	9300      	str	r3, [sp, #0]
 801816a:	4613      	mov	r3, r2
 801816c:	2200      	movs	r2, #0
 801816e:	f7ff fe90 	bl	8017e92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8018172:	b003      	add	sp, #12
 8018174:	f85d fb04 	ldr.w	pc, [sp], #4

08018178 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018178:	b40c      	push	{r2, r3}
 801817a:	b507      	push	{r0, r1, r2, lr}
 801817c:	ab04      	add	r3, sp, #16
 801817e:	f853 2b04 	ldr.w	r2, [r3], #4
 8018182:	9301      	str	r3, [sp, #4]
 8018184:	f7ff ffef 	bl	8018166 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018188:	b003      	add	sp, #12
 801818a:	f85d eb04 	ldr.w	lr, [sp], #4
 801818e:	b002      	add	sp, #8
 8018190:	4770      	bx	lr
	...

08018194 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8018194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018198:	b0c5      	sub	sp, #276	; 0x114
 801819a:	2400      	movs	r4, #0
 801819c:	af11      	add	r7, sp, #68	; 0x44
 801819e:	4606      	mov	r6, r0
 80181a0:	468a      	mov	sl, r1
 80181a2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80181a6:	4621      	mov	r1, r4
 80181a8:	22c8      	movs	r2, #200	; 0xc8
 80181aa:	4638      	mov	r0, r7
 80181ac:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 80181b0:	940d      	str	r4, [sp, #52]	; 0x34
 80181b2:	f00e fabf 	bl	8026734 <memset>
 80181b6:	b16e      	cbz	r6, 80181d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80181b8:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801845c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80181bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80181be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80181c0:	b162      	cbz	r2, 80181dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 80181c2:	8812      	ldrh	r2, [r2, #0]
 80181c4:	b11a      	cbz	r2, 80181ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80181c6:	f10a 31ff 	add.w	r1, sl, #4294967295
 80181ca:	4299      	cmp	r1, r3
 80181cc:	dc2e      	bgt.n	801822c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 80181ce:	2200      	movs	r2, #0
 80181d0:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80181d4:	4630      	mov	r0, r6
 80181d6:	b045      	add	sp, #276	; 0x114
 80181d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181dc:	9a08      	ldr	r2, [sp, #32]
 80181de:	2a00      	cmp	r2, #0
 80181e0:	d0f5      	beq.n	80181ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80181e2:	7812      	ldrb	r2, [r2, #0]
 80181e4:	e7ee      	b.n	80181c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 80181e6:	2d00      	cmp	r5, #0
 80181e8:	d0e8      	beq.n	80181bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80181ea:	782a      	ldrb	r2, [r5, #0]
 80181ec:	b142      	cbz	r2, 8018200 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 80181ee:	2a25      	cmp	r2, #37	; 0x25
 80181f0:	d001      	beq.n	80181f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 80181f2:	4299      	cmp	r1, r3
 80181f4:	dc08      	bgt.n	8018208 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 80181f6:	f1b8 0f00 	cmp.w	r8, #0
 80181fa:	d121      	bne.n	8018240 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 80181fc:	2d00      	cmp	r5, #0
 80181fe:	d0dd      	beq.n	80181bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018200:	782a      	ldrb	r2, [r5, #0]
 8018202:	f04f 0800 	mov.w	r8, #0
 8018206:	e01d      	b.n	8018244 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8018208:	f1b8 0f00 	cmp.w	r8, #0
 801820c:	d07f      	beq.n	801830e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801820e:	f8b8 2000 	ldrh.w	r2, [r8]
 8018212:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018216:	f1b8 0f00 	cmp.w	r8, #0
 801821a:	d002      	beq.n	8018222 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801821c:	f108 0202 	add.w	r2, r8, #2
 8018220:	9209      	str	r2, [sp, #36]	; 0x24
 8018222:	b10d      	cbz	r5, 8018228 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8018224:	3501      	adds	r5, #1
 8018226:	9508      	str	r5, [sp, #32]
 8018228:	3301      	adds	r3, #1
 801822a:	930d      	str	r3, [sp, #52]	; 0x34
 801822c:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8018230:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018232:	f1b8 0f00 	cmp.w	r8, #0
 8018236:	d0d6      	beq.n	80181e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8018238:	f8b8 2000 	ldrh.w	r2, [r8]
 801823c:	2a00      	cmp	r2, #0
 801823e:	d1d6      	bne.n	80181ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8018240:	f8b8 2000 	ldrh.w	r2, [r8]
 8018244:	2a00      	cmp	r2, #0
 8018246:	d0b9      	beq.n	80181bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018248:	4299      	cmp	r1, r3
 801824a:	ddb7      	ble.n	80181bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801824c:	2300      	movs	r3, #0
 801824e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018252:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8018256:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801825a:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801825e:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8018262:	930e      	str	r3, [sp, #56]	; 0x38
 8018264:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018268:	930f      	str	r3, [sp, #60]	; 0x3c
 801826a:	f1b8 0f00 	cmp.w	r8, #0
 801826e:	d002      	beq.n	8018276 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8018270:	f108 0302 	add.w	r3, r8, #2
 8018274:	9309      	str	r3, [sp, #36]	; 0x24
 8018276:	b10d      	cbz	r5, 801827c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8018278:	1c6b      	adds	r3, r5, #1
 801827a:	9308      	str	r3, [sp, #32]
 801827c:	ab0f      	add	r3, sp, #60	; 0x3c
 801827e:	9305      	str	r3, [sp, #20]
 8018280:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018284:	9304      	str	r3, [sp, #16]
 8018286:	ab0e      	add	r3, sp, #56	; 0x38
 8018288:	9303      	str	r3, [sp, #12]
 801828a:	ab0c      	add	r3, sp, #48	; 0x30
 801828c:	9302      	str	r3, [sp, #8]
 801828e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018292:	9301      	str	r3, [sp, #4]
 8018294:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018298:	9300      	str	r3, [sp, #0]
 801829a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801829e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80182a2:	a908      	add	r1, sp, #32
 80182a4:	a809      	add	r0, sp, #36	; 0x24
 80182a6:	f7ff fd24 	bl	8017cf2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80182aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80182ac:	2b00      	cmp	r3, #0
 80182ae:	da0b      	bge.n	80182c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 80182b0:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80182b4:	edd3 7a00 	vldr	s15, [r3]
 80182b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80182bc:	3401      	adds	r4, #1
 80182be:	ee17 3a90 	vmov	r3, s15
 80182c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80182c6:	930e      	str	r3, [sp, #56]	; 0x38
 80182c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80182ca:	2b00      	cmp	r3, #0
 80182cc:	da0b      	bge.n	80182e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 80182ce:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80182d2:	edd3 7a00 	vldr	s15, [r3]
 80182d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80182da:	3401      	adds	r4, #1
 80182dc:	ee17 3a90 	vmov	r3, s15
 80182e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80182e4:	930f      	str	r3, [sp, #60]	; 0x3c
 80182e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80182e8:	b1b3      	cbz	r3, 8018318 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 80182ea:	881a      	ldrh	r2, [r3, #0]
 80182ec:	2a25      	cmp	r2, #37	; 0x25
 80182ee:	d018      	beq.n	8018322 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 80182f0:	2a66      	cmp	r2, #102	; 0x66
 80182f2:	d01c      	beq.n	801832e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 80182f4:	e9cd 5808 	strd	r5, r8, [sp, #32]
 80182f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80182fa:	f1b8 0f00 	cmp.w	r8, #0
 80182fe:	f000 8121 	beq.w	8018544 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 8018302:	f8b8 5000 	ldrh.w	r5, [r8]
 8018306:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801830a:	3301      	adds	r3, #1
 801830c:	e00d      	b.n	801832a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801830e:	b10d      	cbz	r5, 8018314 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8018310:	782a      	ldrb	r2, [r5, #0]
 8018312:	e77e      	b.n	8018212 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8018314:	462a      	mov	r2, r5
 8018316:	e77c      	b.n	8018212 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8018318:	9b08      	ldr	r3, [sp, #32]
 801831a:	2b00      	cmp	r3, #0
 801831c:	d0ea      	beq.n	80182f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801831e:	781a      	ldrb	r2, [r3, #0]
 8018320:	e7e4      	b.n	80182ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8018322:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018324:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018328:	3302      	adds	r3, #2
 801832a:	930d      	str	r3, [sp, #52]	; 0x34
 801832c:	e041      	b.n	80183b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801832e:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8018332:	edd3 7a00 	vldr	s15, [r3]
 8018336:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801833a:	9710      	str	r7, [sp, #64]	; 0x40
 801833c:	3401      	adds	r4, #1
 801833e:	b923      	cbnz	r3, 801834a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8018340:	2301      	movs	r3, #1
 8018342:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018346:	2306      	movs	r3, #6
 8018348:	930f      	str	r3, [sp, #60]	; 0x3c
 801834a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801834e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018352:	bf48      	it	mi
 8018354:	eef1 7a67 	vnegmi.f32	s15, s15
 8018358:	eeb0 7ae7 	vabs.f32	s14, s15
 801835c:	bf48      	it	mi
 801835e:	232d      	movmi	r3, #45	; 0x2d
 8018360:	eeb4 7a45 	vcmp.f32	s14, s10
 8018364:	bf48      	it	mi
 8018366:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801836a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801836e:	dd2b      	ble.n	80183c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8018370:	4b3b      	ldr	r3, [pc, #236]	; (8018460 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 8018372:	9311      	str	r3, [sp, #68]	; 0x44
 8018374:	2366      	movs	r3, #102	; 0x66
 8018376:	9312      	str	r3, [sp, #72]	; 0x48
 8018378:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801837a:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801837e:	2b00      	cmp	r3, #0
 8018380:	f000 80da 	beq.w	8018538 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 8018384:	881a      	ldrh	r2, [r3, #0]
 8018386:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801838a:	a80d      	add	r0, sp, #52	; 0x34
 801838c:	9005      	str	r0, [sp, #20]
 801838e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8018392:	9004      	str	r0, [sp, #16]
 8018394:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018396:	9003      	str	r0, [sp, #12]
 8018398:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801839c:	9002      	str	r0, [sp, #8]
 801839e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80183a0:	9001      	str	r0, [sp, #4]
 80183a2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80183a6:	9000      	str	r0, [sp, #0]
 80183a8:	e9cd a606 	strd	sl, r6, [sp, #24]
 80183ac:	a810      	add	r0, sp, #64	; 0x40
 80183ae:	f7ff fbdd 	bl	8017b6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80183b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80183b4:	b10b      	cbz	r3, 80183ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 80183b6:	3302      	adds	r3, #2
 80183b8:	9309      	str	r3, [sp, #36]	; 0x24
 80183ba:	9b08      	ldr	r3, [sp, #32]
 80183bc:	2b00      	cmp	r3, #0
 80183be:	f43f aefd 	beq.w	80181bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80183c2:	3301      	adds	r3, #1
 80183c4:	9308      	str	r3, [sp, #32]
 80183c6:	e6f9      	b.n	80181bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80183c8:	eef4 7a67 	vcmp.f32	s15, s15
 80183cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80183d0:	d63a      	bvs.n	8018448 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 80183d2:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 80183d6:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80183da:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 80183de:	eeb0 6a67 	vmov.f32	s12, s15
 80183e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80183e6:	eef0 5a47 	vmov.f32	s11, s14
 80183ea:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80183ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80183f2:	da2d      	bge.n	8018450 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 80183f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80183f6:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80183fa:	2100      	movs	r1, #0
 80183fc:	eef0 4a46 	vmov.f32	s9, s12
 8018400:	ebaa 0202 	sub.w	r2, sl, r2
 8018404:	eef4 6ac6 	vcmpe.f32	s13, s12
 8018408:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801840c:	b28d      	uxth	r5, r1
 801840e:	db2c      	blt.n	801846a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8018410:	1a53      	subs	r3, r2, r1
 8018412:	2b00      	cmp	r3, #0
 8018414:	dd29      	ble.n	801846a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8018416:	3101      	adds	r1, #1
 8018418:	2964      	cmp	r1, #100	; 0x64
 801841a:	d025      	beq.n	8018468 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801841c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018420:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8018424:	ee17 3a10 	vmov	r3, s14
 8018428:	2b09      	cmp	r3, #9
 801842a:	bfa8      	it	ge
 801842c:	2309      	movge	r3, #9
 801842e:	ee07 3a10 	vmov	s14, r3
 8018432:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018436:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801843a:	eee7 7a66 	vfms.f32	s15, s14, s13
 801843e:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 8018442:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 8018446:	e7dd      	b.n	8018404 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8018448:	4b06      	ldr	r3, [pc, #24]	; (8018464 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801844a:	9311      	str	r3, [sp, #68]	; 0x44
 801844c:	236e      	movs	r3, #110	; 0x6e
 801844e:	e792      	b.n	8018376 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8018450:	ee66 6a87 	vmul.f32	s13, s13, s14
 8018454:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8018458:	e7c7      	b.n	80183ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801845a:	bf00      	nop
 801845c:	7f7fffff 	.word	0x7f7fffff
 8018460:	006e0069 	.word	0x006e0069
 8018464:	0061006e 	.word	0x0061006e
 8018468:	2563      	movs	r5, #99	; 0x63
 801846a:	2a63      	cmp	r2, #99	; 0x63
 801846c:	bfd4      	ite	le
 801846e:	ebc5 0202 	rsble	r2, r5, r2
 8018472:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 8018476:	2a00      	cmp	r2, #0
 8018478:	dd43      	ble.n	8018502 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801847a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801847c:	2b00      	cmp	r3, #0
 801847e:	dd40      	ble.n	8018502 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018480:	f04f 0901 	mov.w	r9, #1
 8018484:	210a      	movs	r1, #10
 8018486:	f113 33ff 	adds.w	r3, r3, #4294967295
 801848a:	d30c      	bcc.n	80184a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801848c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8018490:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8018494:	ee17 0a10 	vmov	r0, s14
 8018498:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801849c:	fb01 0909 	mla	r9, r1, r9, r0
 80184a0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80184a4:	e7ef      	b.n	8018486 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 80184a6:	3501      	adds	r5, #1
 80184a8:	930f      	str	r3, [sp, #60]	; 0x3c
 80184aa:	b292      	uxth	r2, r2
 80184ac:	230a      	movs	r3, #10
 80184ae:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 80184b2:	4648      	mov	r0, r9
 80184b4:	f7ff fb4e 	bl	8017b54 <_ZN8touchgfx7Unicode4itoaElPtti>
 80184b8:	f1b9 0f01 	cmp.w	r9, #1
 80184bc:	dc1f      	bgt.n	80184fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 80184be:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 80184c2:	2b00      	cmp	r3, #0
 80184c4:	bf0c      	ite	eq
 80184c6:	2300      	moveq	r3, #0
 80184c8:	232e      	movne	r3, #46	; 0x2e
 80184ca:	aa44      	add	r2, sp, #272	; 0x110
 80184cc:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80184d0:	eef4 7ae4 	vcmpe.f32	s15, s9
 80184d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80184d8:	f825 3ccc 	strh.w	r3, [r5, #-204]
 80184dc:	f6ff af4c 	blt.w	8018378 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80184e0:	2300      	movs	r3, #0
 80184e2:	f838 2b02 	ldrh.w	r2, [r8], #2
 80184e6:	1c59      	adds	r1, r3, #1
 80184e8:	b98a      	cbnz	r2, 801850e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 80184ea:	b29b      	uxth	r3, r3
 80184ec:	2130      	movs	r1, #48	; 0x30
 80184ee:	b983      	cbnz	r3, 8018512 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 80184f0:	2331      	movs	r3, #49	; 0x31
 80184f2:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80184f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80184f8:	3b02      	subs	r3, #2
 80184fa:	9310      	str	r3, [sp, #64]	; 0x40
 80184fc:	e73c      	b.n	8018378 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80184fe:	232e      	movs	r3, #46	; 0x2e
 8018500:	e7e3      	b.n	80184ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 8018502:	ab44      	add	r3, sp, #272	; 0x110
 8018504:	3501      	adds	r5, #1
 8018506:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801850a:	2300      	movs	r3, #0
 801850c:	e7e0      	b.n	80184d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801850e:	460b      	mov	r3, r1
 8018510:	e7e7      	b.n	80184e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 8018512:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8018516:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801851a:	2808      	cmp	r0, #8
 801851c:	d806      	bhi.n	801852c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801851e:	a944      	add	r1, sp, #272	; 0x110
 8018520:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8018524:	3201      	adds	r2, #1
 8018526:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801852a:	e725      	b.n	8018378 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801852c:	2a39      	cmp	r2, #57	; 0x39
 801852e:	bf08      	it	eq
 8018530:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8018534:	3b01      	subs	r3, #1
 8018536:	e7da      	b.n	80184ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8018538:	9a08      	ldr	r2, [sp, #32]
 801853a:	2a00      	cmp	r2, #0
 801853c:	f43f af23 	beq.w	8018386 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8018540:	7812      	ldrb	r2, [r2, #0]
 8018542:	e720      	b.n	8018386 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8018544:	2d00      	cmp	r5, #0
 8018546:	f43f aede 	beq.w	8018306 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801854a:	782d      	ldrb	r5, [r5, #0]
 801854c:	e6db      	b.n	8018306 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801854e:	bf00      	nop

08018550 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8018550:	b507      	push	{r0, r1, r2, lr}
 8018552:	9300      	str	r3, [sp, #0]
 8018554:	4613      	mov	r3, r2
 8018556:	2200      	movs	r2, #0
 8018558:	f7ff fe1c 	bl	8018194 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801855c:	b003      	add	sp, #12
 801855e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08018564 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8018564:	4b01      	ldr	r3, [pc, #4]	; (801856c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8018566:	6018      	str	r0, [r3, #0]
 8018568:	4770      	bx	lr
 801856a:	bf00      	nop
 801856c:	2000ef84 	.word	0x2000ef84

08018570 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018570:	4b06      	ldr	r3, [pc, #24]	; (801858c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8018572:	881a      	ldrh	r2, [r3, #0]
 8018574:	4282      	cmp	r2, r0
 8018576:	d807      	bhi.n	8018588 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018578:	4b05      	ldr	r3, [pc, #20]	; (8018590 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801857a:	881b      	ldrh	r3, [r3, #0]
 801857c:	4413      	add	r3, r2
 801857e:	4298      	cmp	r0, r3
 8018580:	bfac      	ite	ge
 8018582:	2000      	movge	r0, #0
 8018584:	2001      	movlt	r0, #1
 8018586:	4770      	bx	lr
 8018588:	2000      	movs	r0, #0
 801858a:	4770      	bx	lr
 801858c:	2000efa4 	.word	0x2000efa4
 8018590:	2000efa8 	.word	0x2000efa8

08018594 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8018594:	b508      	push	{r3, lr}
 8018596:	4601      	mov	r1, r0
 8018598:	f7ff ffea 	bl	8018570 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801859c:	b118      	cbz	r0, 80185a6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801859e:	4b02      	ldr	r3, [pc, #8]	; (80185a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80185a0:	681b      	ldr	r3, [r3, #0]
 80185a2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80185a6:	bd08      	pop	{r3, pc}
 80185a8:	2000ef88 	.word	0x2000ef88

080185ac <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80185ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80185ae:	4c24      	ldr	r4, [pc, #144]	; (8018640 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80185b0:	6823      	ldr	r3, [r4, #0]
 80185b2:	2b00      	cmp	r3, #0
 80185b4:	d042      	beq.n	801863c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80185b6:	4a23      	ldr	r2, [pc, #140]	; (8018644 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80185b8:	4d23      	ldr	r5, [pc, #140]	; (8018648 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80185ba:	8811      	ldrh	r1, [r2, #0]
 80185bc:	f8b5 c000 	ldrh.w	ip, [r5]
 80185c0:	4822      	ldr	r0, [pc, #136]	; (801864c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80185c2:	4461      	add	r1, ip
 80185c4:	1c4a      	adds	r2, r1, #1
 80185c6:	f022 0201 	bic.w	r2, r2, #1
 80185ca:	008f      	lsls	r7, r1, #2
 80185cc:	0412      	lsls	r2, r2, #16
 80185ce:	19de      	adds	r6, r3, r7
 80185d0:	0c12      	lsrs	r2, r2, #16
 80185d2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80185d6:	6006      	str	r6, [r0, #0]
 80185d8:	4e1d      	ldr	r6, [pc, #116]	; (8018650 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80185da:	19da      	adds	r2, r3, r7
 80185dc:	6032      	str	r2, [r6, #0]
 80185de:	220e      	movs	r2, #14
 80185e0:	fb02 f20c 	mul.w	r2, r2, ip
 80185e4:	3203      	adds	r2, #3
 80185e6:	f022 0203 	bic.w	r2, r2, #3
 80185ea:	443a      	add	r2, r7
 80185ec:	4f19      	ldr	r7, [pc, #100]	; (8018654 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80185ee:	4413      	add	r3, r2
 80185f0:	603b      	str	r3, [r7, #0]
 80185f2:	4f19      	ldr	r7, [pc, #100]	; (8018658 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80185f4:	2300      	movs	r3, #0
 80185f6:	803b      	strh	r3, [r7, #0]
 80185f8:	4f18      	ldr	r7, [pc, #96]	; (801865c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80185fa:	683f      	ldr	r7, [r7, #0]
 80185fc:	1aba      	subs	r2, r7, r2
 80185fe:	4f18      	ldr	r7, [pc, #96]	; (8018660 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8018600:	603a      	str	r2, [r7, #0]
 8018602:	4a18      	ldr	r2, [pc, #96]	; (8018664 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8018604:	469c      	mov	ip, r3
 8018606:	8013      	strh	r3, [r2, #0]
 8018608:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801860c:	428b      	cmp	r3, r1
 801860e:	d10d      	bne.n	801862c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8018610:	882d      	ldrh	r5, [r5, #0]
 8018612:	6830      	ldr	r0, [r6, #0]
 8018614:	2300      	movs	r3, #0
 8018616:	240e      	movs	r4, #14
 8018618:	429d      	cmp	r5, r3
 801861a:	d90f      	bls.n	801863c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801861c:	fb04 0203 	mla	r2, r4, r3, r0
 8018620:	3301      	adds	r3, #1
 8018622:	7b11      	ldrb	r1, [r2, #12]
 8018624:	f36f 1145 	bfc	r1, #5, #1
 8018628:	7311      	strb	r1, [r2, #12]
 801862a:	e7f5      	b.n	8018618 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801862c:	6822      	ldr	r2, [r4, #0]
 801862e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8018632:	6802      	ldr	r2, [r0, #0]
 8018634:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8018638:	3301      	adds	r3, #1
 801863a:	e7e7      	b.n	801860c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801863c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801863e:	bf00      	nop
 8018640:	2000ef88 	.word	0x2000ef88
 8018644:	2000efa4 	.word	0x2000efa4
 8018648:	2000efa8 	.word	0x2000efa8
 801864c:	2000ef9c 	.word	0x2000ef9c
 8018650:	2000ef8c 	.word	0x2000ef8c
 8018654:	2000ef94 	.word	0x2000ef94
 8018658:	2000efa6 	.word	0x2000efa6
 801865c:	2000ef90 	.word	0x2000ef90
 8018660:	2000efa0 	.word	0x2000efa0
 8018664:	2000ef98 	.word	0x2000ef98

08018668 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018668:	4b06      	ldr	r3, [pc, #24]	; (8018684 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801866a:	681b      	ldr	r3, [r3, #0]
 801866c:	b943      	cbnz	r3, 8018680 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801866e:	b139      	cbz	r1, 8018680 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018670:	4b05      	ldr	r3, [pc, #20]	; (8018688 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8018672:	801a      	strh	r2, [r3, #0]
 8018674:	4b05      	ldr	r3, [pc, #20]	; (801868c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8018676:	6019      	str	r1, [r3, #0]
 8018678:	4b05      	ldr	r3, [pc, #20]	; (8018690 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801867a:	6018      	str	r0, [r3, #0]
 801867c:	f7ff bf96 	b.w	80185ac <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018680:	4770      	bx	lr
 8018682:	bf00      	nop
 8018684:	2000ef94 	.word	0x2000ef94
 8018688:	2000efa8 	.word	0x2000efa8
 801868c:	2000ef90 	.word	0x2000ef90
 8018690:	2000ef88 	.word	0x2000ef88

08018694 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8018694:	b470      	push	{r4, r5, r6}
 8018696:	4c07      	ldr	r4, [pc, #28]	; (80186b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8018698:	6826      	ldr	r6, [r4, #0]
 801869a:	4605      	mov	r5, r0
 801869c:	4610      	mov	r0, r2
 801869e:	9a03      	ldr	r2, [sp, #12]
 80186a0:	b936      	cbnz	r6, 80186b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80186a2:	6025      	str	r5, [r4, #0]
 80186a4:	4c04      	ldr	r4, [pc, #16]	; (80186b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80186a6:	8021      	strh	r1, [r4, #0]
 80186a8:	bc70      	pop	{r4, r5, r6}
 80186aa:	4619      	mov	r1, r3
 80186ac:	f7ff bfdc 	b.w	8018668 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80186b0:	bc70      	pop	{r4, r5, r6}
 80186b2:	4770      	bx	lr
 80186b4:	2000efac 	.word	0x2000efac
 80186b8:	2000efa4 	.word	0x2000efa4

080186bc <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80186bc:	4a12      	ldr	r2, [pc, #72]	; (8018708 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80186be:	8803      	ldrh	r3, [r0, #0]
 80186c0:	8812      	ldrh	r2, [r2, #0]
 80186c2:	4293      	cmp	r3, r2
 80186c4:	d207      	bcs.n	80186d6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80186c6:	4a11      	ldr	r2, [pc, #68]	; (801870c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80186c8:	6812      	ldr	r2, [r2, #0]
 80186ca:	2114      	movs	r1, #20
 80186cc:	fb01 2303 	mla	r3, r1, r3, r2
 80186d0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80186d4:	4770      	bx	lr
 80186d6:	490e      	ldr	r1, [pc, #56]	; (8018710 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80186d8:	8809      	ldrh	r1, [r1, #0]
 80186da:	4411      	add	r1, r2
 80186dc:	428b      	cmp	r3, r1
 80186de:	da04      	bge.n	80186ea <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80186e0:	1a9b      	subs	r3, r3, r2
 80186e2:	4a0c      	ldr	r2, [pc, #48]	; (8018714 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80186e4:	210e      	movs	r1, #14
 80186e6:	6812      	ldr	r2, [r2, #0]
 80186e8:	e7f0      	b.n	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80186ea:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80186ee:	4293      	cmp	r3, r2
 80186f0:	d108      	bne.n	8018704 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80186f2:	4b09      	ldr	r3, [pc, #36]	; (8018718 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80186f4:	781b      	ldrb	r3, [r3, #0]
 80186f6:	b91b      	cbnz	r3, 8018700 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80186f8:	4b08      	ldr	r3, [pc, #32]	; (801871c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80186fa:	f9b3 0000 	ldrsh.w	r0, [r3]
 80186fe:	4770      	bx	lr
 8018700:	4b07      	ldr	r3, [pc, #28]	; (8018720 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8018702:	e7fa      	b.n	80186fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8018704:	2000      	movs	r0, #0
 8018706:	4770      	bx	lr
 8018708:	2000efa4 	.word	0x2000efa4
 801870c:	2000efac 	.word	0x2000efac
 8018710:	2000efa8 	.word	0x2000efa8
 8018714:	2000ef8c 	.word	0x2000ef8c
 8018718:	2000ef14 	.word	0x2000ef14
 801871c:	2000ef16 	.word	0x2000ef16
 8018720:	2000ef18 	.word	0x2000ef18

08018724 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8018724:	4a12      	ldr	r2, [pc, #72]	; (8018770 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8018726:	8803      	ldrh	r3, [r0, #0]
 8018728:	8812      	ldrh	r2, [r2, #0]
 801872a:	4293      	cmp	r3, r2
 801872c:	d207      	bcs.n	801873e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801872e:	4a11      	ldr	r2, [pc, #68]	; (8018774 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8018730:	6812      	ldr	r2, [r2, #0]
 8018732:	2114      	movs	r1, #20
 8018734:	fb01 2303 	mla	r3, r1, r3, r2
 8018738:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801873c:	4770      	bx	lr
 801873e:	490e      	ldr	r1, [pc, #56]	; (8018778 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8018740:	8809      	ldrh	r1, [r1, #0]
 8018742:	4411      	add	r1, r2
 8018744:	428b      	cmp	r3, r1
 8018746:	da04      	bge.n	8018752 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8018748:	1a9b      	subs	r3, r3, r2
 801874a:	4a0c      	ldr	r2, [pc, #48]	; (801877c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801874c:	210e      	movs	r1, #14
 801874e:	6812      	ldr	r2, [r2, #0]
 8018750:	e7f0      	b.n	8018734 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8018752:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018756:	4293      	cmp	r3, r2
 8018758:	d108      	bne.n	801876c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801875a:	4b09      	ldr	r3, [pc, #36]	; (8018780 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801875c:	781b      	ldrb	r3, [r3, #0]
 801875e:	b91b      	cbnz	r3, 8018768 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8018760:	4b08      	ldr	r3, [pc, #32]	; (8018784 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8018762:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018766:	4770      	bx	lr
 8018768:	4b07      	ldr	r3, [pc, #28]	; (8018788 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801876a:	e7fa      	b.n	8018762 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801876c:	2000      	movs	r0, #0
 801876e:	4770      	bx	lr
 8018770:	2000efa4 	.word	0x2000efa4
 8018774:	2000efac 	.word	0x2000efac
 8018778:	2000efa8 	.word	0x2000efa8
 801877c:	2000ef8c 	.word	0x2000ef8c
 8018780:	2000ef14 	.word	0x2000ef14
 8018784:	2000ef18 	.word	0x2000ef18
 8018788:	2000ef16 	.word	0x2000ef16

0801878c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801878c:	b510      	push	{r4, lr}
 801878e:	4a1f      	ldr	r2, [pc, #124]	; (801880c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8018790:	880b      	ldrh	r3, [r1, #0]
 8018792:	8812      	ldrh	r2, [r2, #0]
 8018794:	4293      	cmp	r3, r2
 8018796:	d213      	bcs.n	80187c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018798:	4a1d      	ldr	r2, [pc, #116]	; (8018810 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801879a:	6812      	ldr	r2, [r2, #0]
 801879c:	2114      	movs	r1, #20
 801879e:	fb01 2303 	mla	r3, r1, r3, r2
 80187a2:	8a1a      	ldrh	r2, [r3, #16]
 80187a4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80187a8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80187ac:	8a5b      	ldrh	r3, [r3, #18]
 80187ae:	8004      	strh	r4, [r0, #0]
 80187b0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80187b4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80187b8:	8041      	strh	r1, [r0, #2]
 80187ba:	8082      	strh	r2, [r0, #4]
 80187bc:	80c3      	strh	r3, [r0, #6]
 80187be:	e00e      	b.n	80187de <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80187c0:	4914      	ldr	r1, [pc, #80]	; (8018814 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80187c2:	8809      	ldrh	r1, [r1, #0]
 80187c4:	4411      	add	r1, r2
 80187c6:	428b      	cmp	r3, r1
 80187c8:	da0a      	bge.n	80187e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80187ca:	1a9b      	subs	r3, r3, r2
 80187cc:	4a12      	ldr	r2, [pc, #72]	; (8018818 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80187ce:	6812      	ldr	r2, [r2, #0]
 80187d0:	210e      	movs	r1, #14
 80187d2:	fb01 2303 	mla	r3, r1, r3, r2
 80187d6:	681a      	ldr	r2, [r3, #0]
 80187d8:	6002      	str	r2, [r0, #0]
 80187da:	685a      	ldr	r2, [r3, #4]
 80187dc:	6042      	str	r2, [r0, #4]
 80187de:	bd10      	pop	{r4, pc}
 80187e0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80187e4:	4293      	cmp	r3, r2
 80187e6:	d10b      	bne.n	8018800 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80187e8:	4b0c      	ldr	r3, [pc, #48]	; (801881c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80187ea:	f9b3 1000 	ldrsh.w	r1, [r3]
 80187ee:	4b0c      	ldr	r3, [pc, #48]	; (8018820 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80187f0:	8081      	strh	r1, [r0, #4]
 80187f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80187f6:	80c2      	strh	r2, [r0, #6]
 80187f8:	2300      	movs	r3, #0
 80187fa:	8003      	strh	r3, [r0, #0]
 80187fc:	8043      	strh	r3, [r0, #2]
 80187fe:	e7ee      	b.n	80187de <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018800:	2300      	movs	r3, #0
 8018802:	8003      	strh	r3, [r0, #0]
 8018804:	8043      	strh	r3, [r0, #2]
 8018806:	8083      	strh	r3, [r0, #4]
 8018808:	e7d8      	b.n	80187bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801880a:	bf00      	nop
 801880c:	2000efa4 	.word	0x2000efa4
 8018810:	2000efac 	.word	0x2000efac
 8018814:	2000efa8 	.word	0x2000efa8
 8018818:	2000ef8c 	.word	0x2000ef8c
 801881c:	2000ef10 	.word	0x2000ef10
 8018820:	2000ef12 	.word	0x2000ef12

08018824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8018824:	4a17      	ldr	r2, [pc, #92]	; (8018884 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8018826:	8803      	ldrh	r3, [r0, #0]
 8018828:	8812      	ldrh	r2, [r2, #0]
 801882a:	4293      	cmp	r3, r2
 801882c:	d213      	bcs.n	8018856 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801882e:	4a16      	ldr	r2, [pc, #88]	; (8018888 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8018830:	6812      	ldr	r2, [r2, #0]
 8018832:	2114      	movs	r1, #20
 8018834:	fb01 2303 	mla	r3, r1, r3, r2
 8018838:	8a1a      	ldrh	r2, [r3, #16]
 801883a:	8919      	ldrh	r1, [r3, #8]
 801883c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018840:	428a      	cmp	r2, r1
 8018842:	db1d      	blt.n	8018880 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018844:	8a58      	ldrh	r0, [r3, #18]
 8018846:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801884a:	895b      	ldrh	r3, [r3, #10]
 801884c:	4298      	cmp	r0, r3
 801884e:	bfac      	ite	ge
 8018850:	2000      	movge	r0, #0
 8018852:	2001      	movlt	r0, #1
 8018854:	4770      	bx	lr
 8018856:	490d      	ldr	r1, [pc, #52]	; (801888c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018858:	8809      	ldrh	r1, [r1, #0]
 801885a:	4411      	add	r1, r2
 801885c:	428b      	cmp	r3, r1
 801885e:	da0d      	bge.n	801887c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8018860:	1a9b      	subs	r3, r3, r2
 8018862:	4a0b      	ldr	r2, [pc, #44]	; (8018890 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8018864:	6812      	ldr	r2, [r2, #0]
 8018866:	210e      	movs	r1, #14
 8018868:	fb01 2303 	mla	r3, r1, r3, r2
 801886c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018870:	891a      	ldrh	r2, [r3, #8]
 8018872:	4291      	cmp	r1, r2
 8018874:	db04      	blt.n	8018880 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018876:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801887a:	e7e6      	b.n	801884a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801887c:	2000      	movs	r0, #0
 801887e:	4770      	bx	lr
 8018880:	2001      	movs	r0, #1
 8018882:	4770      	bx	lr
 8018884:	2000efa4 	.word	0x2000efa4
 8018888:	2000efac 	.word	0x2000efac
 801888c:	2000efa8 	.word	0x2000efa8
 8018890:	2000ef8c 	.word	0x2000ef8c

08018894 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8018894:	4a12      	ldr	r2, [pc, #72]	; (80188e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8018896:	8803      	ldrh	r3, [r0, #0]
 8018898:	8811      	ldrh	r1, [r2, #0]
 801889a:	428b      	cmp	r3, r1
 801889c:	d20b      	bcs.n	80188b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801889e:	4a11      	ldr	r2, [pc, #68]	; (80188e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80188a0:	6812      	ldr	r2, [r2, #0]
 80188a2:	b112      	cbz	r2, 80188aa <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80188a4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80188a8:	b9c0      	cbnz	r0, 80188dc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80188aa:	4a0f      	ldr	r2, [pc, #60]	; (80188e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80188ac:	6811      	ldr	r1, [r2, #0]
 80188ae:	2214      	movs	r2, #20
 80188b0:	4353      	muls	r3, r2
 80188b2:	58c8      	ldr	r0, [r1, r3]
 80188b4:	4770      	bx	lr
 80188b6:	4a0d      	ldr	r2, [pc, #52]	; (80188ec <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80188b8:	8812      	ldrh	r2, [r2, #0]
 80188ba:	440a      	add	r2, r1
 80188bc:	4293      	cmp	r3, r2
 80188be:	da04      	bge.n	80188ca <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80188c0:	4a08      	ldr	r2, [pc, #32]	; (80188e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80188c2:	6812      	ldr	r2, [r2, #0]
 80188c4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80188c8:	4770      	bx	lr
 80188ca:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80188ce:	4293      	cmp	r3, r2
 80188d0:	d103      	bne.n	80188da <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80188d2:	4b07      	ldr	r3, [pc, #28]	; (80188f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80188d4:	681b      	ldr	r3, [r3, #0]
 80188d6:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80188d8:	4770      	bx	lr
 80188da:	2000      	movs	r0, #0
 80188dc:	4770      	bx	lr
 80188de:	bf00      	nop
 80188e0:	2000efa4 	.word	0x2000efa4
 80188e4:	2000ef88 	.word	0x2000ef88
 80188e8:	2000efac 	.word	0x2000efac
 80188ec:	2000efa8 	.word	0x2000efa8
 80188f0:	2000ef1c 	.word	0x2000ef1c

080188f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80188f4:	4b24      	ldr	r3, [pc, #144]	; (8018988 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80188f6:	8802      	ldrh	r2, [r0, #0]
 80188f8:	8818      	ldrh	r0, [r3, #0]
 80188fa:	4282      	cmp	r2, r0
 80188fc:	d221      	bcs.n	8018942 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80188fe:	4b23      	ldr	r3, [pc, #140]	; (801898c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018900:	6819      	ldr	r1, [r3, #0]
 8018902:	2314      	movs	r3, #20
 8018904:	fb03 1302 	mla	r3, r3, r2, r1
 8018908:	6858      	ldr	r0, [r3, #4]
 801890a:	2800      	cmp	r0, #0
 801890c:	d03a      	beq.n	8018984 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801890e:	4920      	ldr	r1, [pc, #128]	; (8018990 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018910:	6809      	ldr	r1, [r1, #0]
 8018912:	2900      	cmp	r1, #0
 8018914:	d036      	beq.n	8018984 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018916:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801891a:	2900      	cmp	r1, #0
 801891c:	d032      	beq.n	8018984 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801891e:	891a      	ldrh	r2, [r3, #8]
 8018920:	8958      	ldrh	r0, [r3, #10]
 8018922:	4350      	muls	r0, r2
 8018924:	7c5a      	ldrb	r2, [r3, #17]
 8018926:	7cdb      	ldrb	r3, [r3, #19]
 8018928:	0952      	lsrs	r2, r2, #5
 801892a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801892e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8018932:	2b0b      	cmp	r3, #11
 8018934:	bf18      	it	ne
 8018936:	0040      	lslne	r0, r0, #1
 8018938:	3003      	adds	r0, #3
 801893a:	f020 0003 	bic.w	r0, r0, #3
 801893e:	4408      	add	r0, r1
 8018940:	4770      	bx	lr
 8018942:	4b14      	ldr	r3, [pc, #80]	; (8018994 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8018944:	881b      	ldrh	r3, [r3, #0]
 8018946:	4403      	add	r3, r0
 8018948:	429a      	cmp	r2, r3
 801894a:	da1a      	bge.n	8018982 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801894c:	4b12      	ldr	r3, [pc, #72]	; (8018998 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801894e:	681b      	ldr	r3, [r3, #0]
 8018950:	1a10      	subs	r0, r2, r0
 8018952:	210e      	movs	r1, #14
 8018954:	fb01 3000 	mla	r0, r1, r0, r3
 8018958:	7b03      	ldrb	r3, [r0, #12]
 801895a:	f003 031f 	and.w	r3, r3, #31
 801895e:	2b0b      	cmp	r3, #11
 8018960:	d10b      	bne.n	801897a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8018962:	8903      	ldrh	r3, [r0, #8]
 8018964:	8940      	ldrh	r0, [r0, #10]
 8018966:	4358      	muls	r0, r3
 8018968:	4b09      	ldr	r3, [pc, #36]	; (8018990 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801896a:	6819      	ldr	r1, [r3, #0]
 801896c:	3003      	adds	r0, #3
 801896e:	f020 0303 	bic.w	r3, r0, #3
 8018972:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018976:	4418      	add	r0, r3
 8018978:	4770      	bx	lr
 801897a:	2b0d      	cmp	r3, #13
 801897c:	d101      	bne.n	8018982 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801897e:	300d      	adds	r0, #13
 8018980:	4770      	bx	lr
 8018982:	2000      	movs	r0, #0
 8018984:	4770      	bx	lr
 8018986:	bf00      	nop
 8018988:	2000efa4 	.word	0x2000efa4
 801898c:	2000efac 	.word	0x2000efac
 8018990:	2000ef88 	.word	0x2000ef88
 8018994:	2000efa8 	.word	0x2000efa8
 8018998:	2000ef8c 	.word	0x2000ef8c

0801899c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801899c:	b510      	push	{r4, lr}
 801899e:	4a17      	ldr	r2, [pc, #92]	; (80189fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80189a0:	8803      	ldrh	r3, [r0, #0]
 80189a2:	8812      	ldrh	r2, [r2, #0]
 80189a4:	4293      	cmp	r3, r2
 80189a6:	d20c      	bcs.n	80189c2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80189a8:	4a15      	ldr	r2, [pc, #84]	; (8018a00 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80189aa:	6812      	ldr	r2, [r2, #0]
 80189ac:	2114      	movs	r1, #20
 80189ae:	fb01 2303 	mla	r3, r1, r3, r2
 80189b2:	7c58      	ldrb	r0, [r3, #17]
 80189b4:	0942      	lsrs	r2, r0, #5
 80189b6:	7cd8      	ldrb	r0, [r3, #19]
 80189b8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80189bc:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80189c0:	bd10      	pop	{r4, pc}
 80189c2:	4910      	ldr	r1, [pc, #64]	; (8018a04 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80189c4:	8809      	ldrh	r1, [r1, #0]
 80189c6:	4411      	add	r1, r2
 80189c8:	428b      	cmp	r3, r1
 80189ca:	da09      	bge.n	80189e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80189cc:	1a9b      	subs	r3, r3, r2
 80189ce:	4a0e      	ldr	r2, [pc, #56]	; (8018a08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80189d0:	6812      	ldr	r2, [r2, #0]
 80189d2:	210e      	movs	r1, #14
 80189d4:	fb01 2303 	mla	r3, r1, r3, r2
 80189d8:	7b18      	ldrb	r0, [r3, #12]
 80189da:	f000 001f 	and.w	r0, r0, #31
 80189de:	e7ef      	b.n	80189c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80189e0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80189e4:	4293      	cmp	r3, r2
 80189e6:	d106      	bne.n	80189f6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80189e8:	f7eb fe58 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 80189ec:	6803      	ldr	r3, [r0, #0]
 80189ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80189f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80189f4:	4718      	bx	r3
 80189f6:	2000      	movs	r0, #0
 80189f8:	e7e2      	b.n	80189c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80189fa:	bf00      	nop
 80189fc:	2000efa4 	.word	0x2000efa4
 8018a00:	2000efac 	.word	0x2000efac
 8018a04:	2000efa8 	.word	0x2000efa8
 8018a08:	2000ef8c 	.word	0x2000ef8c

08018a0c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8018a0c:	2010      	movs	r0, #16
 8018a0e:	4770      	bx	lr

08018a10 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018a10:	2000      	movs	r0, #0
 8018a12:	4770      	bx	lr

08018a14 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8018a14:	4b02      	ldr	r3, [pc, #8]	; (8018a20 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8018a16:	8818      	ldrh	r0, [r3, #0]
 8018a18:	0040      	lsls	r0, r0, #1
 8018a1a:	b280      	uxth	r0, r0
 8018a1c:	4770      	bx	lr
 8018a1e:	bf00      	nop
 8018a20:	2000ef16 	.word	0x2000ef16

08018a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8018a24:	2bff      	cmp	r3, #255	; 0xff
 8018a26:	d050      	beq.n	8018aca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018a28:	2a0b      	cmp	r2, #11
 8018a2a:	d04a      	beq.n	8018ac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018a2c:	d80e      	bhi.n	8018a4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8018a2e:	2a03      	cmp	r2, #3
 8018a30:	d03f      	beq.n	8018ab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8018a32:	d804      	bhi.n	8018a3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8018a34:	2a01      	cmp	r2, #1
 8018a36:	d03e      	beq.n	8018ab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8018a38:	d93f      	bls.n	8018aba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8018a3a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8018a3c:	4770      	bx	lr
 8018a3e:	2a09      	cmp	r2, #9
 8018a40:	d03f      	beq.n	8018ac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018a42:	d83c      	bhi.n	8018abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018a44:	2a08      	cmp	r2, #8
 8018a46:	d03a      	beq.n	8018abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018a48:	2000      	movs	r0, #0
 8018a4a:	4770      	bx	lr
 8018a4c:	2a2f      	cmp	r2, #47	; 0x2f
 8018a4e:	d024      	beq.n	8018a9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8018a50:	d80d      	bhi.n	8018a6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8018a52:	2a2d      	cmp	r2, #45	; 0x2d
 8018a54:	d014      	beq.n	8018a80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8018a56:	d826      	bhi.n	8018aa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018a58:	2a2c      	cmp	r2, #44	; 0x2c
 8018a5a:	d1f5      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a5c:	684b      	ldr	r3, [r1, #4]
 8018a5e:	781b      	ldrb	r3, [r3, #0]
 8018a60:	2b01      	cmp	r3, #1
 8018a62:	d018      	beq.n	8018a96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8018a64:	d323      	bcc.n	8018aae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8018a66:	2b02      	cmp	r3, #2
 8018a68:	d1ee      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a6a:	6880      	ldr	r0, [r0, #8]
 8018a6c:	4770      	bx	lr
 8018a6e:	2a31      	cmp	r2, #49	; 0x31
 8018a70:	d004      	beq.n	8018a7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8018a72:	d328      	bcc.n	8018ac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018a74:	2a32      	cmp	r2, #50	; 0x32
 8018a76:	d026      	beq.n	8018ac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018a78:	2a33      	cmp	r2, #51	; 0x33
 8018a7a:	d1e5      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a7c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8018a7e:	4770      	bx	lr
 8018a80:	684b      	ldr	r3, [r1, #4]
 8018a82:	781b      	ldrb	r3, [r3, #0]
 8018a84:	2b01      	cmp	r3, #1
 8018a86:	d004      	beq.n	8018a92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018a88:	d30b      	bcc.n	8018aa2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018a8a:	2b02      	cmp	r3, #2
 8018a8c:	d1dc      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a8e:	6900      	ldr	r0, [r0, #16]
 8018a90:	4770      	bx	lr
 8018a92:	6a00      	ldr	r0, [r0, #32]
 8018a94:	4770      	bx	lr
 8018a96:	6980      	ldr	r0, [r0, #24]
 8018a98:	4770      	bx	lr
 8018a9a:	684b      	ldr	r3, [r1, #4]
 8018a9c:	781b      	ldrb	r3, [r3, #0]
 8018a9e:	2b00      	cmp	r3, #0
 8018aa0:	d1d2      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018aa2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8018aa4:	4770      	bx	lr
 8018aa6:	684b      	ldr	r3, [r1, #4]
 8018aa8:	781b      	ldrb	r3, [r3, #0]
 8018aaa:	2b00      	cmp	r3, #0
 8018aac:	d1cc      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018aae:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8018ab0:	4770      	bx	lr
 8018ab2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8018ab4:	4770      	bx	lr
 8018ab6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018ab8:	4770      	bx	lr
 8018aba:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8018abc:	4770      	bx	lr
 8018abe:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8018ac0:	4770      	bx	lr
 8018ac2:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8018ac4:	4770      	bx	lr
 8018ac6:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018ac8:	4770      	bx	lr
 8018aca:	2a0b      	cmp	r2, #11
 8018acc:	d049      	beq.n	8018b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018ace:	d80e      	bhi.n	8018aee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8018ad0:	2a03      	cmp	r2, #3
 8018ad2:	d040      	beq.n	8018b56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8018ad4:	d804      	bhi.n	8018ae0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8018ad6:	2a01      	cmp	r2, #1
 8018ad8:	d03f      	beq.n	8018b5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8018ada:	d940      	bls.n	8018b5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8018adc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8018ade:	4770      	bx	lr
 8018ae0:	2a09      	cmp	r2, #9
 8018ae2:	d03e      	beq.n	8018b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018ae4:	d801      	bhi.n	8018aea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8018ae6:	2a08      	cmp	r2, #8
 8018ae8:	d1ae      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018aea:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8018aec:	4770      	bx	lr
 8018aee:	2a2f      	cmp	r2, #47	; 0x2f
 8018af0:	d024      	beq.n	8018b3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8018af2:	d80d      	bhi.n	8018b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8018af4:	2a2d      	cmp	r2, #45	; 0x2d
 8018af6:	d014      	beq.n	8018b22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018af8:	d826      	bhi.n	8018b48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8018afa:	2a2c      	cmp	r2, #44	; 0x2c
 8018afc:	d1a4      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018afe:	684b      	ldr	r3, [r1, #4]
 8018b00:	781b      	ldrb	r3, [r3, #0]
 8018b02:	2b01      	cmp	r3, #1
 8018b04:	d018      	beq.n	8018b38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8018b06:	d324      	bcc.n	8018b52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8018b08:	2b02      	cmp	r3, #2
 8018b0a:	d19d      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b0c:	68c0      	ldr	r0, [r0, #12]
 8018b0e:	4770      	bx	lr
 8018b10:	2a31      	cmp	r2, #49	; 0x31
 8018b12:	d004      	beq.n	8018b1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8018b14:	d327      	bcc.n	8018b66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018b16:	2a32      	cmp	r2, #50	; 0x32
 8018b18:	d025      	beq.n	8018b66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018b1a:	2a33      	cmp	r2, #51	; 0x33
 8018b1c:	d194      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b1e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8018b20:	4770      	bx	lr
 8018b22:	684b      	ldr	r3, [r1, #4]
 8018b24:	781b      	ldrb	r3, [r3, #0]
 8018b26:	2b01      	cmp	r3, #1
 8018b28:	d004      	beq.n	8018b34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8018b2a:	d30b      	bcc.n	8018b44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8018b2c:	2b02      	cmp	r3, #2
 8018b2e:	d18b      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b30:	6940      	ldr	r0, [r0, #20]
 8018b32:	4770      	bx	lr
 8018b34:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8018b36:	4770      	bx	lr
 8018b38:	69c0      	ldr	r0, [r0, #28]
 8018b3a:	4770      	bx	lr
 8018b3c:	684b      	ldr	r3, [r1, #4]
 8018b3e:	781b      	ldrb	r3, [r3, #0]
 8018b40:	2b00      	cmp	r3, #0
 8018b42:	d181      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b44:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8018b46:	4770      	bx	lr
 8018b48:	684b      	ldr	r3, [r1, #4]
 8018b4a:	781b      	ldrb	r3, [r3, #0]
 8018b4c:	2b00      	cmp	r3, #0
 8018b4e:	f47f af7b 	bne.w	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b52:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8018b54:	4770      	bx	lr
 8018b56:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018b58:	4770      	bx	lr
 8018b5a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8018b5c:	4770      	bx	lr
 8018b5e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018b60:	4770      	bx	lr
 8018b62:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8018b64:	4770      	bx	lr
 8018b66:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8018b68:	4770      	bx	lr

08018b6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b6e:	b087      	sub	sp, #28
 8018b70:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018b72:	9205      	str	r2, [sp, #20]
 8018b74:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018b78:	9202      	str	r2, [sp, #8]
 8018b7a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018b7e:	9101      	str	r1, [sp, #4]
 8018b80:	6841      	ldr	r1, [r0, #4]
 8018b82:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8018b86:	fb01 2404 	mla	r4, r1, r4, r2
 8018b8a:	6802      	ldr	r2, [r0, #0]
 8018b8c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018b90:	f8de 2000 	ldr.w	r2, [lr]
 8018b94:	9203      	str	r2, [sp, #12]
 8018b96:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018b9a:	3204      	adds	r2, #4
 8018b9c:	9204      	str	r2, [sp, #16]
 8018b9e:	9a02      	ldr	r2, [sp, #8]
 8018ba0:	43d6      	mvns	r6, r2
 8018ba2:	b2f6      	uxtb	r6, r6
 8018ba4:	9a01      	ldr	r2, [sp, #4]
 8018ba6:	2a00      	cmp	r2, #0
 8018ba8:	dc03      	bgt.n	8018bb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018baa:	9a05      	ldr	r2, [sp, #20]
 8018bac:	2a00      	cmp	r2, #0
 8018bae:	f340 8129 	ble.w	8018e04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018bb2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018bb4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018bb8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018bbc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018bc0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018bc2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018bc6:	2b00      	cmp	r3, #0
 8018bc8:	dd0e      	ble.n	8018be8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018bca:	1408      	asrs	r0, r1, #16
 8018bcc:	d405      	bmi.n	8018bda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018bce:	4560      	cmp	r0, ip
 8018bd0:	da03      	bge.n	8018bda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018bd2:	1410      	asrs	r0, r2, #16
 8018bd4:	d401      	bmi.n	8018bda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018bd6:	42b8      	cmp	r0, r7
 8018bd8:	db07      	blt.n	8018bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018bda:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018bdc:	4401      	add	r1, r0
 8018bde:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018be0:	3b01      	subs	r3, #1
 8018be2:	4402      	add	r2, r0
 8018be4:	3402      	adds	r4, #2
 8018be6:	e7ee      	b.n	8018bc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018be8:	d071      	beq.n	8018cce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018bea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018bec:	1e58      	subs	r0, r3, #1
 8018bee:	fb05 1500 	mla	r5, r5, r0, r1
 8018bf2:	142d      	asrs	r5, r5, #16
 8018bf4:	d45f      	bmi.n	8018cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018bf6:	4565      	cmp	r5, ip
 8018bf8:	da5d      	bge.n	8018cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018bfa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018bfc:	fb05 2000 	mla	r0, r5, r0, r2
 8018c00:	1400      	asrs	r0, r0, #16
 8018c02:	d458      	bmi.n	8018cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018c04:	42b8      	cmp	r0, r7
 8018c06:	da56      	bge.n	8018cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018c08:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8018c0c:	4699      	mov	r9, r3
 8018c0e:	46a2      	mov	sl, r4
 8018c10:	f1b9 0f00 	cmp.w	r9, #0
 8018c14:	dd57      	ble.n	8018cc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018c16:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018c1a:	9803      	ldr	r0, [sp, #12]
 8018c1c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018c20:	140d      	asrs	r5, r1, #16
 8018c22:	fb07 000c 	mla	r0, r7, ip, r0
 8018c26:	f109 39ff 	add.w	r9, r9, #4294967295
 8018c2a:	5d40      	ldrb	r0, [r0, r5]
 8018c2c:	9d04      	ldr	r5, [sp, #16]
 8018c2e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018c32:	f8ba 5000 	ldrh.w	r5, [sl]
 8018c36:	122f      	asrs	r7, r5, #8
 8018c38:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018c3c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018c40:	fb17 f706 	smulbb	r7, r7, r6
 8018c44:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018c48:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018c4c:	00ed      	lsls	r5, r5, #3
 8018c4e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018c52:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8018c56:	10c7      	asrs	r7, r0, #3
 8018c58:	b2ed      	uxtb	r5, r5
 8018c5a:	00c0      	lsls	r0, r0, #3
 8018c5c:	fb18 f806 	smulbb	r8, r8, r6
 8018c60:	fb15 f506 	smulbb	r5, r5, r6
 8018c64:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018c68:	b2c0      	uxtb	r0, r0
 8018c6a:	fa1f fc8c 	uxth.w	ip, ip
 8018c6e:	fb07 870b 	mla	r7, r7, fp, r8
 8018c72:	fb00 500b 	mla	r0, r0, fp, r5
 8018c76:	b280      	uxth	r0, r0
 8018c78:	b2bf      	uxth	r7, r7
 8018c7a:	f10c 0501 	add.w	r5, ip, #1
 8018c7e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018c82:	f107 0801 	add.w	r8, r7, #1
 8018c86:	1c45      	adds	r5, r0, #1
 8018c88:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018c8c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018c90:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018c92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018c96:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018c9a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018c9e:	ea45 0c0c 	orr.w	ip, r5, ip
 8018ca2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018ca6:	4401      	add	r1, r0
 8018ca8:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018caa:	ea4c 0c08 	orr.w	ip, ip, r8
 8018cae:	f82a cb02 	strh.w	ip, [sl], #2
 8018cb2:	4402      	add	r2, r0
 8018cb4:	e7ac      	b.n	8018c10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018cb6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8018cba:	f04f 0800 	mov.w	r8, #0
 8018cbe:	eb03 0008 	add.w	r0, r3, r8
 8018cc2:	2800      	cmp	r0, #0
 8018cc4:	dc41      	bgt.n	8018d4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018cc6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018cca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018cce:	9b01      	ldr	r3, [sp, #4]
 8018cd0:	2b00      	cmp	r3, #0
 8018cd2:	f340 8097 	ble.w	8018e04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018cd6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018cda:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018cde:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018ce2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ce4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018ce8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018cec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018cf0:	eef0 6a62 	vmov.f32	s13, s5
 8018cf4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018cf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018cfc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018d00:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018d04:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018d08:	eef0 6a43 	vmov.f32	s13, s6
 8018d0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018d10:	ee12 2a90 	vmov	r2, s5
 8018d14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018d18:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d1c:	ee13 2a10 	vmov	r2, s6
 8018d20:	9313      	str	r3, [sp, #76]	; 0x4c
 8018d22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d24:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d28:	9314      	str	r3, [sp, #80]	; 0x50
 8018d2a:	9b01      	ldr	r3, [sp, #4]
 8018d2c:	9a05      	ldr	r2, [sp, #20]
 8018d2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018d32:	3b01      	subs	r3, #1
 8018d34:	9301      	str	r3, [sp, #4]
 8018d36:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018d3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d3c:	eeb0 3a67 	vmov.f32	s6, s15
 8018d40:	bf08      	it	eq
 8018d42:	4613      	moveq	r3, r2
 8018d44:	eef0 2a47 	vmov.f32	s5, s14
 8018d48:	e72c      	b.n	8018ba4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018d4a:	140f      	asrs	r7, r1, #16
 8018d4c:	d453      	bmi.n	8018df6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018d4e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018d52:	42bd      	cmp	r5, r7
 8018d54:	dd4f      	ble.n	8018df6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018d56:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018d5a:	d44c      	bmi.n	8018df6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018d5c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018d60:	4560      	cmp	r0, ip
 8018d62:	dd48      	ble.n	8018df6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018d64:	9803      	ldr	r0, [sp, #12]
 8018d66:	b22d      	sxth	r5, r5
 8018d68:	fb0c 0505 	mla	r5, ip, r5, r0
 8018d6c:	5de8      	ldrb	r0, [r5, r7]
 8018d6e:	9d04      	ldr	r5, [sp, #16]
 8018d70:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018d74:	f06f 0501 	mvn.w	r5, #1
 8018d78:	fb05 fb08 	mul.w	fp, r5, r8
 8018d7c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018d80:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018d84:	122f      	asrs	r7, r5, #8
 8018d86:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018d8a:	fb17 f706 	smulbb	r7, r7, r6
 8018d8e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018d92:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018d96:	00ed      	lsls	r5, r5, #3
 8018d98:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018d9c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018da0:	10c7      	asrs	r7, r0, #3
 8018da2:	b2ed      	uxtb	r5, r5
 8018da4:	00c0      	lsls	r0, r0, #3
 8018da6:	fb19 f906 	smulbb	r9, r9, r6
 8018daa:	fb15 f506 	smulbb	r5, r5, r6
 8018dae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018db2:	b2c0      	uxtb	r0, r0
 8018db4:	fa1f fc8c 	uxth.w	ip, ip
 8018db8:	fb07 970a 	mla	r7, r7, sl, r9
 8018dbc:	fb00 500a 	mla	r0, r0, sl, r5
 8018dc0:	b2bf      	uxth	r7, r7
 8018dc2:	b280      	uxth	r0, r0
 8018dc4:	f10c 0501 	add.w	r5, ip, #1
 8018dc8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018dcc:	f107 0901 	add.w	r9, r7, #1
 8018dd0:	1c45      	adds	r5, r0, #1
 8018dd2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018dd6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018dda:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018dde:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018de2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018de6:	ea45 0c0c 	orr.w	ip, r5, ip
 8018dea:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018dee:	ea4c 0c09 	orr.w	ip, ip, r9
 8018df2:	f824 c00b 	strh.w	ip, [r4, fp]
 8018df6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018df8:	4401      	add	r1, r0
 8018dfa:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018dfc:	f108 38ff 	add.w	r8, r8, #4294967295
 8018e00:	4402      	add	r2, r0
 8018e02:	e75c      	b.n	8018cbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018e04:	b007      	add	sp, #28
 8018e06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018e0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018e0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e0e:	b085      	sub	sp, #20
 8018e10:	4693      	mov	fp, r2
 8018e12:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018e14:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018e16:	6870      	ldr	r0, [r6, #4]
 8018e18:	9100      	str	r1, [sp, #0]
 8018e1a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018e1e:	fb00 2404 	mla	r4, r0, r4, r2
 8018e22:	6832      	ldr	r2, [r6, #0]
 8018e24:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018e28:	682a      	ldr	r2, [r5, #0]
 8018e2a:	9201      	str	r2, [sp, #4]
 8018e2c:	686a      	ldr	r2, [r5, #4]
 8018e2e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018e32:	3204      	adds	r2, #4
 8018e34:	9202      	str	r2, [sp, #8]
 8018e36:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018e3a:	9a00      	ldr	r2, [sp, #0]
 8018e3c:	2a00      	cmp	r2, #0
 8018e3e:	dc03      	bgt.n	8018e48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018e40:	f1bb 0f00 	cmp.w	fp, #0
 8018e44:	f340 80a0 	ble.w	8018f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018e48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018e4a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018e4e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018e52:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018e56:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018e58:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018e5c:	2b00      	cmp	r3, #0
 8018e5e:	dd0c      	ble.n	8018e7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018e60:	1406      	asrs	r6, r0, #16
 8018e62:	d405      	bmi.n	8018e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018e64:	454e      	cmp	r6, r9
 8018e66:	da03      	bge.n	8018e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018e68:	1416      	asrs	r6, r2, #16
 8018e6a:	d401      	bmi.n	8018e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018e6c:	4546      	cmp	r6, r8
 8018e6e:	db05      	blt.n	8018e7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018e70:	4470      	add	r0, lr
 8018e72:	4462      	add	r2, ip
 8018e74:	3b01      	subs	r3, #1
 8018e76:	3402      	adds	r4, #2
 8018e78:	e7f0      	b.n	8018e5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018e7a:	d00f      	beq.n	8018e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018e7c:	1e5e      	subs	r6, r3, #1
 8018e7e:	fb0e 0706 	mla	r7, lr, r6, r0
 8018e82:	143f      	asrs	r7, r7, #16
 8018e84:	d541      	bpl.n	8018f0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018e86:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018e8a:	4698      	mov	r8, r3
 8018e8c:	9603      	str	r6, [sp, #12]
 8018e8e:	f1b8 0f00 	cmp.w	r8, #0
 8018e92:	dc59      	bgt.n	8018f48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018e94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018e98:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018e9c:	9b00      	ldr	r3, [sp, #0]
 8018e9e:	2b00      	cmp	r3, #0
 8018ea0:	dd72      	ble.n	8018f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018ea2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018ea6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018eaa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018eae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018eb0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018eb4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018eb8:	eeb0 6a62 	vmov.f32	s12, s5
 8018ebc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018ec0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018ec4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ec8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018ecc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018ed0:	eeb0 6a43 	vmov.f32	s12, s6
 8018ed4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ed8:	ee12 2a90 	vmov	r2, s5
 8018edc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018ee0:	fb92 fef3 	sdiv	lr, r2, r3
 8018ee4:	ee13 2a10 	vmov	r2, s6
 8018ee8:	fb92 fcf3 	sdiv	ip, r2, r3
 8018eec:	9b00      	ldr	r3, [sp, #0]
 8018eee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018ef2:	3b01      	subs	r3, #1
 8018ef4:	9300      	str	r3, [sp, #0]
 8018ef6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018efa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018efc:	eeb0 3a67 	vmov.f32	s6, s15
 8018f00:	bf08      	it	eq
 8018f02:	465b      	moveq	r3, fp
 8018f04:	eef0 2a47 	vmov.f32	s5, s14
 8018f08:	e797      	b.n	8018e3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018f0a:	454f      	cmp	r7, r9
 8018f0c:	dabb      	bge.n	8018e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018f0e:	fb0c 2606 	mla	r6, ip, r6, r2
 8018f12:	1436      	asrs	r6, r6, #16
 8018f14:	d4b7      	bmi.n	8018e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018f16:	4546      	cmp	r6, r8
 8018f18:	dab5      	bge.n	8018e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018f1a:	461e      	mov	r6, r3
 8018f1c:	46a0      	mov	r8, r4
 8018f1e:	2e00      	cmp	r6, #0
 8018f20:	ddb8      	ble.n	8018e94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018f22:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018f26:	9901      	ldr	r1, [sp, #4]
 8018f28:	1417      	asrs	r7, r2, #16
 8018f2a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018f2e:	fb0a 1707 	mla	r7, sl, r7, r1
 8018f32:	9902      	ldr	r1, [sp, #8]
 8018f34:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018f38:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018f3c:	f828 7b02 	strh.w	r7, [r8], #2
 8018f40:	4470      	add	r0, lr
 8018f42:	4462      	add	r2, ip
 8018f44:	3e01      	subs	r6, #1
 8018f46:	e7ea      	b.n	8018f1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018f48:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018f4c:	d417      	bmi.n	8018f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018f4e:	68ae      	ldr	r6, [r5, #8]
 8018f50:	454e      	cmp	r6, r9
 8018f52:	dd14      	ble.n	8018f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018f54:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018f58:	d411      	bmi.n	8018f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018f5a:	68ef      	ldr	r7, [r5, #12]
 8018f5c:	4557      	cmp	r7, sl
 8018f5e:	dd0e      	ble.n	8018f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018f60:	9f01      	ldr	r7, [sp, #4]
 8018f62:	b236      	sxth	r6, r6
 8018f64:	fb0a 7606 	mla	r6, sl, r6, r7
 8018f68:	9f02      	ldr	r7, [sp, #8]
 8018f6a:	f816 6009 	ldrb.w	r6, [r6, r9]
 8018f6e:	f06f 0101 	mvn.w	r1, #1
 8018f72:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018f76:	fb01 f608 	mul.w	r6, r1, r8
 8018f7a:	9903      	ldr	r1, [sp, #12]
 8018f7c:	538f      	strh	r7, [r1, r6]
 8018f7e:	4470      	add	r0, lr
 8018f80:	4462      	add	r2, ip
 8018f82:	f108 38ff 	add.w	r8, r8, #4294967295
 8018f86:	e782      	b.n	8018e8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018f88:	b005      	add	sp, #20
 8018f8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018f8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f92:	b087      	sub	sp, #28
 8018f94:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018f96:	9205      	str	r2, [sp, #20]
 8018f98:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018f9c:	9203      	str	r2, [sp, #12]
 8018f9e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018fa2:	9102      	str	r1, [sp, #8]
 8018fa4:	6861      	ldr	r1, [r4, #4]
 8018fa6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018faa:	fb01 2000 	mla	r0, r1, r0, r2
 8018fae:	6822      	ldr	r2, [r4, #0]
 8018fb0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8018fb4:	9200      	str	r2, [sp, #0]
 8018fb6:	f8dc 2000 	ldr.w	r2, [ip]
 8018fba:	9204      	str	r2, [sp, #16]
 8018fbc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018fc0:	3204      	adds	r2, #4
 8018fc2:	9201      	str	r2, [sp, #4]
 8018fc4:	9a03      	ldr	r2, [sp, #12]
 8018fc6:	43d5      	mvns	r5, r2
 8018fc8:	b2ed      	uxtb	r5, r5
 8018fca:	9a02      	ldr	r2, [sp, #8]
 8018fcc:	2a00      	cmp	r2, #0
 8018fce:	dc03      	bgt.n	8018fd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018fd0:	9a05      	ldr	r2, [sp, #20]
 8018fd2:	2a00      	cmp	r2, #0
 8018fd4:	f340 812c 	ble.w	8019230 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018fd8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018fda:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8018fde:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018fe2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018fe6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018fe8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018fec:	2b00      	cmp	r3, #0
 8018fee:	dd10      	ble.n	8019012 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018ff0:	140c      	asrs	r4, r1, #16
 8018ff2:	d405      	bmi.n	8019000 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018ff4:	4574      	cmp	r4, lr
 8018ff6:	da03      	bge.n	8019000 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018ff8:	1414      	asrs	r4, r2, #16
 8018ffa:	d401      	bmi.n	8019000 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018ffc:	42bc      	cmp	r4, r7
 8018ffe:	db09      	blt.n	8019014 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019000:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019002:	9800      	ldr	r0, [sp, #0]
 8019004:	4421      	add	r1, r4
 8019006:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019008:	3002      	adds	r0, #2
 801900a:	4422      	add	r2, r4
 801900c:	3b01      	subs	r3, #1
 801900e:	9000      	str	r0, [sp, #0]
 8019010:	e7ec      	b.n	8018fec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019012:	d071      	beq.n	80190f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8019014:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019016:	1e5c      	subs	r4, r3, #1
 8019018:	fb06 1604 	mla	r6, r6, r4, r1
 801901c:	1436      	asrs	r6, r6, #16
 801901e:	d45d      	bmi.n	80190dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019020:	4576      	cmp	r6, lr
 8019022:	da5b      	bge.n	80190dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019024:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8019026:	fb06 2404 	mla	r4, r6, r4, r2
 801902a:	1424      	asrs	r4, r4, #16
 801902c:	d456      	bmi.n	80190dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801902e:	42bc      	cmp	r4, r7
 8019030:	da54      	bge.n	80190dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019032:	f8dd 9000 	ldr.w	r9, [sp]
 8019036:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801903a:	4698      	mov	r8, r3
 801903c:	f1b8 0f00 	cmp.w	r8, #0
 8019040:	dd54      	ble.n	80190ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019042:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019046:	9804      	ldr	r0, [sp, #16]
 8019048:	1414      	asrs	r4, r2, #16
 801904a:	fb07 0404 	mla	r4, r7, r4, r0
 801904e:	140e      	asrs	r6, r1, #16
 8019050:	9801      	ldr	r0, [sp, #4]
 8019052:	f814 e006 	ldrb.w	lr, [r4, r6]
 8019056:	f8b9 4000 	ldrh.w	r4, [r9]
 801905a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801905e:	eb00 0b0e 	add.w	fp, r0, lr
 8019062:	1227      	asrs	r7, r4, #8
 8019064:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019068:	f89b b001 	ldrb.w	fp, [fp, #1]
 801906c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019070:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019072:	fb16 f60a 	smulbb	r6, r6, sl
 8019076:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801907a:	fb07 6705 	mla	r7, r7, r5, r6
 801907e:	10e6      	asrs	r6, r4, #3
 8019080:	00e4      	lsls	r4, r4, #3
 8019082:	b2e4      	uxtb	r4, r4
 8019084:	fb1b fb0a 	smulbb	fp, fp, sl
 8019088:	fb14 f405 	smulbb	r4, r4, r5
 801908c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019090:	b2bf      	uxth	r7, r7
 8019092:	fb06 b605 	mla	r6, r6, r5, fp
 8019096:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801909a:	b2b6      	uxth	r6, r6
 801909c:	fa1f fe8e 	uxth.w	lr, lr
 80190a0:	1c7c      	adds	r4, r7, #1
 80190a2:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80190a6:	f106 0b01 	add.w	fp, r6, #1
 80190aa:	f10e 0401 	add.w	r4, lr, #1
 80190ae:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80190b2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80190b6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80190ba:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80190be:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80190c2:	4327      	orrs	r7, r4
 80190c4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80190c8:	4401      	add	r1, r0
 80190ca:	9814      	ldr	r0, [sp, #80]	; 0x50
 80190cc:	ea47 070b 	orr.w	r7, r7, fp
 80190d0:	f829 7b02 	strh.w	r7, [r9], #2
 80190d4:	4402      	add	r2, r0
 80190d6:	f108 38ff 	add.w	r8, r8, #4294967295
 80190da:	e7af      	b.n	801903c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80190dc:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80190e0:	f04f 0e00 	mov.w	lr, #0
 80190e4:	eb03 040e 	add.w	r4, r3, lr
 80190e8:	2c00      	cmp	r4, #0
 80190ea:	dc43      	bgt.n	8019174 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80190ec:	9a00      	ldr	r2, [sp, #0]
 80190ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80190f2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80190f6:	9300      	str	r3, [sp, #0]
 80190f8:	9b02      	ldr	r3, [sp, #8]
 80190fa:	2b00      	cmp	r3, #0
 80190fc:	f340 8098 	ble.w	8019230 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019100:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019104:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019108:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801910c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801910e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019112:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019116:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801911a:	eef0 6a62 	vmov.f32	s13, s5
 801911e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019122:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019126:	ee77 2a62 	vsub.f32	s5, s14, s5
 801912a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801912e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019132:	eef0 6a43 	vmov.f32	s13, s6
 8019136:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801913a:	ee12 2a90 	vmov	r2, s5
 801913e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019142:	fb92 f3f3 	sdiv	r3, r2, r3
 8019146:	ee13 2a10 	vmov	r2, s6
 801914a:	9313      	str	r3, [sp, #76]	; 0x4c
 801914c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801914e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019152:	9314      	str	r3, [sp, #80]	; 0x50
 8019154:	9b02      	ldr	r3, [sp, #8]
 8019156:	9a05      	ldr	r2, [sp, #20]
 8019158:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801915c:	3b01      	subs	r3, #1
 801915e:	9302      	str	r3, [sp, #8]
 8019160:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019164:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019166:	eeb0 3a67 	vmov.f32	s6, s15
 801916a:	bf08      	it	eq
 801916c:	4613      	moveq	r3, r2
 801916e:	eef0 2a47 	vmov.f32	s5, s14
 8019172:	e72a      	b.n	8018fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019174:	140f      	asrs	r7, r1, #16
 8019176:	d454      	bmi.n	8019222 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019178:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801917c:	42be      	cmp	r6, r7
 801917e:	dd50      	ble.n	8019222 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019180:	ea5f 4822 	movs.w	r8, r2, asr #16
 8019184:	d44d      	bmi.n	8019222 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019186:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801918a:	4544      	cmp	r4, r8
 801918c:	dd49      	ble.n	8019222 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801918e:	9c04      	ldr	r4, [sp, #16]
 8019190:	b236      	sxth	r6, r6
 8019192:	fb08 4606 	mla	r6, r8, r6, r4
 8019196:	f06f 0001 	mvn.w	r0, #1
 801919a:	f816 8007 	ldrb.w	r8, [r6, r7]
 801919e:	9c01      	ldr	r4, [sp, #4]
 80191a0:	fb00 fa0e 	mul.w	sl, r0, lr
 80191a4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80191a8:	9800      	ldr	r0, [sp, #0]
 80191aa:	eb04 0b08 	add.w	fp, r4, r8
 80191ae:	f830 400a 	ldrh.w	r4, [r0, sl]
 80191b2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80191b6:	9801      	ldr	r0, [sp, #4]
 80191b8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80191bc:	f810 8008 	ldrb.w	r8, [r0, r8]
 80191c0:	9800      	ldr	r0, [sp, #0]
 80191c2:	1227      	asrs	r7, r4, #8
 80191c4:	fb16 f609 	smulbb	r6, r6, r9
 80191c8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80191cc:	fb07 6705 	mla	r7, r7, r5, r6
 80191d0:	10e6      	asrs	r6, r4, #3
 80191d2:	00e4      	lsls	r4, r4, #3
 80191d4:	b2e4      	uxtb	r4, r4
 80191d6:	fb1b fb09 	smulbb	fp, fp, r9
 80191da:	fb14 f405 	smulbb	r4, r4, r5
 80191de:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80191e2:	b2bf      	uxth	r7, r7
 80191e4:	fb06 b605 	mla	r6, r6, r5, fp
 80191e8:	fb08 4809 	mla	r8, r8, r9, r4
 80191ec:	b2b6      	uxth	r6, r6
 80191ee:	fa1f f888 	uxth.w	r8, r8
 80191f2:	1c7c      	adds	r4, r7, #1
 80191f4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80191f8:	f106 0b01 	add.w	fp, r6, #1
 80191fc:	f108 0401 	add.w	r4, r8, #1
 8019200:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8019204:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019208:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801920c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019210:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019214:	4327      	orrs	r7, r4
 8019216:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801921a:	ea47 070b 	orr.w	r7, r7, fp
 801921e:	f820 700a 	strh.w	r7, [r0, sl]
 8019222:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019224:	4401      	add	r1, r0
 8019226:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019228:	f10e 3eff 	add.w	lr, lr, #4294967295
 801922c:	4402      	add	r2, r0
 801922e:	e759      	b.n	80190e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019230:	b007      	add	sp, #28
 8019232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019238 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801923c:	b085      	sub	sp, #20
 801923e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019242:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019244:	9203      	str	r2, [sp, #12]
 8019246:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801924a:	6870      	ldr	r0, [r6, #4]
 801924c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801924e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8019252:	686f      	ldr	r7, [r5, #4]
 8019254:	9101      	str	r1, [sp, #4]
 8019256:	fb00 2404 	mla	r4, r0, r4, r2
 801925a:	6832      	ldr	r2, [r6, #0]
 801925c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019260:	682a      	ldr	r2, [r5, #0]
 8019262:	9202      	str	r2, [sp, #8]
 8019264:	3704      	adds	r7, #4
 8019266:	9a01      	ldr	r2, [sp, #4]
 8019268:	2a00      	cmp	r2, #0
 801926a:	dc03      	bgt.n	8019274 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801926c:	9a03      	ldr	r2, [sp, #12]
 801926e:	2a00      	cmp	r2, #0
 8019270:	f340 80cc 	ble.w	801940c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019274:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019276:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801927a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801927e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019282:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019284:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019288:	2b00      	cmp	r3, #0
 801928a:	dd0d      	ble.n	80192a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801928c:	1406      	asrs	r6, r0, #16
 801928e:	d405      	bmi.n	801929c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019290:	454e      	cmp	r6, r9
 8019292:	da03      	bge.n	801929c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019294:	1416      	asrs	r6, r2, #16
 8019296:	d401      	bmi.n	801929c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019298:	4546      	cmp	r6, r8
 801929a:	db06      	blt.n	80192aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801929c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801929e:	4460      	add	r0, ip
 80192a0:	4432      	add	r2, r6
 80192a2:	3b01      	subs	r3, #1
 80192a4:	3402      	adds	r4, #2
 80192a6:	e7ef      	b.n	8019288 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80192a8:	d00f      	beq.n	80192ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80192aa:	1e5e      	subs	r6, r3, #1
 80192ac:	fb0c 0e06 	mla	lr, ip, r6, r0
 80192b0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80192b4:	d543      	bpl.n	801933e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80192b6:	4698      	mov	r8, r3
 80192b8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80192bc:	f1b8 0f00 	cmp.w	r8, #0
 80192c0:	dc71      	bgt.n	80193a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80192c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80192c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80192ca:	9b01      	ldr	r3, [sp, #4]
 80192cc:	2b00      	cmp	r3, #0
 80192ce:	f340 809d 	ble.w	801940c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80192d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80192d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80192da:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80192de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80192e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80192e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80192e8:	eeb0 6a62 	vmov.f32	s12, s5
 80192ec:	ee61 7a27 	vmul.f32	s15, s2, s15
 80192f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192f4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80192f8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80192fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019300:	eeb0 6a43 	vmov.f32	s12, s6
 8019304:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019308:	ee12 2a90 	vmov	r2, s5
 801930c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019310:	fb92 fcf3 	sdiv	ip, r2, r3
 8019314:	ee13 2a10 	vmov	r2, s6
 8019318:	fb92 f3f3 	sdiv	r3, r2, r3
 801931c:	9312      	str	r3, [sp, #72]	; 0x48
 801931e:	9b01      	ldr	r3, [sp, #4]
 8019320:	9a03      	ldr	r2, [sp, #12]
 8019322:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019326:	3b01      	subs	r3, #1
 8019328:	9301      	str	r3, [sp, #4]
 801932a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801932e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019330:	eeb0 3a67 	vmov.f32	s6, s15
 8019334:	bf08      	it	eq
 8019336:	4613      	moveq	r3, r2
 8019338:	eef0 2a47 	vmov.f32	s5, s14
 801933c:	e793      	b.n	8019266 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801933e:	45ce      	cmp	lr, r9
 8019340:	dab9      	bge.n	80192b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019342:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019344:	fb01 2606 	mla	r6, r1, r6, r2
 8019348:	1436      	asrs	r6, r6, #16
 801934a:	d4b4      	bmi.n	80192b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801934c:	4546      	cmp	r6, r8
 801934e:	dab2      	bge.n	80192b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019350:	4698      	mov	r8, r3
 8019352:	46a2      	mov	sl, r4
 8019354:	f1b8 0f00 	cmp.w	r8, #0
 8019358:	ddb3      	ble.n	80192c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801935a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801935e:	9902      	ldr	r1, [sp, #8]
 8019360:	1416      	asrs	r6, r2, #16
 8019362:	fb09 1606 	mla	r6, r9, r6, r1
 8019366:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801936a:	492a      	ldr	r1, [pc, #168]	; (8019414 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801936c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019370:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019374:	eb07 0b0e 	add.w	fp, r7, lr
 8019378:	4460      	add	r0, ip
 801937a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801937e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8019382:	00f6      	lsls	r6, r6, #3
 8019384:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019388:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801938c:	ea49 0606 	orr.w	r6, r9, r6
 8019390:	f817 900e 	ldrb.w	r9, [r7, lr]
 8019394:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019396:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801939a:	f82a 6b02 	strh.w	r6, [sl], #2
 801939e:	440a      	add	r2, r1
 80193a0:	f108 38ff 	add.w	r8, r8, #4294967295
 80193a4:	e7d6      	b.n	8019354 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80193a6:	ea5f 4920 	movs.w	r9, r0, asr #16
 80193aa:	d429      	bmi.n	8019400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80193ac:	68ae      	ldr	r6, [r5, #8]
 80193ae:	454e      	cmp	r6, r9
 80193b0:	dd26      	ble.n	8019400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80193b2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80193b6:	d423      	bmi.n	8019400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80193b8:	68e9      	ldr	r1, [r5, #12]
 80193ba:	4559      	cmp	r1, fp
 80193bc:	dd20      	ble.n	8019400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80193be:	9902      	ldr	r1, [sp, #8]
 80193c0:	fa0f fe86 	sxth.w	lr, r6
 80193c4:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80193c8:	f06f 0101 	mvn.w	r1, #1
 80193cc:	f81e e009 	ldrb.w	lr, [lr, r9]
 80193d0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80193d4:	eb07 060e 	add.w	r6, r7, lr
 80193d8:	fb01 f908 	mul.w	r9, r1, r8
 80193dc:	f896 b002 	ldrb.w	fp, [r6, #2]
 80193e0:	7876      	ldrb	r6, [r6, #1]
 80193e2:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80193e6:	00f6      	lsls	r6, r6, #3
 80193e8:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80193ec:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80193f0:	ea4b 0606 	orr.w	r6, fp, r6
 80193f4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80193f8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80193fc:	f82a 6009 	strh.w	r6, [sl, r9]
 8019400:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019402:	4460      	add	r0, ip
 8019404:	440a      	add	r2, r1
 8019406:	f108 38ff 	add.w	r8, r8, #4294967295
 801940a:	e757      	b.n	80192bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801940c:	b005      	add	sp, #20
 801940e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019412:	bf00      	nop
 8019414:	fffff800 	.word	0xfffff800

08019418 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801941c:	b087      	sub	sp, #28
 801941e:	468b      	mov	fp, r1
 8019420:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019422:	9204      	str	r2, [sp, #16]
 8019424:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019428:	9205      	str	r2, [sp, #20]
 801942a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801942e:	6841      	ldr	r1, [r0, #4]
 8019430:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019434:	fb01 2404 	mla	r4, r1, r4, r2
 8019438:	6802      	ldr	r2, [r0, #0]
 801943a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801943e:	f8dc 2000 	ldr.w	r2, [ip]
 8019442:	9201      	str	r2, [sp, #4]
 8019444:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019448:	3204      	adds	r2, #4
 801944a:	9202      	str	r2, [sp, #8]
 801944c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019450:	f1bb 0f00 	cmp.w	fp, #0
 8019454:	dc03      	bgt.n	801945e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8019456:	9a04      	ldr	r2, [sp, #16]
 8019458:	2a00      	cmp	r2, #0
 801945a:	f340 8138 	ble.w	80196ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801945e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019460:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019464:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019468:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801946c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801946e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019472:	2b00      	cmp	r3, #0
 8019474:	dd0e      	ble.n	8019494 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019476:	1402      	asrs	r2, r0, #16
 8019478:	d405      	bmi.n	8019486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801947a:	42ba      	cmp	r2, r7
 801947c:	da03      	bge.n	8019486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801947e:	140a      	asrs	r2, r1, #16
 8019480:	d401      	bmi.n	8019486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019482:	42b2      	cmp	r2, r6
 8019484:	db07      	blt.n	8019496 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019486:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019488:	4410      	add	r0, r2
 801948a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801948c:	3b01      	subs	r3, #1
 801948e:	4411      	add	r1, r2
 8019490:	3402      	adds	r4, #2
 8019492:	e7ee      	b.n	8019472 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019494:	d019      	beq.n	80194ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019496:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019498:	1e5a      	subs	r2, r3, #1
 801949a:	fb05 0502 	mla	r5, r5, r2, r0
 801949e:	142d      	asrs	r5, r5, #16
 80194a0:	d409      	bmi.n	80194b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80194a2:	42bd      	cmp	r5, r7
 80194a4:	da07      	bge.n	80194b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80194a6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80194a8:	fb05 1202 	mla	r2, r5, r2, r1
 80194ac:	1412      	asrs	r2, r2, #16
 80194ae:	d402      	bmi.n	80194b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80194b0:	42b2      	cmp	r2, r6
 80194b2:	f2c0 80ac 	blt.w	801960e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80194b6:	f04f 0e00 	mov.w	lr, #0
 80194ba:	eb03 020e 	add.w	r2, r3, lr
 80194be:	2a00      	cmp	r2, #0
 80194c0:	dc3e      	bgt.n	8019540 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80194c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80194c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80194ca:	f1bb 0f00 	cmp.w	fp, #0
 80194ce:	f340 80fe 	ble.w	80196ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80194d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80194d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80194da:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80194de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80194e0:	f1bb 0b01 	subs.w	fp, fp, #1
 80194e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80194e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80194ec:	eeb0 6a62 	vmov.f32	s12, s5
 80194f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80194f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80194f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80194fc:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019500:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019504:	eeb0 6a43 	vmov.f32	s12, s6
 8019508:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801950c:	ee12 2a90 	vmov	r2, s5
 8019510:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019514:	fb92 f3f3 	sdiv	r3, r2, r3
 8019518:	ee13 2a10 	vmov	r2, s6
 801951c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019520:	9313      	str	r3, [sp, #76]	; 0x4c
 8019522:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019524:	fb92 f3f3 	sdiv	r3, r2, r3
 8019528:	9a04      	ldr	r2, [sp, #16]
 801952a:	9314      	str	r3, [sp, #80]	; 0x50
 801952c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019530:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019532:	eeb0 3a67 	vmov.f32	s6, s15
 8019536:	bf08      	it	eq
 8019538:	4613      	moveq	r3, r2
 801953a:	eef0 2a47 	vmov.f32	s5, s14
 801953e:	e787      	b.n	8019450 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019540:	1406      	asrs	r6, r0, #16
 8019542:	d45d      	bmi.n	8019600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019544:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8019548:	42b5      	cmp	r5, r6
 801954a:	dd59      	ble.n	8019600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801954c:	140f      	asrs	r7, r1, #16
 801954e:	d457      	bmi.n	8019600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019550:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8019554:	42ba      	cmp	r2, r7
 8019556:	dd53      	ble.n	8019600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019558:	9a01      	ldr	r2, [sp, #4]
 801955a:	b22d      	sxth	r5, r5
 801955c:	fb07 2505 	mla	r5, r7, r5, r2
 8019560:	5daa      	ldrb	r2, [r5, r6]
 8019562:	9d02      	ldr	r5, [sp, #8]
 8019564:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019568:	0e2e      	lsrs	r6, r5, #24
 801956a:	d049      	beq.n	8019600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801956c:	f06f 0201 	mvn.w	r2, #1
 8019570:	fb02 f20e 	mul.w	r2, r2, lr
 8019574:	9203      	str	r2, [sp, #12]
 8019576:	f834 8002 	ldrh.w	r8, [r4, r2]
 801957a:	9a05      	ldr	r2, [sp, #20]
 801957c:	4356      	muls	r6, r2
 801957e:	1c72      	adds	r2, r6, #1
 8019580:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019584:	1212      	asrs	r2, r2, #8
 8019586:	fa1f f982 	uxth.w	r9, r2
 801958a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801958e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019592:	43d2      	mvns	r2, r2
 8019594:	b2d2      	uxtb	r2, r2
 8019596:	fb16 f609 	smulbb	r6, r6, r9
 801959a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801959e:	fb07 6702 	mla	r7, r7, r2, r6
 80195a2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80195a6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80195aa:	b2ed      	uxtb	r5, r5
 80195ac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80195b0:	fa5f f888 	uxtb.w	r8, r8
 80195b4:	fb15 f509 	smulbb	r5, r5, r9
 80195b8:	fb08 5502 	mla	r5, r8, r2, r5
 80195bc:	b2bf      	uxth	r7, r7
 80195be:	fb1a fa09 	smulbb	sl, sl, r9
 80195c2:	b2ad      	uxth	r5, r5
 80195c4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80195c8:	fb06 a602 	mla	r6, r6, r2, sl
 80195cc:	1c7a      	adds	r2, r7, #1
 80195ce:	f105 0a01 	add.w	sl, r5, #1
 80195d2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80195d6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80195da:	b2b6      	uxth	r6, r6
 80195dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80195e0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80195e4:	ea4a 0707 	orr.w	r7, sl, r7
 80195e8:	f106 0a01 	add.w	sl, r6, #1
 80195ec:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80195f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80195f4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80195f8:	9a03      	ldr	r2, [sp, #12]
 80195fa:	ea47 070a 	orr.w	r7, r7, sl
 80195fe:	52a7      	strh	r7, [r4, r2]
 8019600:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019602:	4410      	add	r0, r2
 8019604:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019606:	f10e 3eff 	add.w	lr, lr, #4294967295
 801960a:	4411      	add	r1, r2
 801960c:	e755      	b.n	80194ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801960e:	f04f 0800 	mov.w	r8, #0
 8019612:	eba3 0208 	sub.w	r2, r3, r8
 8019616:	2a00      	cmp	r2, #0
 8019618:	f77f af53 	ble.w	80194c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801961c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8019620:	9f01      	ldr	r7, [sp, #4]
 8019622:	140a      	asrs	r2, r1, #16
 8019624:	1405      	asrs	r5, r0, #16
 8019626:	fb06 7202 	mla	r2, r6, r2, r7
 801962a:	5d52      	ldrb	r2, [r2, r5]
 801962c:	9d02      	ldr	r5, [sp, #8]
 801962e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019632:	0e2e      	lsrs	r6, r5, #24
 8019634:	d044      	beq.n	80196c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019636:	9a05      	ldr	r2, [sp, #20]
 8019638:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801963c:	4356      	muls	r6, r2
 801963e:	1c72      	adds	r2, r6, #1
 8019640:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019644:	1212      	asrs	r2, r2, #8
 8019646:	fa1f f982 	uxth.w	r9, r2
 801964a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801964e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019652:	43d2      	mvns	r2, r2
 8019654:	b2d2      	uxtb	r2, r2
 8019656:	fb16 f609 	smulbb	r6, r6, r9
 801965a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801965e:	fb07 6702 	mla	r7, r7, r2, r6
 8019662:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019666:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801966a:	b2ed      	uxtb	r5, r5
 801966c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019670:	fa5f fe8e 	uxtb.w	lr, lr
 8019674:	fb15 f509 	smulbb	r5, r5, r9
 8019678:	fb0e 5502 	mla	r5, lr, r2, r5
 801967c:	b2bf      	uxth	r7, r7
 801967e:	fb1a fa09 	smulbb	sl, sl, r9
 8019682:	b2ad      	uxth	r5, r5
 8019684:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019688:	fb06 a602 	mla	r6, r6, r2, sl
 801968c:	1c7a      	adds	r2, r7, #1
 801968e:	f105 0a01 	add.w	sl, r5, #1
 8019692:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019696:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801969a:	b2b6      	uxth	r6, r6
 801969c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80196a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80196a4:	ea4a 0707 	orr.w	r7, sl, r7
 80196a8:	f106 0a01 	add.w	sl, r6, #1
 80196ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80196b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80196b4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80196b8:	ea47 070a 	orr.w	r7, r7, sl
 80196bc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80196c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80196c2:	4410      	add	r0, r2
 80196c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80196c6:	f108 0801 	add.w	r8, r8, #1
 80196ca:	4411      	add	r1, r2
 80196cc:	e7a1      	b.n	8019612 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80196ce:	b007      	add	sp, #28
 80196d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080196d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80196d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80196d8:	b085      	sub	sp, #20
 80196da:	468b      	mov	fp, r1
 80196dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80196de:	9203      	str	r2, [sp, #12]
 80196e0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80196e4:	6841      	ldr	r1, [r0, #4]
 80196e6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80196ea:	fb01 2404 	mla	r4, r1, r4, r2
 80196ee:	6802      	ldr	r2, [r0, #0]
 80196f0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80196f4:	f8de 2000 	ldr.w	r2, [lr]
 80196f8:	9200      	str	r2, [sp, #0]
 80196fa:	f8de 2004 	ldr.w	r2, [lr, #4]
 80196fe:	3204      	adds	r2, #4
 8019700:	9201      	str	r2, [sp, #4]
 8019702:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019706:	f1bb 0f00 	cmp.w	fp, #0
 801970a:	dc03      	bgt.n	8019714 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801970c:	9a03      	ldr	r2, [sp, #12]
 801970e:	2a00      	cmp	r2, #0
 8019710:	f340 8153 	ble.w	80199ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019714:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019716:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801971a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801971e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019722:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019724:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019728:	2b00      	cmp	r3, #0
 801972a:	dd0e      	ble.n	801974a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801972c:	1408      	asrs	r0, r1, #16
 801972e:	d405      	bmi.n	801973c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019730:	42b8      	cmp	r0, r7
 8019732:	da03      	bge.n	801973c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019734:	1410      	asrs	r0, r2, #16
 8019736:	d401      	bmi.n	801973c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019738:	42b0      	cmp	r0, r6
 801973a:	db07      	blt.n	801974c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801973c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801973e:	4401      	add	r1, r0
 8019740:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019742:	3b01      	subs	r3, #1
 8019744:	4402      	add	r2, r0
 8019746:	3402      	adds	r4, #2
 8019748:	e7ee      	b.n	8019728 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801974a:	d017      	beq.n	801977c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801974c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801974e:	1e58      	subs	r0, r3, #1
 8019750:	fb05 1500 	mla	r5, r5, r0, r1
 8019754:	142d      	asrs	r5, r5, #16
 8019756:	d409      	bmi.n	801976c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019758:	42bd      	cmp	r5, r7
 801975a:	da07      	bge.n	801976c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801975c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801975e:	fb05 2000 	mla	r0, r5, r0, r2
 8019762:	1400      	asrs	r0, r0, #16
 8019764:	d402      	bmi.n	801976c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019766:	42b0      	cmp	r0, r6
 8019768:	f2c0 80bc 	blt.w	80198e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801976c:	2600      	movs	r6, #0
 801976e:	1998      	adds	r0, r3, r6
 8019770:	2800      	cmp	r0, #0
 8019772:	dc3e      	bgt.n	80197f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019774:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019778:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801977c:	f1bb 0f00 	cmp.w	fp, #0
 8019780:	f340 811b 	ble.w	80199ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019784:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019788:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801978c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019790:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019792:	f1bb 0b01 	subs.w	fp, fp, #1
 8019796:	ee31 1a05 	vadd.f32	s2, s2, s10
 801979a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801979e:	eeb0 6a62 	vmov.f32	s12, s5
 80197a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80197a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80197ae:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80197b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80197b6:	eeb0 6a43 	vmov.f32	s12, s6
 80197ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80197be:	ee12 2a90 	vmov	r2, s5
 80197c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80197c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80197ca:	ee13 2a10 	vmov	r2, s6
 80197ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197d2:	9311      	str	r3, [sp, #68]	; 0x44
 80197d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80197d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80197da:	9a03      	ldr	r2, [sp, #12]
 80197dc:	9312      	str	r3, [sp, #72]	; 0x48
 80197de:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80197e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80197e4:	eeb0 3a67 	vmov.f32	s6, s15
 80197e8:	bf08      	it	eq
 80197ea:	4613      	moveq	r3, r2
 80197ec:	eef0 2a47 	vmov.f32	s5, s14
 80197f0:	e789      	b.n	8019706 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80197f2:	140f      	asrs	r7, r1, #16
 80197f4:	d426      	bmi.n	8019844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80197f6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80197fa:	42bd      	cmp	r5, r7
 80197fc:	dd22      	ble.n	8019844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80197fe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019802:	d41f      	bmi.n	8019844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019804:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019808:	4560      	cmp	r0, ip
 801980a:	dd1b      	ble.n	8019844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801980c:	9800      	ldr	r0, [sp, #0]
 801980e:	b22d      	sxth	r5, r5
 8019810:	fb0c 0505 	mla	r5, ip, r5, r0
 8019814:	5de8      	ldrb	r0, [r5, r7]
 8019816:	9d01      	ldr	r5, [sp, #4]
 8019818:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801981c:	0e07      	lsrs	r7, r0, #24
 801981e:	2fff      	cmp	r7, #255	; 0xff
 8019820:	d116      	bne.n	8019850 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019822:	f06f 0501 	mvn.w	r5, #1
 8019826:	fb05 f706 	mul.w	r7, r5, r6
 801982a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801982e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019832:	0945      	lsrs	r5, r0, #5
 8019834:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019838:	ea4c 0505 	orr.w	r5, ip, r5
 801983c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019840:	4305      	orrs	r5, r0
 8019842:	53e5      	strh	r5, [r4, r7]
 8019844:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019846:	4401      	add	r1, r0
 8019848:	9812      	ldr	r0, [sp, #72]	; 0x48
 801984a:	3e01      	subs	r6, #1
 801984c:	4402      	add	r2, r0
 801984e:	e78e      	b.n	801976e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019850:	b2fd      	uxtb	r5, r7
 8019852:	2f00      	cmp	r7, #0
 8019854:	d0f6      	beq.n	8019844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019856:	f06f 0701 	mvn.w	r7, #1
 801985a:	4377      	muls	r7, r6
 801985c:	fa1f f985 	uxth.w	r9, r5
 8019860:	f834 8007 	ldrh.w	r8, [r4, r7]
 8019864:	9702      	str	r7, [sp, #8]
 8019866:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801986a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801986e:	43ed      	mvns	r5, r5
 8019870:	b2ed      	uxtb	r5, r5
 8019872:	fb17 f709 	smulbb	r7, r7, r9
 8019876:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801987a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801987e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019882:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8019886:	b2c0      	uxtb	r0, r0
 8019888:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801988c:	fa5f f888 	uxtb.w	r8, r8
 8019890:	fb10 f009 	smulbb	r0, r0, r9
 8019894:	fb08 0005 	mla	r0, r8, r5, r0
 8019898:	b280      	uxth	r0, r0
 801989a:	fa1f fc8c 	uxth.w	ip, ip
 801989e:	fb1a fa09 	smulbb	sl, sl, r9
 80198a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80198a6:	fb07 a705 	mla	r7, r7, r5, sl
 80198aa:	f100 0a01 	add.w	sl, r0, #1
 80198ae:	f10c 0501 	add.w	r5, ip, #1
 80198b2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80198b6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80198ba:	b2bf      	uxth	r7, r7
 80198bc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80198c0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80198c4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80198c8:	f107 0a01 	add.w	sl, r7, #1
 80198cc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80198d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80198d4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80198d8:	9802      	ldr	r0, [sp, #8]
 80198da:	ea4c 0c0a 	orr.w	ip, ip, sl
 80198de:	f824 c000 	strh.w	ip, [r4, r0]
 80198e2:	e7af      	b.n	8019844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80198e4:	f04f 0800 	mov.w	r8, #0
 80198e8:	eba3 0008 	sub.w	r0, r3, r8
 80198ec:	2800      	cmp	r0, #0
 80198ee:	f77f af41 	ble.w	8019774 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80198f2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80198f6:	9f00      	ldr	r7, [sp, #0]
 80198f8:	1410      	asrs	r0, r2, #16
 80198fa:	140d      	asrs	r5, r1, #16
 80198fc:	fb06 7000 	mla	r0, r6, r0, r7
 8019900:	5d40      	ldrb	r0, [r0, r5]
 8019902:	9d01      	ldr	r5, [sp, #4]
 8019904:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019908:	0e2e      	lsrs	r6, r5, #24
 801990a:	2eff      	cmp	r6, #255	; 0xff
 801990c:	d112      	bne.n	8019934 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801990e:	482c      	ldr	r0, [pc, #176]	; (80199c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019910:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019914:	0968      	lsrs	r0, r5, #5
 8019916:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801991a:	4330      	orrs	r0, r6
 801991c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019920:	4328      	orrs	r0, r5
 8019922:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8019926:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019928:	4401      	add	r1, r0
 801992a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801992c:	f108 0801 	add.w	r8, r8, #1
 8019930:	4402      	add	r2, r0
 8019932:	e7d9      	b.n	80198e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019934:	b2f0      	uxtb	r0, r6
 8019936:	2e00      	cmp	r6, #0
 8019938:	d0f5      	beq.n	8019926 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801993a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801993e:	fa1f f980 	uxth.w	r9, r0
 8019942:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019946:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801994a:	43c0      	mvns	r0, r0
 801994c:	b2c0      	uxtb	r0, r0
 801994e:	fb16 f609 	smulbb	r6, r6, r9
 8019952:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019956:	fb07 6700 	mla	r7, r7, r0, r6
 801995a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801995e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019962:	b2ed      	uxtb	r5, r5
 8019964:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019968:	fa5f fc8c 	uxtb.w	ip, ip
 801996c:	fb15 f509 	smulbb	r5, r5, r9
 8019970:	fb0c 5500 	mla	r5, ip, r0, r5
 8019974:	b2bf      	uxth	r7, r7
 8019976:	fb1a fa09 	smulbb	sl, sl, r9
 801997a:	b2ad      	uxth	r5, r5
 801997c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019980:	fb06 a600 	mla	r6, r6, r0, sl
 8019984:	1c78      	adds	r0, r7, #1
 8019986:	f105 0a01 	add.w	sl, r5, #1
 801998a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801998e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019992:	b2b6      	uxth	r6, r6
 8019994:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019998:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801999c:	ea4a 0707 	orr.w	r7, sl, r7
 80199a0:	f106 0a01 	add.w	sl, r6, #1
 80199a4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80199a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80199ac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80199b0:	ea47 070a 	orr.w	r7, r7, sl
 80199b4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80199b8:	e7b5      	b.n	8019926 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80199ba:	b005      	add	sp, #20
 80199bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80199c0:	fffff800 	.word	0xfffff800

080199c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80199c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199c8:	b087      	sub	sp, #28
 80199ca:	468b      	mov	fp, r1
 80199cc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80199ce:	9204      	str	r2, [sp, #16]
 80199d0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80199d4:	9205      	str	r2, [sp, #20]
 80199d6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80199da:	6861      	ldr	r1, [r4, #4]
 80199dc:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80199e0:	fb01 2000 	mla	r0, r1, r0, r2
 80199e4:	6822      	ldr	r2, [r4, #0]
 80199e6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80199ea:	f8de 2000 	ldr.w	r2, [lr]
 80199ee:	9201      	str	r2, [sp, #4]
 80199f0:	f8de 2004 	ldr.w	r2, [lr, #4]
 80199f4:	9202      	str	r2, [sp, #8]
 80199f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80199fa:	f1bb 0f00 	cmp.w	fp, #0
 80199fe:	dc03      	bgt.n	8019a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019a00:	9a04      	ldr	r2, [sp, #16]
 8019a02:	2a00      	cmp	r2, #0
 8019a04:	f340 8142 	ble.w	8019c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019a08:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019a0a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019a0e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019a12:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019a16:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019a18:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019a1c:	2b00      	cmp	r3, #0
 8019a1e:	dd0e      	ble.n	8019a3e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019a20:	140c      	asrs	r4, r1, #16
 8019a22:	d405      	bmi.n	8019a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019a24:	42bc      	cmp	r4, r7
 8019a26:	da03      	bge.n	8019a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019a28:	1414      	asrs	r4, r2, #16
 8019a2a:	d401      	bmi.n	8019a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019a2c:	42b4      	cmp	r4, r6
 8019a2e:	db07      	blt.n	8019a40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019a30:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019a32:	4421      	add	r1, r4
 8019a34:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019a36:	3b01      	subs	r3, #1
 8019a38:	4422      	add	r2, r4
 8019a3a:	3002      	adds	r0, #2
 8019a3c:	e7ee      	b.n	8019a1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019a3e:	d019      	beq.n	8019a74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019a40:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a42:	1e5c      	subs	r4, r3, #1
 8019a44:	fb05 1504 	mla	r5, r5, r4, r1
 8019a48:	142d      	asrs	r5, r5, #16
 8019a4a:	d409      	bmi.n	8019a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019a4c:	42bd      	cmp	r5, r7
 8019a4e:	da07      	bge.n	8019a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019a50:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019a52:	fb05 2404 	mla	r4, r5, r4, r2
 8019a56:	1424      	asrs	r4, r4, #16
 8019a58:	d402      	bmi.n	8019a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019a5a:	42b4      	cmp	r4, r6
 8019a5c:	f2c0 80b1 	blt.w	8019bc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019a60:	f04f 0800 	mov.w	r8, #0
 8019a64:	eb03 0408 	add.w	r4, r3, r8
 8019a68:	2c00      	cmp	r4, #0
 8019a6a:	dc3e      	bgt.n	8019aea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019a6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019a70:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019a74:	f1bb 0f00 	cmp.w	fp, #0
 8019a78:	f340 8108 	ble.w	8019c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019a7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019a80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019a84:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019a88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a8a:	f1bb 0b01 	subs.w	fp, fp, #1
 8019a8e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019a92:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019a96:	eeb0 6a62 	vmov.f32	s12, s5
 8019a9a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019a9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019aa2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019aa6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019aaa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019aae:	eeb0 6a43 	vmov.f32	s12, s6
 8019ab2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ab6:	ee12 2a90 	vmov	r2, s5
 8019aba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019abe:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ac2:	ee13 2a10 	vmov	r2, s6
 8019ac6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019aca:	9313      	str	r3, [sp, #76]	; 0x4c
 8019acc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ace:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ad2:	9a04      	ldr	r2, [sp, #16]
 8019ad4:	9314      	str	r3, [sp, #80]	; 0x50
 8019ad6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019ada:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019adc:	eeb0 3a67 	vmov.f32	s6, s15
 8019ae0:	bf08      	it	eq
 8019ae2:	4613      	moveq	r3, r2
 8019ae4:	eef0 2a47 	vmov.f32	s5, s14
 8019ae8:	e787      	b.n	80199fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8019aea:	140e      	asrs	r6, r1, #16
 8019aec:	d462      	bmi.n	8019bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019aee:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019af2:	42b5      	cmp	r5, r6
 8019af4:	dd5e      	ble.n	8019bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019af6:	1417      	asrs	r7, r2, #16
 8019af8:	d45c      	bmi.n	8019bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019afa:	f8de 400c 	ldr.w	r4, [lr, #12]
 8019afe:	42bc      	cmp	r4, r7
 8019b00:	dd58      	ble.n	8019bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019b02:	b22d      	sxth	r5, r5
 8019b04:	fb07 6505 	mla	r5, r7, r5, r6
 8019b08:	9c02      	ldr	r4, [sp, #8]
 8019b0a:	5d66      	ldrb	r6, [r4, r5]
 8019b0c:	2e00      	cmp	r6, #0
 8019b0e:	d051      	beq.n	8019bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019b10:	9c01      	ldr	r4, [sp, #4]
 8019b12:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8019b16:	f06f 0401 	mvn.w	r4, #1
 8019b1a:	fb04 f408 	mul.w	r4, r4, r8
 8019b1e:	9403      	str	r4, [sp, #12]
 8019b20:	5b05      	ldrh	r5, [r0, r4]
 8019b22:	9c05      	ldr	r4, [sp, #20]
 8019b24:	4366      	muls	r6, r4
 8019b26:	1c74      	adds	r4, r6, #1
 8019b28:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019b2c:	1224      	asrs	r4, r4, #8
 8019b2e:	b2a7      	uxth	r7, r4
 8019b30:	122e      	asrs	r6, r5, #8
 8019b32:	43e4      	mvns	r4, r4
 8019b34:	b2e4      	uxtb	r4, r4
 8019b36:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8019b3a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019b3e:	fb16 f604 	smulbb	r6, r6, r4
 8019b42:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019b46:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019b4a:	00ed      	lsls	r5, r5, #3
 8019b4c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019b50:	b2ed      	uxtb	r5, r5
 8019b52:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8019b56:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019b5a:	fb15 f504 	smulbb	r5, r5, r4
 8019b5e:	fa5f f989 	uxtb.w	r9, r9
 8019b62:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019b66:	fb09 5507 	mla	r5, r9, r7, r5
 8019b6a:	fb1a fa04 	smulbb	sl, sl, r4
 8019b6e:	fa1f fc8c 	uxth.w	ip, ip
 8019b72:	b2ad      	uxth	r5, r5
 8019b74:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019b78:	fb06 a607 	mla	r6, r6, r7, sl
 8019b7c:	f10c 0401 	add.w	r4, ip, #1
 8019b80:	f105 0a01 	add.w	sl, r5, #1
 8019b84:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019b88:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019b8c:	b2b6      	uxth	r6, r6
 8019b8e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019b92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019b96:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019b9a:	f106 0a01 	add.w	sl, r6, #1
 8019b9e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019ba2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019ba6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019baa:	9c03      	ldr	r4, [sp, #12]
 8019bac:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019bb0:	f820 c004 	strh.w	ip, [r0, r4]
 8019bb4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019bb6:	4421      	add	r1, r4
 8019bb8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019bba:	f108 38ff 	add.w	r8, r8, #4294967295
 8019bbe:	4422      	add	r2, r4
 8019bc0:	e750      	b.n	8019a64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019bc2:	f04f 0900 	mov.w	r9, #0
 8019bc6:	eba3 0409 	sub.w	r4, r3, r9
 8019bca:	2c00      	cmp	r4, #0
 8019bcc:	f77f af4e 	ble.w	8019a6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019bd0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019bd4:	140d      	asrs	r5, r1, #16
 8019bd6:	1414      	asrs	r4, r2, #16
 8019bd8:	fb06 5404 	mla	r4, r6, r4, r5
 8019bdc:	9d02      	ldr	r5, [sp, #8]
 8019bde:	5d2e      	ldrb	r6, [r5, r4]
 8019be0:	2e00      	cmp	r6, #0
 8019be2:	d04c      	beq.n	8019c7e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019be4:	9d01      	ldr	r5, [sp, #4]
 8019be6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8019bea:	9c05      	ldr	r4, [sp, #20]
 8019bec:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019bf0:	4366      	muls	r6, r4
 8019bf2:	1c74      	adds	r4, r6, #1
 8019bf4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019bf8:	1224      	asrs	r4, r4, #8
 8019bfa:	b2a7      	uxth	r7, r4
 8019bfc:	122e      	asrs	r6, r5, #8
 8019bfe:	43e4      	mvns	r4, r4
 8019c00:	b2e4      	uxtb	r4, r4
 8019c02:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019c06:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019c0a:	fb16 f604 	smulbb	r6, r6, r4
 8019c0e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019c12:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019c16:	00ed      	lsls	r5, r5, #3
 8019c18:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019c1c:	b2ed      	uxtb	r5, r5
 8019c1e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019c22:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019c26:	fb15 f504 	smulbb	r5, r5, r4
 8019c2a:	fa5f f888 	uxtb.w	r8, r8
 8019c2e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019c32:	fb08 5507 	mla	r5, r8, r7, r5
 8019c36:	fb1a fa04 	smulbb	sl, sl, r4
 8019c3a:	fa1f fc8c 	uxth.w	ip, ip
 8019c3e:	b2ad      	uxth	r5, r5
 8019c40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019c44:	fb06 a607 	mla	r6, r6, r7, sl
 8019c48:	f10c 0401 	add.w	r4, ip, #1
 8019c4c:	f105 0a01 	add.w	sl, r5, #1
 8019c50:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019c54:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019c58:	b2b6      	uxth	r6, r6
 8019c5a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019c5e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019c62:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019c66:	f106 0a01 	add.w	sl, r6, #1
 8019c6a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019c6e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019c72:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019c76:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019c7a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019c7e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019c80:	4421      	add	r1, r4
 8019c82:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019c84:	f109 0901 	add.w	r9, r9, #1
 8019c88:	4422      	add	r2, r4
 8019c8a:	e79c      	b.n	8019bc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8019c8c:	b007      	add	sp, #28
 8019c8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019c92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c96:	b085      	sub	sp, #20
 8019c98:	468b      	mov	fp, r1
 8019c9a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019c9c:	9203      	str	r2, [sp, #12]
 8019c9e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8019ca2:	6861      	ldr	r1, [r4, #4]
 8019ca4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019ca8:	fb01 2000 	mla	r0, r1, r0, r2
 8019cac:	6822      	ldr	r2, [r4, #0]
 8019cae:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019cb2:	f8d8 2000 	ldr.w	r2, [r8]
 8019cb6:	9200      	str	r2, [sp, #0]
 8019cb8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8019cbc:	9201      	str	r2, [sp, #4]
 8019cbe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019cc2:	f1bb 0f00 	cmp.w	fp, #0
 8019cc6:	dc03      	bgt.n	8019cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019cc8:	9a03      	ldr	r2, [sp, #12]
 8019cca:	2a00      	cmp	r2, #0
 8019ccc:	f340 8146 	ble.w	8019f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019cd0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019cd2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019cd6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019cda:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019cde:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019ce0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019ce4:	2b00      	cmp	r3, #0
 8019ce6:	dd0e      	ble.n	8019d06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019ce8:	140c      	asrs	r4, r1, #16
 8019cea:	d405      	bmi.n	8019cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019cec:	42bc      	cmp	r4, r7
 8019cee:	da03      	bge.n	8019cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019cf0:	1414      	asrs	r4, r2, #16
 8019cf2:	d401      	bmi.n	8019cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019cf4:	42b4      	cmp	r4, r6
 8019cf6:	db07      	blt.n	8019d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019cf8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019cfa:	4421      	add	r1, r4
 8019cfc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019cfe:	3b01      	subs	r3, #1
 8019d00:	4422      	add	r2, r4
 8019d02:	3002      	adds	r0, #2
 8019d04:	e7ee      	b.n	8019ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019d06:	d017      	beq.n	8019d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019d08:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019d0a:	1e5c      	subs	r4, r3, #1
 8019d0c:	fb05 1504 	mla	r5, r5, r4, r1
 8019d10:	142d      	asrs	r5, r5, #16
 8019d12:	d409      	bmi.n	8019d28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019d14:	42bd      	cmp	r5, r7
 8019d16:	da07      	bge.n	8019d28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019d18:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d1a:	fb05 2404 	mla	r4, r5, r4, r2
 8019d1e:	1424      	asrs	r4, r4, #16
 8019d20:	d402      	bmi.n	8019d28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019d22:	42b4      	cmp	r4, r6
 8019d24:	f2c0 80b3 	blt.w	8019e8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019d28:	2600      	movs	r6, #0
 8019d2a:	199c      	adds	r4, r3, r6
 8019d2c:	2c00      	cmp	r4, #0
 8019d2e:	dc3e      	bgt.n	8019dae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019d30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d34:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019d38:	f1bb 0f00 	cmp.w	fp, #0
 8019d3c:	f340 810e 	ble.w	8019f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019d40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d44:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d48:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019d4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d4e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019d52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d5a:	eeb0 6a62 	vmov.f32	s12, s5
 8019d5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d6a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019d6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d72:	eeb0 6a43 	vmov.f32	s12, s6
 8019d76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d7a:	ee12 2a90 	vmov	r2, s5
 8019d7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d82:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d86:	ee13 2a10 	vmov	r2, s6
 8019d8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d8e:	9311      	str	r3, [sp, #68]	; 0x44
 8019d90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d92:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d96:	9a03      	ldr	r2, [sp, #12]
 8019d98:	9312      	str	r3, [sp, #72]	; 0x48
 8019d9a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019d9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019da0:	eeb0 3a67 	vmov.f32	s6, s15
 8019da4:	bf08      	it	eq
 8019da6:	4613      	moveq	r3, r2
 8019da8:	eef0 2a47 	vmov.f32	s5, s14
 8019dac:	e789      	b.n	8019cc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019dae:	140f      	asrs	r7, r1, #16
 8019db0:	d418      	bmi.n	8019de4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019db2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019db6:	42bd      	cmp	r5, r7
 8019db8:	dd14      	ble.n	8019de4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019dba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019dbe:	d411      	bmi.n	8019de4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019dc0:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019dc4:	4564      	cmp	r4, ip
 8019dc6:	dd0d      	ble.n	8019de4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019dc8:	b22d      	sxth	r5, r5
 8019dca:	fb0c 7505 	mla	r5, ip, r5, r7
 8019dce:	9c01      	ldr	r4, [sp, #4]
 8019dd0:	5d64      	ldrb	r4, [r4, r5]
 8019dd2:	2cff      	cmp	r4, #255	; 0xff
 8019dd4:	d10c      	bne.n	8019df0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019dd6:	9c00      	ldr	r4, [sp, #0]
 8019dd8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8019ddc:	f06f 0401 	mvn.w	r4, #1
 8019de0:	4374      	muls	r4, r6
 8019de2:	5305      	strh	r5, [r0, r4]
 8019de4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019de6:	4421      	add	r1, r4
 8019de8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019dea:	3e01      	subs	r6, #1
 8019dec:	4422      	add	r2, r4
 8019dee:	e79c      	b.n	8019d2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019df0:	2c00      	cmp	r4, #0
 8019df2:	d0f7      	beq.n	8019de4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019df4:	9f00      	ldr	r7, [sp, #0]
 8019df6:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8019dfa:	f06f 0501 	mvn.w	r5, #1
 8019dfe:	4375      	muls	r5, r6
 8019e00:	9502      	str	r5, [sp, #8]
 8019e02:	5b45      	ldrh	r5, [r0, r5]
 8019e04:	fa1f fc84 	uxth.w	ip, r4
 8019e08:	122f      	asrs	r7, r5, #8
 8019e0a:	43e4      	mvns	r4, r4
 8019e0c:	b2e4      	uxtb	r4, r4
 8019e0e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019e12:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019e16:	fb17 f704 	smulbb	r7, r7, r4
 8019e1a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019e1e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019e22:	00ed      	lsls	r5, r5, #3
 8019e24:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019e28:	b2ed      	uxtb	r5, r5
 8019e2a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019e2e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019e32:	fb15 f504 	smulbb	r5, r5, r4
 8019e36:	fa5f f989 	uxtb.w	r9, r9
 8019e3a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019e3e:	fb09 550c 	mla	r5, r9, ip, r5
 8019e42:	fb1a fa04 	smulbb	sl, sl, r4
 8019e46:	fa1f fe8e 	uxth.w	lr, lr
 8019e4a:	b2ad      	uxth	r5, r5
 8019e4c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019e50:	fb07 a70c 	mla	r7, r7, ip, sl
 8019e54:	f10e 0401 	add.w	r4, lr, #1
 8019e58:	f105 0a01 	add.w	sl, r5, #1
 8019e5c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019e60:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019e64:	b2bf      	uxth	r7, r7
 8019e66:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019e6a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019e6e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019e72:	f107 0a01 	add.w	sl, r7, #1
 8019e76:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019e7a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019e7e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019e82:	9c02      	ldr	r4, [sp, #8]
 8019e84:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019e88:	f820 e004 	strh.w	lr, [r0, r4]
 8019e8c:	e7aa      	b.n	8019de4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019e8e:	f04f 0900 	mov.w	r9, #0
 8019e92:	eba3 0409 	sub.w	r4, r3, r9
 8019e96:	2c00      	cmp	r4, #0
 8019e98:	f77f af4a 	ble.w	8019d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019e9c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019ea0:	1414      	asrs	r4, r2, #16
 8019ea2:	140d      	asrs	r5, r1, #16
 8019ea4:	fb06 5504 	mla	r5, r6, r4, r5
 8019ea8:	9c01      	ldr	r4, [sp, #4]
 8019eaa:	5d64      	ldrb	r4, [r4, r5]
 8019eac:	2cff      	cmp	r4, #255	; 0xff
 8019eae:	d10b      	bne.n	8019ec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019eb0:	9c00      	ldr	r4, [sp, #0]
 8019eb2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019eb6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8019eba:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019ebc:	4421      	add	r1, r4
 8019ebe:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019ec0:	f109 0901 	add.w	r9, r9, #1
 8019ec4:	4422      	add	r2, r4
 8019ec6:	e7e4      	b.n	8019e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019ec8:	2c00      	cmp	r4, #0
 8019eca:	d0f6      	beq.n	8019eba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019ecc:	9e00      	ldr	r6, [sp, #0]
 8019ece:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019ed2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019ed6:	b2a7      	uxth	r7, r4
 8019ed8:	122e      	asrs	r6, r5, #8
 8019eda:	43e4      	mvns	r4, r4
 8019edc:	b2e4      	uxtb	r4, r4
 8019ede:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019ee2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019ee6:	fb16 f604 	smulbb	r6, r6, r4
 8019eea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019eee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019ef2:	00ed      	lsls	r5, r5, #3
 8019ef4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019ef8:	b2ed      	uxtb	r5, r5
 8019efa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019efe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019f02:	fb15 f504 	smulbb	r5, r5, r4
 8019f06:	fa5f fe8e 	uxtb.w	lr, lr
 8019f0a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019f0e:	fb0e 5507 	mla	r5, lr, r7, r5
 8019f12:	fb1a fa04 	smulbb	sl, sl, r4
 8019f16:	fa1f fc8c 	uxth.w	ip, ip
 8019f1a:	b2ad      	uxth	r5, r5
 8019f1c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019f20:	fb06 a607 	mla	r6, r6, r7, sl
 8019f24:	f10c 0401 	add.w	r4, ip, #1
 8019f28:	f105 0a01 	add.w	sl, r5, #1
 8019f2c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019f30:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019f34:	b2b6      	uxth	r6, r6
 8019f36:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019f3a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019f3e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019f42:	f106 0a01 	add.w	sl, r6, #1
 8019f46:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019f4a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019f4e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019f52:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019f56:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019f5a:	e7ae      	b.n	8019eba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019f5c:	b005      	add	sp, #20
 8019f5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f62 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f66:	b085      	sub	sp, #20
 8019f68:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019f6a:	9203      	str	r2, [sp, #12]
 8019f6c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8019f70:	9201      	str	r2, [sp, #4]
 8019f72:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019f76:	9100      	str	r1, [sp, #0]
 8019f78:	6841      	ldr	r1, [r0, #4]
 8019f7a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019f7e:	fb01 2404 	mla	r4, r1, r4, r2
 8019f82:	6802      	ldr	r2, [r0, #0]
 8019f84:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019f88:	f8de 2000 	ldr.w	r2, [lr]
 8019f8c:	9202      	str	r2, [sp, #8]
 8019f8e:	9a01      	ldr	r2, [sp, #4]
 8019f90:	43d6      	mvns	r6, r2
 8019f92:	b2f6      	uxtb	r6, r6
 8019f94:	9a00      	ldr	r2, [sp, #0]
 8019f96:	2a00      	cmp	r2, #0
 8019f98:	dc03      	bgt.n	8019fa2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019f9a:	9a03      	ldr	r2, [sp, #12]
 8019f9c:	2a00      	cmp	r2, #0
 8019f9e:	f340 8124 	ble.w	801a1ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019fa2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019fa4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019fa8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019fac:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019fb0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019fb2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019fb6:	2b00      	cmp	r3, #0
 8019fb8:	dd0e      	ble.n	8019fd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019fba:	1408      	asrs	r0, r1, #16
 8019fbc:	d405      	bmi.n	8019fca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019fbe:	4560      	cmp	r0, ip
 8019fc0:	da03      	bge.n	8019fca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019fc2:	1410      	asrs	r0, r2, #16
 8019fc4:	d401      	bmi.n	8019fca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019fc6:	42b8      	cmp	r0, r7
 8019fc8:	db07      	blt.n	8019fda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019fca:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019fcc:	4401      	add	r1, r0
 8019fce:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019fd0:	3b01      	subs	r3, #1
 8019fd2:	4402      	add	r2, r0
 8019fd4:	3402      	adds	r4, #2
 8019fd6:	e7ee      	b.n	8019fb6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019fd8:	d06e      	beq.n	801a0b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019fda:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019fdc:	1e58      	subs	r0, r3, #1
 8019fde:	fb05 1500 	mla	r5, r5, r0, r1
 8019fe2:	142d      	asrs	r5, r5, #16
 8019fe4:	d45c      	bmi.n	801a0a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019fe6:	4565      	cmp	r5, ip
 8019fe8:	da5a      	bge.n	801a0a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019fea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019fec:	fb05 2000 	mla	r0, r5, r0, r2
 8019ff0:	1400      	asrs	r0, r0, #16
 8019ff2:	d455      	bmi.n	801a0a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019ff4:	42b8      	cmp	r0, r7
 8019ff6:	da53      	bge.n	801a0a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019ff8:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8019ffc:	4699      	mov	r9, r3
 8019ffe:	46a2      	mov	sl, r4
 801a000:	f1b9 0f00 	cmp.w	r9, #0
 801a004:	dd54      	ble.n	801a0b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a006:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a00a:	140d      	asrs	r5, r1, #16
 801a00c:	1410      	asrs	r0, r2, #16
 801a00e:	fb07 5000 	mla	r0, r7, r0, r5
 801a012:	9d02      	ldr	r5, [sp, #8]
 801a014:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a018:	f8ba 5000 	ldrh.w	r5, [sl]
 801a01c:	122f      	asrs	r7, r5, #8
 801a01e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a022:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a026:	fb17 f706 	smulbb	r7, r7, r6
 801a02a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a02e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a032:	00ed      	lsls	r5, r5, #3
 801a034:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a038:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a03c:	10c7      	asrs	r7, r0, #3
 801a03e:	b2ed      	uxtb	r5, r5
 801a040:	00c0      	lsls	r0, r0, #3
 801a042:	fb18 f806 	smulbb	r8, r8, r6
 801a046:	fb15 f506 	smulbb	r5, r5, r6
 801a04a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a04e:	b2c0      	uxtb	r0, r0
 801a050:	fa1f fc8c 	uxth.w	ip, ip
 801a054:	fb07 870b 	mla	r7, r7, fp, r8
 801a058:	fb00 500b 	mla	r0, r0, fp, r5
 801a05c:	b280      	uxth	r0, r0
 801a05e:	b2bf      	uxth	r7, r7
 801a060:	f10c 0501 	add.w	r5, ip, #1
 801a064:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a068:	f107 0801 	add.w	r8, r7, #1
 801a06c:	1c45      	adds	r5, r0, #1
 801a06e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a072:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a076:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a078:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a07c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a080:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a084:	ea45 0c0c 	orr.w	ip, r5, ip
 801a088:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a08c:	4401      	add	r1, r0
 801a08e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a090:	ea4c 0c08 	orr.w	ip, ip, r8
 801a094:	f82a cb02 	strh.w	ip, [sl], #2
 801a098:	4402      	add	r2, r0
 801a09a:	f109 39ff 	add.w	r9, r9, #4294967295
 801a09e:	e7af      	b.n	801a000 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a0a0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801a0a4:	f04f 0800 	mov.w	r8, #0
 801a0a8:	eb03 0008 	add.w	r0, r3, r8
 801a0ac:	2800      	cmp	r0, #0
 801a0ae:	dc41      	bgt.n	801a134 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a0b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a0b4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a0b8:	9b00      	ldr	r3, [sp, #0]
 801a0ba:	2b00      	cmp	r3, #0
 801a0bc:	f340 8095 	ble.w	801a1ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a0c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a0c4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a0c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a0cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a0ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a0d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a0d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a0da:	eef0 6a62 	vmov.f32	s13, s5
 801a0de:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a0e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a0e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a0ea:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801a0ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a0f2:	eef0 6a43 	vmov.f32	s13, s6
 801a0f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a0fa:	ee12 2a90 	vmov	r2, s5
 801a0fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a102:	fb92 f3f3 	sdiv	r3, r2, r3
 801a106:	ee13 2a10 	vmov	r2, s6
 801a10a:	9311      	str	r3, [sp, #68]	; 0x44
 801a10c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a10e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a112:	9312      	str	r3, [sp, #72]	; 0x48
 801a114:	9b00      	ldr	r3, [sp, #0]
 801a116:	9a03      	ldr	r2, [sp, #12]
 801a118:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a11c:	3b01      	subs	r3, #1
 801a11e:	9300      	str	r3, [sp, #0]
 801a120:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801a124:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a126:	eeb0 3a67 	vmov.f32	s6, s15
 801a12a:	bf08      	it	eq
 801a12c:	4613      	moveq	r3, r2
 801a12e:	eef0 2a47 	vmov.f32	s5, s14
 801a132:	e72f      	b.n	8019f94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a134:	140f      	asrs	r7, r1, #16
 801a136:	d451      	bmi.n	801a1dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a138:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a13c:	42bd      	cmp	r5, r7
 801a13e:	dd4d      	ble.n	801a1dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a140:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a144:	d44a      	bmi.n	801a1dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a146:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a14a:	4560      	cmp	r0, ip
 801a14c:	dd46      	ble.n	801a1dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a14e:	b22d      	sxth	r5, r5
 801a150:	fb0c 7505 	mla	r5, ip, r5, r7
 801a154:	9802      	ldr	r0, [sp, #8]
 801a156:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801a15a:	f06f 0501 	mvn.w	r5, #1
 801a15e:	fb05 fb08 	mul.w	fp, r5, r8
 801a162:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a166:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a16a:	122f      	asrs	r7, r5, #8
 801a16c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a170:	fb17 f706 	smulbb	r7, r7, r6
 801a174:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a178:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a17c:	00ed      	lsls	r5, r5, #3
 801a17e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a182:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a186:	10c7      	asrs	r7, r0, #3
 801a188:	b2ed      	uxtb	r5, r5
 801a18a:	00c0      	lsls	r0, r0, #3
 801a18c:	fb19 f906 	smulbb	r9, r9, r6
 801a190:	fb15 f506 	smulbb	r5, r5, r6
 801a194:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a198:	b2c0      	uxtb	r0, r0
 801a19a:	fa1f fc8c 	uxth.w	ip, ip
 801a19e:	fb07 970a 	mla	r7, r7, sl, r9
 801a1a2:	fb00 500a 	mla	r0, r0, sl, r5
 801a1a6:	b2bf      	uxth	r7, r7
 801a1a8:	b280      	uxth	r0, r0
 801a1aa:	f10c 0501 	add.w	r5, ip, #1
 801a1ae:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a1b2:	f107 0901 	add.w	r9, r7, #1
 801a1b6:	1c45      	adds	r5, r0, #1
 801a1b8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a1bc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a1c0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a1c4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a1c8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a1cc:	ea45 0c0c 	orr.w	ip, r5, ip
 801a1d0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a1d4:	ea4c 0c09 	orr.w	ip, ip, r9
 801a1d8:	f824 c00b 	strh.w	ip, [r4, fp]
 801a1dc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a1de:	4401      	add	r1, r0
 801a1e0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a1e2:	f108 38ff 	add.w	r8, r8, #4294967295
 801a1e6:	4402      	add	r2, r0
 801a1e8:	e75e      	b.n	801a0a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801a1ea:	b005      	add	sp, #20
 801a1ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a1f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a1f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1f4:	b085      	sub	sp, #20
 801a1f6:	4693      	mov	fp, r2
 801a1f8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a1fa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a1fc:	6870      	ldr	r0, [r6, #4]
 801a1fe:	9101      	str	r1, [sp, #4]
 801a200:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a204:	fb00 2404 	mla	r4, r0, r4, r2
 801a208:	6832      	ldr	r2, [r6, #0]
 801a20a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a20e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a212:	682a      	ldr	r2, [r5, #0]
 801a214:	9202      	str	r2, [sp, #8]
 801a216:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a21a:	9a01      	ldr	r2, [sp, #4]
 801a21c:	2a00      	cmp	r2, #0
 801a21e:	dc03      	bgt.n	801a228 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a220:	f1bb 0f00 	cmp.w	fp, #0
 801a224:	f340 809a 	ble.w	801a35c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a228:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a22a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a22e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a232:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a236:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a238:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a23c:	2b00      	cmp	r3, #0
 801a23e:	dd0c      	ble.n	801a25a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801a240:	1406      	asrs	r6, r0, #16
 801a242:	d405      	bmi.n	801a250 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a244:	454e      	cmp	r6, r9
 801a246:	da03      	bge.n	801a250 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a248:	1416      	asrs	r6, r2, #16
 801a24a:	d401      	bmi.n	801a250 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a24c:	4546      	cmp	r6, r8
 801a24e:	db05      	blt.n	801a25c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a250:	4470      	add	r0, lr
 801a252:	4462      	add	r2, ip
 801a254:	3b01      	subs	r3, #1
 801a256:	3402      	adds	r4, #2
 801a258:	e7f0      	b.n	801a23c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a25a:	d00f      	beq.n	801a27c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a25c:	1e5e      	subs	r6, r3, #1
 801a25e:	fb0e 0706 	mla	r7, lr, r6, r0
 801a262:	143f      	asrs	r7, r7, #16
 801a264:	d541      	bpl.n	801a2ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801a266:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a26a:	4698      	mov	r8, r3
 801a26c:	9603      	str	r6, [sp, #12]
 801a26e:	f1b8 0f00 	cmp.w	r8, #0
 801a272:	dc56      	bgt.n	801a322 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801a274:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a278:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a27c:	9b01      	ldr	r3, [sp, #4]
 801a27e:	2b00      	cmp	r3, #0
 801a280:	dd6c      	ble.n	801a35c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a282:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a286:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a28a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a28e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a290:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a294:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a298:	eeb0 6a62 	vmov.f32	s12, s5
 801a29c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a2a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a2a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a2a8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a2ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a2b0:	eeb0 6a43 	vmov.f32	s12, s6
 801a2b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a2b8:	ee12 2a90 	vmov	r2, s5
 801a2bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a2c0:	fb92 fef3 	sdiv	lr, r2, r3
 801a2c4:	ee13 2a10 	vmov	r2, s6
 801a2c8:	fb92 fcf3 	sdiv	ip, r2, r3
 801a2cc:	9b01      	ldr	r3, [sp, #4]
 801a2ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a2d2:	3b01      	subs	r3, #1
 801a2d4:	9301      	str	r3, [sp, #4]
 801a2d6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a2da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a2dc:	eeb0 3a67 	vmov.f32	s6, s15
 801a2e0:	bf08      	it	eq
 801a2e2:	465b      	moveq	r3, fp
 801a2e4:	eef0 2a47 	vmov.f32	s5, s14
 801a2e8:	e797      	b.n	801a21a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a2ea:	454f      	cmp	r7, r9
 801a2ec:	dabb      	bge.n	801a266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a2ee:	fb0c 2606 	mla	r6, ip, r6, r2
 801a2f2:	1436      	asrs	r6, r6, #16
 801a2f4:	d4b7      	bmi.n	801a266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a2f6:	4546      	cmp	r6, r8
 801a2f8:	dab5      	bge.n	801a266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a2fa:	461e      	mov	r6, r3
 801a2fc:	46a0      	mov	r8, r4
 801a2fe:	2e00      	cmp	r6, #0
 801a300:	ddb8      	ble.n	801a274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a302:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a306:	9902      	ldr	r1, [sp, #8]
 801a308:	1417      	asrs	r7, r2, #16
 801a30a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a30e:	fb0a 9707 	mla	r7, sl, r7, r9
 801a312:	4470      	add	r0, lr
 801a314:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a318:	f828 7b02 	strh.w	r7, [r8], #2
 801a31c:	4462      	add	r2, ip
 801a31e:	3e01      	subs	r6, #1
 801a320:	e7ed      	b.n	801a2fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a322:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a326:	d414      	bmi.n	801a352 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a328:	68ae      	ldr	r6, [r5, #8]
 801a32a:	454e      	cmp	r6, r9
 801a32c:	dd11      	ble.n	801a352 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a32e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a332:	d40e      	bmi.n	801a352 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a334:	68ef      	ldr	r7, [r5, #12]
 801a336:	4557      	cmp	r7, sl
 801a338:	dd0b      	ble.n	801a352 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a33a:	b236      	sxth	r6, r6
 801a33c:	fb0a 9606 	mla	r6, sl, r6, r9
 801a340:	9f02      	ldr	r7, [sp, #8]
 801a342:	f06f 0101 	mvn.w	r1, #1
 801a346:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a34a:	fb01 f608 	mul.w	r6, r1, r8
 801a34e:	9903      	ldr	r1, [sp, #12]
 801a350:	538f      	strh	r7, [r1, r6]
 801a352:	4470      	add	r0, lr
 801a354:	4462      	add	r2, ip
 801a356:	f108 38ff 	add.w	r8, r8, #4294967295
 801a35a:	e788      	b.n	801a26e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a35c:	b005      	add	sp, #20
 801a35e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a362 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a362:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a366:	b087      	sub	sp, #28
 801a368:	468b      	mov	fp, r1
 801a36a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a36c:	9203      	str	r2, [sp, #12]
 801a36e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a372:	9204      	str	r2, [sp, #16]
 801a374:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a378:	6841      	ldr	r1, [r0, #4]
 801a37a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a37e:	fb01 2505 	mla	r5, r1, r5, r2
 801a382:	6802      	ldr	r2, [r0, #0]
 801a384:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a388:	f8d9 2000 	ldr.w	r2, [r9]
 801a38c:	9201      	str	r2, [sp, #4]
 801a38e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a392:	f1bb 0f00 	cmp.w	fp, #0
 801a396:	dc03      	bgt.n	801a3a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a398:	9a03      	ldr	r2, [sp, #12]
 801a39a:	2a00      	cmp	r2, #0
 801a39c:	f340 8159 	ble.w	801a652 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a3a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a3a2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a3a6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a3aa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a3ae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a3b0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a3b4:	2b00      	cmp	r3, #0
 801a3b6:	dd0e      	ble.n	801a3d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a3b8:	1402      	asrs	r2, r0, #16
 801a3ba:	d405      	bmi.n	801a3c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a3bc:	42ba      	cmp	r2, r7
 801a3be:	da03      	bge.n	801a3c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a3c0:	140a      	asrs	r2, r1, #16
 801a3c2:	d401      	bmi.n	801a3c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a3c4:	42b2      	cmp	r2, r6
 801a3c6:	db07      	blt.n	801a3d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a3c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a3ca:	4410      	add	r0, r2
 801a3cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a3ce:	3b01      	subs	r3, #1
 801a3d0:	4411      	add	r1, r2
 801a3d2:	3502      	adds	r5, #2
 801a3d4:	e7ee      	b.n	801a3b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a3d6:	d017      	beq.n	801a408 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a3d8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a3da:	1e5a      	subs	r2, r3, #1
 801a3dc:	fb04 0402 	mla	r4, r4, r2, r0
 801a3e0:	1424      	asrs	r4, r4, #16
 801a3e2:	d409      	bmi.n	801a3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a3e4:	42bc      	cmp	r4, r7
 801a3e6:	da07      	bge.n	801a3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a3e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a3ea:	fb04 1202 	mla	r2, r4, r2, r1
 801a3ee:	1412      	asrs	r2, r2, #16
 801a3f0:	d402      	bmi.n	801a3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a3f2:	42b2      	cmp	r2, r6
 801a3f4:	f2c0 80bf 	blt.w	801a576 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a3f8:	2700      	movs	r7, #0
 801a3fa:	19da      	adds	r2, r3, r7
 801a3fc:	2a00      	cmp	r2, #0
 801a3fe:	dc3e      	bgt.n	801a47e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a400:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a404:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a408:	f1bb 0f00 	cmp.w	fp, #0
 801a40c:	f340 8121 	ble.w	801a652 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a410:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a414:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a418:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a41c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a41e:	f1bb 0b01 	subs.w	fp, fp, #1
 801a422:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a426:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a42a:	eeb0 6a62 	vmov.f32	s12, s5
 801a42e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a432:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a436:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a43a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a43e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a442:	eeb0 6a43 	vmov.f32	s12, s6
 801a446:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a44a:	ee12 2a90 	vmov	r2, s5
 801a44e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a452:	fb92 f3f3 	sdiv	r3, r2, r3
 801a456:	ee13 2a10 	vmov	r2, s6
 801a45a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a45e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a460:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a462:	fb92 f3f3 	sdiv	r3, r2, r3
 801a466:	9a03      	ldr	r2, [sp, #12]
 801a468:	9314      	str	r3, [sp, #80]	; 0x50
 801a46a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a46e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a470:	eeb0 3a67 	vmov.f32	s6, s15
 801a474:	bf08      	it	eq
 801a476:	4613      	moveq	r3, r2
 801a478:	eef0 2a47 	vmov.f32	s5, s14
 801a47c:	e789      	b.n	801a392 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a47e:	1406      	asrs	r6, r0, #16
 801a480:	d42d      	bmi.n	801a4de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a482:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a486:	42b4      	cmp	r4, r6
 801a488:	dd29      	ble.n	801a4de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a48a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a48e:	d426      	bmi.n	801a4de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a490:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a494:	4562      	cmp	r2, ip
 801a496:	dd22      	ble.n	801a4de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a498:	b224      	sxth	r4, r4
 801a49a:	9a01      	ldr	r2, [sp, #4]
 801a49c:	fb0c 6404 	mla	r4, ip, r4, r6
 801a4a0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a4a4:	0e22      	lsrs	r2, r4, #24
 801a4a6:	d01a      	beq.n	801a4de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a4a8:	9e04      	ldr	r6, [sp, #16]
 801a4aa:	4372      	muls	r2, r6
 801a4ac:	1c56      	adds	r6, r2, #1
 801a4ae:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a4b2:	1212      	asrs	r2, r2, #8
 801a4b4:	0a26      	lsrs	r6, r4, #8
 801a4b6:	2aff      	cmp	r2, #255	; 0xff
 801a4b8:	9605      	str	r6, [sp, #20]
 801a4ba:	d116      	bne.n	801a4ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a4bc:	f06f 0201 	mvn.w	r2, #1
 801a4c0:	fb02 fc07 	mul.w	ip, r2, r7
 801a4c4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a4c8:	0962      	lsrs	r2, r4, #5
 801a4ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a4ce:	f026 0607 	bic.w	r6, r6, #7
 801a4d2:	4316      	orrs	r6, r2
 801a4d4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a4d8:	4326      	orrs	r6, r4
 801a4da:	f825 600c 	strh.w	r6, [r5, ip]
 801a4de:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a4e0:	4410      	add	r0, r2
 801a4e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a4e4:	3f01      	subs	r7, #1
 801a4e6:	4411      	add	r1, r2
 801a4e8:	e787      	b.n	801a3fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a4ea:	f06f 0601 	mvn.w	r6, #1
 801a4ee:	437e      	muls	r6, r7
 801a4f0:	fa1f fa82 	uxth.w	sl, r2
 801a4f4:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a4f8:	9602      	str	r6, [sp, #8]
 801a4fa:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a4fe:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a502:	43d2      	mvns	r2, r2
 801a504:	b2d2      	uxtb	r2, r2
 801a506:	fb1c fc0a 	smulbb	ip, ip, sl
 801a50a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a50e:	fb0e ce02 	mla	lr, lr, r2, ip
 801a512:	b2e4      	uxtb	r4, r4
 801a514:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a518:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a51c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a520:	fa5f f888 	uxtb.w	r8, r8
 801a524:	fb14 f40a 	smulbb	r4, r4, sl
 801a528:	fb08 4402 	mla	r4, r8, r2, r4
 801a52c:	fa1f fe8e 	uxth.w	lr, lr
 801a530:	fb16 f60a 	smulbb	r6, r6, sl
 801a534:	b2a4      	uxth	r4, r4
 801a536:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a53a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a53e:	f10e 0201 	add.w	r2, lr, #1
 801a542:	1c66      	adds	r6, r4, #1
 801a544:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a548:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a54c:	fa1f fc8c 	uxth.w	ip, ip
 801a550:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a554:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a558:	ea46 0e0e 	orr.w	lr, r6, lr
 801a55c:	f10c 0601 	add.w	r6, ip, #1
 801a560:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a564:	0976      	lsrs	r6, r6, #5
 801a566:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a56a:	9a02      	ldr	r2, [sp, #8]
 801a56c:	ea4e 0e06 	orr.w	lr, lr, r6
 801a570:	f825 e002 	strh.w	lr, [r5, r2]
 801a574:	e7b3      	b.n	801a4de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a576:	f04f 0800 	mov.w	r8, #0
 801a57a:	eba3 0208 	sub.w	r2, r3, r8
 801a57e:	2a00      	cmp	r2, #0
 801a580:	f77f af3e 	ble.w	801a400 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a584:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801a588:	1404      	asrs	r4, r0, #16
 801a58a:	140a      	asrs	r2, r1, #16
 801a58c:	fb06 4202 	mla	r2, r6, r2, r4
 801a590:	9c01      	ldr	r4, [sp, #4]
 801a592:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801a596:	0e22      	lsrs	r2, r4, #24
 801a598:	d016      	beq.n	801a5c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a59a:	9e04      	ldr	r6, [sp, #16]
 801a59c:	4372      	muls	r2, r6
 801a59e:	1c56      	adds	r6, r2, #1
 801a5a0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a5a4:	1212      	asrs	r2, r2, #8
 801a5a6:	2aff      	cmp	r2, #255	; 0xff
 801a5a8:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801a5ac:	d113      	bne.n	801a5d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801a5ae:	0962      	lsrs	r2, r4, #5
 801a5b0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a5b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a5b8:	f026 0607 	bic.w	r6, r6, #7
 801a5bc:	4316      	orrs	r6, r2
 801a5be:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a5c2:	4326      	orrs	r6, r4
 801a5c4:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801a5c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a5ca:	4410      	add	r0, r2
 801a5cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a5ce:	f108 0801 	add.w	r8, r8, #1
 801a5d2:	4411      	add	r1, r2
 801a5d4:	e7d1      	b.n	801a57a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a5d6:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801a5da:	fa1f fa82 	uxth.w	sl, r2
 801a5de:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a5e2:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801a5e6:	43d2      	mvns	r2, r2
 801a5e8:	b2d2      	uxtb	r2, r2
 801a5ea:	fb17 f70a 	smulbb	r7, r7, sl
 801a5ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a5f2:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a5f6:	b2e4      	uxtb	r4, r4
 801a5f8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a5fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a600:	fa5f fe8e 	uxtb.w	lr, lr
 801a604:	fb14 f40a 	smulbb	r4, r4, sl
 801a608:	fb0e 4402 	mla	r4, lr, r2, r4
 801a60c:	b2f6      	uxtb	r6, r6
 801a60e:	fa1f fc8c 	uxth.w	ip, ip
 801a612:	fb16 f60a 	smulbb	r6, r6, sl
 801a616:	b2a4      	uxth	r4, r4
 801a618:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a61c:	fb07 6702 	mla	r7, r7, r2, r6
 801a620:	f10c 0201 	add.w	r2, ip, #1
 801a624:	1c66      	adds	r6, r4, #1
 801a626:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a62a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a62e:	b2bf      	uxth	r7, r7
 801a630:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a634:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a638:	ea46 0c0c 	orr.w	ip, r6, ip
 801a63c:	1c7e      	adds	r6, r7, #1
 801a63e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a642:	0976      	lsrs	r6, r6, #5
 801a644:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a648:	ea4c 0c06 	orr.w	ip, ip, r6
 801a64c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801a650:	e7ba      	b.n	801a5c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a652:	b007      	add	sp, #28
 801a654:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a658 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a65c:	b085      	sub	sp, #20
 801a65e:	468b      	mov	fp, r1
 801a660:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a662:	9203      	str	r2, [sp, #12]
 801a664:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a668:	6841      	ldr	r1, [r0, #4]
 801a66a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a66e:	fb01 2404 	mla	r4, r1, r4, r2
 801a672:	6802      	ldr	r2, [r0, #0]
 801a674:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a678:	f8d8 2000 	ldr.w	r2, [r8]
 801a67c:	9201      	str	r2, [sp, #4]
 801a67e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a682:	f1bb 0f00 	cmp.w	fp, #0
 801a686:	dc03      	bgt.n	801a690 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a688:	9a03      	ldr	r2, [sp, #12]
 801a68a:	2a00      	cmp	r2, #0
 801a68c:	f340 814f 	ble.w	801a92e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a690:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a692:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a696:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a69a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a69e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a6a0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a6a4:	2b00      	cmp	r3, #0
 801a6a6:	dd0e      	ble.n	801a6c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a6a8:	1408      	asrs	r0, r1, #16
 801a6aa:	d405      	bmi.n	801a6b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a6ac:	42b8      	cmp	r0, r7
 801a6ae:	da03      	bge.n	801a6b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a6b0:	1410      	asrs	r0, r2, #16
 801a6b2:	d401      	bmi.n	801a6b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a6b4:	42b0      	cmp	r0, r6
 801a6b6:	db07      	blt.n	801a6c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a6b8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a6ba:	4401      	add	r1, r0
 801a6bc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a6be:	3b01      	subs	r3, #1
 801a6c0:	4402      	add	r2, r0
 801a6c2:	3402      	adds	r4, #2
 801a6c4:	e7ee      	b.n	801a6a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a6c6:	d017      	beq.n	801a6f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a6c8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a6ca:	1e58      	subs	r0, r3, #1
 801a6cc:	fb05 1500 	mla	r5, r5, r0, r1
 801a6d0:	142d      	asrs	r5, r5, #16
 801a6d2:	d409      	bmi.n	801a6e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a6d4:	42bd      	cmp	r5, r7
 801a6d6:	da07      	bge.n	801a6e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a6d8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a6da:	fb05 2000 	mla	r0, r5, r0, r2
 801a6de:	1400      	asrs	r0, r0, #16
 801a6e0:	d402      	bmi.n	801a6e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a6e2:	42b0      	cmp	r0, r6
 801a6e4:	f2c0 80ba 	blt.w	801a85c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a6e8:	2600      	movs	r6, #0
 801a6ea:	1998      	adds	r0, r3, r6
 801a6ec:	2800      	cmp	r0, #0
 801a6ee:	dc3e      	bgt.n	801a76e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a6f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a6f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a6f8:	f1bb 0f00 	cmp.w	fp, #0
 801a6fc:	f340 8117 	ble.w	801a92e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a700:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a704:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a708:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a70c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a70e:	f1bb 0b01 	subs.w	fp, fp, #1
 801a712:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a716:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a71a:	eeb0 6a62 	vmov.f32	s12, s5
 801a71e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a722:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a726:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a72a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a72e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a732:	eeb0 6a43 	vmov.f32	s12, s6
 801a736:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a73a:	ee12 2a90 	vmov	r2, s5
 801a73e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a742:	fb92 f3f3 	sdiv	r3, r2, r3
 801a746:	ee13 2a10 	vmov	r2, s6
 801a74a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a74e:	9311      	str	r3, [sp, #68]	; 0x44
 801a750:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a752:	fb92 f3f3 	sdiv	r3, r2, r3
 801a756:	9a03      	ldr	r2, [sp, #12]
 801a758:	9312      	str	r3, [sp, #72]	; 0x48
 801a75a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a75e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a760:	eeb0 3a67 	vmov.f32	s6, s15
 801a764:	bf08      	it	eq
 801a766:	4613      	moveq	r3, r2
 801a768:	eef0 2a47 	vmov.f32	s5, s14
 801a76c:	e789      	b.n	801a682 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a76e:	140f      	asrs	r7, r1, #16
 801a770:	d424      	bmi.n	801a7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a772:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a776:	42bd      	cmp	r5, r7
 801a778:	dd20      	ble.n	801a7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a77a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a77e:	d41d      	bmi.n	801a7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a780:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a784:	4560      	cmp	r0, ip
 801a786:	dd19      	ble.n	801a7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a788:	b22d      	sxth	r5, r5
 801a78a:	fb0c 7505 	mla	r5, ip, r5, r7
 801a78e:	9801      	ldr	r0, [sp, #4]
 801a790:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a794:	0e07      	lsrs	r7, r0, #24
 801a796:	2fff      	cmp	r7, #255	; 0xff
 801a798:	d116      	bne.n	801a7c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a79a:	f06f 0501 	mvn.w	r5, #1
 801a79e:	fb05 f706 	mul.w	r7, r5, r6
 801a7a2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a7a6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a7aa:	0945      	lsrs	r5, r0, #5
 801a7ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a7b0:	ea4c 0505 	orr.w	r5, ip, r5
 801a7b4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a7b8:	4305      	orrs	r5, r0
 801a7ba:	53e5      	strh	r5, [r4, r7]
 801a7bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a7be:	4401      	add	r1, r0
 801a7c0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a7c2:	3e01      	subs	r6, #1
 801a7c4:	4402      	add	r2, r0
 801a7c6:	e790      	b.n	801a6ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a7c8:	b2fd      	uxtb	r5, r7
 801a7ca:	2f00      	cmp	r7, #0
 801a7cc:	d0f6      	beq.n	801a7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a7ce:	f06f 0701 	mvn.w	r7, #1
 801a7d2:	4377      	muls	r7, r6
 801a7d4:	fa1f f985 	uxth.w	r9, r5
 801a7d8:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a7dc:	9702      	str	r7, [sp, #8]
 801a7de:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a7e2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a7e6:	43ed      	mvns	r5, r5
 801a7e8:	b2ed      	uxtb	r5, r5
 801a7ea:	fb17 f709 	smulbb	r7, r7, r9
 801a7ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a7f2:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a7f6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a7fa:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a7fe:	b2c0      	uxtb	r0, r0
 801a800:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a804:	fa5f fe8e 	uxtb.w	lr, lr
 801a808:	fb10 f009 	smulbb	r0, r0, r9
 801a80c:	fb0e 0005 	mla	r0, lr, r5, r0
 801a810:	b280      	uxth	r0, r0
 801a812:	fa1f fc8c 	uxth.w	ip, ip
 801a816:	fb1a fa09 	smulbb	sl, sl, r9
 801a81a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a81e:	fb07 a705 	mla	r7, r7, r5, sl
 801a822:	f100 0a01 	add.w	sl, r0, #1
 801a826:	f10c 0501 	add.w	r5, ip, #1
 801a82a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a82e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a832:	b2bf      	uxth	r7, r7
 801a834:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a838:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a83c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a840:	f107 0a01 	add.w	sl, r7, #1
 801a844:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a848:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a84c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a850:	9802      	ldr	r0, [sp, #8]
 801a852:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a856:	f824 c000 	strh.w	ip, [r4, r0]
 801a85a:	e7af      	b.n	801a7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a85c:	f04f 0e00 	mov.w	lr, #0
 801a860:	eba3 000e 	sub.w	r0, r3, lr
 801a864:	2800      	cmp	r0, #0
 801a866:	f77f af43 	ble.w	801a6f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a86a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a86e:	140d      	asrs	r5, r1, #16
 801a870:	1410      	asrs	r0, r2, #16
 801a872:	fb06 5000 	mla	r0, r6, r0, r5
 801a876:	9d01      	ldr	r5, [sp, #4]
 801a878:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a87c:	0e2e      	lsrs	r6, r5, #24
 801a87e:	2eff      	cmp	r6, #255	; 0xff
 801a880:	d112      	bne.n	801a8a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a882:	482c      	ldr	r0, [pc, #176]	; (801a934 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a884:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a888:	0968      	lsrs	r0, r5, #5
 801a88a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a88e:	4330      	orrs	r0, r6
 801a890:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a894:	4328      	orrs	r0, r5
 801a896:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a89a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a89c:	4401      	add	r1, r0
 801a89e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a8a0:	f10e 0e01 	add.w	lr, lr, #1
 801a8a4:	4402      	add	r2, r0
 801a8a6:	e7db      	b.n	801a860 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a8a8:	b2f0      	uxtb	r0, r6
 801a8aa:	2e00      	cmp	r6, #0
 801a8ac:	d0f5      	beq.n	801a89a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a8ae:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a8b2:	fa1f f980 	uxth.w	r9, r0
 801a8b6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a8ba:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a8be:	43c0      	mvns	r0, r0
 801a8c0:	b2c0      	uxtb	r0, r0
 801a8c2:	fb16 f609 	smulbb	r6, r6, r9
 801a8c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a8ca:	fb07 6700 	mla	r7, r7, r0, r6
 801a8ce:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a8d2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a8d6:	b2ed      	uxtb	r5, r5
 801a8d8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a8dc:	fa5f fc8c 	uxtb.w	ip, ip
 801a8e0:	fb15 f509 	smulbb	r5, r5, r9
 801a8e4:	fb0c 5500 	mla	r5, ip, r0, r5
 801a8e8:	b2bf      	uxth	r7, r7
 801a8ea:	fb1a fa09 	smulbb	sl, sl, r9
 801a8ee:	b2ad      	uxth	r5, r5
 801a8f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a8f4:	fb06 a600 	mla	r6, r6, r0, sl
 801a8f8:	1c78      	adds	r0, r7, #1
 801a8fa:	f105 0a01 	add.w	sl, r5, #1
 801a8fe:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a902:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a906:	b2b6      	uxth	r6, r6
 801a908:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a90c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a910:	ea4a 0707 	orr.w	r7, sl, r7
 801a914:	f106 0a01 	add.w	sl, r6, #1
 801a918:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a91c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a920:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a924:	ea47 070a 	orr.w	r7, r7, sl
 801a928:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a92c:	e7b5      	b.n	801a89a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a92e:	b005      	add	sp, #20
 801a930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a934:	fffff800 	.word	0xfffff800

0801a938 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a93c:	b087      	sub	sp, #28
 801a93e:	468b      	mov	fp, r1
 801a940:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a942:	9203      	str	r2, [sp, #12]
 801a944:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a948:	9204      	str	r2, [sp, #16]
 801a94a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a94e:	6841      	ldr	r1, [r0, #4]
 801a950:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a954:	fb01 2404 	mla	r4, r1, r4, r2
 801a958:	6802      	ldr	r2, [r0, #0]
 801a95a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a95e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a962:	3201      	adds	r2, #1
 801a964:	f022 0201 	bic.w	r2, r2, #1
 801a968:	9200      	str	r2, [sp, #0]
 801a96a:	f8d9 2000 	ldr.w	r2, [r9]
 801a96e:	9201      	str	r2, [sp, #4]
 801a970:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a974:	f1bb 0f00 	cmp.w	fp, #0
 801a978:	dc03      	bgt.n	801a982 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a97a:	9a03      	ldr	r2, [sp, #12]
 801a97c:	2a00      	cmp	r2, #0
 801a97e:	f340 8169 	ble.w	801ac54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a982:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a984:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a988:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a98c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a990:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a992:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a996:	2b00      	cmp	r3, #0
 801a998:	dd0e      	ble.n	801a9b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a99a:	1402      	asrs	r2, r0, #16
 801a99c:	d405      	bmi.n	801a9aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a99e:	42ba      	cmp	r2, r7
 801a9a0:	da03      	bge.n	801a9aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a9a2:	140a      	asrs	r2, r1, #16
 801a9a4:	d401      	bmi.n	801a9aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a9a6:	42b2      	cmp	r2, r6
 801a9a8:	db07      	blt.n	801a9ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a9aa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a9ac:	4410      	add	r0, r2
 801a9ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a9b0:	3b01      	subs	r3, #1
 801a9b2:	4411      	add	r1, r2
 801a9b4:	3402      	adds	r4, #2
 801a9b6:	e7ee      	b.n	801a996 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a9b8:	d017      	beq.n	801a9ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a9ba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a9bc:	1e5a      	subs	r2, r3, #1
 801a9be:	fb05 0502 	mla	r5, r5, r2, r0
 801a9c2:	142d      	asrs	r5, r5, #16
 801a9c4:	d409      	bmi.n	801a9da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a9c6:	42bd      	cmp	r5, r7
 801a9c8:	da07      	bge.n	801a9da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a9ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a9cc:	fb05 1202 	mla	r2, r5, r2, r1
 801a9d0:	1412      	asrs	r2, r2, #16
 801a9d2:	d402      	bmi.n	801a9da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a9d4:	42b2      	cmp	r2, r6
 801a9d6:	f2c0 80c7 	blt.w	801ab68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a9da:	2700      	movs	r7, #0
 801a9dc:	19da      	adds	r2, r3, r7
 801a9de:	2a00      	cmp	r2, #0
 801a9e0:	dc3e      	bgt.n	801aa60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a9e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a9e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a9ea:	f1bb 0f00 	cmp.w	fp, #0
 801a9ee:	f340 8131 	ble.w	801ac54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a9f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a9f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a9fa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a9fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa00:	f1bb 0b01 	subs.w	fp, fp, #1
 801aa04:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa0c:	eeb0 6a62 	vmov.f32	s12, s5
 801aa10:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa18:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa1c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801aa20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa24:	eeb0 6a43 	vmov.f32	s12, s6
 801aa28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa2c:	ee12 2a90 	vmov	r2, s5
 801aa30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa34:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa38:	ee13 2a10 	vmov	r2, s6
 801aa3c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa40:	9313      	str	r3, [sp, #76]	; 0x4c
 801aa42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa44:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa48:	9a03      	ldr	r2, [sp, #12]
 801aa4a:	9314      	str	r3, [sp, #80]	; 0x50
 801aa4c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801aa50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa52:	eeb0 3a67 	vmov.f32	s6, s15
 801aa56:	bf08      	it	eq
 801aa58:	4613      	moveq	r3, r2
 801aa5a:	eef0 2a47 	vmov.f32	s5, s14
 801aa5e:	e789      	b.n	801a974 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801aa60:	1405      	asrs	r5, r0, #16
 801aa62:	d435      	bmi.n	801aad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa64:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801aa68:	42aa      	cmp	r2, r5
 801aa6a:	dd31      	ble.n	801aad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa6c:	140e      	asrs	r6, r1, #16
 801aa6e:	d42f      	bmi.n	801aad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa70:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801aa74:	42b2      	cmp	r2, r6
 801aa76:	dd2b      	ble.n	801aad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa78:	9a00      	ldr	r2, [sp, #0]
 801aa7a:	fb06 5502 	mla	r5, r6, r2, r5
 801aa7e:	086a      	lsrs	r2, r5, #1
 801aa80:	9e01      	ldr	r6, [sp, #4]
 801aa82:	5cb2      	ldrb	r2, [r6, r2]
 801aa84:	07ee      	lsls	r6, r5, #31
 801aa86:	bf54      	ite	pl
 801aa88:	f002 020f 	andpl.w	r2, r2, #15
 801aa8c:	1112      	asrmi	r2, r2, #4
 801aa8e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aa92:	b2d2      	uxtb	r2, r2
 801aa94:	b1e2      	cbz	r2, 801aad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa96:	9d04      	ldr	r5, [sp, #16]
 801aa98:	436a      	muls	r2, r5
 801aa9a:	1c55      	adds	r5, r2, #1
 801aa9c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801aaa0:	4d6e      	ldr	r5, [pc, #440]	; (801ac5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801aaa2:	682d      	ldr	r5, [r5, #0]
 801aaa4:	1212      	asrs	r2, r2, #8
 801aaa6:	0a2e      	lsrs	r6, r5, #8
 801aaa8:	2aff      	cmp	r2, #255	; 0xff
 801aaaa:	9605      	str	r6, [sp, #20]
 801aaac:	d116      	bne.n	801aadc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801aaae:	f06f 0201 	mvn.w	r2, #1
 801aab2:	fb02 fc07 	mul.w	ip, r2, r7
 801aab6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801aaba:	096a      	lsrs	r2, r5, #5
 801aabc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aac0:	f026 0607 	bic.w	r6, r6, #7
 801aac4:	4316      	orrs	r6, r2
 801aac6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801aaca:	432e      	orrs	r6, r5
 801aacc:	f824 600c 	strh.w	r6, [r4, ip]
 801aad0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aad2:	4410      	add	r0, r2
 801aad4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aad6:	3f01      	subs	r7, #1
 801aad8:	4411      	add	r1, r2
 801aada:	e77f      	b.n	801a9dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801aadc:	f06f 0601 	mvn.w	r6, #1
 801aae0:	437e      	muls	r6, r7
 801aae2:	fa1f fa82 	uxth.w	sl, r2
 801aae6:	f834 8006 	ldrh.w	r8, [r4, r6]
 801aaea:	9602      	str	r6, [sp, #8]
 801aaec:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801aaf0:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801aaf4:	43d2      	mvns	r2, r2
 801aaf6:	b2d2      	uxtb	r2, r2
 801aaf8:	fb1c fc0a 	smulbb	ip, ip, sl
 801aafc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ab00:	fb0e ce02 	mla	lr, lr, r2, ip
 801ab04:	b2ed      	uxtb	r5, r5
 801ab06:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801ab0a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ab0e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801ab12:	fa5f f888 	uxtb.w	r8, r8
 801ab16:	fb15 f50a 	smulbb	r5, r5, sl
 801ab1a:	fb08 5502 	mla	r5, r8, r2, r5
 801ab1e:	fa1f fe8e 	uxth.w	lr, lr
 801ab22:	fb16 f60a 	smulbb	r6, r6, sl
 801ab26:	b2ad      	uxth	r5, r5
 801ab28:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ab2c:	fb0c 6c02 	mla	ip, ip, r2, r6
 801ab30:	f10e 0201 	add.w	r2, lr, #1
 801ab34:	1c6e      	adds	r6, r5, #1
 801ab36:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801ab3a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801ab3e:	fa1f fc8c 	uxth.w	ip, ip
 801ab42:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ab46:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ab4a:	ea46 0e0e 	orr.w	lr, r6, lr
 801ab4e:	f10c 0601 	add.w	r6, ip, #1
 801ab52:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801ab56:	0976      	lsrs	r6, r6, #5
 801ab58:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ab5c:	9a02      	ldr	r2, [sp, #8]
 801ab5e:	ea4e 0e06 	orr.w	lr, lr, r6
 801ab62:	f824 e002 	strh.w	lr, [r4, r2]
 801ab66:	e7b3      	b.n	801aad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ab68:	f04f 0800 	mov.w	r8, #0
 801ab6c:	eba3 0208 	sub.w	r2, r3, r8
 801ab70:	2a00      	cmp	r2, #0
 801ab72:	f77f af36 	ble.w	801a9e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ab76:	9e00      	ldr	r6, [sp, #0]
 801ab78:	1402      	asrs	r2, r0, #16
 801ab7a:	140d      	asrs	r5, r1, #16
 801ab7c:	fb06 2505 	mla	r5, r6, r5, r2
 801ab80:	086a      	lsrs	r2, r5, #1
 801ab82:	9e01      	ldr	r6, [sp, #4]
 801ab84:	5cb2      	ldrb	r2, [r6, r2]
 801ab86:	07ed      	lsls	r5, r5, #31
 801ab88:	bf54      	ite	pl
 801ab8a:	f002 020f 	andpl.w	r2, r2, #15
 801ab8e:	1112      	asrmi	r2, r2, #4
 801ab90:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ab94:	b2d2      	uxtb	r2, r2
 801ab96:	b1c2      	cbz	r2, 801abca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ab98:	9d04      	ldr	r5, [sp, #16]
 801ab9a:	436a      	muls	r2, r5
 801ab9c:	1c55      	adds	r5, r2, #1
 801ab9e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801aba2:	4d2e      	ldr	r5, [pc, #184]	; (801ac5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801aba4:	1212      	asrs	r2, r2, #8
 801aba6:	682e      	ldr	r6, [r5, #0]
 801aba8:	2aff      	cmp	r2, #255	; 0xff
 801abaa:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801abae:	d113      	bne.n	801abd8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801abb0:	0972      	lsrs	r2, r6, #5
 801abb2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801abb6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801abba:	f025 0507 	bic.w	r5, r5, #7
 801abbe:	4315      	orrs	r5, r2
 801abc0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801abc4:	4335      	orrs	r5, r6
 801abc6:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801abca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801abcc:	4410      	add	r0, r2
 801abce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801abd0:	f108 0801 	add.w	r8, r8, #1
 801abd4:	4411      	add	r1, r2
 801abd6:	e7c9      	b.n	801ab6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801abd8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801abdc:	fa1f fa82 	uxth.w	sl, r2
 801abe0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801abe4:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801abe8:	43d2      	mvns	r2, r2
 801abea:	b2d2      	uxtb	r2, r2
 801abec:	fb17 f70a 	smulbb	r7, r7, sl
 801abf0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801abf4:	fb0c 7c02 	mla	ip, ip, r2, r7
 801abf8:	b2f6      	uxtb	r6, r6
 801abfa:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801abfe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ac02:	fa5f fe8e 	uxtb.w	lr, lr
 801ac06:	fb16 f60a 	smulbb	r6, r6, sl
 801ac0a:	fb0e 6602 	mla	r6, lr, r2, r6
 801ac0e:	b2ed      	uxtb	r5, r5
 801ac10:	fa1f fc8c 	uxth.w	ip, ip
 801ac14:	fb15 f50a 	smulbb	r5, r5, sl
 801ac18:	b2b6      	uxth	r6, r6
 801ac1a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ac1e:	fb07 5702 	mla	r7, r7, r2, r5
 801ac22:	f10c 0201 	add.w	r2, ip, #1
 801ac26:	1c75      	adds	r5, r6, #1
 801ac28:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ac2c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ac30:	b2bf      	uxth	r7, r7
 801ac32:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ac36:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac3a:	ea45 0c0c 	orr.w	ip, r5, ip
 801ac3e:	1c7d      	adds	r5, r7, #1
 801ac40:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801ac44:	096d      	lsrs	r5, r5, #5
 801ac46:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ac4a:	ea4c 0c05 	orr.w	ip, ip, r5
 801ac4e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801ac52:	e7ba      	b.n	801abca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ac54:	b007      	add	sp, #28
 801ac56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac5a:	bf00      	nop
 801ac5c:	2000ef2c 	.word	0x2000ef2c

0801ac60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac64:	b087      	sub	sp, #28
 801ac66:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801af74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801ac6a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ac6c:	9205      	str	r2, [sp, #20]
 801ac6e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ac72:	9101      	str	r1, [sp, #4]
 801ac74:	6841      	ldr	r1, [r0, #4]
 801ac76:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801ac7a:	fb01 2404 	mla	r4, r1, r4, r2
 801ac7e:	6802      	ldr	r2, [r0, #0]
 801ac80:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ac84:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ac88:	3201      	adds	r2, #1
 801ac8a:	f022 0201 	bic.w	r2, r2, #1
 801ac8e:	9202      	str	r2, [sp, #8]
 801ac90:	f8db 2000 	ldr.w	r2, [fp]
 801ac94:	9203      	str	r2, [sp, #12]
 801ac96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ac9a:	9a01      	ldr	r2, [sp, #4]
 801ac9c:	2a00      	cmp	r2, #0
 801ac9e:	dc03      	bgt.n	801aca8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801aca0:	9a05      	ldr	r2, [sp, #20]
 801aca2:	2a00      	cmp	r2, #0
 801aca4:	f340 8162 	ble.w	801af6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801aca8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801acaa:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801acae:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801acb2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801acb6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801acb8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801acbc:	2b00      	cmp	r3, #0
 801acbe:	dd0e      	ble.n	801acde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801acc0:	1402      	asrs	r2, r0, #16
 801acc2:	d405      	bmi.n	801acd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801acc4:	42ba      	cmp	r2, r7
 801acc6:	da03      	bge.n	801acd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801acc8:	140a      	asrs	r2, r1, #16
 801acca:	d401      	bmi.n	801acd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801accc:	42b2      	cmp	r2, r6
 801acce:	db07      	blt.n	801ace0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801acd0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801acd2:	4410      	add	r0, r2
 801acd4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801acd6:	3b01      	subs	r3, #1
 801acd8:	4411      	add	r1, r2
 801acda:	3402      	adds	r4, #2
 801acdc:	e7ee      	b.n	801acbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801acde:	d017      	beq.n	801ad10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ace0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ace2:	1e5a      	subs	r2, r3, #1
 801ace4:	fb05 0502 	mla	r5, r5, r2, r0
 801ace8:	142d      	asrs	r5, r5, #16
 801acea:	d409      	bmi.n	801ad00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801acec:	42bd      	cmp	r5, r7
 801acee:	da07      	bge.n	801ad00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801acf0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801acf2:	fb05 1202 	mla	r2, r5, r2, r1
 801acf6:	1412      	asrs	r2, r2, #16
 801acf8:	d402      	bmi.n	801ad00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801acfa:	42b2      	cmp	r2, r6
 801acfc:	f2c0 80c3 	blt.w	801ae86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801ad00:	2500      	movs	r5, #0
 801ad02:	195a      	adds	r2, r3, r5
 801ad04:	2a00      	cmp	r2, #0
 801ad06:	dc3f      	bgt.n	801ad88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ad08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ad0c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ad10:	9b01      	ldr	r3, [sp, #4]
 801ad12:	2b00      	cmp	r3, #0
 801ad14:	f340 812a 	ble.w	801af6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ad18:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad20:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ad24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad26:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad2e:	eeb0 6a62 	vmov.f32	s12, s5
 801ad32:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad3e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ad42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad46:	eeb0 6a43 	vmov.f32	s12, s6
 801ad4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad4e:	ee12 2a90 	vmov	r2, s5
 801ad52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad56:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad5a:	ee13 2a10 	vmov	r2, s6
 801ad5e:	9313      	str	r3, [sp, #76]	; 0x4c
 801ad60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad62:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad66:	9314      	str	r3, [sp, #80]	; 0x50
 801ad68:	9b01      	ldr	r3, [sp, #4]
 801ad6a:	9a05      	ldr	r2, [sp, #20]
 801ad6c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad70:	3b01      	subs	r3, #1
 801ad72:	9301      	str	r3, [sp, #4]
 801ad74:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ad78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad7a:	eeb0 3a67 	vmov.f32	s6, s15
 801ad7e:	bf08      	it	eq
 801ad80:	4613      	moveq	r3, r2
 801ad82:	eef0 2a47 	vmov.f32	s5, s14
 801ad86:	e788      	b.n	801ac9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ad88:	1406      	asrs	r6, r0, #16
 801ad8a:	d42c      	bmi.n	801ade6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad8c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ad90:	42b2      	cmp	r2, r6
 801ad92:	dd28      	ble.n	801ade6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad94:	140f      	asrs	r7, r1, #16
 801ad96:	d426      	bmi.n	801ade6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad98:	f8db 200c 	ldr.w	r2, [fp, #12]
 801ad9c:	42ba      	cmp	r2, r7
 801ad9e:	dd22      	ble.n	801ade6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ada0:	9a02      	ldr	r2, [sp, #8]
 801ada2:	fb07 6602 	mla	r6, r7, r2, r6
 801ada6:	0872      	lsrs	r2, r6, #1
 801ada8:	9f03      	ldr	r7, [sp, #12]
 801adaa:	5cba      	ldrb	r2, [r7, r2]
 801adac:	07f6      	lsls	r6, r6, #31
 801adae:	bf54      	ite	pl
 801adb0:	f002 020f 	andpl.w	r2, r2, #15
 801adb4:	1112      	asrmi	r2, r2, #4
 801adb6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801adba:	b2d2      	uxtb	r2, r2
 801adbc:	2aff      	cmp	r2, #255	; 0xff
 801adbe:	d118      	bne.n	801adf2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801adc0:	f8d8 2000 	ldr.w	r2, [r8]
 801adc4:	f06f 0601 	mvn.w	r6, #1
 801adc8:	fb06 f705 	mul.w	r7, r6, r5
 801adcc:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801add0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801add4:	0956      	lsrs	r6, r2, #5
 801add6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801adda:	ea4c 0606 	orr.w	r6, ip, r6
 801adde:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ade2:	4316      	orrs	r6, r2
 801ade4:	53e6      	strh	r6, [r4, r7]
 801ade6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ade8:	4410      	add	r0, r2
 801adea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801adec:	3d01      	subs	r5, #1
 801adee:	4411      	add	r1, r2
 801adf0:	e787      	b.n	801ad02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801adf2:	2a00      	cmp	r2, #0
 801adf4:	d0f7      	beq.n	801ade6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801adf6:	f06f 0601 	mvn.w	r6, #1
 801adfa:	436e      	muls	r6, r5
 801adfc:	f8d8 c000 	ldr.w	ip, [r8]
 801ae00:	f834 e006 	ldrh.w	lr, [r4, r6]
 801ae04:	9604      	str	r6, [sp, #16]
 801ae06:	fa1f f982 	uxth.w	r9, r2
 801ae0a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ae0e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ae12:	43d2      	mvns	r2, r2
 801ae14:	b2d2      	uxtb	r2, r2
 801ae16:	fb16 f609 	smulbb	r6, r6, r9
 801ae1a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae1e:	fb07 6702 	mla	r7, r7, r2, r6
 801ae22:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801ae26:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ae2a:	fa5f fc8c 	uxtb.w	ip, ip
 801ae2e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ae32:	fa5f fe8e 	uxtb.w	lr, lr
 801ae36:	fb1c fc09 	smulbb	ip, ip, r9
 801ae3a:	fb0e cc02 	mla	ip, lr, r2, ip
 801ae3e:	b2bf      	uxth	r7, r7
 801ae40:	fb1a fa09 	smulbb	sl, sl, r9
 801ae44:	fa1f fc8c 	uxth.w	ip, ip
 801ae48:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ae4c:	fb06 a602 	mla	r6, r6, r2, sl
 801ae50:	1c7a      	adds	r2, r7, #1
 801ae52:	f10c 0a01 	add.w	sl, ip, #1
 801ae56:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ae5a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801ae5e:	b2b6      	uxth	r6, r6
 801ae60:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ae64:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ae68:	ea4a 0707 	orr.w	r7, sl, r7
 801ae6c:	f106 0a01 	add.w	sl, r6, #1
 801ae70:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ae74:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae78:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ae7c:	9a04      	ldr	r2, [sp, #16]
 801ae7e:	ea47 070a 	orr.w	r7, r7, sl
 801ae82:	52a7      	strh	r7, [r4, r2]
 801ae84:	e7af      	b.n	801ade6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae86:	f04f 0e00 	mov.w	lr, #0
 801ae8a:	eba3 020e 	sub.w	r2, r3, lr
 801ae8e:	2a00      	cmp	r2, #0
 801ae90:	f77f af3a 	ble.w	801ad08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ae94:	9e02      	ldr	r6, [sp, #8]
 801ae96:	1402      	asrs	r2, r0, #16
 801ae98:	140d      	asrs	r5, r1, #16
 801ae9a:	fb06 2505 	mla	r5, r6, r5, r2
 801ae9e:	086a      	lsrs	r2, r5, #1
 801aea0:	9e03      	ldr	r6, [sp, #12]
 801aea2:	5cb2      	ldrb	r2, [r6, r2]
 801aea4:	07ed      	lsls	r5, r5, #31
 801aea6:	bf54      	ite	pl
 801aea8:	f002 020f 	andpl.w	r2, r2, #15
 801aeac:	1112      	asrmi	r2, r2, #4
 801aeae:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aeb2:	b2d2      	uxtb	r2, r2
 801aeb4:	2aff      	cmp	r2, #255	; 0xff
 801aeb6:	d115      	bne.n	801aee4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801aeb8:	f8d8 5000 	ldr.w	r5, [r8]
 801aebc:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801aec0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801aec4:	096a      	lsrs	r2, r5, #5
 801aec6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aeca:	4332      	orrs	r2, r6
 801aecc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801aed0:	432a      	orrs	r2, r5
 801aed2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801aed6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aed8:	4410      	add	r0, r2
 801aeda:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aedc:	f10e 0e01 	add.w	lr, lr, #1
 801aee0:	4411      	add	r1, r2
 801aee2:	e7d2      	b.n	801ae8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801aee4:	2a00      	cmp	r2, #0
 801aee6:	d0f6      	beq.n	801aed6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801aee8:	f8d8 7000 	ldr.w	r7, [r8]
 801aeec:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801aef0:	fa1f f982 	uxth.w	r9, r2
 801aef4:	ea4f 262c 	mov.w	r6, ip, asr #8
 801aef8:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801aefc:	43d2      	mvns	r2, r2
 801aefe:	b2d2      	uxtb	r2, r2
 801af00:	fb15 f509 	smulbb	r5, r5, r9
 801af04:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801af08:	fb06 5602 	mla	r6, r6, r2, r5
 801af0c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801af10:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801af14:	b2ff      	uxtb	r7, r7
 801af16:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801af1a:	fa5f fc8c 	uxtb.w	ip, ip
 801af1e:	fb17 f709 	smulbb	r7, r7, r9
 801af22:	fb0c 7702 	mla	r7, ip, r2, r7
 801af26:	b2b6      	uxth	r6, r6
 801af28:	fb1a fa09 	smulbb	sl, sl, r9
 801af2c:	b2bf      	uxth	r7, r7
 801af2e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801af32:	fb05 a502 	mla	r5, r5, r2, sl
 801af36:	1c72      	adds	r2, r6, #1
 801af38:	f107 0a01 	add.w	sl, r7, #1
 801af3c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801af40:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801af44:	b2ad      	uxth	r5, r5
 801af46:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801af4a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801af4e:	ea4a 0606 	orr.w	r6, sl, r6
 801af52:	f105 0a01 	add.w	sl, r5, #1
 801af56:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801af5a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af5e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801af62:	ea46 060a 	orr.w	r6, r6, sl
 801af66:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801af6a:	e7b4      	b.n	801aed6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801af6c:	b007      	add	sp, #28
 801af6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af72:	bf00      	nop
 801af74:	2000ef2c 	.word	0x2000ef2c

0801af78 <_ZN8touchgfx8LCD16bppD1Ev>:
 801af78:	4770      	bx	lr

0801af7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801af7a:	4770      	bx	lr

0801af7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801af7c:	4770      	bx	lr

0801af7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801af7e:	4770      	bx	lr

0801af80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801af80:	4770      	bx	lr

0801af82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801af82:	4770      	bx	lr

0801af84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801af84:	4770      	bx	lr

0801af86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801af86:	4770      	bx	lr

0801af88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801af88:	4770      	bx	lr

0801af8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801af8a:	4770      	bx	lr

0801af8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801af8c:	4770      	bx	lr

0801af8e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801af8e:	4770      	bx	lr

0801af90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801af90:	4770      	bx	lr

0801af92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801af92:	4770      	bx	lr

0801af94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801af94:	4770      	bx	lr

0801af96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801af96:	4770      	bx	lr

0801af98 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801af98:	4770      	bx	lr

0801af9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801af9a:	4770      	bx	lr

0801af9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801af9c:	4770      	bx	lr

0801af9e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801af9e:	4770      	bx	lr

0801afa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801afa0:	4770      	bx	lr

0801afa2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801afa2:	4770      	bx	lr

0801afa4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801afa4:	4770      	bx	lr

0801afa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801afa6:	4770      	bx	lr

0801afa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801afa8:	4770      	bx	lr

0801afaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801afaa:	4770      	bx	lr

0801afac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801afac:	4770      	bx	lr

0801afae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801afae:	4770      	bx	lr

0801afb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801afb0:	4770      	bx	lr

0801afb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801afb2:	4770      	bx	lr

0801afb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801afb4:	4770      	bx	lr

0801afb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801afb6:	4770      	bx	lr

0801afb8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801afb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801afbc:	b088      	sub	sp, #32
 801afbe:	ac08      	add	r4, sp, #32
 801afc0:	4606      	mov	r6, r0
 801afc2:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801afc6:	4620      	mov	r0, r4
 801afc8:	4688      	mov	r8, r1
 801afca:	4691      	mov	r9, r2
 801afcc:	f7fd fc62 	bl	8018894 <_ZNK8touchgfx6Bitmap7getDataEv>
 801afd0:	6833      	ldr	r3, [r6, #0]
 801afd2:	4605      	mov	r5, r0
 801afd4:	4620      	mov	r0, r4
 801afd6:	699f      	ldr	r7, [r3, #24]
 801afd8:	f7fd fb70 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801afdc:	4682      	mov	sl, r0
 801afde:	4620      	mov	r0, r4
 801afe0:	f7fd fba0 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801afe4:	9500      	str	r5, [sp, #0]
 801afe6:	e9cd a001 	strd	sl, r0, [sp, #4]
 801afea:	464b      	mov	r3, r9
 801afec:	a806      	add	r0, sp, #24
 801afee:	4642      	mov	r2, r8
 801aff0:	4631      	mov	r1, r6
 801aff2:	47b8      	blx	r7
 801aff4:	4628      	mov	r0, r5
 801aff6:	b008      	add	sp, #32
 801aff8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801affc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801affc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801b000:	2300      	movs	r3, #0
 801b002:	9300      	str	r3, [sp, #0]
 801b004:	4b3d      	ldr	r3, [pc, #244]	; (801b0fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801b006:	781b      	ldrb	r3, [r3, #0]
 801b008:	2b00      	cmp	r3, #0
 801b00a:	d137      	bne.n	801b07c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801b00c:	4a3c      	ldr	r2, [pc, #240]	; (801b100 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b00e:	f9b2 2000 	ldrsh.w	r2, [r2]
 801b012:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b016:	2b00      	cmp	r3, #0
 801b018:	d132      	bne.n	801b080 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801b01a:	4b3a      	ldr	r3, [pc, #232]	; (801b104 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b01c:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b020:	6808      	ldr	r0, [r1, #0]
 801b022:	6849      	ldr	r1, [r1, #4]
 801b024:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b028:	ac02      	add	r4, sp, #8
 801b02a:	ab02      	add	r3, sp, #8
 801b02c:	c303      	stmia	r3!, {r0, r1}
 801b02e:	4669      	mov	r1, sp
 801b030:	4620      	mov	r0, r4
 801b032:	f7f9 fdc1 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b036:	4668      	mov	r0, sp
 801b038:	f7f9 fd7a 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b03c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801b040:	f8bd 2000 	ldrh.w	r2, [sp]
 801b044:	4d30      	ldr	r5, [pc, #192]	; (801b108 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801b046:	4413      	add	r3, r2
 801b048:	f8ad 3008 	strh.w	r3, [sp, #8]
 801b04c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801b050:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801b054:	6828      	ldr	r0, [r5, #0]
 801b056:	4413      	add	r3, r2
 801b058:	f8ad 300a 	strh.w	r3, [sp, #10]
 801b05c:	6803      	ldr	r3, [r0, #0]
 801b05e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b060:	4798      	blx	r3
 801b062:	f010 0f01 	tst.w	r0, #1
 801b066:	462f      	mov	r7, r5
 801b068:	d00c      	beq.n	801b084 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801b06a:	6828      	ldr	r0, [r5, #0]
 801b06c:	6803      	ldr	r3, [r0, #0]
 801b06e:	e894 0006 	ldmia.w	r4, {r1, r2}
 801b072:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801b074:	4798      	blx	r3
 801b076:	b004      	add	sp, #16
 801b078:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b07c:	4a21      	ldr	r2, [pc, #132]	; (801b104 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b07e:	e7c6      	b.n	801b00e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801b080:	4b1f      	ldr	r3, [pc, #124]	; (801b100 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b082:	e7cb      	b.n	801b01c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801b084:	6838      	ldr	r0, [r7, #0]
 801b086:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801b08a:	6803      	ldr	r3, [r0, #0]
 801b08c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801b090:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b092:	4798      	blx	r3
 801b094:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801b098:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b09c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801b0a0:	fb16 3602 	smlabb	r6, r6, r2, r3
 801b0a4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b0a8:	6838      	ldr	r0, [r7, #0]
 801b0aa:	6803      	ldr	r3, [r0, #0]
 801b0ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b0ae:	4798      	blx	r3
 801b0b0:	4a13      	ldr	r2, [pc, #76]	; (801b100 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b0b2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801b0b6:	8813      	ldrh	r3, [r2, #0]
 801b0b8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b0bc:	fb03 1404 	mla	r4, r3, r4, r1
 801b0c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b0c4:	435d      	muls	r5, r3
 801b0c6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b0ca:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801b0ce:	4691      	mov	r9, r2
 801b0d0:	6838      	ldr	r0, [r7, #0]
 801b0d2:	42ac      	cmp	r4, r5
 801b0d4:	6803      	ldr	r3, [r0, #0]
 801b0d6:	d20e      	bcs.n	801b0f6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801b0d8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801b0dc:	4632      	mov	r2, r6
 801b0de:	4643      	mov	r3, r8
 801b0e0:	4621      	mov	r1, r4
 801b0e2:	47d0      	blx	sl
 801b0e4:	f8b9 3000 	ldrh.w	r3, [r9]
 801b0e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b0ec:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801b0f0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b0f4:	e7ec      	b.n	801b0d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801b0f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b0f8:	4798      	blx	r3
 801b0fa:	e7bc      	b.n	801b076 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801b0fc:	2000ef14 	.word	0x2000ef14
 801b100:	2000ef16 	.word	0x2000ef16
 801b104:	2000ef18 	.word	0x2000ef18
 801b108:	2000ef1c 	.word	0x2000ef1c

0801b10c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801b10c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b110:	b08b      	sub	sp, #44	; 0x2c
 801b112:	460f      	mov	r7, r1
 801b114:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801b118:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801b11c:	4616      	mov	r6, r2
 801b11e:	f1bb 0f00 	cmp.w	fp, #0
 801b122:	d04a      	beq.n	801b1ba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b124:	6810      	ldr	r0, [r2, #0]
 801b126:	6851      	ldr	r1, [r2, #4]
 801b128:	ad06      	add	r5, sp, #24
 801b12a:	c503      	stmia	r5!, {r0, r1}
 801b12c:	6818      	ldr	r0, [r3, #0]
 801b12e:	6859      	ldr	r1, [r3, #4]
 801b130:	ad08      	add	r5, sp, #32
 801b132:	c503      	stmia	r5!, {r0, r1}
 801b134:	a806      	add	r0, sp, #24
 801b136:	f7f9 fcfb 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b13a:	4631      	mov	r1, r6
 801b13c:	a808      	add	r0, sp, #32
 801b13e:	f7f9 fd3b 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b142:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801b146:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801b14a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801b14e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801b152:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801b156:	fb16 2103 	smlabb	r1, r6, r3, r2
 801b15a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801b15e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801b162:	4f5f      	ldr	r7, [pc, #380]	; (801b2e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b164:	440a      	add	r2, r1
 801b166:	f8ad 2020 	strh.w	r2, [sp, #32]
 801b16a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801b16e:	6838      	ldr	r0, [r7, #0]
 801b170:	4413      	add	r3, r2
 801b172:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801b176:	6803      	ldr	r3, [r0, #0]
 801b178:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b17a:	4798      	blx	r3
 801b17c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b180:	46b9      	mov	r9, r7
 801b182:	d11d      	bne.n	801b1c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801b184:	b9fc      	cbnz	r4, 801b1c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b186:	f010 0f01 	tst.w	r0, #1
 801b18a:	d01c      	beq.n	801b1c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b18c:	f8d9 0000 	ldr.w	r0, [r9]
 801b190:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801b194:	6801      	ldr	r1, [r0, #0]
 801b196:	f8cd b00c 	str.w	fp, [sp, #12]
 801b19a:	2700      	movs	r7, #0
 801b19c:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801b1a0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801b1a4:	9402      	str	r4, [sp, #8]
 801b1a6:	b2ad      	uxth	r5, r5
 801b1a8:	fa1f f488 	uxth.w	r4, r8
 801b1ac:	9501      	str	r5, [sp, #4]
 801b1ae:	9400      	str	r4, [sp, #0]
 801b1b0:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801b1b2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b1b6:	4631      	mov	r1, r6
 801b1b8:	47a0      	blx	r4
 801b1ba:	b00b      	add	sp, #44	; 0x2c
 801b1bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b1c0:	f010 0f04 	tst.w	r0, #4
 801b1c4:	e7e1      	b.n	801b18a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801b1c6:	f8d9 0000 	ldr.w	r0, [r9]
 801b1ca:	6803      	ldr	r3, [r0, #0]
 801b1cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b1ce:	4798      	blx	r3
 801b1d0:	4b44      	ldr	r3, [pc, #272]	; (801b2e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801b1d2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801b1d6:	881a      	ldrh	r2, [r3, #0]
 801b1d8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801b1dc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b1e0:	fb02 1404 	mla	r4, r2, r4, r1
 801b1e4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b1e8:	469a      	mov	sl, r3
 801b1ea:	fb05 f502 	mul.w	r5, r5, r2
 801b1ee:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801b1f2:	d059      	beq.n	801b2a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801b1f4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801b1f8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b1fc:	fa1f f28b 	uxth.w	r2, fp
 801b200:	fa1f f989 	uxth.w	r9, r9
 801b204:	469e      	mov	lr, r3
 801b206:	42ac      	cmp	r4, r5
 801b208:	d264      	bcs.n	801b2d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b20a:	eb04 0a07 	add.w	sl, r4, r7
 801b20e:	4554      	cmp	r4, sl
 801b210:	d23d      	bcs.n	801b28e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801b212:	8821      	ldrh	r1, [r4, #0]
 801b214:	f836 3b02 	ldrh.w	r3, [r6], #2
 801b218:	1208      	asrs	r0, r1, #8
 801b21a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b21e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b222:	fb10 f009 	smulbb	r0, r0, r9
 801b226:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801b22a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b22e:	00c9      	lsls	r1, r1, #3
 801b230:	fb0c 0c02 	mla	ip, ip, r2, r0
 801b234:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b238:	10d8      	asrs	r0, r3, #3
 801b23a:	b2c9      	uxtb	r1, r1
 801b23c:	00db      	lsls	r3, r3, #3
 801b23e:	fa1f fc8c 	uxth.w	ip, ip
 801b242:	fb1b fb09 	smulbb	fp, fp, r9
 801b246:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b24a:	b2db      	uxtb	r3, r3
 801b24c:	fb11 f109 	smulbb	r1, r1, r9
 801b250:	fb00 b002 	mla	r0, r0, r2, fp
 801b254:	fb03 1302 	mla	r3, r3, r2, r1
 801b258:	f10c 0b01 	add.w	fp, ip, #1
 801b25c:	b29b      	uxth	r3, r3
 801b25e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801b262:	b280      	uxth	r0, r0
 801b264:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801b268:	f103 0c01 	add.w	ip, r3, #1
 801b26c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b270:	1c43      	adds	r3, r0, #1
 801b272:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b276:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b27a:	0940      	lsrs	r0, r0, #5
 801b27c:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b280:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b284:	ea4c 0c00 	orr.w	ip, ip, r0
 801b288:	f824 cb02 	strh.w	ip, [r4], #2
 801b28c:	e7bf      	b.n	801b20e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801b28e:	f8be 3000 	ldrh.w	r3, [lr]
 801b292:	eba3 0308 	sub.w	r3, r3, r8
 801b296:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b29a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b29e:	eba3 0308 	sub.w	r3, r3, r8
 801b2a2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b2a6:	e7ae      	b.n	801b206 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801b2a8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b2ac:	f8d9 0000 	ldr.w	r0, [r9]
 801b2b0:	42ac      	cmp	r4, r5
 801b2b2:	6803      	ldr	r3, [r0, #0]
 801b2b4:	d20e      	bcs.n	801b2d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b2b6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801b2ba:	4632      	mov	r2, r6
 801b2bc:	463b      	mov	r3, r7
 801b2be:	4621      	mov	r1, r4
 801b2c0:	47c0      	blx	r8
 801b2c2:	f8ba 3000 	ldrh.w	r3, [sl]
 801b2c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b2ca:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b2ce:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b2d2:	e7eb      	b.n	801b2ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801b2d4:	4b02      	ldr	r3, [pc, #8]	; (801b2e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b2d6:	6818      	ldr	r0, [r3, #0]
 801b2d8:	6803      	ldr	r3, [r0, #0]
 801b2da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b2dc:	4798      	blx	r3
 801b2de:	e76c      	b.n	801b1ba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b2e0:	2000ef1c 	.word	0x2000ef1c
 801b2e4:	2000ef16 	.word	0x2000ef16

0801b2e8 <_ZN8touchgfx8LCD16bppD0Ev>:
 801b2e8:	b510      	push	{r4, lr}
 801b2ea:	2184      	movs	r1, #132	; 0x84
 801b2ec:	4604      	mov	r4, r0
 801b2ee:	f00b f967 	bl	80265c0 <_ZdlPvj>
 801b2f2:	4620      	mov	r0, r4
 801b2f4:	bd10      	pop	{r4, pc}

0801b2f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801b2f6:	b510      	push	{r4, lr}
 801b2f8:	2104      	movs	r1, #4
 801b2fa:	4604      	mov	r4, r0
 801b2fc:	f00b f960 	bl	80265c0 <_ZdlPvj>
 801b300:	4620      	mov	r0, r4
 801b302:	bd10      	pop	{r4, pc}

0801b304 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801b304:	b510      	push	{r4, lr}
 801b306:	2104      	movs	r1, #4
 801b308:	4604      	mov	r4, r0
 801b30a:	f00b f959 	bl	80265c0 <_ZdlPvj>
 801b30e:	4620      	mov	r0, r4
 801b310:	bd10      	pop	{r4, pc}

0801b312 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801b312:	b510      	push	{r4, lr}
 801b314:	f640 0144 	movw	r1, #2116	; 0x844
 801b318:	4604      	mov	r4, r0
 801b31a:	f00b f951 	bl	80265c0 <_ZdlPvj>
 801b31e:	4620      	mov	r0, r4
 801b320:	bd10      	pop	{r4, pc}

0801b322 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b322:	b510      	push	{r4, lr}
 801b324:	2104      	movs	r1, #4
 801b326:	4604      	mov	r4, r0
 801b328:	f00b f94a 	bl	80265c0 <_ZdlPvj>
 801b32c:	4620      	mov	r0, r4
 801b32e:	bd10      	pop	{r4, pc}

0801b330 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b330:	b510      	push	{r4, lr}
 801b332:	2104      	movs	r1, #4
 801b334:	4604      	mov	r4, r0
 801b336:	f00b f943 	bl	80265c0 <_ZdlPvj>
 801b33a:	4620      	mov	r0, r4
 801b33c:	bd10      	pop	{r4, pc}

0801b33e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b33e:	b510      	push	{r4, lr}
 801b340:	2104      	movs	r1, #4
 801b342:	4604      	mov	r4, r0
 801b344:	f00b f93c 	bl	80265c0 <_ZdlPvj>
 801b348:	4620      	mov	r0, r4
 801b34a:	bd10      	pop	{r4, pc}

0801b34c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b34c:	b510      	push	{r4, lr}
 801b34e:	2104      	movs	r1, #4
 801b350:	4604      	mov	r4, r0
 801b352:	f00b f935 	bl	80265c0 <_ZdlPvj>
 801b356:	4620      	mov	r0, r4
 801b358:	bd10      	pop	{r4, pc}

0801b35a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b35a:	b510      	push	{r4, lr}
 801b35c:	2104      	movs	r1, #4
 801b35e:	4604      	mov	r4, r0
 801b360:	f00b f92e 	bl	80265c0 <_ZdlPvj>
 801b364:	4620      	mov	r0, r4
 801b366:	bd10      	pop	{r4, pc}

0801b368 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b368:	b510      	push	{r4, lr}
 801b36a:	2104      	movs	r1, #4
 801b36c:	4604      	mov	r4, r0
 801b36e:	f00b f927 	bl	80265c0 <_ZdlPvj>
 801b372:	4620      	mov	r0, r4
 801b374:	bd10      	pop	{r4, pc}

0801b376 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b376:	b510      	push	{r4, lr}
 801b378:	2104      	movs	r1, #4
 801b37a:	4604      	mov	r4, r0
 801b37c:	f00b f920 	bl	80265c0 <_ZdlPvj>
 801b380:	4620      	mov	r0, r4
 801b382:	bd10      	pop	{r4, pc}

0801b384 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b384:	b510      	push	{r4, lr}
 801b386:	2104      	movs	r1, #4
 801b388:	4604      	mov	r4, r0
 801b38a:	f00b f919 	bl	80265c0 <_ZdlPvj>
 801b38e:	4620      	mov	r0, r4
 801b390:	bd10      	pop	{r4, pc}

0801b392 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b392:	b510      	push	{r4, lr}
 801b394:	2104      	movs	r1, #4
 801b396:	4604      	mov	r4, r0
 801b398:	f00b f912 	bl	80265c0 <_ZdlPvj>
 801b39c:	4620      	mov	r0, r4
 801b39e:	bd10      	pop	{r4, pc}

0801b3a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b3a0:	b510      	push	{r4, lr}
 801b3a2:	2104      	movs	r1, #4
 801b3a4:	4604      	mov	r4, r0
 801b3a6:	f00b f90b 	bl	80265c0 <_ZdlPvj>
 801b3aa:	4620      	mov	r0, r4
 801b3ac:	bd10      	pop	{r4, pc}

0801b3ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b3ae:	b510      	push	{r4, lr}
 801b3b0:	2104      	movs	r1, #4
 801b3b2:	4604      	mov	r4, r0
 801b3b4:	f00b f904 	bl	80265c0 <_ZdlPvj>
 801b3b8:	4620      	mov	r0, r4
 801b3ba:	bd10      	pop	{r4, pc}

0801b3bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b3bc:	b510      	push	{r4, lr}
 801b3be:	2104      	movs	r1, #4
 801b3c0:	4604      	mov	r4, r0
 801b3c2:	f00b f8fd 	bl	80265c0 <_ZdlPvj>
 801b3c6:	4620      	mov	r0, r4
 801b3c8:	bd10      	pop	{r4, pc}

0801b3ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b3ca:	b510      	push	{r4, lr}
 801b3cc:	2104      	movs	r1, #4
 801b3ce:	4604      	mov	r4, r0
 801b3d0:	f00b f8f6 	bl	80265c0 <_ZdlPvj>
 801b3d4:	4620      	mov	r0, r4
 801b3d6:	bd10      	pop	{r4, pc}

0801b3d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b3d8:	b510      	push	{r4, lr}
 801b3da:	2104      	movs	r1, #4
 801b3dc:	4604      	mov	r4, r0
 801b3de:	f00b f8ef 	bl	80265c0 <_ZdlPvj>
 801b3e2:	4620      	mov	r0, r4
 801b3e4:	bd10      	pop	{r4, pc}

0801b3e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b3e6:	b510      	push	{r4, lr}
 801b3e8:	2104      	movs	r1, #4
 801b3ea:	4604      	mov	r4, r0
 801b3ec:	f00b f8e8 	bl	80265c0 <_ZdlPvj>
 801b3f0:	4620      	mov	r0, r4
 801b3f2:	bd10      	pop	{r4, pc}

0801b3f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b3f4:	b510      	push	{r4, lr}
 801b3f6:	2104      	movs	r1, #4
 801b3f8:	4604      	mov	r4, r0
 801b3fa:	f00b f8e1 	bl	80265c0 <_ZdlPvj>
 801b3fe:	4620      	mov	r0, r4
 801b400:	bd10      	pop	{r4, pc}

0801b402 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b402:	b510      	push	{r4, lr}
 801b404:	2104      	movs	r1, #4
 801b406:	4604      	mov	r4, r0
 801b408:	f00b f8da 	bl	80265c0 <_ZdlPvj>
 801b40c:	4620      	mov	r0, r4
 801b40e:	bd10      	pop	{r4, pc}

0801b410 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b410:	b510      	push	{r4, lr}
 801b412:	2104      	movs	r1, #4
 801b414:	4604      	mov	r4, r0
 801b416:	f00b f8d3 	bl	80265c0 <_ZdlPvj>
 801b41a:	4620      	mov	r0, r4
 801b41c:	bd10      	pop	{r4, pc}

0801b41e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b41e:	b510      	push	{r4, lr}
 801b420:	2104      	movs	r1, #4
 801b422:	4604      	mov	r4, r0
 801b424:	f00b f8cc 	bl	80265c0 <_ZdlPvj>
 801b428:	4620      	mov	r0, r4
 801b42a:	bd10      	pop	{r4, pc}

0801b42c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b42c:	b510      	push	{r4, lr}
 801b42e:	2104      	movs	r1, #4
 801b430:	4604      	mov	r4, r0
 801b432:	f00b f8c5 	bl	80265c0 <_ZdlPvj>
 801b436:	4620      	mov	r0, r4
 801b438:	bd10      	pop	{r4, pc}

0801b43a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b43a:	b510      	push	{r4, lr}
 801b43c:	2104      	movs	r1, #4
 801b43e:	4604      	mov	r4, r0
 801b440:	f00b f8be 	bl	80265c0 <_ZdlPvj>
 801b444:	4620      	mov	r0, r4
 801b446:	bd10      	pop	{r4, pc}

0801b448 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b448:	b510      	push	{r4, lr}
 801b44a:	2104      	movs	r1, #4
 801b44c:	4604      	mov	r4, r0
 801b44e:	f00b f8b7 	bl	80265c0 <_ZdlPvj>
 801b452:	4620      	mov	r0, r4
 801b454:	bd10      	pop	{r4, pc}

0801b456 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b456:	b510      	push	{r4, lr}
 801b458:	2104      	movs	r1, #4
 801b45a:	4604      	mov	r4, r0
 801b45c:	f00b f8b0 	bl	80265c0 <_ZdlPvj>
 801b460:	4620      	mov	r0, r4
 801b462:	bd10      	pop	{r4, pc}

0801b464 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b464:	b510      	push	{r4, lr}
 801b466:	2104      	movs	r1, #4
 801b468:	4604      	mov	r4, r0
 801b46a:	f00b f8a9 	bl	80265c0 <_ZdlPvj>
 801b46e:	4620      	mov	r0, r4
 801b470:	bd10      	pop	{r4, pc}

0801b472 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b472:	b510      	push	{r4, lr}
 801b474:	2104      	movs	r1, #4
 801b476:	4604      	mov	r4, r0
 801b478:	f00b f8a2 	bl	80265c0 <_ZdlPvj>
 801b47c:	4620      	mov	r0, r4
 801b47e:	bd10      	pop	{r4, pc}

0801b480 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b480:	b510      	push	{r4, lr}
 801b482:	2104      	movs	r1, #4
 801b484:	4604      	mov	r4, r0
 801b486:	f00b f89b 	bl	80265c0 <_ZdlPvj>
 801b48a:	4620      	mov	r0, r4
 801b48c:	bd10      	pop	{r4, pc}

0801b48e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b48e:	b510      	push	{r4, lr}
 801b490:	2104      	movs	r1, #4
 801b492:	4604      	mov	r4, r0
 801b494:	f00b f894 	bl	80265c0 <_ZdlPvj>
 801b498:	4620      	mov	r0, r4
 801b49a:	bd10      	pop	{r4, pc}

0801b49c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b49c:	b510      	push	{r4, lr}
 801b49e:	2104      	movs	r1, #4
 801b4a0:	4604      	mov	r4, r0
 801b4a2:	f00b f88d 	bl	80265c0 <_ZdlPvj>
 801b4a6:	4620      	mov	r0, r4
 801b4a8:	bd10      	pop	{r4, pc}
	...

0801b4ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b4ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4b0:	b08f      	sub	sp, #60	; 0x3c
 801b4b2:	461c      	mov	r4, r3
 801b4b4:	9205      	str	r2, [sp, #20]
 801b4b6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b4ba:	9100      	str	r1, [sp, #0]
 801b4bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b4be:	9201      	str	r2, [sp, #4]
 801b4c0:	2a00      	cmp	r2, #0
 801b4c2:	f000 8115 	beq.w	801b6f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b4c6:	6820      	ldr	r0, [r4, #0]
 801b4c8:	6861      	ldr	r1, [r4, #4]
 801b4ca:	aa0a      	add	r2, sp, #40	; 0x28
 801b4cc:	c203      	stmia	r2!, {r0, r1}
 801b4ce:	6818      	ldr	r0, [r3, #0]
 801b4d0:	6859      	ldr	r1, [r3, #4]
 801b4d2:	aa0c      	add	r2, sp, #48	; 0x30
 801b4d4:	c203      	stmia	r2!, {r0, r1}
 801b4d6:	a80a      	add	r0, sp, #40	; 0x28
 801b4d8:	f7f9 fb2a 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b4dc:	4621      	mov	r1, r4
 801b4de:	a80c      	add	r0, sp, #48	; 0x30
 801b4e0:	f7f9 fb6a 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b4e4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b4e8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b4ec:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b4f0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b4f4:	bfde      	ittt	le
 801b4f6:	b2b3      	uxthle	r3, r6
 801b4f8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b4fc:	fb92 f3f3 	sdivle	r3, r2, r3
 801b500:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b504:	bfc8      	it	gt
 801b506:	2301      	movgt	r3, #1
 801b508:	fb92 f1f3 	sdiv	r1, r2, r3
 801b50c:	fa1f fc81 	uxth.w	ip, r1
 801b510:	fb0c 2413 	mls	r4, ip, r3, r2
 801b514:	fb14 f406 	smulbb	r4, r4, r6
 801b518:	441d      	add	r5, r3
 801b51a:	4404      	add	r4, r0
 801b51c:	4661      	mov	r1, ip
 801b51e:	3d01      	subs	r5, #1
 801b520:	b2a4      	uxth	r4, r4
 801b522:	fb95 f5f3 	sdiv	r5, r5, r3
 801b526:	b131      	cbz	r1, 801b536 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801b528:	9b05      	ldr	r3, [sp, #20]
 801b52a:	9900      	ldr	r1, [sp, #0]
 801b52c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b530:	ba1b      	rev	r3, r3
 801b532:	4419      	add	r1, r3
 801b534:	9100      	str	r1, [sp, #0]
 801b536:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b53a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801b53e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b542:	4418      	add	r0, r3
 801b544:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b548:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b54c:	441a      	add	r2, r3
 801b54e:	4b6a      	ldr	r3, [pc, #424]	; (801b6f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b550:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b554:	6818      	ldr	r0, [r3, #0]
 801b556:	6803      	ldr	r3, [r0, #0]
 801b558:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b55a:	4798      	blx	r3
 801b55c:	4967      	ldr	r1, [pc, #412]	; (801b6fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b55e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b562:	880b      	ldrh	r3, [r1, #0]
 801b564:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b568:	9109      	str	r1, [sp, #36]	; 0x24
 801b56a:	fb03 c202 	mla	r2, r3, r2, ip
 801b56e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b572:	4373      	muls	r3, r6
 801b574:	b2ad      	uxth	r5, r5
 801b576:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b57a:	00ad      	lsls	r5, r5, #2
 801b57c:	9306      	str	r3, [sp, #24]
 801b57e:	1d2b      	adds	r3, r5, #4
 801b580:	9307      	str	r3, [sp, #28]
 801b582:	9b01      	ldr	r3, [sp, #4]
 801b584:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b588:	9103      	str	r1, [sp, #12]
 801b58a:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801b58e:	2c00      	cmp	r4, #0
 801b590:	bf0c      	ite	eq
 801b592:	46c6      	moveq	lr, r8
 801b594:	f04f 0e00 	movne.w	lr, #0
 801b598:	2300      	movs	r3, #0
 801b59a:	b292      	uxth	r2, r2
 801b59c:	fa1f fe8e 	uxth.w	lr, lr
 801b5a0:	9302      	str	r3, [sp, #8]
 801b5a2:	9204      	str	r2, [sp, #16]
 801b5a4:	9a06      	ldr	r2, [sp, #24]
 801b5a6:	4282      	cmp	r2, r0
 801b5a8:	f240 809d 	bls.w	801b6e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801b5ac:	b963      	cbnz	r3, 801b5c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b5ae:	9b00      	ldr	r3, [sp, #0]
 801b5b0:	781a      	ldrb	r2, [r3, #0]
 801b5b2:	0993      	lsrs	r3, r2, #6
 801b5b4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b5b8:	9202      	str	r2, [sp, #8]
 801b5ba:	1e5a      	subs	r2, r3, #1
 801b5bc:	2a02      	cmp	r2, #2
 801b5be:	d815      	bhi.n	801b5ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801b5c0:	9a00      	ldr	r2, [sp, #0]
 801b5c2:	3201      	adds	r2, #1
 801b5c4:	9200      	str	r2, [sp, #0]
 801b5c6:	b29b      	uxth	r3, r3
 801b5c8:	b1b4      	cbz	r4, 801b5f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801b5ca:	429c      	cmp	r4, r3
 801b5cc:	bf95      	itete	ls
 801b5ce:	1b1c      	subls	r4, r3, r4
 801b5d0:	1ae4      	subhi	r4, r4, r3
 801b5d2:	fa1f fa84 	uxthls.w	sl, r4
 801b5d6:	b2a4      	uxthhi	r4, r4
 801b5d8:	bf87      	ittee	hi
 801b5da:	4671      	movhi	r1, lr
 801b5dc:	f04f 0a00 	movhi.w	sl, #0
 801b5e0:	fa1f f188 	uxthls.w	r1, r8
 801b5e4:	2400      	movls	r4, #0
 801b5e6:	4653      	mov	r3, sl
 801b5e8:	468e      	mov	lr, r1
 801b5ea:	e7db      	b.n	801b5a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801b5ec:	9a00      	ldr	r2, [sp, #0]
 801b5ee:	9b00      	ldr	r3, [sp, #0]
 801b5f0:	3202      	adds	r2, #2
 801b5f2:	785b      	ldrb	r3, [r3, #1]
 801b5f4:	9200      	str	r2, [sp, #0]
 801b5f6:	e7e7      	b.n	801b5c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b5f8:	2202      	movs	r2, #2
 801b5fa:	4615      	mov	r5, r2
 801b5fc:	9907      	ldr	r1, [sp, #28]
 801b5fe:	9a02      	ldr	r2, [sp, #8]
 801b600:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b604:	9905      	ldr	r1, [sp, #20]
 801b606:	4573      	cmp	r3, lr
 801b608:	f831 c002 	ldrh.w	ip, [r1, r2]
 801b60c:	9a01      	ldr	r2, [sp, #4]
 801b60e:	bf2b      	itete	cs
 801b610:	eba3 0a0e 	subcs.w	sl, r3, lr
 801b614:	ebae 0103 	subcc.w	r1, lr, r3
 801b618:	46f1      	movcs	r9, lr
 801b61a:	4699      	movcc	r9, r3
 801b61c:	bf27      	ittee	cs
 801b61e:	fa1f fa8a 	uxthcs.w	sl, sl
 801b622:	4621      	movcs	r1, r4
 801b624:	b289      	uxthcc	r1, r1
 801b626:	46a2      	movcc	sl, r4
 801b628:	2aff      	cmp	r2, #255	; 0xff
 801b62a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b62e:	d105      	bne.n	801b63c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b630:	4481      	add	r9, r0
 801b632:	4581      	cmp	r9, r0
 801b634:	d045      	beq.n	801b6c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b636:	f820 cb02 	strh.w	ip, [r0], #2
 801b63a:	e7fa      	b.n	801b632 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801b63c:	9d03      	ldr	r5, [sp, #12]
 801b63e:	ea4f 222c 	mov.w	r2, ip, asr #8
 801b642:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b646:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b64a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b64e:	436a      	muls	r2, r5
 801b650:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b654:	fa5f fc8c 	uxtb.w	ip, ip
 801b658:	9208      	str	r2, [sp, #32]
 801b65a:	fb0b fb05 	mul.w	fp, fp, r5
 801b65e:	fb0c fc05 	mul.w	ip, ip, r5
 801b662:	4481      	add	r9, r0
 801b664:	4581      	cmp	r9, r0
 801b666:	d02c      	beq.n	801b6c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b668:	8802      	ldrh	r2, [r0, #0]
 801b66a:	9d04      	ldr	r5, [sp, #16]
 801b66c:	9f04      	ldr	r7, [sp, #16]
 801b66e:	1216      	asrs	r6, r2, #8
 801b670:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b674:	fb16 f605 	smulbb	r6, r6, r5
 801b678:	9d08      	ldr	r5, [sp, #32]
 801b67a:	442e      	add	r6, r5
 801b67c:	10d5      	asrs	r5, r2, #3
 801b67e:	00d2      	lsls	r2, r2, #3
 801b680:	b2d2      	uxtb	r2, r2
 801b682:	fb12 f207 	smulbb	r2, r2, r7
 801b686:	b2b6      	uxth	r6, r6
 801b688:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b68c:	4462      	add	r2, ip
 801b68e:	fb15 f507 	smulbb	r5, r5, r7
 801b692:	b292      	uxth	r2, r2
 801b694:	1c77      	adds	r7, r6, #1
 801b696:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b69a:	1c57      	adds	r7, r2, #1
 801b69c:	445d      	add	r5, fp
 801b69e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b6a2:	b2ad      	uxth	r5, r5
 801b6a4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b6a8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b6ac:	4316      	orrs	r6, r2
 801b6ae:	1c6a      	adds	r2, r5, #1
 801b6b0:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b6b4:	096d      	lsrs	r5, r5, #5
 801b6b6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b6ba:	432e      	orrs	r6, r5
 801b6bc:	f820 6b02 	strh.w	r6, [r0], #2
 801b6c0:	e7d0      	b.n	801b664 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801b6c2:	4573      	cmp	r3, lr
 801b6c4:	d38f      	bcc.n	801b5e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b6c6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b6ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b6cc:	fa1f f188 	uxth.w	r1, r8
 801b6d0:	1a64      	subs	r4, r4, r1
 801b6d2:	881b      	ldrh	r3, [r3, #0]
 801b6d4:	b2a4      	uxth	r4, r4
 801b6d6:	2c00      	cmp	r4, #0
 801b6d8:	eba3 0308 	sub.w	r3, r3, r8
 801b6dc:	bf18      	it	ne
 801b6de:	2100      	movne	r1, #0
 801b6e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b6e4:	e77f      	b.n	801b5e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b6e6:	4b04      	ldr	r3, [pc, #16]	; (801b6f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b6e8:	6818      	ldr	r0, [r3, #0]
 801b6ea:	6803      	ldr	r3, [r0, #0]
 801b6ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b6ee:	4798      	blx	r3
 801b6f0:	b00f      	add	sp, #60	; 0x3c
 801b6f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b6f6:	bf00      	nop
 801b6f8:	2000ef1c 	.word	0x2000ef1c
 801b6fc:	2000ef16 	.word	0x2000ef16

0801b700 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b704:	b09f      	sub	sp, #124	; 0x7c
 801b706:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801b70a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801b70e:	9209      	str	r2, [sp, #36]	; 0x24
 801b710:	461d      	mov	r5, r3
 801b712:	4604      	mov	r4, r0
 801b714:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b716:	2a00      	cmp	r2, #0
 801b718:	f000 81eb 	beq.w	801baf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b71c:	6828      	ldr	r0, [r5, #0]
 801b71e:	6869      	ldr	r1, [r5, #4]
 801b720:	aa1a      	add	r2, sp, #104	; 0x68
 801b722:	c203      	stmia	r2!, {r0, r1}
 801b724:	6818      	ldr	r0, [r3, #0]
 801b726:	6859      	ldr	r1, [r3, #4]
 801b728:	aa1c      	add	r2, sp, #112	; 0x70
 801b72a:	c203      	stmia	r2!, {r0, r1}
 801b72c:	a81a      	add	r0, sp, #104	; 0x68
 801b72e:	f7f9 f9ff 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b732:	4629      	mov	r1, r5
 801b734:	a81c      	add	r0, sp, #112	; 0x70
 801b736:	f7f9 fa3f 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b73a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b73e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801b742:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801b746:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b74a:	bfd7      	itett	le
 801b74c:	b29a      	uxthle	r2, r3
 801b74e:	2201      	movgt	r2, #1
 801b750:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b754:	fb91 f2f2 	sdivle	r2, r1, r2
 801b758:	9202      	str	r2, [sp, #8]
 801b75a:	9802      	ldr	r0, [sp, #8]
 801b75c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801b760:	fb92 f0f0 	sdiv	r0, r2, r0
 801b764:	b280      	uxth	r0, r0
 801b766:	9010      	str	r0, [sp, #64]	; 0x40
 801b768:	9902      	ldr	r1, [sp, #8]
 801b76a:	9802      	ldr	r0, [sp, #8]
 801b76c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b76e:	4488      	add	r8, r1
 801b770:	fb05 2510 	mls	r5, r5, r0, r2
 801b774:	fb15 f503 	smulbb	r5, r5, r3
 801b778:	f108 38ff 	add.w	r8, r8, #4294967295
 801b77c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b780:	fb98 f8f1 	sdiv	r8, r8, r1
 801b784:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801b788:	440d      	add	r5, r1
 801b78a:	4419      	add	r1, r3
 801b78c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801b790:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801b794:	441a      	add	r2, r3
 801b796:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801b79a:	9304      	str	r3, [sp, #16]
 801b79c:	4b95      	ldr	r3, [pc, #596]	; (801b9f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801b79e:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801b7a2:	6818      	ldr	r0, [r3, #0]
 801b7a4:	6803      	ldr	r3, [r0, #0]
 801b7a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b7a8:	4798      	blx	r3
 801b7aa:	4b93      	ldr	r3, [pc, #588]	; (801b9f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b7ac:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801b7b0:	881a      	ldrh	r2, [r3, #0]
 801b7b2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b7b6:	9318      	str	r3, [sp, #96]	; 0x60
 801b7b8:	fb02 7101 	mla	r1, r2, r1, r7
 801b7bc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b7c0:	4356      	muls	r6, r2
 801b7c2:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b7c6:	f108 0801 	add.w	r8, r8, #1
 801b7ca:	920a      	str	r2, [sp, #40]	; 0x28
 801b7cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b7ce:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801b7d2:	930f      	str	r3, [sp, #60]	; 0x3c
 801b7d4:	fa1f f888 	uxth.w	r8, r8
 801b7d8:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b7dc:	f108 0204 	add.w	r2, r8, #4
 801b7e0:	9211      	str	r2, [sp, #68]	; 0x44
 801b7e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b7e4:	4b85      	ldr	r3, [pc, #532]	; (801b9fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b7e6:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801b7ea:	b2ad      	uxth	r5, r5
 801b7ec:	9215      	str	r2, [sp, #84]	; 0x54
 801b7ee:	2d00      	cmp	r5, #0
 801b7f0:	9a04      	ldr	r2, [sp, #16]
 801b7f2:	f04f 0100 	mov.w	r1, #0
 801b7f6:	bf18      	it	ne
 801b7f8:	2200      	movne	r2, #0
 801b7fa:	1b1b      	subs	r3, r3, r4
 801b7fc:	b292      	uxth	r2, r2
 801b7fe:	910d      	str	r1, [sp, #52]	; 0x34
 801b800:	9319      	str	r3, [sp, #100]	; 0x64
 801b802:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b804:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b806:	fa11 f383 	uxtah	r3, r1, r3
 801b80a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b80c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b810:	3304      	adds	r3, #4
 801b812:	9306      	str	r3, [sp, #24]
 801b814:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b816:	4283      	cmp	r3, r0
 801b818:	f240 8166 	bls.w	801bae8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801b81c:	9902      	ldr	r1, [sp, #8]
 801b81e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b822:	fbb5 f3f3 	udiv	r3, r5, r3
 801b826:	1acb      	subs	r3, r1, r3
 801b828:	b29b      	uxth	r3, r3
 801b82a:	9316      	str	r3, [sp, #88]	; 0x58
 801b82c:	9b06      	ldr	r3, [sp, #24]
 801b82e:	9e06      	ldr	r6, [sp, #24]
 801b830:	7859      	ldrb	r1, [r3, #1]
 801b832:	789b      	ldrb	r3, [r3, #2]
 801b834:	7836      	ldrb	r6, [r6, #0]
 801b836:	9612      	str	r6, [sp, #72]	; 0x48
 801b838:	021b      	lsls	r3, r3, #8
 801b83a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b83e:	9906      	ldr	r1, [sp, #24]
 801b840:	78c9      	ldrb	r1, [r1, #3]
 801b842:	430b      	orrs	r3, r1
 801b844:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801b846:	3601      	adds	r6, #1
 801b848:	4419      	add	r1, r3
 801b84a:	9605      	str	r6, [sp, #20]
 801b84c:	1c4e      	adds	r6, r1, #1
 801b84e:	9603      	str	r6, [sp, #12]
 801b850:	7849      	ldrb	r1, [r1, #1]
 801b852:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b854:	0209      	lsls	r1, r1, #8
 801b856:	5cf3      	ldrb	r3, [r6, r3]
 801b858:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801b85c:	4319      	orrs	r1, r3
 801b85e:	b28b      	uxth	r3, r1
 801b860:	930c      	str	r3, [sp, #48]	; 0x30
 801b862:	2300      	movs	r3, #0
 801b864:	f04f 0a01 	mov.w	sl, #1
 801b868:	9307      	str	r3, [sp, #28]
 801b86a:	469c      	mov	ip, r3
 801b86c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b870:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b874:	46d3      	mov	fp, sl
 801b876:	4657      	mov	r7, sl
 801b878:	930e      	str	r3, [sp, #56]	; 0x38
 801b87a:	2d00      	cmp	r5, #0
 801b87c:	d07e      	beq.n	801b97c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b87e:	42af      	cmp	r7, r5
 801b880:	d26e      	bcs.n	801b960 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801b882:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b884:	9201      	str	r2, [sp, #4]
 801b886:	1bed      	subs	r5, r5, r7
 801b888:	4283      	cmp	r3, r0
 801b88a:	b2ad      	uxth	r5, r5
 801b88c:	d802      	bhi.n	801b894 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b88e:	e073      	b.n	801b978 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801b890:	2b00      	cmp	r3, #0
 801b892:	d15f      	bne.n	801b954 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801b894:	9b03      	ldr	r3, [sp, #12]
 801b896:	785b      	ldrb	r3, [r3, #1]
 801b898:	f1cb 0207 	rsb	r2, fp, #7
 801b89c:	4093      	lsls	r3, r2
 801b89e:	005b      	lsls	r3, r3, #1
 801b8a0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b8a4:	9b03      	ldr	r3, [sp, #12]
 801b8a6:	781b      	ldrb	r3, [r3, #0]
 801b8a8:	fa43 f30b 	asr.w	r3, r3, fp
 801b8ac:	b2db      	uxtb	r3, r3
 801b8ae:	4313      	orrs	r3, r2
 801b8b0:	f10b 0201 	add.w	r2, fp, #1
 801b8b4:	fa5f fb82 	uxtb.w	fp, r2
 801b8b8:	9a03      	ldr	r2, [sp, #12]
 801b8ba:	f1bb 0f08 	cmp.w	fp, #8
 801b8be:	bf15      	itete	ne
 801b8c0:	3201      	addne	r2, #1
 801b8c2:	3202      	addeq	r2, #2
 801b8c4:	9203      	strne	r2, [sp, #12]
 801b8c6:	9203      	streq	r2, [sp, #12]
 801b8c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b8ca:	b29f      	uxth	r7, r3
 801b8cc:	bf08      	it	eq
 801b8ce:	f04f 0b00 	moveq.w	fp, #0
 801b8d2:	42ba      	cmp	r2, r7
 801b8d4:	d309      	bcc.n	801b8ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b8d6:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b8da:	2301      	movs	r3, #1
 801b8dc:	9a05      	ldr	r2, [sp, #20]
 801b8de:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801b8e2:	d30e      	bcc.n	801b902 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801b8e4:	469a      	mov	sl, r3
 801b8e6:	2600      	movs	r6, #0
 801b8e8:	e035      	b.n	801b956 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801b8ea:	9b05      	ldr	r3, [sp, #20]
 801b8ec:	429f      	cmp	r7, r3
 801b8ee:	d318      	bcc.n	801b922 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801b8f0:	eb04 030a 	add.w	r3, r4, sl
 801b8f4:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801b8f8:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801b8fc:	f10a 0301 	add.w	r3, sl, #1
 801b900:	b29b      	uxth	r3, r3
 801b902:	9a05      	ldr	r2, [sp, #20]
 801b904:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b908:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b90a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b90e:	7116      	strb	r6, [r2, #4]
 801b910:	f10a 0601 	add.w	r6, sl, #1
 801b914:	80d1      	strh	r1, [r2, #6]
 801b916:	7156      	strb	r6, [r2, #5]
 801b918:	9a05      	ldr	r2, [sp, #20]
 801b91a:	3201      	adds	r2, #1
 801b91c:	b292      	uxth	r2, r2
 801b91e:	9205      	str	r2, [sp, #20]
 801b920:	e7e0      	b.n	801b8e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801b922:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b926:	463a      	mov	r2, r7
 801b928:	795b      	ldrb	r3, [r3, #5]
 801b92a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b92e:	4426      	add	r6, r4
 801b930:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b932:	eb01 0c06 	add.w	ip, r1, r6
 801b936:	f1bc 0f00 	cmp.w	ip, #0
 801b93a:	dd07      	ble.n	801b94c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801b93c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b940:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b944:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b948:	88d2      	ldrh	r2, [r2, #6]
 801b94a:	e7f1      	b.n	801b930 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801b94c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b950:	b29b      	uxth	r3, r3
 801b952:	e7c3      	b.n	801b8dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801b954:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b956:	970c      	str	r7, [sp, #48]	; 0x30
 801b958:	9a01      	ldr	r2, [sp, #4]
 801b95a:	46b4      	mov	ip, r6
 801b95c:	461f      	mov	r7, r3
 801b95e:	e78c      	b.n	801b87a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801b960:	1b7b      	subs	r3, r7, r5
 801b962:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b966:	9201      	str	r2, [sp, #4]
 801b968:	eb0c 0605 	add.w	r6, ip, r5
 801b96c:	b29b      	uxth	r3, r3
 801b96e:	b2b6      	uxth	r6, r6
 801b970:	2500      	movs	r5, #0
 801b972:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b974:	4282      	cmp	r2, r0
 801b976:	d88b      	bhi.n	801b890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b978:	9a01      	ldr	r2, [sp, #4]
 801b97a:	e74b      	b.n	801b814 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801b97c:	4297      	cmp	r7, r2
 801b97e:	d332      	bcc.n	801b9e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801b980:	1abb      	subs	r3, r7, r2
 801b982:	b29b      	uxth	r3, r3
 801b984:	9208      	str	r2, [sp, #32]
 801b986:	9501      	str	r5, [sp, #4]
 801b988:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b98a:	29ff      	cmp	r1, #255	; 0xff
 801b98c:	9908      	ldr	r1, [sp, #32]
 801b98e:	eb0c 0601 	add.w	r6, ip, r1
 801b992:	d135      	bne.n	801ba00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801b994:	f1a0 0e02 	sub.w	lr, r0, #2
 801b998:	b2b6      	uxth	r6, r6
 801b99a:	45b4      	cmp	ip, r6
 801b99c:	f040 808c 	bne.w	801bab8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801b9a0:	9908      	ldr	r1, [sp, #32]
 801b9a2:	4297      	cmp	r7, r2
 801b9a4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b9a8:	d3e2      	bcc.n	801b970 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801b9aa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b9ac:	9904      	ldr	r1, [sp, #16]
 801b9ae:	8812      	ldrh	r2, [r2, #0]
 801b9b0:	1a52      	subs	r2, r2, r1
 801b9b2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b9b6:	9a07      	ldr	r2, [sp, #28]
 801b9b8:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b9ba:	3201      	adds	r2, #1
 801b9bc:	428a      	cmp	r2, r1
 801b9be:	9207      	str	r2, [sp, #28]
 801b9c0:	f040 8087 	bne.w	801bad2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b9c4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b9c8:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801b9cc:	9b04      	ldr	r3, [sp, #16]
 801b9ce:	1bed      	subs	r5, r5, r7
 801b9d0:	b2ad      	uxth	r5, r5
 801b9d2:	2d00      	cmp	r5, #0
 801b9d4:	bf08      	it	eq
 801b9d6:	461a      	moveq	r2, r3
 801b9d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b9da:	bf18      	it	ne
 801b9dc:	2200      	movne	r2, #0
 801b9de:	3301      	adds	r3, #1
 801b9e0:	930d      	str	r3, [sp, #52]	; 0x34
 801b9e2:	b292      	uxth	r2, r2
 801b9e4:	e70d      	b.n	801b802 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801b9e6:	1bd1      	subs	r1, r2, r7
 801b9e8:	b28b      	uxth	r3, r1
 801b9ea:	9301      	str	r3, [sp, #4]
 801b9ec:	9708      	str	r7, [sp, #32]
 801b9ee:	462b      	mov	r3, r5
 801b9f0:	e7ca      	b.n	801b988 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801b9f2:	bf00      	nop
 801b9f4:	2000ef1c 	.word	0x2000ef1c
 801b9f8:	2000ef16 	.word	0x2000ef16
 801b9fc:	fffff7fb 	.word	0xfffff7fb
 801ba00:	b2b6      	uxth	r6, r6
 801ba02:	900b      	str	r0, [sp, #44]	; 0x2c
 801ba04:	45b4      	cmp	ip, r6
 801ba06:	d0cb      	beq.n	801b9a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801ba08:	f10c 0101 	add.w	r1, ip, #1
 801ba0c:	44a4      	add	ip, r4
 801ba0e:	9117      	str	r1, [sp, #92]	; 0x5c
 801ba10:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801ba14:	9911      	ldr	r1, [sp, #68]	; 0x44
 801ba16:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801ba1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801ba1c:	f8b1 c000 	ldrh.w	ip, [r1]
 801ba20:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ba22:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801ba26:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ba2a:	fb1e fe01 	smulbb	lr, lr, r1
 801ba2e:	ea4f 2825 	mov.w	r8, r5, asr #8
 801ba32:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ba34:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801ba38:	fb08 e801 	mla	r8, r8, r1, lr
 801ba3c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801ba40:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ba42:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ba46:	fb19 f901 	smulbb	r9, r9, r1
 801ba4a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801ba4e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ba50:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ba54:	fb0e 9e01 	mla	lr, lr, r1, r9
 801ba58:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ba5c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ba5e:	fa5f fc8c 	uxtb.w	ip, ip
 801ba62:	fb1c fc01 	smulbb	ip, ip, r1
 801ba66:	00ed      	lsls	r5, r5, #3
 801ba68:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ba6a:	b2ed      	uxtb	r5, r5
 801ba6c:	fb05 c501 	mla	r5, r5, r1, ip
 801ba70:	fa1f f888 	uxth.w	r8, r8
 801ba74:	fa1f fe8e 	uxth.w	lr, lr
 801ba78:	b2ad      	uxth	r5, r5
 801ba7a:	f108 0c01 	add.w	ip, r8, #1
 801ba7e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801ba82:	f10e 0901 	add.w	r9, lr, #1
 801ba86:	f105 0c01 	add.w	ip, r5, #1
 801ba8a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801ba8e:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801ba92:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ba96:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ba9a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ba9e:	ea4c 0808 	orr.w	r8, ip, r8
 801baa2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801baa4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801baa8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801baac:	ea48 0809 	orr.w	r8, r8, r9
 801bab0:	f821 8b02 	strh.w	r8, [r1], #2
 801bab4:	910b      	str	r1, [sp, #44]	; 0x2c
 801bab6:	e7a5      	b.n	801ba04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801bab8:	f10c 0801 	add.w	r8, ip, #1
 801babc:	44a4      	add	ip, r4
 801babe:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bac0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801bac4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801bac8:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801bacc:	fa1f fc88 	uxth.w	ip, r8
 801bad0:	e763      	b.n	801b99a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801bad2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801bad6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801bada:	1aad      	subs	r5, r5, r2
 801badc:	b2ad      	uxth	r5, r5
 801bade:	2d00      	cmp	r5, #0
 801bae0:	bf18      	it	ne
 801bae2:	2200      	movne	r2, #0
 801bae4:	9201      	str	r2, [sp, #4]
 801bae6:	e744      	b.n	801b972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801bae8:	4b03      	ldr	r3, [pc, #12]	; (801baf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801baea:	6818      	ldr	r0, [r3, #0]
 801baec:	6803      	ldr	r3, [r0, #0]
 801baee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801baf0:	4798      	blx	r3
 801baf2:	b01f      	add	sp, #124	; 0x7c
 801baf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801baf8:	2000ef1c 	.word	0x2000ef1c

0801bafc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bafc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb00:	b08f      	sub	sp, #60	; 0x3c
 801bb02:	461c      	mov	r4, r3
 801bb04:	9203      	str	r2, [sp, #12]
 801bb06:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bb0a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bb0c:	9202      	str	r2, [sp, #8]
 801bb0e:	460f      	mov	r7, r1
 801bb10:	2a00      	cmp	r2, #0
 801bb12:	f000 8128 	beq.w	801bd66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801bb16:	6820      	ldr	r0, [r4, #0]
 801bb18:	6861      	ldr	r1, [r4, #4]
 801bb1a:	aa0a      	add	r2, sp, #40	; 0x28
 801bb1c:	c203      	stmia	r2!, {r0, r1}
 801bb1e:	6818      	ldr	r0, [r3, #0]
 801bb20:	6859      	ldr	r1, [r3, #4]
 801bb22:	aa0c      	add	r2, sp, #48	; 0x30
 801bb24:	c203      	stmia	r2!, {r0, r1}
 801bb26:	a80a      	add	r0, sp, #40	; 0x28
 801bb28:	f7f9 f802 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bb2c:	4621      	mov	r1, r4
 801bb2e:	a80c      	add	r0, sp, #48	; 0x30
 801bb30:	f7f9 f842 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bb34:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801bb38:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801bb3c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801bb40:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801bb44:	bfde      	ittt	le
 801bb46:	b2b3      	uxthle	r3, r6
 801bb48:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801bb4c:	fb92 f3f3 	sdivle	r3, r2, r3
 801bb50:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801bb54:	bfc8      	it	gt
 801bb56:	2301      	movgt	r3, #1
 801bb58:	fb92 f1f3 	sdiv	r1, r2, r3
 801bb5c:	fa1f fc81 	uxth.w	ip, r1
 801bb60:	fb0c 2413 	mls	r4, ip, r3, r2
 801bb64:	fb14 f406 	smulbb	r4, r4, r6
 801bb68:	441d      	add	r5, r3
 801bb6a:	4404      	add	r4, r0
 801bb6c:	4661      	mov	r1, ip
 801bb6e:	3d01      	subs	r5, #1
 801bb70:	b2a4      	uxth	r4, r4
 801bb72:	fb95 f5f3 	sdiv	r5, r5, r3
 801bb76:	b121      	cbz	r1, 801bb82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801bb78:	9b03      	ldr	r3, [sp, #12]
 801bb7a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801bb7e:	ba1b      	rev	r3, r3
 801bb80:	441f      	add	r7, r3
 801bb82:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801bb86:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801bb8a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801bb8e:	4418      	add	r0, r3
 801bb90:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801bb94:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801bb98:	441a      	add	r2, r3
 801bb9a:	4b74      	ldr	r3, [pc, #464]	; (801bd6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801bb9c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801bba0:	6818      	ldr	r0, [r3, #0]
 801bba2:	6803      	ldr	r3, [r0, #0]
 801bba4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bba6:	4798      	blx	r3
 801bba8:	4a71      	ldr	r2, [pc, #452]	; (801bd70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801bbaa:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801bbae:	8813      	ldrh	r3, [r2, #0]
 801bbb0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801bbb4:	9209      	str	r2, [sp, #36]	; 0x24
 801bbb6:	fb03 c101 	mla	r1, r3, r1, ip
 801bbba:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bbbe:	4373      	muls	r3, r6
 801bbc0:	b2ad      	uxth	r5, r5
 801bbc2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bbc6:	00ad      	lsls	r5, r5, #2
 801bbc8:	2c00      	cmp	r4, #0
 801bbca:	9304      	str	r3, [sp, #16]
 801bbcc:	f105 0304 	add.w	r3, r5, #4
 801bbd0:	9305      	str	r3, [sp, #20]
 801bbd2:	bf0c      	ite	eq
 801bbd4:	46c8      	moveq	r8, r9
 801bbd6:	f04f 0800 	movne.w	r8, #0
 801bbda:	2300      	movs	r3, #0
 801bbdc:	fa1f f888 	uxth.w	r8, r8
 801bbe0:	9301      	str	r3, [sp, #4]
 801bbe2:	9a04      	ldr	r2, [sp, #16]
 801bbe4:	4282      	cmp	r2, r0
 801bbe6:	f240 80b9 	bls.w	801bd5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801bbea:	b95b      	cbnz	r3, 801bc04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801bbec:	783a      	ldrb	r2, [r7, #0]
 801bbee:	0993      	lsrs	r3, r2, #6
 801bbf0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801bbf4:	9201      	str	r2, [sp, #4]
 801bbf6:	1e5a      	subs	r2, r3, #1
 801bbf8:	2a02      	cmp	r2, #2
 801bbfa:	bf8d      	iteet	hi
 801bbfc:	787b      	ldrbhi	r3, [r7, #1]
 801bbfe:	3701      	addls	r7, #1
 801bc00:	b29b      	uxthls	r3, r3
 801bc02:	3702      	addhi	r7, #2
 801bc04:	b184      	cbz	r4, 801bc28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801bc06:	429c      	cmp	r4, r3
 801bc08:	bf95      	itete	ls
 801bc0a:	1b1c      	subls	r4, r3, r4
 801bc0c:	1ae4      	subhi	r4, r4, r3
 801bc0e:	fa1f fa84 	uxthls.w	sl, r4
 801bc12:	b2a4      	uxthhi	r4, r4
 801bc14:	bf87      	ittee	hi
 801bc16:	46c4      	movhi	ip, r8
 801bc18:	f04f 0a00 	movhi.w	sl, #0
 801bc1c:	fa1f fc89 	uxthls.w	ip, r9
 801bc20:	2400      	movls	r4, #0
 801bc22:	4653      	mov	r3, sl
 801bc24:	46e0      	mov	r8, ip
 801bc26:	e7dc      	b.n	801bbe2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801bc28:	2204      	movs	r2, #4
 801bc2a:	4615      	mov	r5, r2
 801bc2c:	9905      	ldr	r1, [sp, #20]
 801bc2e:	9a01      	ldr	r2, [sp, #4]
 801bc30:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bc34:	9903      	ldr	r1, [sp, #12]
 801bc36:	588a      	ldr	r2, [r1, r2]
 801bc38:	4543      	cmp	r3, r8
 801bc3a:	bf27      	ittee	cs
 801bc3c:	eba3 0a08 	subcs.w	sl, r3, r8
 801bc40:	46c6      	movcs	lr, r8
 801bc42:	eba8 0c03 	subcc.w	ip, r8, r3
 801bc46:	469e      	movcc	lr, r3
 801bc48:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801bc4c:	bf27      	ittee	cs
 801bc4e:	fa1f fa8a 	uxthcs.w	sl, sl
 801bc52:	46a4      	movcs	ip, r4
 801bc54:	fa1f fc8c 	uxthcc.w	ip, ip
 801bc58:	46a2      	movcc	sl, r4
 801bc5a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801bc5e:	2900      	cmp	r1, #0
 801bc60:	d066      	beq.n	801bd30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801bc62:	29ff      	cmp	r1, #255	; 0xff
 801bc64:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801bc68:	d114      	bne.n	801bc94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bc6a:	9d02      	ldr	r5, [sp, #8]
 801bc6c:	2dff      	cmp	r5, #255	; 0xff
 801bc6e:	d111      	bne.n	801bc94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bc70:	0951      	lsrs	r1, r2, #5
 801bc72:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bc76:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bc7a:	f026 0607 	bic.w	r6, r6, #7
 801bc7e:	430e      	orrs	r6, r1
 801bc80:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bc84:	4316      	orrs	r6, r2
 801bc86:	b2b6      	uxth	r6, r6
 801bc88:	4486      	add	lr, r0
 801bc8a:	4586      	cmp	lr, r0
 801bc8c:	d051      	beq.n	801bd32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bc8e:	f820 6b02 	strh.w	r6, [r0], #2
 801bc92:	e7fa      	b.n	801bc8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801bc94:	9d02      	ldr	r5, [sp, #8]
 801bc96:	4369      	muls	r1, r5
 801bc98:	1c4d      	adds	r5, r1, #1
 801bc9a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801bc9e:	122d      	asrs	r5, r5, #8
 801bca0:	ea6f 0b05 	mvn.w	fp, r5
 801bca4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801bca8:	b2ad      	uxth	r5, r5
 801bcaa:	b2f6      	uxtb	r6, r6
 801bcac:	b2d2      	uxtb	r2, r2
 801bcae:	fb11 f105 	smulbb	r1, r1, r5
 801bcb2:	fb16 f605 	smulbb	r6, r6, r5
 801bcb6:	fb12 f205 	smulbb	r2, r2, r5
 801bcba:	b289      	uxth	r1, r1
 801bcbc:	b2b6      	uxth	r6, r6
 801bcbe:	b292      	uxth	r2, r2
 801bcc0:	9106      	str	r1, [sp, #24]
 801bcc2:	9607      	str	r6, [sp, #28]
 801bcc4:	9208      	str	r2, [sp, #32]
 801bcc6:	4486      	add	lr, r0
 801bcc8:	fa5f fb8b 	uxtb.w	fp, fp
 801bccc:	4586      	cmp	lr, r0
 801bcce:	d030      	beq.n	801bd32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bcd0:	8802      	ldrh	r2, [r0, #0]
 801bcd2:	9906      	ldr	r1, [sp, #24]
 801bcd4:	1216      	asrs	r6, r2, #8
 801bcd6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bcda:	10d5      	asrs	r5, r2, #3
 801bcdc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801bce0:	fb06 160b 	mla	r6, r6, fp, r1
 801bce4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bce8:	9907      	ldr	r1, [sp, #28]
 801bcea:	00d2      	lsls	r2, r2, #3
 801bcec:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801bcf0:	fb05 150b 	mla	r5, r5, fp, r1
 801bcf4:	b2d2      	uxtb	r2, r2
 801bcf6:	9908      	ldr	r1, [sp, #32]
 801bcf8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bcfc:	b2b6      	uxth	r6, r6
 801bcfe:	fb02 120b 	mla	r2, r2, fp, r1
 801bd02:	b292      	uxth	r2, r2
 801bd04:	1c71      	adds	r1, r6, #1
 801bd06:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801bd0a:	1c51      	adds	r1, r2, #1
 801bd0c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bd10:	b2ad      	uxth	r5, r5
 801bd12:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bd16:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bd1a:	4316      	orrs	r6, r2
 801bd1c:	1c6a      	adds	r2, r5, #1
 801bd1e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801bd22:	096d      	lsrs	r5, r5, #5
 801bd24:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bd28:	432e      	orrs	r6, r5
 801bd2a:	f820 6b02 	strh.w	r6, [r0], #2
 801bd2e:	e7cd      	b.n	801bccc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801bd30:	4470      	add	r0, lr
 801bd32:	4543      	cmp	r3, r8
 801bd34:	f4ff af75 	bcc.w	801bc22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801bd38:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801bd3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd3e:	fa1f fc89 	uxth.w	ip, r9
 801bd42:	eba4 040c 	sub.w	r4, r4, ip
 801bd46:	881b      	ldrh	r3, [r3, #0]
 801bd48:	b2a4      	uxth	r4, r4
 801bd4a:	2c00      	cmp	r4, #0
 801bd4c:	eba3 0309 	sub.w	r3, r3, r9
 801bd50:	bf18      	it	ne
 801bd52:	f04f 0c00 	movne.w	ip, #0
 801bd56:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bd5a:	e762      	b.n	801bc22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801bd5c:	4b03      	ldr	r3, [pc, #12]	; (801bd6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801bd5e:	6818      	ldr	r0, [r3, #0]
 801bd60:	6803      	ldr	r3, [r0, #0]
 801bd62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bd64:	4798      	blx	r3
 801bd66:	b00f      	add	sp, #60	; 0x3c
 801bd68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd6c:	2000ef1c 	.word	0x2000ef1c
 801bd70:	2000ef16 	.word	0x2000ef16

0801bd74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801bd74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd78:	b093      	sub	sp, #76	; 0x4c
 801bd7a:	461c      	mov	r4, r3
 801bd7c:	9205      	str	r2, [sp, #20]
 801bd7e:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801bd82:	9101      	str	r1, [sp, #4]
 801bd84:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bd86:	9202      	str	r2, [sp, #8]
 801bd88:	2a00      	cmp	r2, #0
 801bd8a:	f000 812c 	beq.w	801bfe6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801bd8e:	6820      	ldr	r0, [r4, #0]
 801bd90:	6861      	ldr	r1, [r4, #4]
 801bd92:	aa0e      	add	r2, sp, #56	; 0x38
 801bd94:	c203      	stmia	r2!, {r0, r1}
 801bd96:	6818      	ldr	r0, [r3, #0]
 801bd98:	6859      	ldr	r1, [r3, #4]
 801bd9a:	aa10      	add	r2, sp, #64	; 0x40
 801bd9c:	c203      	stmia	r2!, {r0, r1}
 801bd9e:	a80e      	add	r0, sp, #56	; 0x38
 801bda0:	f7f8 fec6 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bda4:	4621      	mov	r1, r4
 801bda6:	a810      	add	r0, sp, #64	; 0x40
 801bda8:	f7f8 ff06 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bdac:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801bdb0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801bdb4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801bdb8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801bdbc:	bfde      	ittt	le
 801bdbe:	b2b3      	uxthle	r3, r6
 801bdc0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801bdc4:	fb92 f3f3 	sdivle	r3, r2, r3
 801bdc8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bdcc:	bfc8      	it	gt
 801bdce:	2301      	movgt	r3, #1
 801bdd0:	fb92 f1f3 	sdiv	r1, r2, r3
 801bdd4:	fa1f fc81 	uxth.w	ip, r1
 801bdd8:	fb0c 2413 	mls	r4, ip, r3, r2
 801bddc:	fb14 f406 	smulbb	r4, r4, r6
 801bde0:	441d      	add	r5, r3
 801bde2:	4404      	add	r4, r0
 801bde4:	4661      	mov	r1, ip
 801bde6:	3d01      	subs	r5, #1
 801bde8:	b2a4      	uxth	r4, r4
 801bdea:	fb95 f5f3 	sdiv	r5, r5, r3
 801bdee:	b131      	cbz	r1, 801bdfe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801bdf0:	9b05      	ldr	r3, [sp, #20]
 801bdf2:	9901      	ldr	r1, [sp, #4]
 801bdf4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801bdf8:	ba1b      	rev	r3, r3
 801bdfa:	4419      	add	r1, r3
 801bdfc:	9101      	str	r1, [sp, #4]
 801bdfe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801be02:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801be06:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801be0a:	4418      	add	r0, r3
 801be0c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801be10:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801be14:	441a      	add	r2, r3
 801be16:	4b75      	ldr	r3, [pc, #468]	; (801bfec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801be18:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801be1c:	6818      	ldr	r0, [r3, #0]
 801be1e:	6803      	ldr	r3, [r0, #0]
 801be20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801be22:	4798      	blx	r3
 801be24:	4972      	ldr	r1, [pc, #456]	; (801bff0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801be26:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801be2a:	880b      	ldrh	r3, [r1, #0]
 801be2c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801be30:	910d      	str	r1, [sp, #52]	; 0x34
 801be32:	fb03 c202 	mla	r2, r3, r2, ip
 801be36:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801be3a:	4373      	muls	r3, r6
 801be3c:	b2ad      	uxth	r5, r5
 801be3e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801be42:	00ad      	lsls	r5, r5, #2
 801be44:	9308      	str	r3, [sp, #32]
 801be46:	1d2b      	adds	r3, r5, #4
 801be48:	9309      	str	r3, [sp, #36]	; 0x24
 801be4a:	9b02      	ldr	r3, [sp, #8]
 801be4c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801be50:	9106      	str	r1, [sp, #24]
 801be52:	43da      	mvns	r2, r3
 801be54:	2c00      	cmp	r4, #0
 801be56:	bf0c      	ite	eq
 801be58:	46dc      	moveq	ip, fp
 801be5a:	f04f 0c00 	movne.w	ip, #0
 801be5e:	2300      	movs	r3, #0
 801be60:	b2d2      	uxtb	r2, r2
 801be62:	fa1f fc8c 	uxth.w	ip, ip
 801be66:	9303      	str	r3, [sp, #12]
 801be68:	9207      	str	r2, [sp, #28]
 801be6a:	9a08      	ldr	r2, [sp, #32]
 801be6c:	4282      	cmp	r2, r0
 801be6e:	f240 80b5 	bls.w	801bfdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801be72:	b963      	cbnz	r3, 801be8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801be74:	9b01      	ldr	r3, [sp, #4]
 801be76:	781a      	ldrb	r2, [r3, #0]
 801be78:	0993      	lsrs	r3, r2, #6
 801be7a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801be7e:	9203      	str	r2, [sp, #12]
 801be80:	1e5a      	subs	r2, r3, #1
 801be82:	2a02      	cmp	r2, #2
 801be84:	d815      	bhi.n	801beb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801be86:	9a01      	ldr	r2, [sp, #4]
 801be88:	3201      	adds	r2, #1
 801be8a:	9201      	str	r2, [sp, #4]
 801be8c:	b29b      	uxth	r3, r3
 801be8e:	b1b4      	cbz	r4, 801bebe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801be90:	429c      	cmp	r4, r3
 801be92:	bf95      	itete	ls
 801be94:	1b1c      	subls	r4, r3, r4
 801be96:	1ae4      	subhi	r4, r4, r3
 801be98:	fa1f f884 	uxthls.w	r8, r4
 801be9c:	b2a4      	uxthhi	r4, r4
 801be9e:	bf87      	ittee	hi
 801bea0:	4666      	movhi	r6, ip
 801bea2:	f04f 0800 	movhi.w	r8, #0
 801bea6:	fa1f f68b 	uxthls.w	r6, fp
 801beaa:	2400      	movls	r4, #0
 801beac:	4643      	mov	r3, r8
 801beae:	46b4      	mov	ip, r6
 801beb0:	e7db      	b.n	801be6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801beb2:	9a01      	ldr	r2, [sp, #4]
 801beb4:	9b01      	ldr	r3, [sp, #4]
 801beb6:	3202      	adds	r2, #2
 801beb8:	785b      	ldrb	r3, [r3, #1]
 801beba:	9201      	str	r2, [sp, #4]
 801bebc:	e7e7      	b.n	801be8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bebe:	2203      	movs	r2, #3
 801bec0:	4615      	mov	r5, r2
 801bec2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bec4:	9a03      	ldr	r2, [sp, #12]
 801bec6:	fb15 1202 	smlabb	r2, r5, r2, r1
 801beca:	9905      	ldr	r1, [sp, #20]
 801becc:	4563      	cmp	r3, ip
 801bece:	eb01 0502 	add.w	r5, r1, r2
 801bed2:	9902      	ldr	r1, [sp, #8]
 801bed4:	bf29      	itett	cs
 801bed6:	eba3 080c 	subcs.w	r8, r3, ip
 801beda:	ebac 0603 	subcc.w	r6, ip, r3
 801bede:	fa1f f888 	uxthcs.w	r8, r8
 801bee2:	46e1      	movcs	r9, ip
 801bee4:	bf2f      	iteee	cs
 801bee6:	4626      	movcs	r6, r4
 801bee8:	b2b6      	uxthcc	r6, r6
 801beea:	4699      	movcc	r9, r3
 801beec:	46a0      	movcc	r8, r4
 801beee:	29ff      	cmp	r1, #255	; 0xff
 801bef0:	d04a      	beq.n	801bf88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801bef2:	9f06      	ldr	r7, [sp, #24]
 801bef4:	78a9      	ldrb	r1, [r5, #2]
 801bef6:	9004      	str	r0, [sp, #16]
 801bef8:	4379      	muls	r1, r7
 801befa:	910a      	str	r1, [sp, #40]	; 0x28
 801befc:	7869      	ldrb	r1, [r5, #1]
 801befe:	4379      	muls	r1, r7
 801bf00:	910b      	str	r1, [sp, #44]	; 0x2c
 801bf02:	9905      	ldr	r1, [sp, #20]
 801bf04:	5c8a      	ldrb	r2, [r1, r2]
 801bf06:	437a      	muls	r2, r7
 801bf08:	920c      	str	r2, [sp, #48]	; 0x30
 801bf0a:	46ca      	mov	sl, r9
 801bf0c:	f1ba 0f00 	cmp.w	sl, #0
 801bf10:	d03d      	beq.n	801bf8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801bf12:	9a04      	ldr	r2, [sp, #16]
 801bf14:	9f07      	ldr	r7, [sp, #28]
 801bf16:	8812      	ldrh	r2, [r2, #0]
 801bf18:	1215      	asrs	r5, r2, #8
 801bf1a:	46be      	mov	lr, r7
 801bf1c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bf20:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bf22:	10d1      	asrs	r1, r2, #3
 801bf24:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bf28:	fb05 750e 	mla	r5, r5, lr, r7
 801bf2c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bf30:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801bf32:	00d2      	lsls	r2, r2, #3
 801bf34:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801bf38:	fb01 710e 	mla	r1, r1, lr, r7
 801bf3c:	b2d2      	uxtb	r2, r2
 801bf3e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bf40:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bf44:	b2ad      	uxth	r5, r5
 801bf46:	fb02 720e 	mla	r2, r2, lr, r7
 801bf4a:	b292      	uxth	r2, r2
 801bf4c:	f105 0e01 	add.w	lr, r5, #1
 801bf50:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801bf54:	f102 0e01 	add.w	lr, r2, #1
 801bf58:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801bf5c:	b289      	uxth	r1, r1
 801bf5e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bf62:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bf66:	4315      	orrs	r5, r2
 801bf68:	1c4a      	adds	r2, r1, #1
 801bf6a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bf6e:	0949      	lsrs	r1, r1, #5
 801bf70:	9a04      	ldr	r2, [sp, #16]
 801bf72:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bf76:	430d      	orrs	r5, r1
 801bf78:	f822 5b02 	strh.w	r5, [r2], #2
 801bf7c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801bf80:	9204      	str	r2, [sp, #16]
 801bf82:	fa1f fa8a 	uxth.w	sl, sl
 801bf86:	e7c1      	b.n	801bf0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801bf88:	4649      	mov	r1, r9
 801bf8a:	4686      	mov	lr, r0
 801bf8c:	b999      	cbnz	r1, 801bfb6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801bf8e:	4563      	cmp	r3, ip
 801bf90:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801bf94:	d38a      	bcc.n	801beac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bf96:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801bf9a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf9c:	fa1f f68b 	uxth.w	r6, fp
 801bfa0:	1ba4      	subs	r4, r4, r6
 801bfa2:	881b      	ldrh	r3, [r3, #0]
 801bfa4:	b2a4      	uxth	r4, r4
 801bfa6:	2c00      	cmp	r4, #0
 801bfa8:	eba3 030b 	sub.w	r3, r3, fp
 801bfac:	bf18      	it	ne
 801bfae:	2600      	movne	r6, #0
 801bfb0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bfb4:	e77a      	b.n	801beac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bfb6:	78aa      	ldrb	r2, [r5, #2]
 801bfb8:	4f0e      	ldr	r7, [pc, #56]	; (801bff4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801bfba:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801bfbe:	786a      	ldrb	r2, [r5, #1]
 801bfc0:	00d2      	lsls	r2, r2, #3
 801bfc2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bfc6:	ea4a 0202 	orr.w	r2, sl, r2
 801bfca:	f895 a000 	ldrb.w	sl, [r5]
 801bfce:	3901      	subs	r1, #1
 801bfd0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801bfd4:	f82e 2b02 	strh.w	r2, [lr], #2
 801bfd8:	b289      	uxth	r1, r1
 801bfda:	e7d7      	b.n	801bf8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801bfdc:	4b03      	ldr	r3, [pc, #12]	; (801bfec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bfde:	6818      	ldr	r0, [r3, #0]
 801bfe0:	6803      	ldr	r3, [r0, #0]
 801bfe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bfe4:	4798      	blx	r3
 801bfe6:	b013      	add	sp, #76	; 0x4c
 801bfe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfec:	2000ef1c 	.word	0x2000ef1c
 801bff0:	2000ef16 	.word	0x2000ef16
 801bff4:	fffff800 	.word	0xfffff800

0801bff8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bffc:	b09d      	sub	sp, #116	; 0x74
 801bffe:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801c002:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801c006:	920e      	str	r2, [sp, #56]	; 0x38
 801c008:	461c      	mov	r4, r3
 801c00a:	4683      	mov	fp, r0
 801c00c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c00e:	2a00      	cmp	r2, #0
 801c010:	f000 81e0 	beq.w	801c3d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801c014:	6820      	ldr	r0, [r4, #0]
 801c016:	6861      	ldr	r1, [r4, #4]
 801c018:	aa18      	add	r2, sp, #96	; 0x60
 801c01a:	c203      	stmia	r2!, {r0, r1}
 801c01c:	6818      	ldr	r0, [r3, #0]
 801c01e:	6859      	ldr	r1, [r3, #4]
 801c020:	aa1a      	add	r2, sp, #104	; 0x68
 801c022:	c203      	stmia	r2!, {r0, r1}
 801c024:	a818      	add	r0, sp, #96	; 0x60
 801c026:	f7f8 fd83 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c02a:	4621      	mov	r1, r4
 801c02c:	a81a      	add	r0, sp, #104	; 0x68
 801c02e:	f7f8 fdc3 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c032:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801c036:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801c03a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c03e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c042:	bfd7      	itett	le
 801c044:	b29a      	uxthle	r2, r3
 801c046:	2201      	movgt	r2, #1
 801c048:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c04c:	fb91 f2f2 	sdivle	r2, r1, r2
 801c050:	9202      	str	r2, [sp, #8]
 801c052:	9802      	ldr	r0, [sp, #8]
 801c054:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801c058:	fb92 f0f0 	sdiv	r0, r2, r0
 801c05c:	b280      	uxth	r0, r0
 801c05e:	900f      	str	r0, [sp, #60]	; 0x3c
 801c060:	9902      	ldr	r1, [sp, #8]
 801c062:	9802      	ldr	r0, [sp, #8]
 801c064:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c066:	440c      	add	r4, r1
 801c068:	fb05 2510 	mls	r5, r5, r0, r2
 801c06c:	fb15 f503 	smulbb	r5, r5, r3
 801c070:	3c01      	subs	r4, #1
 801c072:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801c076:	fb94 f4f1 	sdiv	r4, r4, r1
 801c07a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801c07e:	440d      	add	r5, r1
 801c080:	4419      	add	r1, r3
 801c082:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801c086:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801c08a:	441a      	add	r2, r3
 801c08c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c090:	9306      	str	r3, [sp, #24]
 801c092:	4bb3      	ldr	r3, [pc, #716]	; (801c360 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801c094:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801c098:	6818      	ldr	r0, [r3, #0]
 801c09a:	6803      	ldr	r3, [r0, #0]
 801c09c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c09e:	4798      	blx	r3
 801c0a0:	4bb0      	ldr	r3, [pc, #704]	; (801c364 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801c0a2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801c0a6:	881a      	ldrh	r2, [r3, #0]
 801c0a8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801c0ac:	9316      	str	r3, [sp, #88]	; 0x58
 801c0ae:	fb02 7101 	mla	r1, r2, r1, r7
 801c0b2:	3401      	adds	r4, #1
 801c0b4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801c0b8:	b2a4      	uxth	r4, r4
 801c0ba:	4356      	muls	r6, r2
 801c0bc:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801c0c0:	00a4      	lsls	r4, r4, #2
 801c0c2:	920a      	str	r2, [sp, #40]	; 0x28
 801c0c4:	1d22      	adds	r2, r4, #4
 801c0c6:	b2ad      	uxth	r5, r5
 801c0c8:	9213      	str	r2, [sp, #76]	; 0x4c
 801c0ca:	4ba7      	ldr	r3, [pc, #668]	; (801c368 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801c0cc:	9a06      	ldr	r2, [sp, #24]
 801c0ce:	2d00      	cmp	r5, #0
 801c0d0:	bf0c      	ite	eq
 801c0d2:	4611      	moveq	r1, r2
 801c0d4:	2100      	movne	r1, #0
 801c0d6:	2200      	movs	r2, #0
 801c0d8:	eba3 030b 	sub.w	r3, r3, fp
 801c0dc:	b289      	uxth	r1, r1
 801c0de:	920d      	str	r2, [sp, #52]	; 0x34
 801c0e0:	9317      	str	r3, [sp, #92]	; 0x5c
 801c0e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c0e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c0e6:	fa12 f383 	uxtah	r3, r2, r3
 801c0ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c0ec:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c0f0:	3304      	adds	r3, #4
 801c0f2:	9308      	str	r3, [sp, #32]
 801c0f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c0f6:	4543      	cmp	r3, r8
 801c0f8:	f240 8167 	bls.w	801c3ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c0fc:	9a02      	ldr	r2, [sp, #8]
 801c0fe:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801c102:	fbb5 f3f3 	udiv	r3, r5, r3
 801c106:	1ad3      	subs	r3, r2, r3
 801c108:	b29b      	uxth	r3, r3
 801c10a:	9314      	str	r3, [sp, #80]	; 0x50
 801c10c:	9b08      	ldr	r3, [sp, #32]
 801c10e:	9808      	ldr	r0, [sp, #32]
 801c110:	785a      	ldrb	r2, [r3, #1]
 801c112:	789b      	ldrb	r3, [r3, #2]
 801c114:	7800      	ldrb	r0, [r0, #0]
 801c116:	9010      	str	r0, [sp, #64]	; 0x40
 801c118:	021b      	lsls	r3, r3, #8
 801c11a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c11e:	9a08      	ldr	r2, [sp, #32]
 801c120:	78d2      	ldrb	r2, [r2, #3]
 801c122:	4313      	orrs	r3, r2
 801c124:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c126:	3001      	adds	r0, #1
 801c128:	441a      	add	r2, r3
 801c12a:	9007      	str	r0, [sp, #28]
 801c12c:	1c50      	adds	r0, r2, #1
 801c12e:	9005      	str	r0, [sp, #20]
 801c130:	7852      	ldrb	r2, [r2, #1]
 801c132:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c134:	0212      	lsls	r2, r2, #8
 801c136:	5cc3      	ldrb	r3, [r0, r3]
 801c138:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c13c:	431a      	orrs	r2, r3
 801c13e:	b293      	uxth	r3, r2
 801c140:	930b      	str	r3, [sp, #44]	; 0x2c
 801c142:	2300      	movs	r3, #0
 801c144:	9309      	str	r3, [sp, #36]	; 0x24
 801c146:	2301      	movs	r3, #1
 801c148:	9301      	str	r3, [sp, #4]
 801c14a:	9304      	str	r3, [sp, #16]
 801c14c:	2300      	movs	r3, #0
 801c14e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801c152:	9303      	str	r3, [sp, #12]
 801c154:	f04f 0e01 	mov.w	lr, #1
 801c158:	2d00      	cmp	r5, #0
 801c15a:	d07c      	beq.n	801c256 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801c15c:	45ae      	cmp	lr, r5
 801c15e:	d26b      	bcs.n	801c238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801c160:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c162:	eba5 050e 	sub.w	r5, r5, lr
 801c166:	4543      	cmp	r3, r8
 801c168:	b2ad      	uxth	r5, r5
 801c16a:	460c      	mov	r4, r1
 801c16c:	d802      	bhi.n	801c174 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801c16e:	e070      	b.n	801c252 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801c170:	2b00      	cmp	r3, #0
 801c172:	d15c      	bne.n	801c22e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c174:	9b05      	ldr	r3, [sp, #20]
 801c176:	9a04      	ldr	r2, [sp, #16]
 801c178:	785b      	ldrb	r3, [r3, #1]
 801c17a:	9904      	ldr	r1, [sp, #16]
 801c17c:	f1c2 0207 	rsb	r2, r2, #7
 801c180:	4093      	lsls	r3, r2
 801c182:	005b      	lsls	r3, r3, #1
 801c184:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c188:	9b05      	ldr	r3, [sp, #20]
 801c18a:	781b      	ldrb	r3, [r3, #0]
 801c18c:	410b      	asrs	r3, r1
 801c18e:	3101      	adds	r1, #1
 801c190:	b2c9      	uxtb	r1, r1
 801c192:	2908      	cmp	r1, #8
 801c194:	9104      	str	r1, [sp, #16]
 801c196:	9905      	ldr	r1, [sp, #20]
 801c198:	bf0a      	itet	eq
 801c19a:	3102      	addeq	r1, #2
 801c19c:	3101      	addne	r1, #1
 801c19e:	9105      	streq	r1, [sp, #20]
 801c1a0:	b2db      	uxtb	r3, r3
 801c1a2:	bf0a      	itet	eq
 801c1a4:	2100      	moveq	r1, #0
 801c1a6:	9105      	strne	r1, [sp, #20]
 801c1a8:	9104      	streq	r1, [sp, #16]
 801c1aa:	4313      	orrs	r3, r2
 801c1ac:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c1ae:	b29a      	uxth	r2, r3
 801c1b0:	4291      	cmp	r1, r2
 801c1b2:	d30a      	bcc.n	801c1ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801c1b4:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801c1b8:	2301      	movs	r3, #1
 801c1ba:	9907      	ldr	r1, [sp, #28]
 801c1bc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c1c0:	d30f      	bcc.n	801c1e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c1c2:	2100      	movs	r1, #0
 801c1c4:	9301      	str	r3, [sp, #4]
 801c1c6:	9103      	str	r1, [sp, #12]
 801c1c8:	e032      	b.n	801c230 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801c1ca:	9b07      	ldr	r3, [sp, #28]
 801c1cc:	429a      	cmp	r2, r3
 801c1ce:	d318      	bcc.n	801c202 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801c1d0:	9b01      	ldr	r3, [sp, #4]
 801c1d2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801c1d6:	445b      	add	r3, fp
 801c1d8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c1dc:	9b01      	ldr	r3, [sp, #4]
 801c1de:	3301      	adds	r3, #1
 801c1e0:	b29b      	uxth	r3, r3
 801c1e2:	9907      	ldr	r1, [sp, #28]
 801c1e4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801c1e8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c1ec:	7108      	strb	r0, [r1, #4]
 801c1ee:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c1f0:	80c8      	strh	r0, [r1, #6]
 801c1f2:	9801      	ldr	r0, [sp, #4]
 801c1f4:	3001      	adds	r0, #1
 801c1f6:	7148      	strb	r0, [r1, #5]
 801c1f8:	9907      	ldr	r1, [sp, #28]
 801c1fa:	3101      	adds	r1, #1
 801c1fc:	b289      	uxth	r1, r1
 801c1fe:	9107      	str	r1, [sp, #28]
 801c200:	e7df      	b.n	801c1c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801c202:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801c206:	4611      	mov	r1, r2
 801c208:	795b      	ldrb	r3, [r3, #5]
 801c20a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801c20e:	4458      	add	r0, fp
 801c210:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801c212:	4406      	add	r6, r0
 801c214:	2e00      	cmp	r6, #0
 801c216:	dd06      	ble.n	801c226 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801c218:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c21c:	790e      	ldrb	r6, [r1, #4]
 801c21e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801c222:	88c9      	ldrh	r1, [r1, #6]
 801c224:	e7f4      	b.n	801c210 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801c226:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801c22a:	b29b      	uxth	r3, r3
 801c22c:	e7c5      	b.n	801c1ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801c22e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c230:	920b      	str	r2, [sp, #44]	; 0x2c
 801c232:	4621      	mov	r1, r4
 801c234:	469e      	mov	lr, r3
 801c236:	e78f      	b.n	801c158 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801c238:	9a03      	ldr	r2, [sp, #12]
 801c23a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c23e:	442a      	add	r2, r5
 801c240:	ebae 0305 	sub.w	r3, lr, r5
 801c244:	b292      	uxth	r2, r2
 801c246:	b29b      	uxth	r3, r3
 801c248:	9203      	str	r2, [sp, #12]
 801c24a:	2500      	movs	r5, #0
 801c24c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c24e:	4542      	cmp	r2, r8
 801c250:	d88e      	bhi.n	801c170 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801c252:	4621      	mov	r1, r4
 801c254:	e74e      	b.n	801c0f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801c256:	458e      	cmp	lr, r1
 801c258:	bf29      	itett	cs
 801c25a:	ebae 0301 	subcs.w	r3, lr, r1
 801c25e:	eba1 040e 	subcc.w	r4, r1, lr
 801c262:	b29b      	uxthcs	r3, r3
 801c264:	910c      	strcs	r1, [sp, #48]	; 0x30
 801c266:	bf2f      	iteee	cs
 801c268:	462c      	movcs	r4, r5
 801c26a:	b2a4      	uxthcc	r4, r4
 801c26c:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801c270:	462b      	movcc	r3, r5
 801c272:	f04f 0900 	mov.w	r9, #0
 801c276:	9a03      	ldr	r2, [sp, #12]
 801c278:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c27a:	444a      	add	r2, r9
 801c27c:	4548      	cmp	r0, r9
 801c27e:	b292      	uxth	r2, r2
 801c280:	d074      	beq.n	801c36c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801c282:	445a      	add	r2, fp
 801c284:	2004      	movs	r0, #4
 801c286:	4605      	mov	r5, r0
 801c288:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801c28c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c28e:	fb15 0202 	smlabb	r2, r5, r2, r0
 801c292:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c294:	5880      	ldr	r0, [r0, r2]
 801c296:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801c29a:	d014      	beq.n	801c2c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c29c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c2a0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801c2a4:	d112      	bne.n	801c2cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c2a6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c2a8:	2aff      	cmp	r2, #255	; 0xff
 801c2aa:	d10f      	bne.n	801c2cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c2ac:	0942      	lsrs	r2, r0, #5
 801c2ae:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c2b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c2b6:	f025 0507 	bic.w	r5, r5, #7
 801c2ba:	4315      	orrs	r5, r2
 801c2bc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c2c0:	4305      	orrs	r5, r0
 801c2c2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801c2c6:	f109 0901 	add.w	r9, r9, #1
 801c2ca:	e7d4      	b.n	801c276 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801c2cc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801c2d0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c2d4:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801c2d8:	9215      	str	r2, [sp, #84]	; 0x54
 801c2da:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c2dc:	fb02 fa0a 	mul.w	sl, r2, sl
 801c2e0:	f10a 0201 	add.w	r2, sl, #1
 801c2e4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801c2e8:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c2ec:	1212      	asrs	r2, r2, #8
 801c2ee:	fa1f fa82 	uxth.w	sl, r2
 801c2f2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801c2f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c2fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c2fe:	43d2      	mvns	r2, r2
 801c300:	b2d2      	uxtb	r2, r2
 801c302:	fb16 f60a 	smulbb	r6, r6, sl
 801c306:	fa5f fc8c 	uxtb.w	ip, ip
 801c30a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c30e:	b2c0      	uxtb	r0, r0
 801c310:	fb07 6702 	mla	r7, r7, r2, r6
 801c314:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c318:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801c31a:	fb10 f00a 	smulbb	r0, r0, sl
 801c31e:	fb0c 0002 	mla	r0, ip, r2, r0
 801c322:	b2ed      	uxtb	r5, r5
 801c324:	b2bf      	uxth	r7, r7
 801c326:	fb15 f50a 	smulbb	r5, r5, sl
 801c32a:	b280      	uxth	r0, r0
 801c32c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c330:	fb06 5602 	mla	r6, r6, r2, r5
 801c334:	1c7a      	adds	r2, r7, #1
 801c336:	1c45      	adds	r5, r0, #1
 801c338:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c33c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c340:	b2b6      	uxth	r6, r6
 801c342:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c346:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c34a:	432f      	orrs	r7, r5
 801c34c:	1c75      	adds	r5, r6, #1
 801c34e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c352:	096d      	lsrs	r5, r5, #5
 801c354:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c358:	432f      	orrs	r7, r5
 801c35a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c35e:	e7b2      	b.n	801c2c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c360:	2000ef1c 	.word	0x2000ef1c
 801c364:	2000ef16 	.word	0x2000ef16
 801c368:	fffff7fb 	.word	0xfffff7fb
 801c36c:	9203      	str	r2, [sp, #12]
 801c36e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c370:	458e      	cmp	lr, r1
 801c372:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c376:	f4ff af68 	bcc.w	801c24a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c37a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c37c:	9906      	ldr	r1, [sp, #24]
 801c37e:	8812      	ldrh	r2, [r2, #0]
 801c380:	1a52      	subs	r2, r2, r1
 801c382:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c386:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c388:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c38a:	3201      	adds	r2, #1
 801c38c:	428a      	cmp	r2, r1
 801c38e:	9209      	str	r2, [sp, #36]	; 0x24
 801c390:	d111      	bne.n	801c3b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c392:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801c396:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801c39a:	9b06      	ldr	r3, [sp, #24]
 801c39c:	eba5 0509 	sub.w	r5, r5, r9
 801c3a0:	b2ad      	uxth	r5, r5
 801c3a2:	2d00      	cmp	r5, #0
 801c3a4:	bf08      	it	eq
 801c3a6:	4619      	moveq	r1, r3
 801c3a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c3aa:	bf18      	it	ne
 801c3ac:	2100      	movne	r1, #0
 801c3ae:	3301      	adds	r3, #1
 801c3b0:	930d      	str	r3, [sp, #52]	; 0x34
 801c3b2:	b289      	uxth	r1, r1
 801c3b4:	e695      	b.n	801c0e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c3b6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c3ba:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801c3be:	1b2d      	subs	r5, r5, r4
 801c3c0:	b2ad      	uxth	r5, r5
 801c3c2:	2d00      	cmp	r5, #0
 801c3c4:	bf18      	it	ne
 801c3c6:	2400      	movne	r4, #0
 801c3c8:	e740      	b.n	801c24c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c3ca:	4b04      	ldr	r3, [pc, #16]	; (801c3dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c3cc:	6818      	ldr	r0, [r3, #0]
 801c3ce:	6803      	ldr	r3, [r0, #0]
 801c3d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c3d2:	4798      	blx	r3
 801c3d4:	b01d      	add	sp, #116	; 0x74
 801c3d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c3da:	bf00      	nop
 801c3dc:	2000ef1c 	.word	0x2000ef1c

0801c3e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c3e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3e4:	b09f      	sub	sp, #124	; 0x7c
 801c3e6:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c3ea:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c3ee:	920a      	str	r2, [sp, #40]	; 0x28
 801c3f0:	461d      	mov	r5, r3
 801c3f2:	4604      	mov	r4, r0
 801c3f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c3f6:	2a00      	cmp	r2, #0
 801c3f8:	f000 81fa 	beq.w	801c7f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c3fc:	6828      	ldr	r0, [r5, #0]
 801c3fe:	6869      	ldr	r1, [r5, #4]
 801c400:	aa1a      	add	r2, sp, #104	; 0x68
 801c402:	c203      	stmia	r2!, {r0, r1}
 801c404:	6818      	ldr	r0, [r3, #0]
 801c406:	6859      	ldr	r1, [r3, #4]
 801c408:	aa1c      	add	r2, sp, #112	; 0x70
 801c40a:	c203      	stmia	r2!, {r0, r1}
 801c40c:	a81a      	add	r0, sp, #104	; 0x68
 801c40e:	f7f8 fb8f 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c412:	4629      	mov	r1, r5
 801c414:	a81c      	add	r0, sp, #112	; 0x70
 801c416:	f7f8 fbcf 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c41a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c41e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c422:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801c426:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c42a:	bfd7      	itett	le
 801c42c:	b29a      	uxthle	r2, r3
 801c42e:	2201      	movgt	r2, #1
 801c430:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c434:	fb91 f2f2 	sdivle	r2, r1, r2
 801c438:	9201      	str	r2, [sp, #4]
 801c43a:	9801      	ldr	r0, [sp, #4]
 801c43c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c440:	fb92 f0f0 	sdiv	r0, r2, r0
 801c444:	b280      	uxth	r0, r0
 801c446:	9010      	str	r0, [sp, #64]	; 0x40
 801c448:	9901      	ldr	r1, [sp, #4]
 801c44a:	9801      	ldr	r0, [sp, #4]
 801c44c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c44e:	440e      	add	r6, r1
 801c450:	fb05 2510 	mls	r5, r5, r0, r2
 801c454:	fb15 f503 	smulbb	r5, r5, r3
 801c458:	3e01      	subs	r6, #1
 801c45a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c45e:	fb96 f6f1 	sdiv	r6, r6, r1
 801c462:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c466:	440d      	add	r5, r1
 801c468:	4419      	add	r1, r3
 801c46a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c46e:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c472:	441a      	add	r2, r3
 801c474:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c478:	9304      	str	r3, [sp, #16]
 801c47a:	4b96      	ldr	r3, [pc, #600]	; (801c6d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c47c:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c480:	6818      	ldr	r0, [r3, #0]
 801c482:	6803      	ldr	r3, [r0, #0]
 801c484:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c486:	4798      	blx	r3
 801c488:	4b93      	ldr	r3, [pc, #588]	; (801c6d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c48a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c48e:	881a      	ldrh	r2, [r3, #0]
 801c490:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801c494:	9318      	str	r3, [sp, #96]	; 0x60
 801c496:	fb02 c101 	mla	r1, r2, r1, ip
 801c49a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c49e:	4357      	muls	r7, r2
 801c4a0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c4a4:	3601      	adds	r6, #1
 801c4a6:	920b      	str	r2, [sp, #44]	; 0x2c
 801c4a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c4aa:	4b8c      	ldr	r3, [pc, #560]	; (801c6dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c4ac:	b2b6      	uxth	r6, r6
 801c4ae:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c4b2:	1d32      	adds	r2, r6, #4
 801c4b4:	9206      	str	r2, [sp, #24]
 801c4b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c4b8:	43d2      	mvns	r2, r2
 801c4ba:	b2d2      	uxtb	r2, r2
 801c4bc:	b2ad      	uxth	r5, r5
 801c4be:	9215      	str	r2, [sp, #84]	; 0x54
 801c4c0:	9a04      	ldr	r2, [sp, #16]
 801c4c2:	2d00      	cmp	r5, #0
 801c4c4:	bf0c      	ite	eq
 801c4c6:	4611      	moveq	r1, r2
 801c4c8:	2100      	movne	r1, #0
 801c4ca:	2200      	movs	r2, #0
 801c4cc:	1b1b      	subs	r3, r3, r4
 801c4ce:	b289      	uxth	r1, r1
 801c4d0:	920d      	str	r2, [sp, #52]	; 0x34
 801c4d2:	9319      	str	r3, [sp, #100]	; 0x64
 801c4d4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c4d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c4d8:	fa12 f383 	uxtah	r3, r2, r3
 801c4dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c4de:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c4e2:	3304      	adds	r3, #4
 801c4e4:	9307      	str	r3, [sp, #28]
 801c4e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c4e8:	455b      	cmp	r3, fp
 801c4ea:	f240 817c 	bls.w	801c7e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c4ee:	9a01      	ldr	r2, [sp, #4]
 801c4f0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c4f4:	fbb5 f3f3 	udiv	r3, r5, r3
 801c4f8:	1ad3      	subs	r3, r2, r3
 801c4fa:	b29b      	uxth	r3, r3
 801c4fc:	9316      	str	r3, [sp, #88]	; 0x58
 801c4fe:	9b07      	ldr	r3, [sp, #28]
 801c500:	9807      	ldr	r0, [sp, #28]
 801c502:	785a      	ldrb	r2, [r3, #1]
 801c504:	789b      	ldrb	r3, [r3, #2]
 801c506:	7800      	ldrb	r0, [r0, #0]
 801c508:	9011      	str	r0, [sp, #68]	; 0x44
 801c50a:	021b      	lsls	r3, r3, #8
 801c50c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c510:	9a07      	ldr	r2, [sp, #28]
 801c512:	78d2      	ldrb	r2, [r2, #3]
 801c514:	4313      	orrs	r3, r2
 801c516:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c518:	3001      	adds	r0, #1
 801c51a:	441a      	add	r2, r3
 801c51c:	9005      	str	r0, [sp, #20]
 801c51e:	1c50      	adds	r0, r2, #1
 801c520:	9003      	str	r0, [sp, #12]
 801c522:	7852      	ldrb	r2, [r2, #1]
 801c524:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c526:	0212      	lsls	r2, r2, #8
 801c528:	5cc3      	ldrb	r3, [r0, r3]
 801c52a:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c52e:	431a      	orrs	r2, r3
 801c530:	b293      	uxth	r3, r2
 801c532:	930c      	str	r3, [sp, #48]	; 0x30
 801c534:	2300      	movs	r3, #0
 801c536:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c53a:	9308      	str	r3, [sp, #32]
 801c53c:	461a      	mov	r2, r3
 801c53e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c542:	930e      	str	r3, [sp, #56]	; 0x38
 801c544:	f04f 0801 	mov.w	r8, #1
 801c548:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c54c:	f8cd 8008 	str.w	r8, [sp, #8]
 801c550:	46c4      	mov	ip, r8
 801c552:	930f      	str	r3, [sp, #60]	; 0x3c
 801c554:	2d00      	cmp	r5, #0
 801c556:	d07c      	beq.n	801c652 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c558:	45ac      	cmp	ip, r5
 801c55a:	d26c      	bcs.n	801c636 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c55c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c55e:	eba5 050c 	sub.w	r5, r5, ip
 801c562:	455b      	cmp	r3, fp
 801c564:	b2ad      	uxth	r5, r5
 801c566:	4608      	mov	r0, r1
 801c568:	d802      	bhi.n	801c570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801c56a:	e070      	b.n	801c64e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801c56c:	2b00      	cmp	r3, #0
 801c56e:	d15c      	bne.n	801c62a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801c570:	9b03      	ldr	r3, [sp, #12]
 801c572:	9a02      	ldr	r2, [sp, #8]
 801c574:	785b      	ldrb	r3, [r3, #1]
 801c576:	9902      	ldr	r1, [sp, #8]
 801c578:	f1c2 0207 	rsb	r2, r2, #7
 801c57c:	4093      	lsls	r3, r2
 801c57e:	005b      	lsls	r3, r3, #1
 801c580:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c584:	9b03      	ldr	r3, [sp, #12]
 801c586:	781b      	ldrb	r3, [r3, #0]
 801c588:	410b      	asrs	r3, r1
 801c58a:	3101      	adds	r1, #1
 801c58c:	b2c9      	uxtb	r1, r1
 801c58e:	2908      	cmp	r1, #8
 801c590:	9102      	str	r1, [sp, #8]
 801c592:	9903      	ldr	r1, [sp, #12]
 801c594:	bf0a      	itet	eq
 801c596:	3102      	addeq	r1, #2
 801c598:	3101      	addne	r1, #1
 801c59a:	9103      	streq	r1, [sp, #12]
 801c59c:	b2db      	uxtb	r3, r3
 801c59e:	bf0a      	itet	eq
 801c5a0:	2100      	moveq	r1, #0
 801c5a2:	9103      	strne	r1, [sp, #12]
 801c5a4:	9102      	streq	r1, [sp, #8]
 801c5a6:	4313      	orrs	r3, r2
 801c5a8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c5aa:	b29a      	uxth	r2, r3
 801c5ac:	4291      	cmp	r1, r2
 801c5ae:	d30a      	bcc.n	801c5c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801c5b0:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c5b4:	2301      	movs	r3, #1
 801c5b6:	9905      	ldr	r1, [sp, #20]
 801c5b8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c5bc:	d30f      	bcc.n	801c5de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801c5be:	2100      	movs	r1, #0
 801c5c0:	4698      	mov	r8, r3
 801c5c2:	9100      	str	r1, [sp, #0]
 801c5c4:	e032      	b.n	801c62c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801c5c6:	9b05      	ldr	r3, [sp, #20]
 801c5c8:	429a      	cmp	r2, r3
 801c5ca:	d318      	bcc.n	801c5fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801c5cc:	eb04 0308 	add.w	r3, r4, r8
 801c5d0:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801c5d4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c5d8:	f108 0301 	add.w	r3, r8, #1
 801c5dc:	b29b      	uxth	r3, r3
 801c5de:	9905      	ldr	r1, [sp, #20]
 801c5e0:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c5e4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c5e8:	710e      	strb	r6, [r1, #4]
 801c5ea:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c5ec:	80ce      	strh	r6, [r1, #6]
 801c5ee:	f108 0601 	add.w	r6, r8, #1
 801c5f2:	714e      	strb	r6, [r1, #5]
 801c5f4:	9905      	ldr	r1, [sp, #20]
 801c5f6:	3101      	adds	r1, #1
 801c5f8:	b289      	uxth	r1, r1
 801c5fa:	9105      	str	r1, [sp, #20]
 801c5fc:	e7df      	b.n	801c5be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c5fe:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c602:	4611      	mov	r1, r2
 801c604:	795b      	ldrb	r3, [r3, #5]
 801c606:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c60a:	4426      	add	r6, r4
 801c60c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801c60e:	4437      	add	r7, r6
 801c610:	2f00      	cmp	r7, #0
 801c612:	dd06      	ble.n	801c622 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c614:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c618:	790f      	ldrb	r7, [r1, #4]
 801c61a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c61e:	88c9      	ldrh	r1, [r1, #6]
 801c620:	e7f4      	b.n	801c60c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c622:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c626:	b29b      	uxth	r3, r3
 801c628:	e7c5      	b.n	801c5b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c62a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c62c:	920c      	str	r2, [sp, #48]	; 0x30
 801c62e:	4601      	mov	r1, r0
 801c630:	9a00      	ldr	r2, [sp, #0]
 801c632:	469c      	mov	ip, r3
 801c634:	e78e      	b.n	801c554 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c636:	1957      	adds	r7, r2, r5
 801c638:	ebac 0305 	sub.w	r3, ip, r5
 801c63c:	b2ba      	uxth	r2, r7
 801c63e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c642:	9200      	str	r2, [sp, #0]
 801c644:	b29b      	uxth	r3, r3
 801c646:	2500      	movs	r5, #0
 801c648:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c64a:	455a      	cmp	r2, fp
 801c64c:	d88e      	bhi.n	801c56c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c64e:	4601      	mov	r1, r0
 801c650:	e749      	b.n	801c4e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c652:	458c      	cmp	ip, r1
 801c654:	bf2c      	ite	cs
 801c656:	4628      	movcs	r0, r5
 801c658:	462b      	movcc	r3, r5
 801c65a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c65c:	bf27      	ittee	cs
 801c65e:	9109      	strcs	r1, [sp, #36]	; 0x24
 801c660:	ebac 0301 	subcs.w	r3, ip, r1
 801c664:	eba1 000c 	subcc.w	r0, r1, ip
 801c668:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801c66c:	bf2c      	ite	cs
 801c66e:	b29b      	uxthcs	r3, r3
 801c670:	b280      	uxthcc	r0, r0
 801c672:	2dff      	cmp	r5, #255	; 0xff
 801c674:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c676:	eb02 0705 	add.w	r7, r2, r5
 801c67a:	b2bd      	uxth	r5, r7
 801c67c:	9500      	str	r5, [sp, #0]
 801c67e:	d12f      	bne.n	801c6e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c680:	465e      	mov	r6, fp
 801c682:	9d00      	ldr	r5, [sp, #0]
 801c684:	42aa      	cmp	r2, r5
 801c686:	f040 8084 	bne.w	801c792 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c68a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c68c:	458c      	cmp	ip, r1
 801c68e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c692:	d3d8      	bcc.n	801c646 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c694:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c696:	9904      	ldr	r1, [sp, #16]
 801c698:	8812      	ldrh	r2, [r2, #0]
 801c69a:	1a52      	subs	r2, r2, r1
 801c69c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c6a0:	9a08      	ldr	r2, [sp, #32]
 801c6a2:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c6a4:	3201      	adds	r2, #1
 801c6a6:	428a      	cmp	r2, r1
 801c6a8:	9208      	str	r2, [sp, #32]
 801c6aa:	f040 8092 	bne.w	801c7d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c6ae:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c6b2:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801c6b6:	9b04      	ldr	r3, [sp, #16]
 801c6b8:	eba5 050c 	sub.w	r5, r5, ip
 801c6bc:	b2ad      	uxth	r5, r5
 801c6be:	2d00      	cmp	r5, #0
 801c6c0:	bf08      	it	eq
 801c6c2:	4619      	moveq	r1, r3
 801c6c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c6c6:	bf18      	it	ne
 801c6c8:	2100      	movne	r1, #0
 801c6ca:	3301      	adds	r3, #1
 801c6cc:	930d      	str	r3, [sp, #52]	; 0x34
 801c6ce:	b289      	uxth	r1, r1
 801c6d0:	e700      	b.n	801c4d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801c6d2:	bf00      	nop
 801c6d4:	2000ef1c 	.word	0x2000ef1c
 801c6d8:	2000ef16 	.word	0x2000ef16
 801c6dc:	fffff7fb 	.word	0xfffff7fb
 801c6e0:	46d9      	mov	r9, fp
 801c6e2:	9d00      	ldr	r5, [sp, #0]
 801c6e4:	42aa      	cmp	r2, r5
 801c6e6:	d0d0      	beq.n	801c68a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801c6e8:	1c55      	adds	r5, r2, #1
 801c6ea:	4422      	add	r2, r4
 801c6ec:	9517      	str	r5, [sp, #92]	; 0x5c
 801c6ee:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801c6f2:	9a06      	ldr	r2, [sp, #24]
 801c6f4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c6f8:	4472      	add	r2, lr
 801c6fa:	9212      	str	r2, [sp, #72]	; 0x48
 801c6fc:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c6fe:	f8b9 2000 	ldrh.w	r2, [r9]
 801c702:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c706:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c708:	1216      	asrs	r6, r2, #8
 801c70a:	fb1a fa07 	smulbb	sl, sl, r7
 801c70e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c712:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c714:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c718:	fb06 a607 	mla	r6, r6, r7, sl
 801c71c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c71e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c722:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c724:	10d5      	asrs	r5, r2, #3
 801c726:	fb1a fa07 	smulbb	sl, sl, r7
 801c72a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c72e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c730:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c734:	fb05 a507 	mla	r5, r5, r7, sl
 801c738:	9f06      	ldr	r7, [sp, #24]
 801c73a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c73e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c740:	00d2      	lsls	r2, r2, #3
 801c742:	fb1e fe07 	smulbb	lr, lr, r7
 801c746:	b2d2      	uxtb	r2, r2
 801c748:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c74a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c74e:	b2b6      	uxth	r6, r6
 801c750:	fb02 e207 	mla	r2, r2, r7, lr
 801c754:	b292      	uxth	r2, r2
 801c756:	b2ad      	uxth	r5, r5
 801c758:	f106 0a01 	add.w	sl, r6, #1
 801c75c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c760:	f102 0e01 	add.w	lr, r2, #1
 801c764:	f105 0a01 	add.w	sl, r5, #1
 801c768:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c76c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c770:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c774:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c778:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c77c:	ea4e 0606 	orr.w	r6, lr, r6
 801c780:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c784:	ea46 060a 	orr.w	r6, r6, sl
 801c788:	f829 6b02 	strh.w	r6, [r9], #2
 801c78c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801c790:	e7a7      	b.n	801c6e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801c792:	f102 0e01 	add.w	lr, r2, #1
 801c796:	4422      	add	r2, r4
 801c798:	9f06      	ldr	r7, [sp, #24]
 801c79a:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801c79e:	9a06      	ldr	r2, [sp, #24]
 801c7a0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c7a4:	eb02 0a05 	add.w	sl, r2, r5
 801c7a8:	4a13      	ldr	r2, [pc, #76]	; (801c7f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801c7aa:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c7ae:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c7b2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c7b6:	00d2      	lsls	r2, r2, #3
 801c7b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c7bc:	ea49 0202 	orr.w	r2, r9, r2
 801c7c0:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c7c4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c7c8:	f826 2b02 	strh.w	r2, [r6], #2
 801c7cc:	fa1f f28e 	uxth.w	r2, lr
 801c7d0:	e757      	b.n	801c682 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801c7d2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c7d6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c7da:	1a2d      	subs	r5, r5, r0
 801c7dc:	b2ad      	uxth	r5, r5
 801c7de:	2d00      	cmp	r5, #0
 801c7e0:	bf18      	it	ne
 801c7e2:	2000      	movne	r0, #0
 801c7e4:	e730      	b.n	801c648 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c7e6:	4b05      	ldr	r3, [pc, #20]	; (801c7fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c7e8:	6818      	ldr	r0, [r3, #0]
 801c7ea:	6803      	ldr	r3, [r0, #0]
 801c7ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c7ee:	4798      	blx	r3
 801c7f0:	b01f      	add	sp, #124	; 0x7c
 801c7f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7f6:	bf00      	nop
 801c7f8:	fffff800 	.word	0xfffff800
 801c7fc:	2000ef1c 	.word	0x2000ef1c

0801c800 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c804:	b091      	sub	sp, #68	; 0x44
 801c806:	469b      	mov	fp, r3
 801c808:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c80c:	4616      	mov	r6, r2
 801c80e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c812:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c816:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c81a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c81e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c822:	4604      	mov	r4, r0
 801c824:	460d      	mov	r5, r1
 801c826:	4640      	mov	r0, r8
 801c828:	4659      	mov	r1, fp
 801c82a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c82e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c832:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c836:	f7f3 f919 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 801c83a:	4631      	mov	r1, r6
 801c83c:	4640      	mov	r0, r8
 801c83e:	f7f3 f915 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 801c842:	4b74      	ldr	r3, [pc, #464]	; (801ca14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c844:	8818      	ldrh	r0, [r3, #0]
 801c846:	4b74      	ldr	r3, [pc, #464]	; (801ca18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c848:	8819      	ldrh	r1, [r3, #0]
 801c84a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c84e:	2b00      	cmp	r3, #0
 801c850:	b202      	sxth	r2, r0
 801c852:	b20e      	sxth	r6, r1
 801c854:	da07      	bge.n	801c866 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c856:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c85a:	4463      	add	r3, ip
 801c85c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c860:	2300      	movs	r3, #0
 801c862:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c866:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c86a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c86e:	1ad2      	subs	r2, r2, r3
 801c870:	4594      	cmp	ip, r2
 801c872:	bfc4      	itt	gt
 801c874:	1ac2      	subgt	r2, r0, r3
 801c876:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c87a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c87e:	2a00      	cmp	r2, #0
 801c880:	da07      	bge.n	801c892 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c882:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c886:	4462      	add	r2, ip
 801c888:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c88c:	2200      	movs	r2, #0
 801c88e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c892:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c896:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c89a:	eba6 060a 	sub.w	r6, r6, sl
 801c89e:	42b2      	cmp	r2, r6
 801c8a0:	bfc4      	itt	gt
 801c8a2:	eba1 020a 	subgt.w	r2, r1, sl
 801c8a6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c8aa:	4a5c      	ldr	r2, [pc, #368]	; (801ca1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c8ac:	7812      	ldrb	r2, [r2, #0]
 801c8ae:	b9a2      	cbnz	r2, 801c8da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c8b0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c8b4:	4286      	cmp	r6, r0
 801c8b6:	4640      	mov	r0, r8
 801c8b8:	9303      	str	r3, [sp, #12]
 801c8ba:	bf14      	ite	ne
 801c8bc:	2600      	movne	r6, #0
 801c8be:	2601      	moveq	r6, #1
 801c8c0:	f7f3 f917 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c8c4:	9b03      	ldr	r3, [sp, #12]
 801c8c6:	b160      	cbz	r0, 801c8e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c8c8:	2300      	movs	r3, #0
 801c8ca:	8023      	strh	r3, [r4, #0]
 801c8cc:	8063      	strh	r3, [r4, #2]
 801c8ce:	80a3      	strh	r3, [r4, #4]
 801c8d0:	4620      	mov	r0, r4
 801c8d2:	80e3      	strh	r3, [r4, #6]
 801c8d4:	b011      	add	sp, #68	; 0x44
 801c8d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c8da:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c8de:	428e      	cmp	r6, r1
 801c8e0:	e7e9      	b.n	801c8b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c8e2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c8e6:	9205      	str	r2, [sp, #20]
 801c8e8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c8ec:	9206      	str	r2, [sp, #24]
 801c8ee:	f8bb 2000 	ldrh.w	r2, [fp]
 801c8f2:	900e      	str	r0, [sp, #56]	; 0x38
 801c8f4:	1a9b      	subs	r3, r3, r2
 801c8f6:	b21b      	sxth	r3, r3
 801c8f8:	9303      	str	r3, [sp, #12]
 801c8fa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c8fe:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c902:	ebaa 0a03 	sub.w	sl, sl, r3
 801c906:	fa0f f38a 	sxth.w	r3, sl
 801c90a:	9304      	str	r3, [sp, #16]
 801c90c:	9b03      	ldr	r3, [sp, #12]
 801c90e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c912:	9b04      	ldr	r3, [sp, #16]
 801c914:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c918:	9b05      	ldr	r3, [sp, #20]
 801c91a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c91e:	a90e      	add	r1, sp, #56	; 0x38
 801c920:	9b06      	ldr	r3, [sp, #24]
 801c922:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c926:	a80c      	add	r0, sp, #48	; 0x30
 801c928:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c92c:	f7f8 f944 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c930:	4640      	mov	r0, r8
 801c932:	f7f8 f8fd 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c936:	a80e      	add	r0, sp, #56	; 0x38
 801c938:	f7f8 f8fa 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c93c:	4b38      	ldr	r3, [pc, #224]	; (801ca20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c93e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c942:	881b      	ldrh	r3, [r3, #0]
 801c944:	9307      	str	r3, [sp, #28]
 801c946:	682b      	ldr	r3, [r5, #0]
 801c948:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801ca24 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c94c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c94e:	4628      	mov	r0, r5
 801c950:	4798      	blx	r3
 801c952:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801c956:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801c95a:	4681      	mov	r9, r0
 801c95c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c960:	f8db 0000 	ldr.w	r0, [fp]
 801c964:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801c966:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c96a:	6803      	ldr	r3, [r0, #0]
 801c96c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c96e:	4798      	blx	r3
 801c970:	4607      	mov	r7, r0
 801c972:	f8db 0000 	ldr.w	r0, [fp]
 801c976:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c97a:	6803      	ldr	r3, [r0, #0]
 801c97c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c980:	9109      	str	r1, [sp, #36]	; 0x24
 801c982:	9208      	str	r2, [sp, #32]
 801c984:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c986:	4798      	blx	r3
 801c988:	f010 0f01 	tst.w	r0, #1
 801c98c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c990:	d012      	beq.n	801c9b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c992:	f8db 0000 	ldr.w	r0, [fp]
 801c996:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c99a:	6803      	ldr	r3, [r0, #0]
 801c99c:	9200      	str	r2, [sp, #0]
 801c99e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801c9a0:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c9a4:	462b      	mov	r3, r5
 801c9a6:	47b0      	blx	r6
 801c9a8:	9b03      	ldr	r3, [sp, #12]
 801c9aa:	8023      	strh	r3, [r4, #0]
 801c9ac:	9b04      	ldr	r3, [sp, #16]
 801c9ae:	8063      	strh	r3, [r4, #2]
 801c9b0:	9b05      	ldr	r3, [sp, #20]
 801c9b2:	80a3      	strh	r3, [r4, #4]
 801c9b4:	9b06      	ldr	r3, [sp, #24]
 801c9b6:	e78b      	b.n	801c8d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c9b8:	fb09 f202 	mul.w	r2, r9, r2
 801c9bc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c9c0:	440f      	add	r7, r1
 801c9c2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c9c6:	b166      	cbz	r6, 801c9e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c9c8:	9a07      	ldr	r2, [sp, #28]
 801c9ca:	4592      	cmp	sl, r2
 801c9cc:	d109      	bne.n	801c9e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c9ce:	f8db 0000 	ldr.w	r0, [fp]
 801c9d2:	6802      	ldr	r2, [r0, #0]
 801c9d4:	fb09 f303 	mul.w	r3, r9, r3
 801c9d8:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801c9da:	4629      	mov	r1, r5
 801c9dc:	463a      	mov	r2, r7
 801c9de:	47b0      	blx	r6
 801c9e0:	e7e2      	b.n	801c9a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c9e2:	fb0a f303 	mul.w	r3, sl, r3
 801c9e6:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801ca24 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c9ea:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c9ee:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c9f2:	4545      	cmp	r5, r8
 801c9f4:	d2d8      	bcs.n	801c9a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c9f6:	f8db 0000 	ldr.w	r0, [fp]
 801c9fa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c9fe:	6802      	ldr	r2, [r0, #0]
 801ca00:	4629      	mov	r1, r5
 801ca02:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801ca06:	005b      	lsls	r3, r3, #1
 801ca08:	463a      	mov	r2, r7
 801ca0a:	47d0      	blx	sl
 801ca0c:	444f      	add	r7, r9
 801ca0e:	4435      	add	r5, r6
 801ca10:	e7ef      	b.n	801c9f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801ca12:	bf00      	nop
 801ca14:	2000ef10 	.word	0x2000ef10
 801ca18:	2000ef12 	.word	0x2000ef12
 801ca1c:	2000ef14 	.word	0x2000ef14
 801ca20:	2000ef16 	.word	0x2000ef16
 801ca24:	2000ef1c 	.word	0x2000ef1c

0801ca28 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801ca28:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ca2a:	4606      	mov	r6, r0
 801ca2c:	b087      	sub	sp, #28
 801ca2e:	460c      	mov	r4, r1
 801ca30:	4617      	mov	r7, r2
 801ca32:	461d      	mov	r5, r3
 801ca34:	b333      	cbz	r3, 801ca84 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801ca36:	4608      	mov	r0, r1
 801ca38:	f7f3 f85b 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ca3c:	bb10      	cbnz	r0, 801ca84 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801ca3e:	6820      	ldr	r0, [r4, #0]
 801ca40:	6861      	ldr	r1, [r4, #4]
 801ca42:	4c1c      	ldr	r4, [pc, #112]	; (801cab4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801ca44:	ab04      	add	r3, sp, #16
 801ca46:	c303      	stmia	r3!, {r0, r1}
 801ca48:	a804      	add	r0, sp, #16
 801ca4a:	f7f8 f871 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca4e:	6820      	ldr	r0, [r4, #0]
 801ca50:	6803      	ldr	r3, [r0, #0]
 801ca52:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ca54:	4798      	blx	r3
 801ca56:	2dff      	cmp	r5, #255	; 0xff
 801ca58:	d016      	beq.n	801ca88 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801ca5a:	f010 0f08 	tst.w	r0, #8
 801ca5e:	6820      	ldr	r0, [r4, #0]
 801ca60:	d015      	beq.n	801ca8e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801ca62:	2400      	movs	r4, #0
 801ca64:	6801      	ldr	r1, [r0, #0]
 801ca66:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801ca6a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ca6e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801ca72:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801ca76:	9401      	str	r4, [sp, #4]
 801ca78:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801ca7c:	9400      	str	r4, [sp, #0]
 801ca7e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801ca80:	4639      	mov	r1, r7
 801ca82:	47a0      	blx	r4
 801ca84:	b007      	add	sp, #28
 801ca86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ca88:	f010 0f02 	tst.w	r0, #2
 801ca8c:	e7e7      	b.n	801ca5e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801ca8e:	6803      	ldr	r3, [r0, #0]
 801ca90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ca92:	4798      	blx	r3
 801ca94:	4b08      	ldr	r3, [pc, #32]	; (801cab8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801ca96:	881a      	ldrh	r2, [r3, #0]
 801ca98:	6833      	ldr	r3, [r6, #0]
 801ca9a:	e9cd 7500 	strd	r7, r5, [sp]
 801ca9e:	4601      	mov	r1, r0
 801caa0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801caa2:	4630      	mov	r0, r6
 801caa4:	ab04      	add	r3, sp, #16
 801caa6:	47a8      	blx	r5
 801caa8:	6820      	ldr	r0, [r4, #0]
 801caaa:	6803      	ldr	r3, [r0, #0]
 801caac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801caae:	4798      	blx	r3
 801cab0:	e7e8      	b.n	801ca84 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cab2:	bf00      	nop
 801cab4:	2000ef1c 	.word	0x2000ef1c
 801cab8:	2000ef16 	.word	0x2000ef16

0801cabc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801cabc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cac0:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801cac4:	9e08      	ldr	r6, [sp, #32]
 801cac6:	4688      	mov	r8, r1
 801cac8:	4614      	mov	r4, r2
 801caca:	461d      	mov	r5, r3
 801cacc:	2f00      	cmp	r7, #0
 801cace:	f000 80a9 	beq.w	801cc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cad2:	4618      	mov	r0, r3
 801cad4:	f7f3 f80d 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cad8:	2800      	cmp	r0, #0
 801cada:	f040 80a3 	bne.w	801cc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cade:	f9b5 1000 	ldrsh.w	r1, [r5]
 801cae2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801cae6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801caea:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801caee:	fb04 1303 	mla	r3, r4, r3, r1
 801caf2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801caf6:	4365      	muls	r5, r4
 801caf8:	2fff      	cmp	r7, #255	; 0xff
 801cafa:	eba4 0200 	sub.w	r2, r4, r0
 801cafe:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801cb02:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801cb06:	d04a      	beq.n	801cb9e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801cb08:	b2bc      	uxth	r4, r7
 801cb0a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801cb0e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801cb12:	fa5f f788 	uxtb.w	r7, r8
 801cb16:	b2f3      	uxtb	r3, r6
 801cb18:	0040      	lsls	r0, r0, #1
 801cb1a:	fb0e fe04 	mul.w	lr, lr, r4
 801cb1e:	4367      	muls	r7, r4
 801cb20:	4363      	muls	r3, r4
 801cb22:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801cb26:	fa1f fc8c 	uxth.w	ip, ip
 801cb2a:	42a9      	cmp	r1, r5
 801cb2c:	d27a      	bcs.n	801cc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cb2e:	eb01 0900 	add.w	r9, r1, r0
 801cb32:	4549      	cmp	r1, r9
 801cb34:	d231      	bcs.n	801cb9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801cb36:	880a      	ldrh	r2, [r1, #0]
 801cb38:	1214      	asrs	r4, r2, #8
 801cb3a:	10d6      	asrs	r6, r2, #3
 801cb3c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801cb40:	00d2      	lsls	r2, r2, #3
 801cb42:	b2d2      	uxtb	r2, r2
 801cb44:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801cb48:	fb14 f40c 	smulbb	r4, r4, ip
 801cb4c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cb50:	4474      	add	r4, lr
 801cb52:	fb12 f20c 	smulbb	r2, r2, ip
 801cb56:	b2a4      	uxth	r4, r4
 801cb58:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cb5c:	441a      	add	r2, r3
 801cb5e:	b292      	uxth	r2, r2
 801cb60:	f104 0a01 	add.w	sl, r4, #1
 801cb64:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801cb68:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801cb6c:	fb16 f60c 	smulbb	r6, r6, ip
 801cb70:	f102 0a01 	add.w	sl, r2, #1
 801cb74:	443e      	add	r6, r7
 801cb76:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801cb7a:	b2b6      	uxth	r6, r6
 801cb7c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801cb80:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cb84:	4322      	orrs	r2, r4
 801cb86:	1c74      	adds	r4, r6, #1
 801cb88:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801cb8c:	0976      	lsrs	r6, r6, #5
 801cb8e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cb92:	4332      	orrs	r2, r6
 801cb94:	f821 2b02 	strh.w	r2, [r1], #2
 801cb98:	e7cb      	b.n	801cb32 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801cb9a:	4441      	add	r1, r8
 801cb9c:	e7c5      	b.n	801cb2a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801cb9e:	4f22      	ldr	r7, [pc, #136]	; (801cc28 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801cba0:	0973      	lsrs	r3, r6, #5
 801cba2:	ea08 0707 	and.w	r7, r8, r7
 801cba6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cbaa:	433b      	orrs	r3, r7
 801cbac:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801cbb0:	4333      	orrs	r3, r6
 801cbb2:	07e7      	lsls	r7, r4, #31
 801cbb4:	b29b      	uxth	r3, r3
 801cbb6:	d50b      	bpl.n	801cbd0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801cbb8:	0040      	lsls	r0, r0, #1
 801cbba:	0052      	lsls	r2, r2, #1
 801cbbc:	42a9      	cmp	r1, r5
 801cbbe:	d231      	bcs.n	801cc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cbc0:	180c      	adds	r4, r1, r0
 801cbc2:	42a1      	cmp	r1, r4
 801cbc4:	d202      	bcs.n	801cbcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801cbc6:	f821 3b02 	strh.w	r3, [r1], #2
 801cbca:	e7fa      	b.n	801cbc2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801cbcc:	4411      	add	r1, r2
 801cbce:	e7f5      	b.n	801cbbc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801cbd0:	078e      	lsls	r6, r1, #30
 801cbd2:	d008      	beq.n	801cbe6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801cbd4:	0066      	lsls	r6, r4, #1
 801cbd6:	460a      	mov	r2, r1
 801cbd8:	42aa      	cmp	r2, r5
 801cbda:	d202      	bcs.n	801cbe2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801cbdc:	8013      	strh	r3, [r2, #0]
 801cbde:	4432      	add	r2, r6
 801cbe0:	e7fa      	b.n	801cbd8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801cbe2:	3102      	adds	r1, #2
 801cbe4:	3801      	subs	r0, #1
 801cbe6:	07c2      	lsls	r2, r0, #31
 801cbe8:	d50b      	bpl.n	801cc02 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801cbea:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801cbee:	3a01      	subs	r2, #1
 801cbf0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801cbf4:	0066      	lsls	r6, r4, #1
 801cbf6:	42aa      	cmp	r2, r5
 801cbf8:	d202      	bcs.n	801cc00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801cbfa:	8013      	strh	r3, [r2, #0]
 801cbfc:	4432      	add	r2, r6
 801cbfe:	e7fa      	b.n	801cbf6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801cc00:	3801      	subs	r0, #1
 801cc02:	b178      	cbz	r0, 801cc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cc04:	1040      	asrs	r0, r0, #1
 801cc06:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801cc0a:	0080      	lsls	r0, r0, #2
 801cc0c:	0064      	lsls	r4, r4, #1
 801cc0e:	42a9      	cmp	r1, r5
 801cc10:	d208      	bcs.n	801cc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cc12:	180e      	adds	r6, r1, r0
 801cc14:	460a      	mov	r2, r1
 801cc16:	42b2      	cmp	r2, r6
 801cc18:	d202      	bcs.n	801cc20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801cc1a:	f842 3b04 	str.w	r3, [r2], #4
 801cc1e:	e7fa      	b.n	801cc16 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801cc20:	4421      	add	r1, r4
 801cc22:	e7f4      	b.n	801cc0e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801cc24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cc28:	00fff800 	.word	0x00fff800

0801cc2c <_ZN8touchgfx8LCD16bppC1Ev>:
 801cc2c:	2200      	movs	r2, #0
 801cc2e:	4912      	ldr	r1, [pc, #72]	; (801cc78 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801cc30:	6042      	str	r2, [r0, #4]
 801cc32:	6001      	str	r1, [r0, #0]
 801cc34:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801cc38:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801cc3c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801cc40:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801cc44:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801cc48:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801cc4c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801cc50:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801cc54:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801cc58:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801cc5c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801cc60:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801cc64:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801cc68:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801cc6c:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801cc70:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801cc74:	4770      	bx	lr
 801cc76:	bf00      	nop
 801cc78:	0802a9cc 	.word	0x0802a9cc

0801cc7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801cc7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc80:	460d      	mov	r5, r1
 801cc82:	b08d      	sub	sp, #52	; 0x34
 801cc84:	4604      	mov	r4, r0
 801cc86:	6808      	ldr	r0, [r1, #0]
 801cc88:	6849      	ldr	r1, [r1, #4]
 801cc8a:	4699      	mov	r9, r3
 801cc8c:	ab08      	add	r3, sp, #32
 801cc8e:	c303      	stmia	r3!, {r0, r1}
 801cc90:	6810      	ldr	r0, [r2, #0]
 801cc92:	6851      	ldr	r1, [r2, #4]
 801cc94:	ab0a      	add	r3, sp, #40	; 0x28
 801cc96:	c303      	stmia	r3!, {r0, r1}
 801cc98:	a808      	add	r0, sp, #32
 801cc9a:	f7f7 ff49 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc9e:	4629      	mov	r1, r5
 801cca0:	a80a      	add	r0, sp, #40	; 0x28
 801cca2:	f7f7 ff89 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cca6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801ccaa:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801ccae:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801ccb2:	4d63      	ldr	r5, [pc, #396]	; (801ce40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ccb4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801ccb8:	6828      	ldr	r0, [r5, #0]
 801ccba:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801ccbe:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ccc2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ccc6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801ccca:	440a      	add	r2, r1
 801cccc:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801ccd0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801ccd4:	4413      	add	r3, r2
 801ccd6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801ccda:	6803      	ldr	r3, [r0, #0]
 801ccdc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ccde:	4798      	blx	r3
 801cce0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cce4:	d119      	bne.n	801cd1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801cce6:	f010 0f20 	tst.w	r0, #32
 801ccea:	6828      	ldr	r0, [r5, #0]
 801ccec:	d018      	beq.n	801cd20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801ccee:	2500      	movs	r5, #0
 801ccf0:	6801      	ldr	r1, [r0, #0]
 801ccf2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ccf6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801ccfa:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801ccfe:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801cd02:	9502      	str	r5, [sp, #8]
 801cd04:	b2b6      	uxth	r6, r6
 801cd06:	fa1f f588 	uxth.w	r5, r8
 801cd0a:	9601      	str	r6, [sp, #4]
 801cd0c:	9500      	str	r5, [sp, #0]
 801cd0e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801cd10:	4621      	mov	r1, r4
 801cd12:	47a8      	blx	r5
 801cd14:	b00d      	add	sp, #52	; 0x34
 801cd16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd1a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801cd1e:	e7e4      	b.n	801ccea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801cd20:	6803      	ldr	r3, [r0, #0]
 801cd22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd24:	4798      	blx	r3
 801cd26:	4947      	ldr	r1, [pc, #284]	; (801ce44 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801cd28:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801cd2c:	880b      	ldrh	r3, [r1, #0]
 801cd2e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801cd32:	fb03 5202 	mla	r2, r3, r2, r5
 801cd36:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cd3a:	4373      	muls	r3, r6
 801cd3c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cd40:	9307      	str	r3, [sp, #28]
 801cd42:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801cd46:	9306      	str	r3, [sp, #24]
 801cd48:	468a      	mov	sl, r1
 801cd4a:	9b07      	ldr	r3, [sp, #28]
 801cd4c:	4298      	cmp	r0, r3
 801cd4e:	d270      	bcs.n	801ce32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801cd50:	9b06      	ldr	r3, [sp, #24]
 801cd52:	4621      	mov	r1, r4
 801cd54:	eb00 0b03 	add.w	fp, r0, r3
 801cd58:	4558      	cmp	r0, fp
 801cd5a:	d25d      	bcs.n	801ce18 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801cd5c:	f851 4b04 	ldr.w	r4, [r1], #4
 801cd60:	0e23      	lsrs	r3, r4, #24
 801cd62:	d014      	beq.n	801cd8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801cd64:	2bff      	cmp	r3, #255	; 0xff
 801cd66:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801cd6a:	d112      	bne.n	801cd92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801cd6c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cd70:	d10f      	bne.n	801cd92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801cd72:	0963      	lsrs	r3, r4, #5
 801cd74:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801cd78:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cd7c:	f02c 0c07 	bic.w	ip, ip, #7
 801cd80:	ea43 0c0c 	orr.w	ip, r3, ip
 801cd84:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801cd88:	ea4c 0404 	orr.w	r4, ip, r4
 801cd8c:	8004      	strh	r4, [r0, #0]
 801cd8e:	3002      	adds	r0, #2
 801cd90:	e7e2      	b.n	801cd58 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801cd92:	fb09 f303 	mul.w	r3, r9, r3
 801cd96:	8807      	ldrh	r7, [r0, #0]
 801cd98:	1c5a      	adds	r2, r3, #1
 801cd9a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801cd9e:	1212      	asrs	r2, r2, #8
 801cda0:	123e      	asrs	r6, r7, #8
 801cda2:	b293      	uxth	r3, r2
 801cda4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801cda8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cdac:	43d2      	mvns	r2, r2
 801cdae:	b2d2      	uxtb	r2, r2
 801cdb0:	10fd      	asrs	r5, r7, #3
 801cdb2:	fb1e fe03 	smulbb	lr, lr, r3
 801cdb6:	00ff      	lsls	r7, r7, #3
 801cdb8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cdbc:	fb06 e602 	mla	r6, r6, r2, lr
 801cdc0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cdc4:	b2ff      	uxtb	r7, r7
 801cdc6:	fa5f fc8c 	uxtb.w	ip, ip
 801cdca:	b2e4      	uxtb	r4, r4
 801cdcc:	b2b6      	uxth	r6, r6
 801cdce:	fb1c fc03 	smulbb	ip, ip, r3
 801cdd2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cdd6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801cdda:	fb14 f403 	smulbb	r4, r4, r3
 801cdde:	fb05 c502 	mla	r5, r5, r2, ip
 801cde2:	f106 0e01 	add.w	lr, r6, #1
 801cde6:	fb07 4702 	mla	r7, r7, r2, r4
 801cdea:	b2ad      	uxth	r5, r5
 801cdec:	b2bf      	uxth	r7, r7
 801cdee:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801cdf2:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801cdf6:	f105 0c01 	add.w	ip, r5, #1
 801cdfa:	1c7e      	adds	r6, r7, #1
 801cdfc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ce00:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ce04:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ce08:	096d      	lsrs	r5, r5, #5
 801ce0a:	ea46 060e 	orr.w	r6, r6, lr
 801ce0e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ce12:	432e      	orrs	r6, r5
 801ce14:	8006      	strh	r6, [r0, #0]
 801ce16:	e7ba      	b.n	801cd8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ce18:	f8ba 3000 	ldrh.w	r3, [sl]
 801ce1c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801ce20:	eba3 0308 	sub.w	r3, r3, r8
 801ce24:	eba4 0408 	sub.w	r4, r4, r8
 801ce28:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ce2c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ce30:	e78b      	b.n	801cd4a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ce32:	4b03      	ldr	r3, [pc, #12]	; (801ce40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ce34:	6818      	ldr	r0, [r3, #0]
 801ce36:	6803      	ldr	r3, [r0, #0]
 801ce38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ce3a:	4798      	blx	r3
 801ce3c:	e76a      	b.n	801cd14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ce3e:	bf00      	nop
 801ce40:	2000ef1c 	.word	0x2000ef1c
 801ce44:	2000ef16 	.word	0x2000ef16

0801ce48 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801ce48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ce4c:	460c      	mov	r4, r1
 801ce4e:	b085      	sub	sp, #20
 801ce50:	6810      	ldr	r0, [r2, #0]
 801ce52:	6851      	ldr	r1, [r2, #4]
 801ce54:	466d      	mov	r5, sp
 801ce56:	c503      	stmia	r5!, {r0, r1}
 801ce58:	6818      	ldr	r0, [r3, #0]
 801ce5a:	6859      	ldr	r1, [r3, #4]
 801ce5c:	4616      	mov	r6, r2
 801ce5e:	c503      	stmia	r5!, {r0, r1}
 801ce60:	4668      	mov	r0, sp
 801ce62:	f7f7 fe65 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce66:	4631      	mov	r1, r6
 801ce68:	a802      	add	r0, sp, #8
 801ce6a:	f7f7 fea5 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ce6e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801ce72:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801ce76:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ce7a:	4d28      	ldr	r5, [pc, #160]	; (801cf1c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801ce7c:	4e28      	ldr	r6, [pc, #160]	; (801cf20 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801ce7e:	6828      	ldr	r0, [r5, #0]
 801ce80:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ce84:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801ce88:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ce8c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ce90:	f8bd 1000 	ldrh.w	r1, [sp]
 801ce94:	440a      	add	r2, r1
 801ce96:	f8ad 2008 	strh.w	r2, [sp, #8]
 801ce9a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ce9e:	4413      	add	r3, r2
 801cea0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cea4:	6803      	ldr	r3, [r0, #0]
 801cea6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cea8:	4798      	blx	r3
 801ceaa:	8833      	ldrh	r3, [r6, #0]
 801ceac:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801ceb0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ceb4:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801cf24 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801ceb8:	fb03 1202 	mla	r2, r3, r2, r1
 801cebc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cec0:	fb08 f303 	mul.w	r3, r8, r3
 801cec4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cec8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cecc:	4298      	cmp	r0, r3
 801cece:	d21d      	bcs.n	801cf0c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801ced0:	eb00 080c 	add.w	r8, r0, ip
 801ced4:	4540      	cmp	r0, r8
 801ced6:	d20f      	bcs.n	801cef8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801ced8:	f854 1b04 	ldr.w	r1, [r4], #4
 801cedc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801cee0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801cee4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cee8:	ea42 0209 	orr.w	r2, r2, r9
 801ceec:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cef0:	430a      	orrs	r2, r1
 801cef2:	f820 2b02 	strh.w	r2, [r0], #2
 801cef6:	e7ed      	b.n	801ced4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cef8:	8832      	ldrh	r2, [r6, #0]
 801cefa:	1bd2      	subs	r2, r2, r7
 801cefc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cf00:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801cf04:	1bd2      	subs	r2, r2, r7
 801cf06:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801cf0a:	e7df      	b.n	801cecc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801cf0c:	6828      	ldr	r0, [r5, #0]
 801cf0e:	6803      	ldr	r3, [r0, #0]
 801cf10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cf12:	4798      	blx	r3
 801cf14:	b005      	add	sp, #20
 801cf16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cf1a:	bf00      	nop
 801cf1c:	2000ef1c 	.word	0x2000ef1c
 801cf20:	2000ef16 	.word	0x2000ef16
 801cf24:	fffff800 	.word	0xfffff800

0801cf28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801cf28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cf2c:	460e      	mov	r6, r1
 801cf2e:	b08e      	sub	sp, #56	; 0x38
 801cf30:	4604      	mov	r4, r0
 801cf32:	6808      	ldr	r0, [r1, #0]
 801cf34:	6849      	ldr	r1, [r1, #4]
 801cf36:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801d110 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801cf3a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801d114 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801cf3e:	461d      	mov	r5, r3
 801cf40:	ab0a      	add	r3, sp, #40	; 0x28
 801cf42:	c303      	stmia	r3!, {r0, r1}
 801cf44:	6810      	ldr	r0, [r2, #0]
 801cf46:	6851      	ldr	r1, [r2, #4]
 801cf48:	ab0c      	add	r3, sp, #48	; 0x30
 801cf4a:	c303      	stmia	r3!, {r0, r1}
 801cf4c:	a80a      	add	r0, sp, #40	; 0x28
 801cf4e:	f7f7 fdef 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf52:	4631      	mov	r1, r6
 801cf54:	a80c      	add	r0, sp, #48	; 0x30
 801cf56:	f7f7 fe2f 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf5a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801cf5e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801cf62:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cf66:	f8d8 0000 	ldr.w	r0, [r8]
 801cf6a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801cf6e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cf72:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cf76:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cf7a:	440c      	add	r4, r1
 801cf7c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801cf80:	440a      	add	r2, r1
 801cf82:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801cf86:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801cf8a:	4413      	add	r3, r2
 801cf8c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801cf90:	6803      	ldr	r3, [r0, #0]
 801cf92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cf94:	4798      	blx	r3
 801cf96:	2dff      	cmp	r5, #255	; 0xff
 801cf98:	d124      	bne.n	801cfe4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801cf9a:	f010 0f01 	tst.w	r0, #1
 801cf9e:	f8d8 0000 	ldr.w	r0, [r8]
 801cfa2:	d022      	beq.n	801cfea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801cfa4:	2100      	movs	r1, #0
 801cfa6:	f8d0 c000 	ldr.w	ip, [r0]
 801cfaa:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801cfae:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801cfb2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801cfb6:	f04f 0e01 	mov.w	lr, #1
 801cfba:	f8cd e018 	str.w	lr, [sp, #24]
 801cfbe:	f8b9 e000 	ldrh.w	lr, [r9]
 801cfc2:	9503      	str	r5, [sp, #12]
 801cfc4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801cfc8:	b2b6      	uxth	r6, r6
 801cfca:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cfce:	9102      	str	r1, [sp, #8]
 801cfd0:	b2bf      	uxth	r7, r7
 801cfd2:	9601      	str	r6, [sp, #4]
 801cfd4:	9700      	str	r7, [sp, #0]
 801cfd6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801cfda:	4621      	mov	r1, r4
 801cfdc:	47a8      	blx	r5
 801cfde:	b00e      	add	sp, #56	; 0x38
 801cfe0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cfe4:	f010 0f04 	tst.w	r0, #4
 801cfe8:	e7d9      	b.n	801cf9e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801cfea:	6803      	ldr	r3, [r0, #0]
 801cfec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cfee:	4798      	blx	r3
 801cff0:	f8b9 3000 	ldrh.w	r3, [r9]
 801cff4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cff8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801cffc:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d000:	fb03 1202 	mla	r2, r3, r2, r1
 801d004:	ebac 0c07 	sub.w	ip, ip, r7
 801d008:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d00c:	435e      	muls	r6, r3
 801d00e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801d012:	2dff      	cmp	r5, #255	; 0xff
 801d014:	eba3 0707 	sub.w	r7, r3, r7
 801d018:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d01c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d020:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801d024:	d049      	beq.n	801d0ba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801d026:	43eb      	mvns	r3, r5
 801d028:	fa1f f985 	uxth.w	r9, r5
 801d02c:	b2db      	uxtb	r3, r3
 801d02e:	42b0      	cmp	r0, r6
 801d030:	d266      	bcs.n	801d100 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d032:	eb00 0a0e 	add.w	sl, r0, lr
 801d036:	4550      	cmp	r0, sl
 801d038:	4621      	mov	r1, r4
 801d03a:	f104 0403 	add.w	r4, r4, #3
 801d03e:	d25b      	bcs.n	801d0f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801d040:	8802      	ldrh	r2, [r0, #0]
 801d042:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d046:	ea4f 2822 	mov.w	r8, r2, asr #8
 801d04a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d04e:	fb11 f109 	smulbb	r1, r1, r9
 801d052:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801d056:	10d5      	asrs	r5, r2, #3
 801d058:	fb08 1803 	mla	r8, r8, r3, r1
 801d05c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801d060:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d064:	fb11 f109 	smulbb	r1, r1, r9
 801d068:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d06c:	fb05 1503 	mla	r5, r5, r3, r1
 801d070:	00d2      	lsls	r2, r2, #3
 801d072:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d076:	b2d2      	uxtb	r2, r2
 801d078:	fb11 f109 	smulbb	r1, r1, r9
 801d07c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d080:	fa1f f888 	uxth.w	r8, r8
 801d084:	fb02 1203 	mla	r2, r2, r3, r1
 801d088:	b292      	uxth	r2, r2
 801d08a:	f108 0101 	add.w	r1, r8, #1
 801d08e:	b2ad      	uxth	r5, r5
 801d090:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801d094:	1c51      	adds	r1, r2, #1
 801d096:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d09a:	1c69      	adds	r1, r5, #1
 801d09c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d0a0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d0a4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d0a8:	096d      	lsrs	r5, r5, #5
 801d0aa:	ea42 0208 	orr.w	r2, r2, r8
 801d0ae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d0b2:	432a      	orrs	r2, r5
 801d0b4:	f820 2b02 	strh.w	r2, [r0], #2
 801d0b8:	e7bd      	b.n	801d036 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801d0ba:	4a14      	ldr	r2, [pc, #80]	; (801d10c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801d0bc:	42b0      	cmp	r0, r6
 801d0be:	d21f      	bcs.n	801d100 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d0c0:	eb00 050e 	add.w	r5, r0, lr
 801d0c4:	42a8      	cmp	r0, r5
 801d0c6:	4621      	mov	r1, r4
 801d0c8:	f104 0403 	add.w	r4, r4, #3
 801d0cc:	d210      	bcs.n	801d0f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801d0ce:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801d0d2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d0d6:	00db      	lsls	r3, r3, #3
 801d0d8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801d0dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d0e0:	430b      	orrs	r3, r1
 801d0e2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d0e6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801d0ea:	f820 3b02 	strh.w	r3, [r0], #2
 801d0ee:	e7e9      	b.n	801d0c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801d0f0:	4438      	add	r0, r7
 801d0f2:	eb01 040c 	add.w	r4, r1, ip
 801d0f6:	e7e1      	b.n	801d0bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801d0f8:	4438      	add	r0, r7
 801d0fa:	eb01 040c 	add.w	r4, r1, ip
 801d0fe:	e796      	b.n	801d02e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801d100:	4b03      	ldr	r3, [pc, #12]	; (801d110 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801d102:	6818      	ldr	r0, [r3, #0]
 801d104:	6803      	ldr	r3, [r0, #0]
 801d106:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d108:	4798      	blx	r3
 801d10a:	e768      	b.n	801cfde <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801d10c:	fffff800 	.word	0xfffff800
 801d110:	2000ef1c 	.word	0x2000ef1c
 801d114:	2000ef16 	.word	0x2000ef16

0801d118 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801d118:	b4f0      	push	{r4, r5, r6, r7}
 801d11a:	4616      	mov	r6, r2
 801d11c:	2e01      	cmp	r6, #1
 801d11e:	461c      	mov	r4, r3
 801d120:	460d      	mov	r5, r1
 801d122:	9a04      	ldr	r2, [sp, #16]
 801d124:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801d128:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801d12c:	d012      	beq.n	801d154 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801d12e:	d303      	bcc.n	801d138 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801d130:	2e02      	cmp	r6, #2
 801d132:	d00a      	beq.n	801d14a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801d134:	bcf0      	pop	{r4, r5, r6, r7}
 801d136:	4770      	bx	lr
 801d138:	6805      	ldr	r5, [r0, #0]
 801d13a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801d13e:	68ed      	ldr	r5, [r5, #12]
 801d140:	4613      	mov	r3, r2
 801d142:	46ac      	mov	ip, r5
 801d144:	4622      	mov	r2, r4
 801d146:	bcf0      	pop	{r4, r5, r6, r7}
 801d148:	4760      	bx	ip
 801d14a:	4621      	mov	r1, r4
 801d14c:	4628      	mov	r0, r5
 801d14e:	bcf0      	pop	{r4, r5, r6, r7}
 801d150:	f7ff bd94 	b.w	801cc7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d154:	4621      	mov	r1, r4
 801d156:	4628      	mov	r0, r5
 801d158:	bcf0      	pop	{r4, r5, r6, r7}
 801d15a:	f7ff bee5 	b.w	801cf28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801d160 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801d160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d164:	4681      	mov	r9, r0
 801d166:	b093      	sub	sp, #76	; 0x4c
 801d168:	6810      	ldr	r0, [r2, #0]
 801d16a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801d16e:	4f6d      	ldr	r7, [pc, #436]	; (801d324 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801d170:	4688      	mov	r8, r1
 801d172:	6851      	ldr	r1, [r2, #4]
 801d174:	ac0e      	add	r4, sp, #56	; 0x38
 801d176:	c403      	stmia	r4!, {r0, r1}
 801d178:	6818      	ldr	r0, [r3, #0]
 801d17a:	6859      	ldr	r1, [r3, #4]
 801d17c:	ac10      	add	r4, sp, #64	; 0x40
 801d17e:	4616      	mov	r6, r2
 801d180:	c403      	stmia	r4!, {r0, r1}
 801d182:	a80e      	add	r0, sp, #56	; 0x38
 801d184:	f7f7 fcd4 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d188:	4631      	mov	r1, r6
 801d18a:	a810      	add	r0, sp, #64	; 0x40
 801d18c:	f7f7 fd14 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d190:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801d194:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801d198:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801d19c:	4e62      	ldr	r6, [pc, #392]	; (801d328 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d19e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801d1a2:	6830      	ldr	r0, [r6, #0]
 801d1a4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801d1a8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d1ac:	4489      	add	r9, r1
 801d1ae:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801d1b2:	440a      	add	r2, r1
 801d1b4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801d1b8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d1bc:	4413      	add	r3, r2
 801d1be:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801d1c2:	6803      	ldr	r3, [r0, #0]
 801d1c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d1c6:	4798      	blx	r3
 801d1c8:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d1cc:	6830      	ldr	r0, [r6, #0]
 801d1ce:	d01d      	beq.n	801d20c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801d1d0:	2200      	movs	r2, #0
 801d1d2:	6801      	ldr	r1, [r0, #0]
 801d1d4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801d1d8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d1dc:	220b      	movs	r2, #11
 801d1de:	9207      	str	r2, [sp, #28]
 801d1e0:	883a      	ldrh	r2, [r7, #0]
 801d1e2:	9206      	str	r2, [sp, #24]
 801d1e4:	2201      	movs	r2, #1
 801d1e6:	e9cd a204 	strd	sl, r2, [sp, #16]
 801d1ea:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801d1ee:	9203      	str	r2, [sp, #12]
 801d1f0:	b2a4      	uxth	r4, r4
 801d1f2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801d1f6:	9200      	str	r2, [sp, #0]
 801d1f8:	b2ad      	uxth	r5, r5
 801d1fa:	9502      	str	r5, [sp, #8]
 801d1fc:	9401      	str	r4, [sp, #4]
 801d1fe:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801d200:	4642      	mov	r2, r8
 801d202:	4649      	mov	r1, r9
 801d204:	47a0      	blx	r4
 801d206:	b013      	add	sp, #76	; 0x4c
 801d208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d20c:	6803      	ldr	r3, [r0, #0]
 801d20e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d210:	4798      	blx	r3
 801d212:	883b      	ldrh	r3, [r7, #0]
 801d214:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d218:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801d21c:	fb03 1202 	mla	r2, r3, r2, r1
 801d220:	435d      	muls	r5, r3
 801d222:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d226:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801d22a:	920c      	str	r2, [sp, #48]	; 0x30
 801d22c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801d230:	1b12      	subs	r2, r2, r4
 801d232:	920d      	str	r2, [sp, #52]	; 0x34
 801d234:	0062      	lsls	r2, r4, #1
 801d236:	1b1c      	subs	r4, r3, r4
 801d238:	0063      	lsls	r3, r4, #1
 801d23a:	920a      	str	r2, [sp, #40]	; 0x28
 801d23c:	930b      	str	r3, [sp, #44]	; 0x2c
 801d23e:	f04f 0e04 	mov.w	lr, #4
 801d242:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d244:	4298      	cmp	r0, r3
 801d246:	d266      	bcs.n	801d316 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801d248:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d24a:	eb00 0b03 	add.w	fp, r0, r3
 801d24e:	4558      	cmp	r0, fp
 801d250:	d25c      	bcs.n	801d30c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801d252:	f819 3b01 	ldrb.w	r3, [r9], #1
 801d256:	fb1e e303 	smlabb	r3, lr, r3, lr
 801d25a:	f858 2003 	ldr.w	r2, [r8, r3]
 801d25e:	0e11      	lsrs	r1, r2, #24
 801d260:	d012      	beq.n	801d288 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d262:	29ff      	cmp	r1, #255	; 0xff
 801d264:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801d268:	d110      	bne.n	801d28c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d26a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d26e:	d10d      	bne.n	801d28c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d270:	0953      	lsrs	r3, r2, #5
 801d272:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801d276:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d27a:	f027 0707 	bic.w	r7, r7, #7
 801d27e:	431f      	orrs	r7, r3
 801d280:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d284:	433a      	orrs	r2, r7
 801d286:	8002      	strh	r2, [r0, #0]
 801d288:	3002      	adds	r0, #2
 801d28a:	e7e0      	b.n	801d24e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801d28c:	fb0a f101 	mul.w	r1, sl, r1
 801d290:	8806      	ldrh	r6, [r0, #0]
 801d292:	1c4b      	adds	r3, r1, #1
 801d294:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801d298:	1235      	asrs	r5, r6, #8
 801d29a:	10f4      	asrs	r4, r6, #3
 801d29c:	121b      	asrs	r3, r3, #8
 801d29e:	00f6      	lsls	r6, r6, #3
 801d2a0:	b299      	uxth	r1, r3
 801d2a2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d2a6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d2aa:	b2f6      	uxtb	r6, r6
 801d2ac:	43db      	mvns	r3, r3
 801d2ae:	b2d2      	uxtb	r2, r2
 801d2b0:	b2db      	uxtb	r3, r3
 801d2b2:	fb1c fc01 	smulbb	ip, ip, r1
 801d2b6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d2ba:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d2be:	fb12 f201 	smulbb	r2, r2, r1
 801d2c2:	fb05 c503 	mla	r5, r5, r3, ip
 801d2c6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d2ca:	b2ff      	uxtb	r7, r7
 801d2cc:	fb06 2203 	mla	r2, r6, r3, r2
 801d2d0:	b2ad      	uxth	r5, r5
 801d2d2:	fb17 f701 	smulbb	r7, r7, r1
 801d2d6:	b292      	uxth	r2, r2
 801d2d8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d2dc:	fb04 7403 	mla	r4, r4, r3, r7
 801d2e0:	f105 0c01 	add.w	ip, r5, #1
 801d2e4:	1c57      	adds	r7, r2, #1
 801d2e6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d2ea:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d2ee:	b2a4      	uxth	r4, r4
 801d2f0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d2f4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d2f8:	433d      	orrs	r5, r7
 801d2fa:	1c67      	adds	r7, r4, #1
 801d2fc:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d300:	0964      	lsrs	r4, r4, #5
 801d302:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d306:	4325      	orrs	r5, r4
 801d308:	8005      	strh	r5, [r0, #0]
 801d30a:	e7bd      	b.n	801d288 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d30c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d30e:	4418      	add	r0, r3
 801d310:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d312:	4499      	add	r9, r3
 801d314:	e795      	b.n	801d242 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d316:	4b04      	ldr	r3, [pc, #16]	; (801d328 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d318:	6818      	ldr	r0, [r3, #0]
 801d31a:	6803      	ldr	r3, [r0, #0]
 801d31c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d31e:	4798      	blx	r3
 801d320:	e771      	b.n	801d206 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d322:	bf00      	nop
 801d324:	2000ef16 	.word	0x2000ef16
 801d328:	2000ef1c 	.word	0x2000ef1c

0801d32c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d32c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d330:	b087      	sub	sp, #28
 801d332:	4680      	mov	r8, r0
 801d334:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d338:	460d      	mov	r5, r1
 801d33a:	4614      	mov	r4, r2
 801d33c:	2e00      	cmp	r6, #0
 801d33e:	f000 80b9 	beq.w	801d4b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d342:	6810      	ldr	r0, [r2, #0]
 801d344:	6851      	ldr	r1, [r2, #4]
 801d346:	af02      	add	r7, sp, #8
 801d348:	c703      	stmia	r7!, {r0, r1}
 801d34a:	6818      	ldr	r0, [r3, #0]
 801d34c:	6859      	ldr	r1, [r3, #4]
 801d34e:	af04      	add	r7, sp, #16
 801d350:	c703      	stmia	r7!, {r0, r1}
 801d352:	a802      	add	r0, sp, #8
 801d354:	f7f7 fbec 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d358:	4621      	mov	r1, r4
 801d35a:	a804      	add	r0, sp, #16
 801d35c:	f7f7 fc2c 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d360:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d364:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d368:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d36c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d370:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d374:	eb08 0401 	add.w	r4, r8, r1
 801d378:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d37c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d380:	440a      	add	r2, r1
 801d382:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d386:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d38a:	4413      	add	r3, r2
 801d38c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d390:	4b4a      	ldr	r3, [pc, #296]	; (801d4bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d392:	6818      	ldr	r0, [r3, #0]
 801d394:	6803      	ldr	r3, [r0, #0]
 801d396:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d398:	4798      	blx	r3
 801d39a:	4b49      	ldr	r3, [pc, #292]	; (801d4c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d39c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d3a0:	881a      	ldrh	r2, [r3, #0]
 801d3a2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d3a6:	2eff      	cmp	r6, #255	; 0xff
 801d3a8:	fb02 c101 	mla	r1, r2, r1, ip
 801d3ac:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d3b0:	fb02 f207 	mul.w	r2, r2, r7
 801d3b4:	f105 0104 	add.w	r1, r5, #4
 801d3b8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d3bc:	461d      	mov	r5, r3
 801d3be:	d05a      	beq.n	801d476 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d3c0:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d3c4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d3c8:	b2b6      	uxth	r6, r6
 801d3ca:	fa1f fe8e 	uxth.w	lr, lr
 801d3ce:	9301      	str	r3, [sp, #4]
 801d3d0:	4282      	cmp	r2, r0
 801d3d2:	d96a      	bls.n	801d4aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d3d4:	eb00 0b0a 	add.w	fp, r0, sl
 801d3d8:	4583      	cmp	fp, r0
 801d3da:	d940      	bls.n	801d45e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d3dc:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d3e0:	8805      	ldrh	r5, [r0, #0]
 801d3e2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d3e6:	122f      	asrs	r7, r5, #8
 801d3e8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d3ec:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d3f0:	fb17 f70e 	smulbb	r7, r7, lr
 801d3f4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d3f8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d3fc:	00ed      	lsls	r5, r5, #3
 801d3fe:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d402:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d406:	10df      	asrs	r7, r3, #3
 801d408:	b2ed      	uxtb	r5, r5
 801d40a:	00db      	lsls	r3, r3, #3
 801d40c:	fa1f fc8c 	uxth.w	ip, ip
 801d410:	fb19 f90e 	smulbb	r9, r9, lr
 801d414:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d418:	b2db      	uxtb	r3, r3
 801d41a:	fb15 f50e 	smulbb	r5, r5, lr
 801d41e:	fb07 9706 	mla	r7, r7, r6, r9
 801d422:	fb03 5306 	mla	r3, r3, r6, r5
 801d426:	f10c 0901 	add.w	r9, ip, #1
 801d42a:	b29b      	uxth	r3, r3
 801d42c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d430:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d434:	f103 0c01 	add.w	ip, r3, #1
 801d438:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d43c:	b2bf      	uxth	r7, r7
 801d43e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d442:	ea4c 0c09 	orr.w	ip, ip, r9
 801d446:	f107 0901 	add.w	r9, r7, #1
 801d44a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d44e:	097f      	lsrs	r7, r7, #5
 801d450:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d454:	ea4c 0c07 	orr.w	ip, ip, r7
 801d458:	f820 cb02 	strh.w	ip, [r0], #2
 801d45c:	e7bc      	b.n	801d3d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d45e:	9b01      	ldr	r3, [sp, #4]
 801d460:	881b      	ldrh	r3, [r3, #0]
 801d462:	eba3 0308 	sub.w	r3, r3, r8
 801d466:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d46a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d46e:	eba3 0308 	sub.w	r3, r3, r8
 801d472:	441c      	add	r4, r3
 801d474:	e7ac      	b.n	801d3d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d476:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d47a:	4282      	cmp	r2, r0
 801d47c:	d915      	bls.n	801d4aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d47e:	eb00 060a 	add.w	r6, r0, sl
 801d482:	4286      	cmp	r6, r0
 801d484:	d906      	bls.n	801d494 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d486:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d48a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d48e:	f820 3b02 	strh.w	r3, [r0], #2
 801d492:	e7f6      	b.n	801d482 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d494:	882b      	ldrh	r3, [r5, #0]
 801d496:	eba3 0308 	sub.w	r3, r3, r8
 801d49a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d49e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d4a2:	eba3 0308 	sub.w	r3, r3, r8
 801d4a6:	441c      	add	r4, r3
 801d4a8:	e7e7      	b.n	801d47a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d4aa:	4b04      	ldr	r3, [pc, #16]	; (801d4bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d4ac:	6818      	ldr	r0, [r3, #0]
 801d4ae:	6803      	ldr	r3, [r0, #0]
 801d4b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d4b2:	4798      	blx	r3
 801d4b4:	b007      	add	sp, #28
 801d4b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d4ba:	bf00      	nop
 801d4bc:	2000ef1c 	.word	0x2000ef1c
 801d4c0:	2000ef16 	.word	0x2000ef16

0801d4c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d4c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4c8:	b091      	sub	sp, #68	; 0x44
 801d4ca:	4680      	mov	r8, r0
 801d4cc:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d4d0:	460f      	mov	r7, r1
 801d4d2:	4614      	mov	r4, r2
 801d4d4:	2d00      	cmp	r5, #0
 801d4d6:	d051      	beq.n	801d57c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d4d8:	6810      	ldr	r0, [r2, #0]
 801d4da:	6851      	ldr	r1, [r2, #4]
 801d4dc:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801d6e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d4e0:	ae0c      	add	r6, sp, #48	; 0x30
 801d4e2:	c603      	stmia	r6!, {r0, r1}
 801d4e4:	6818      	ldr	r0, [r3, #0]
 801d4e6:	6859      	ldr	r1, [r3, #4]
 801d4e8:	ae0e      	add	r6, sp, #56	; 0x38
 801d4ea:	c603      	stmia	r6!, {r0, r1}
 801d4ec:	a80c      	add	r0, sp, #48	; 0x30
 801d4ee:	f7f7 fb1f 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d4f2:	4621      	mov	r1, r4
 801d4f4:	a80e      	add	r0, sp, #56	; 0x38
 801d4f6:	f7f7 fb5f 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d4fa:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d4fe:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d502:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d506:	f8d9 0000 	ldr.w	r0, [r9]
 801d50a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d50e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d512:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d516:	eb08 0401 	add.w	r4, r8, r1
 801d51a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d51e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801d6e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d522:	440a      	add	r2, r1
 801d524:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d528:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d52c:	4413      	add	r3, r2
 801d52e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d532:	6803      	ldr	r3, [r0, #0]
 801d534:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d536:	4798      	blx	r3
 801d538:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d53c:	f8d9 0000 	ldr.w	r0, [r9]
 801d540:	d01f      	beq.n	801d582 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d542:	2200      	movs	r2, #0
 801d544:	6801      	ldr	r1, [r0, #0]
 801d546:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d54a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d54e:	220b      	movs	r2, #11
 801d550:	9207      	str	r2, [sp, #28]
 801d552:	f8b8 2000 	ldrh.w	r2, [r8]
 801d556:	9206      	str	r2, [sp, #24]
 801d558:	2201      	movs	r2, #1
 801d55a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d55e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d562:	9203      	str	r2, [sp, #12]
 801d564:	fa1f f28a 	uxth.w	r2, sl
 801d568:	9202      	str	r2, [sp, #8]
 801d56a:	b2b6      	uxth	r6, r6
 801d56c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d570:	9200      	str	r2, [sp, #0]
 801d572:	9601      	str	r6, [sp, #4]
 801d574:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d576:	463a      	mov	r2, r7
 801d578:	4621      	mov	r1, r4
 801d57a:	47a8      	blx	r5
 801d57c:	b011      	add	sp, #68	; 0x44
 801d57e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d582:	6803      	ldr	r3, [r0, #0]
 801d584:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d586:	4798      	blx	r3
 801d588:	f8b8 2000 	ldrh.w	r2, [r8]
 801d58c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d590:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d594:	2dff      	cmp	r5, #255	; 0xff
 801d596:	fb02 1303 	mla	r3, r2, r3, r1
 801d59a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d59e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d5a2:	fb0a fa02 	mul.w	sl, sl, r2
 801d5a6:	d062      	beq.n	801d66e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d5a8:	ea6f 0c05 	mvn.w	ip, r5
 801d5ac:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d5b0:	930a      	str	r3, [sp, #40]	; 0x28
 801d5b2:	b2ad      	uxth	r5, r5
 801d5b4:	fa5f fc8c 	uxtb.w	ip, ip
 801d5b8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d5bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d5be:	4298      	cmp	r0, r3
 801d5c0:	f080 8085 	bcs.w	801d6ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d5c4:	eb00 0b09 	add.w	fp, r0, r9
 801d5c8:	4558      	cmp	r0, fp
 801d5ca:	d246      	bcs.n	801d65a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d5cc:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d5d0:	2303      	movs	r3, #3
 801d5d2:	2204      	movs	r2, #4
 801d5d4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d5d8:	eb07 0a0e 	add.w	sl, r7, lr
 801d5dc:	8803      	ldrh	r3, [r0, #0]
 801d5de:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d5e2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d5e6:	1219      	asrs	r1, r3, #8
 801d5e8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d5ec:	fb18 f805 	smulbb	r8, r8, r5
 801d5f0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d5f4:	10da      	asrs	r2, r3, #3
 801d5f6:	fb01 810c 	mla	r1, r1, ip, r8
 801d5fa:	00db      	lsls	r3, r3, #3
 801d5fc:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d600:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d604:	b2db      	uxtb	r3, r3
 801d606:	fb18 f805 	smulbb	r8, r8, r5
 801d60a:	fb1e fe05 	smulbb	lr, lr, r5
 801d60e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d612:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d616:	b289      	uxth	r1, r1
 801d618:	fb02 820c 	mla	r2, r2, ip, r8
 801d61c:	fb03 e30c 	mla	r3, r3, ip, lr
 801d620:	b292      	uxth	r2, r2
 801d622:	b29b      	uxth	r3, r3
 801d624:	f101 0801 	add.w	r8, r1, #1
 801d628:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d62c:	f103 0e01 	add.w	lr, r3, #1
 801d630:	f102 0801 	add.w	r8, r2, #1
 801d634:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d638:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d63c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d640:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d644:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d648:	ea4e 0101 	orr.w	r1, lr, r1
 801d64c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d650:	ea41 0108 	orr.w	r1, r1, r8
 801d654:	f820 1b02 	strh.w	r1, [r0], #2
 801d658:	e7b6      	b.n	801d5c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d65a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d65c:	881b      	ldrh	r3, [r3, #0]
 801d65e:	1b9b      	subs	r3, r3, r6
 801d660:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d664:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d668:	1b9b      	subs	r3, r3, r6
 801d66a:	441c      	add	r4, r3
 801d66c:	e7a6      	b.n	801d5bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d66e:	491b      	ldr	r1, [pc, #108]	; (801d6dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d670:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d674:	2203      	movs	r2, #3
 801d676:	2504      	movs	r5, #4
 801d678:	4550      	cmp	r0, sl
 801d67a:	d228      	bcs.n	801d6ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d67c:	eb00 0c09 	add.w	ip, r0, r9
 801d680:	4560      	cmp	r0, ip
 801d682:	4623      	mov	r3, r4
 801d684:	d219      	bcs.n	801d6ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d686:	f893 e000 	ldrb.w	lr, [r3]
 801d68a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d68e:	eb07 0b0e 	add.w	fp, r7, lr
 801d692:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d696:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d69a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d69e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d6a2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d6a6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d6aa:	ea43 030b 	orr.w	r3, r3, fp
 801d6ae:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d6b2:	3401      	adds	r4, #1
 801d6b4:	f820 3b02 	strh.w	r3, [r0], #2
 801d6b8:	e7e2      	b.n	801d680 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d6ba:	f8b8 3000 	ldrh.w	r3, [r8]
 801d6be:	1b9b      	subs	r3, r3, r6
 801d6c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d6c4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d6c8:	1b9b      	subs	r3, r3, r6
 801d6ca:	441c      	add	r4, r3
 801d6cc:	e7d4      	b.n	801d678 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d6ce:	4b04      	ldr	r3, [pc, #16]	; (801d6e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d6d0:	6818      	ldr	r0, [r3, #0]
 801d6d2:	6803      	ldr	r3, [r0, #0]
 801d6d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d6d6:	4798      	blx	r3
 801d6d8:	e750      	b.n	801d57c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d6da:	bf00      	nop
 801d6dc:	fffff800 	.word	0xfffff800
 801d6e0:	2000ef1c 	.word	0x2000ef1c
 801d6e4:	2000ef16 	.word	0x2000ef16

0801d6e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d6e8:	b4f0      	push	{r4, r5, r6, r7}
 801d6ea:	460c      	mov	r4, r1
 801d6ec:	4611      	mov	r1, r2
 801d6ee:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d6f2:	780f      	ldrb	r7, [r1, #0]
 801d6f4:	784e      	ldrb	r6, [r1, #1]
 801d6f6:	2f01      	cmp	r7, #1
 801d6f8:	461a      	mov	r2, r3
 801d6fa:	9b04      	ldr	r3, [sp, #16]
 801d6fc:	d036      	beq.n	801d76c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801d6fe:	d31e      	bcc.n	801d73e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801d700:	2f02      	cmp	r7, #2
 801d702:	d14a      	bne.n	801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d704:	2e03      	cmp	r6, #3
 801d706:	d848      	bhi.n	801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d708:	e8df f006 	tbb	[pc, r6]
 801d70c:	16140702 	.word	0x16140702
 801d710:	9504      	str	r5, [sp, #16]
 801d712:	4620      	mov	r0, r4
 801d714:	bcf0      	pop	{r4, r5, r6, r7}
 801d716:	f7ff be09 	b.w	801d32c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d71a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d71c:	2800      	cmp	r0, #0
 801d71e:	d03c      	beq.n	801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d720:	6806      	ldr	r6, [r0, #0]
 801d722:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d726:	68b5      	ldr	r5, [r6, #8]
 801d728:	4613      	mov	r3, r2
 801d72a:	46ac      	mov	ip, r5
 801d72c:	460a      	mov	r2, r1
 801d72e:	4621      	mov	r1, r4
 801d730:	bcf0      	pop	{r4, r5, r6, r7}
 801d732:	4760      	bx	ip
 801d734:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d736:	e7f1      	b.n	801d71c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d738:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d73c:	e7ee      	b.n	801d71c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d73e:	2e03      	cmp	r6, #3
 801d740:	d82b      	bhi.n	801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d742:	e8df f006 	tbb	[pc, r6]
 801d746:	0702      	.short	0x0702
 801d748:	100e      	.short	0x100e
 801d74a:	9504      	str	r5, [sp, #16]
 801d74c:	4620      	mov	r0, r4
 801d74e:	bcf0      	pop	{r4, r5, r6, r7}
 801d750:	f7ff bd06 	b.w	801d160 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d754:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d756:	b300      	cbz	r0, 801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d758:	6806      	ldr	r6, [r0, #0]
 801d75a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d75e:	68f5      	ldr	r5, [r6, #12]
 801d760:	e7e2      	b.n	801d728 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d762:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d764:	e7f7      	b.n	801d756 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d766:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d76a:	e7f4      	b.n	801d756 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d76c:	2e03      	cmp	r6, #3
 801d76e:	d814      	bhi.n	801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d770:	e8df f006 	tbb	[pc, r6]
 801d774:	100e0702 	.word	0x100e0702
 801d778:	9504      	str	r5, [sp, #16]
 801d77a:	4620      	mov	r0, r4
 801d77c:	bcf0      	pop	{r4, r5, r6, r7}
 801d77e:	f7ff bea1 	b.w	801d4c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d782:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d784:	b148      	cbz	r0, 801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d786:	6806      	ldr	r6, [r0, #0]
 801d788:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d78c:	6935      	ldr	r5, [r6, #16]
 801d78e:	e7cb      	b.n	801d728 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d790:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d792:	e7f7      	b.n	801d784 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d794:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d798:	e7f4      	b.n	801d784 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d79a:	bcf0      	pop	{r4, r5, r6, r7}
 801d79c:	4770      	bx	lr
	...

0801d7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d7a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d7a4:	4604      	mov	r4, r0
 801d7a6:	b087      	sub	sp, #28
 801d7a8:	6810      	ldr	r0, [r2, #0]
 801d7aa:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d7ae:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801d9e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d7b2:	460e      	mov	r6, r1
 801d7b4:	6851      	ldr	r1, [r2, #4]
 801d7b6:	ad02      	add	r5, sp, #8
 801d7b8:	c503      	stmia	r5!, {r0, r1}
 801d7ba:	6818      	ldr	r0, [r3, #0]
 801d7bc:	6859      	ldr	r1, [r3, #4]
 801d7be:	ad04      	add	r5, sp, #16
 801d7c0:	4617      	mov	r7, r2
 801d7c2:	c503      	stmia	r5!, {r0, r1}
 801d7c4:	a802      	add	r0, sp, #8
 801d7c6:	f7f7 f9b3 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d7ca:	4639      	mov	r1, r7
 801d7cc:	a804      	add	r0, sp, #16
 801d7ce:	f7f7 f9f3 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d7d2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d7d6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d7da:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d7de:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d7e2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d7e6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d7ea:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d7ee:	440e      	add	r6, r1
 801d7f0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d7f4:	440a      	add	r2, r1
 801d7f6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d7fa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d7fe:	4413      	add	r3, r2
 801d800:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d804:	4b77      	ldr	r3, [pc, #476]	; (801d9e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d806:	6818      	ldr	r0, [r3, #0]
 801d808:	6803      	ldr	r3, [r0, #0]
 801d80a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d80c:	4798      	blx	r3
 801d80e:	f8b9 b000 	ldrh.w	fp, [r9]
 801d812:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d816:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d81a:	fb0b 2303 	mla	r3, fp, r3, r2
 801d81e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d822:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d826:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d82a:	fb05 f50b 	mul.w	r5, r5, fp
 801d82e:	9300      	str	r3, [sp, #0]
 801d830:	d069      	beq.n	801d906 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d832:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d836:	4558      	cmp	r0, fp
 801d838:	f080 80cc 	bcs.w	801d9d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d83c:	9b00      	ldr	r3, [sp, #0]
 801d83e:	18c3      	adds	r3, r0, r3
 801d840:	9301      	str	r3, [sp, #4]
 801d842:	4631      	mov	r1, r6
 801d844:	9b01      	ldr	r3, [sp, #4]
 801d846:	4298      	cmp	r0, r3
 801d848:	d24f      	bcs.n	801d8ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d84a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d84e:	2a00      	cmp	r2, #0
 801d850:	d048      	beq.n	801d8e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d852:	fb0a f202 	mul.w	r2, sl, r2
 801d856:	1c53      	adds	r3, r2, #1
 801d858:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d85c:	121b      	asrs	r3, r3, #8
 801d85e:	d041      	beq.n	801d8e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d860:	8802      	ldrh	r2, [r0, #0]
 801d862:	f8b4 c000 	ldrh.w	ip, [r4]
 801d866:	b29e      	uxth	r6, r3
 801d868:	1215      	asrs	r5, r2, #8
 801d86a:	43db      	mvns	r3, r3
 801d86c:	b2db      	uxtb	r3, r3
 801d86e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d872:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d876:	fb15 f503 	smulbb	r5, r5, r3
 801d87a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d87e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d882:	00d2      	lsls	r2, r2, #3
 801d884:	fb07 5706 	mla	r7, r7, r6, r5
 801d888:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d88c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d890:	b2d2      	uxtb	r2, r2
 801d892:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d896:	b2bf      	uxth	r7, r7
 801d898:	fb1e fe03 	smulbb	lr, lr, r3
 801d89c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d8a0:	fa5f fc8c 	uxtb.w	ip, ip
 801d8a4:	fb12 f203 	smulbb	r2, r2, r3
 801d8a8:	fb05 e506 	mla	r5, r5, r6, lr
 801d8ac:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d8b0:	f107 0e01 	add.w	lr, r7, #1
 801d8b4:	fa1f fc8c 	uxth.w	ip, ip
 801d8b8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d8bc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d8c0:	f10c 0701 	add.w	r7, ip, #1
 801d8c4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d8c8:	b2ad      	uxth	r5, r5
 801d8ca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d8ce:	ea47 070e 	orr.w	r7, r7, lr
 801d8d2:	f105 0e01 	add.w	lr, r5, #1
 801d8d6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d8da:	096d      	lsrs	r5, r5, #5
 801d8dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d8e0:	432f      	orrs	r7, r5
 801d8e2:	8007      	strh	r7, [r0, #0]
 801d8e4:	3002      	adds	r0, #2
 801d8e6:	3402      	adds	r4, #2
 801d8e8:	e7ac      	b.n	801d844 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d8ea:	f8b9 3000 	ldrh.w	r3, [r9]
 801d8ee:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d8f2:	eba3 0308 	sub.w	r3, r3, r8
 801d8f6:	eba6 0608 	sub.w	r6, r6, r8
 801d8fa:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d8fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d902:	440e      	add	r6, r1
 801d904:	e797      	b.n	801d836 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d906:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d90a:	42a8      	cmp	r0, r5
 801d90c:	d262      	bcs.n	801d9d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d90e:	9b00      	ldr	r3, [sp, #0]
 801d910:	4631      	mov	r1, r6
 801d912:	eb00 0b03 	add.w	fp, r0, r3
 801d916:	4558      	cmp	r0, fp
 801d918:	d24e      	bcs.n	801d9b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d91a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d91e:	b12b      	cbz	r3, 801d92c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d920:	2bff      	cmp	r3, #255	; 0xff
 801d922:	f8b4 e000 	ldrh.w	lr, [r4]
 801d926:	d104      	bne.n	801d932 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d928:	f8a0 e000 	strh.w	lr, [r0]
 801d92c:	3002      	adds	r0, #2
 801d92e:	3402      	adds	r4, #2
 801d930:	e7f1      	b.n	801d916 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d932:	8802      	ldrh	r2, [r0, #0]
 801d934:	b29f      	uxth	r7, r3
 801d936:	1216      	asrs	r6, r2, #8
 801d938:	43db      	mvns	r3, r3
 801d93a:	b2db      	uxtb	r3, r3
 801d93c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d940:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d944:	fb16 f603 	smulbb	r6, r6, r3
 801d948:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d94c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d950:	00d2      	lsls	r2, r2, #3
 801d952:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d956:	b2d2      	uxtb	r2, r2
 801d958:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d95c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d960:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d964:	fb1a fa03 	smulbb	sl, sl, r3
 801d968:	fa1f fc8c 	uxth.w	ip, ip
 801d96c:	fb12 f303 	smulbb	r3, r2, r3
 801d970:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d974:	fa5f fe8e 	uxtb.w	lr, lr
 801d978:	fb06 a607 	mla	r6, r6, r7, sl
 801d97c:	f10c 0201 	add.w	r2, ip, #1
 801d980:	fb0e 3307 	mla	r3, lr, r7, r3
 801d984:	b2b6      	uxth	r6, r6
 801d986:	b29b      	uxth	r3, r3
 801d988:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d98c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d990:	f106 0a01 	add.w	sl, r6, #1
 801d994:	f103 0c01 	add.w	ip, r3, #1
 801d998:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d99c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d9a0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d9a4:	0976      	lsrs	r6, r6, #5
 801d9a6:	ea4c 0c02 	orr.w	ip, ip, r2
 801d9aa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d9ae:	ea4c 0c06 	orr.w	ip, ip, r6
 801d9b2:	f8a0 c000 	strh.w	ip, [r0]
 801d9b6:	e7b9      	b.n	801d92c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d9b8:	f8b9 3000 	ldrh.w	r3, [r9]
 801d9bc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d9c0:	eba3 0308 	sub.w	r3, r3, r8
 801d9c4:	eba6 0608 	sub.w	r6, r6, r8
 801d9c8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d9cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d9d0:	440e      	add	r6, r1
 801d9d2:	e79a      	b.n	801d90a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d9d4:	4b03      	ldr	r3, [pc, #12]	; (801d9e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d9d6:	6818      	ldr	r0, [r3, #0]
 801d9d8:	6803      	ldr	r3, [r0, #0]
 801d9da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d9dc:	4798      	blx	r3
 801d9de:	b007      	add	sp, #28
 801d9e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d9e4:	2000ef1c 	.word	0x2000ef1c
 801d9e8:	2000ef16 	.word	0x2000ef16

0801d9ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d9ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9f0:	b089      	sub	sp, #36	; 0x24
 801d9f2:	4682      	mov	sl, r0
 801d9f4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801d9f8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d9fa:	460f      	mov	r7, r1
 801d9fc:	4691      	mov	r9, r2
 801d9fe:	4698      	mov	r8, r3
 801da00:	2e00      	cmp	r6, #0
 801da02:	d03d      	beq.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da04:	4608      	mov	r0, r1
 801da06:	f7fa fe59 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801da0a:	4605      	mov	r5, r0
 801da0c:	4638      	mov	r0, r7
 801da0e:	f7fa fe89 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801da12:	f8ad 000e 	strh.w	r0, [sp, #14]
 801da16:	4638      	mov	r0, r7
 801da18:	f8ad 9008 	strh.w	r9, [sp, #8]
 801da1c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801da20:	f8ad 800a 	strh.w	r8, [sp, #10]
 801da24:	f7fa ff36 	bl	8018894 <_ZNK8touchgfx6Bitmap7getDataEv>
 801da28:	4605      	mov	r5, r0
 801da2a:	4638      	mov	r0, r7
 801da2c:	f7fa ff62 	bl	80188f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801da30:	4681      	mov	r9, r0
 801da32:	4638      	mov	r0, r7
 801da34:	f7fa ffb2 	bl	801899c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801da38:	280b      	cmp	r0, #11
 801da3a:	d821      	bhi.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da3c:	e8df f000 	tbb	[pc, r0]
 801da40:	2006aebe 	.word	0x2006aebe
 801da44:	20202020 	.word	0x20202020
 801da48:	b5202020 	.word	0xb5202020
 801da4c:	4bb0      	ldr	r3, [pc, #704]	; (801dd10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801da4e:	6818      	ldr	r0, [r3, #0]
 801da50:	6803      	ldr	r3, [r0, #0]
 801da52:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801da54:	4798      	blx	r3
 801da56:	2eff      	cmp	r6, #255	; 0xff
 801da58:	d101      	bne.n	801da5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801da5a:	0683      	lsls	r3, r0, #26
 801da5c:	d506      	bpl.n	801da6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801da5e:	4633      	mov	r3, r6
 801da60:	4622      	mov	r2, r4
 801da62:	a902      	add	r1, sp, #8
 801da64:	4628      	mov	r0, r5
 801da66:	f7ff f909 	bl	801cc7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801da6a:	e009      	b.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da6c:	4638      	mov	r0, r7
 801da6e:	f7fa fed9 	bl	8018824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801da72:	b940      	cbnz	r0, 801da86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801da74:	4623      	mov	r3, r4
 801da76:	aa02      	add	r2, sp, #8
 801da78:	4629      	mov	r1, r5
 801da7a:	4650      	mov	r0, sl
 801da7c:	f7ff f9e4 	bl	801ce48 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801da80:	b009      	add	sp, #36	; 0x24
 801da82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da86:	f10d 0818 	add.w	r8, sp, #24
 801da8a:	4639      	mov	r1, r7
 801da8c:	4640      	mov	r0, r8
 801da8e:	f7fa fe7d 	bl	801878c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801da92:	e898 0003 	ldmia.w	r8, {r0, r1}
 801da96:	af04      	add	r7, sp, #16
 801da98:	e887 0003 	stmia.w	r7, {r0, r1}
 801da9c:	4638      	mov	r0, r7
 801da9e:	4621      	mov	r1, r4
 801daa0:	f7f1 ffe4 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 801daa4:	4638      	mov	r0, r7
 801daa6:	f7f2 f824 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801daaa:	2800      	cmp	r0, #0
 801daac:	d1d7      	bne.n	801da5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801daae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dab2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801dab6:	4293      	cmp	r3, r2
 801dab8:	dd12      	ble.n	801dae0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801daba:	1a9b      	subs	r3, r3, r2
 801dabc:	f9b4 0000 	ldrsh.w	r0, [r4]
 801dac0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801dac4:	f8ad 0018 	strh.w	r0, [sp, #24]
 801dac8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801dacc:	f8ad 101c 	strh.w	r1, [sp, #28]
 801dad0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dad4:	4642      	mov	r2, r8
 801dad6:	4633      	mov	r3, r6
 801dad8:	a902      	add	r1, sp, #8
 801dada:	4628      	mov	r0, r5
 801dadc:	f7ff f8ce 	bl	801cc7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dae0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801dae4:	f9b4 2000 	ldrsh.w	r2, [r4]
 801dae8:	4293      	cmp	r3, r2
 801daea:	dd12      	ble.n	801db12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801daec:	1a9b      	subs	r3, r3, r2
 801daee:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801daf2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801daf6:	f8ad 2018 	strh.w	r2, [sp, #24]
 801dafa:	f8ad 001a 	strh.w	r0, [sp, #26]
 801dafe:	f8ad 301c 	strh.w	r3, [sp, #28]
 801db02:	f8ad 101e 	strh.w	r1, [sp, #30]
 801db06:	23ff      	movs	r3, #255	; 0xff
 801db08:	4642      	mov	r2, r8
 801db0a:	a902      	add	r1, sp, #8
 801db0c:	4628      	mov	r0, r5
 801db0e:	f7ff f8b5 	bl	801cc7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801db12:	463b      	mov	r3, r7
 801db14:	aa02      	add	r2, sp, #8
 801db16:	4629      	mov	r1, r5
 801db18:	4650      	mov	r0, sl
 801db1a:	f7ff f995 	bl	801ce48 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801db1e:	88a2      	ldrh	r2, [r4, #4]
 801db20:	8823      	ldrh	r3, [r4, #0]
 801db22:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801db26:	4413      	add	r3, r2
 801db28:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801db2c:	440a      	add	r2, r1
 801db2e:	b29b      	uxth	r3, r3
 801db30:	b292      	uxth	r2, r2
 801db32:	b211      	sxth	r1, r2
 801db34:	b218      	sxth	r0, r3
 801db36:	4288      	cmp	r0, r1
 801db38:	dd12      	ble.n	801db60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801db3a:	1a9b      	subs	r3, r3, r2
 801db3c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801db40:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801db44:	f8ad 1018 	strh.w	r1, [sp, #24]
 801db48:	f8ad 301c 	strh.w	r3, [sp, #28]
 801db4c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801db50:	23ff      	movs	r3, #255	; 0xff
 801db52:	4642      	mov	r2, r8
 801db54:	a902      	add	r1, sp, #8
 801db56:	4628      	mov	r0, r5
 801db58:	f8ad 601a 	strh.w	r6, [sp, #26]
 801db5c:	f7ff f88e 	bl	801cc7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801db60:	88e2      	ldrh	r2, [r4, #6]
 801db62:	8863      	ldrh	r3, [r4, #2]
 801db64:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801db68:	4413      	add	r3, r2
 801db6a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801db6e:	440a      	add	r2, r1
 801db70:	b29b      	uxth	r3, r3
 801db72:	b292      	uxth	r2, r2
 801db74:	b211      	sxth	r1, r2
 801db76:	b218      	sxth	r0, r3
 801db78:	4288      	cmp	r0, r1
 801db7a:	dd81      	ble.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801db7c:	1a9b      	subs	r3, r3, r2
 801db7e:	f9b4 6000 	ldrsh.w	r6, [r4]
 801db82:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801db86:	f8ad 301e 	strh.w	r3, [sp, #30]
 801db8a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801db8e:	f8ad 101a 	strh.w	r1, [sp, #26]
 801db92:	f8ad 001c 	strh.w	r0, [sp, #28]
 801db96:	23ff      	movs	r3, #255	; 0xff
 801db98:	4642      	mov	r2, r8
 801db9a:	e762      	b.n	801da62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801db9c:	4633      	mov	r3, r6
 801db9e:	4622      	mov	r2, r4
 801dba0:	a902      	add	r1, sp, #8
 801dba2:	4628      	mov	r0, r5
 801dba4:	f7ff f9c0 	bl	801cf28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801dba8:	e76a      	b.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dbaa:	e9cd 4600 	strd	r4, r6, [sp]
 801dbae:	ab02      	add	r3, sp, #8
 801dbb0:	464a      	mov	r2, r9
 801dbb2:	4629      	mov	r1, r5
 801dbb4:	4650      	mov	r0, sl
 801dbb6:	f7ff fd97 	bl	801d6e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801dbba:	e761      	b.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dbbc:	4638      	mov	r0, r7
 801dbbe:	f7fa fe31 	bl	8018824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801dbc2:	b950      	cbnz	r0, 801dbda <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801dbc4:	e9cd 6000 	strd	r6, r0, [sp]
 801dbc8:	f8da 3000 	ldr.w	r3, [sl]
 801dbcc:	aa02      	add	r2, sp, #8
 801dbce:	68de      	ldr	r6, [r3, #12]
 801dbd0:	4629      	mov	r1, r5
 801dbd2:	4623      	mov	r3, r4
 801dbd4:	4650      	mov	r0, sl
 801dbd6:	47b0      	blx	r6
 801dbd8:	e752      	b.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dbda:	f10d 0818 	add.w	r8, sp, #24
 801dbde:	4639      	mov	r1, r7
 801dbe0:	4640      	mov	r0, r8
 801dbe2:	f7fa fdd3 	bl	801878c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801dbe6:	e898 0003 	ldmia.w	r8, {r0, r1}
 801dbea:	af04      	add	r7, sp, #16
 801dbec:	e887 0003 	stmia.w	r7, {r0, r1}
 801dbf0:	4638      	mov	r0, r7
 801dbf2:	4621      	mov	r1, r4
 801dbf4:	f7f1 ff3a 	bl	800fa6c <_ZN8touchgfx4RectaNERKS0_>
 801dbf8:	4638      	mov	r0, r7
 801dbfa:	f7f1 ff7a 	bl	800faf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801dbfe:	b138      	cbz	r0, 801dc10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801dc00:	9600      	str	r6, [sp, #0]
 801dc02:	4623      	mov	r3, r4
 801dc04:	aa02      	add	r2, sp, #8
 801dc06:	4649      	mov	r1, r9
 801dc08:	4628      	mov	r0, r5
 801dc0a:	f7ff fdc9 	bl	801d7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dc0e:	e737      	b.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dc10:	e9cd 6000 	strd	r6, r0, [sp]
 801dc14:	f8da 3000 	ldr.w	r3, [sl]
 801dc18:	aa02      	add	r2, sp, #8
 801dc1a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801dc1e:	4629      	mov	r1, r5
 801dc20:	463b      	mov	r3, r7
 801dc22:	4650      	mov	r0, sl
 801dc24:	47d8      	blx	fp
 801dc26:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dc2a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801dc2e:	4293      	cmp	r3, r2
 801dc30:	dd13      	ble.n	801dc5a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801dc32:	f9b4 0000 	ldrsh.w	r0, [r4]
 801dc36:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801dc3a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801dc3e:	1a9b      	subs	r3, r3, r2
 801dc40:	f8ad 201a 	strh.w	r2, [sp, #26]
 801dc44:	f8ad 101c 	strh.w	r1, [sp, #28]
 801dc48:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dc4c:	9600      	str	r6, [sp, #0]
 801dc4e:	4643      	mov	r3, r8
 801dc50:	aa02      	add	r2, sp, #8
 801dc52:	4649      	mov	r1, r9
 801dc54:	4628      	mov	r0, r5
 801dc56:	f7ff fda3 	bl	801d7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dc5a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801dc5e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801dc62:	4293      	cmp	r3, r2
 801dc64:	dd13      	ble.n	801dc8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801dc66:	1a9b      	subs	r3, r3, r2
 801dc68:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801dc6c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801dc70:	f8ad 2018 	strh.w	r2, [sp, #24]
 801dc74:	f8ad 001a 	strh.w	r0, [sp, #26]
 801dc78:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dc7c:	f8ad 101e 	strh.w	r1, [sp, #30]
 801dc80:	9600      	str	r6, [sp, #0]
 801dc82:	4643      	mov	r3, r8
 801dc84:	aa02      	add	r2, sp, #8
 801dc86:	4649      	mov	r1, r9
 801dc88:	4628      	mov	r0, r5
 801dc8a:	f7ff fd89 	bl	801d7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dc8e:	88a2      	ldrh	r2, [r4, #4]
 801dc90:	8823      	ldrh	r3, [r4, #0]
 801dc92:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801dc96:	4413      	add	r3, r2
 801dc98:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dc9c:	440a      	add	r2, r1
 801dc9e:	b29b      	uxth	r3, r3
 801dca0:	b292      	uxth	r2, r2
 801dca2:	b211      	sxth	r1, r2
 801dca4:	b218      	sxth	r0, r3
 801dca6:	4288      	cmp	r0, r1
 801dca8:	dd13      	ble.n	801dcd2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801dcaa:	1a9b      	subs	r3, r3, r2
 801dcac:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801dcb0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801dcb4:	f8ad 1018 	strh.w	r1, [sp, #24]
 801dcb8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dcbc:	f8ad 001e 	strh.w	r0, [sp, #30]
 801dcc0:	9600      	str	r6, [sp, #0]
 801dcc2:	4643      	mov	r3, r8
 801dcc4:	aa02      	add	r2, sp, #8
 801dcc6:	4649      	mov	r1, r9
 801dcc8:	4628      	mov	r0, r5
 801dcca:	f8ad 701a 	strh.w	r7, [sp, #26]
 801dcce:	f7ff fd67 	bl	801d7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dcd2:	88e2      	ldrh	r2, [r4, #6]
 801dcd4:	8863      	ldrh	r3, [r4, #2]
 801dcd6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801dcda:	4413      	add	r3, r2
 801dcdc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801dce0:	440a      	add	r2, r1
 801dce2:	b29b      	uxth	r3, r3
 801dce4:	b292      	uxth	r2, r2
 801dce6:	b211      	sxth	r1, r2
 801dce8:	b218      	sxth	r0, r3
 801dcea:	4288      	cmp	r0, r1
 801dcec:	f77f aec8 	ble.w	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dcf0:	f9b4 7000 	ldrsh.w	r7, [r4]
 801dcf4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801dcf8:	f8ad 7018 	strh.w	r7, [sp, #24]
 801dcfc:	1a9b      	subs	r3, r3, r2
 801dcfe:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dd02:	f8ad 101a 	strh.w	r1, [sp, #26]
 801dd06:	f8ad 001c 	strh.w	r0, [sp, #28]
 801dd0a:	9600      	str	r6, [sp, #0]
 801dd0c:	4643      	mov	r3, r8
 801dd0e:	e779      	b.n	801dc04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801dd10:	2000ef1c 	.word	0x2000ef1c

0801dd14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801dd14:	b180      	cbz	r0, 801dd38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801dd16:	2903      	cmp	r1, #3
 801dd18:	d81c      	bhi.n	801dd54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801dd1a:	e8df f001 	tbb	[pc, r1]
 801dd1e:	1d02      	.short	0x1d02
 801dd20:	1f08      	.short	0x1f08
 801dd22:	4b10      	ldr	r3, [pc, #64]	; (801dd64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801dd24:	8818      	ldrh	r0, [r3, #0]
 801dd26:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dd2a:	4240      	negs	r0, r0
 801dd2c:	4770      	bx	lr
 801dd2e:	4b0d      	ldr	r3, [pc, #52]	; (801dd64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801dd30:	8818      	ldrh	r0, [r3, #0]
 801dd32:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dd36:	4770      	bx	lr
 801dd38:	2903      	cmp	r1, #3
 801dd3a:	d80b      	bhi.n	801dd54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801dd3c:	a301      	add	r3, pc, #4	; (adr r3, 801dd44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801dd3e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801dd42:	bf00      	nop
 801dd44:	0801dd59 	.word	0x0801dd59
 801dd48:	0801dd2f 	.word	0x0801dd2f
 801dd4c:	0801dd5d 	.word	0x0801dd5d
 801dd50:	0801dd23 	.word	0x0801dd23
 801dd54:	2000      	movs	r0, #0
 801dd56:	4770      	bx	lr
 801dd58:	2001      	movs	r0, #1
 801dd5a:	4770      	bx	lr
 801dd5c:	f04f 30ff 	mov.w	r0, #4294967295
 801dd60:	4770      	bx	lr
 801dd62:	bf00      	nop
 801dd64:	2000ef16 	.word	0x2000ef16

0801dd68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801dd68:	b180      	cbz	r0, 801dd8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801dd6a:	2903      	cmp	r1, #3
 801dd6c:	d81c      	bhi.n	801dda8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801dd6e:	e8df f001 	tbb	[pc, r1]
 801dd72:	021d      	.short	0x021d
 801dd74:	071f      	.short	0x071f
 801dd76:	4b10      	ldr	r3, [pc, #64]	; (801ddb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801dd78:	8818      	ldrh	r0, [r3, #0]
 801dd7a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dd7e:	4770      	bx	lr
 801dd80:	4b0d      	ldr	r3, [pc, #52]	; (801ddb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801dd82:	8818      	ldrh	r0, [r3, #0]
 801dd84:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dd88:	4240      	negs	r0, r0
 801dd8a:	4770      	bx	lr
 801dd8c:	2903      	cmp	r1, #3
 801dd8e:	d80b      	bhi.n	801dda8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801dd90:	a301      	add	r3, pc, #4	; (adr r3, 801dd98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801dd92:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801dd96:	bf00      	nop
 801dd98:	0801dd77 	.word	0x0801dd77
 801dd9c:	0801ddb1 	.word	0x0801ddb1
 801dda0:	0801dd81 	.word	0x0801dd81
 801dda4:	0801ddad 	.word	0x0801ddad
 801dda8:	2000      	movs	r0, #0
 801ddaa:	4770      	bx	lr
 801ddac:	2001      	movs	r0, #1
 801ddae:	4770      	bx	lr
 801ddb0:	f04f 30ff 	mov.w	r0, #4294967295
 801ddb4:	4770      	bx	lr
 801ddb6:	bf00      	nop
 801ddb8:	2000ef16 	.word	0x2000ef16

0801ddbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801ddbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ddc0:	b099      	sub	sp, #100	; 0x64
 801ddc2:	910b      	str	r1, [sp, #44]	; 0x2c
 801ddc4:	a914      	add	r1, sp, #80	; 0x50
 801ddc6:	e881 000c 	stmia.w	r1, {r2, r3}
 801ddca:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801ddce:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801ddd2:	f891 900d 	ldrb.w	r9, [r1, #13]
 801ddd6:	9309      	str	r3, [sp, #36]	; 0x24
 801ddd8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801dddc:	9310      	str	r3, [sp, #64]	; 0x40
 801ddde:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801dde2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801dde6:	930c      	str	r3, [sp, #48]	; 0x30
 801dde8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801ddec:	798f      	ldrb	r7, [r1, #6]
 801ddee:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801ddf2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801ddf6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801ddfa:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801ddfe:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801de02:	431f      	orrs	r7, r3
 801de04:	f000 8195 	beq.w	801e132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801de08:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801de0c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801de10:	f891 9007 	ldrb.w	r9, [r1, #7]
 801de14:	ea59 0903 	orrs.w	r9, r9, r3
 801de18:	f000 818b 	beq.w	801e132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801de1c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801de20:	b29b      	uxth	r3, r3
 801de22:	2d00      	cmp	r5, #0
 801de24:	f000 812e 	beq.w	801e084 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801de28:	1aed      	subs	r5, r5, r3
 801de2a:	b2ad      	uxth	r5, r5
 801de2c:	042b      	lsls	r3, r5, #16
 801de2e:	d502      	bpl.n	801de36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801de30:	1b64      	subs	r4, r4, r5
 801de32:	b224      	sxth	r4, r4
 801de34:	2500      	movs	r5, #0
 801de36:	f9b2 1000 	ldrsh.w	r1, [r2]
 801de3a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801de3e:	428c      	cmp	r4, r1
 801de40:	b28b      	uxth	r3, r1
 801de42:	bfbf      	itttt	lt
 801de44:	18ed      	addlt	r5, r5, r3
 801de46:	1b2c      	sublt	r4, r5, r4
 801de48:	b2a5      	uxthlt	r5, r4
 801de4a:	460c      	movlt	r4, r1
 801de4c:	8891      	ldrh	r1, [r2, #4]
 801de4e:	440b      	add	r3, r1
 801de50:	b21b      	sxth	r3, r3
 801de52:	930f      	str	r3, [sp, #60]	; 0x3c
 801de54:	88d3      	ldrh	r3, [r2, #6]
 801de56:	8852      	ldrh	r2, [r2, #2]
 801de58:	4413      	add	r3, r2
 801de5a:	b21b      	sxth	r3, r3
 801de5c:	930d      	str	r3, [sp, #52]	; 0x34
 801de5e:	4bbe      	ldr	r3, [pc, #760]	; (801e158 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801de60:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801de62:	f893 b000 	ldrb.w	fp, [r3]
 801de66:	f10b 3cff 	add.w	ip, fp, #4294967295
 801de6a:	f1dc 0300 	rsbs	r3, ip, #0
 801de6e:	eb43 030c 	adc.w	r3, r3, ip
 801de72:	930e      	str	r3, [sp, #56]	; 0x38
 801de74:	4621      	mov	r1, r4
 801de76:	4653      	mov	r3, sl
 801de78:	a814      	add	r0, sp, #80	; 0x50
 801de7a:	f7f6 fcce 	bl	801481a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801de7e:	4621      	mov	r1, r4
 801de80:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801de84:	4653      	mov	r3, sl
 801de86:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801de88:	a814      	add	r0, sp, #80	; 0x50
 801de8a:	f7f6 fce3 	bl	8014854 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801de8e:	a918      	add	r1, sp, #96	; 0x60
 801de90:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801de94:	a817      	add	r0, sp, #92	; 0x5c
 801de96:	f7f6 fe09 	bl	8014aac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801de9a:	f1ba 0f00 	cmp.w	sl, #0
 801de9e:	f040 80f4 	bne.w	801e08a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801dea2:	f1bb 0f01 	cmp.w	fp, #1
 801dea6:	f040 80f8 	bne.w	801e09a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801deaa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801deac:	2b00      	cmp	r3, #0
 801deae:	f040 8145 	bne.w	801e13c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801deb2:	b2ba      	uxth	r2, r7
 801deb4:	b905      	cbnz	r5, 801deb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801deb6:	b16e      	cbz	r6, 801ded4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801deb8:	fb06 5302 	mla	r3, r6, r2, r5
 801debc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801debe:	fb08 f303 	mul.w	r3, r8, r3
 801dec2:	4631      	mov	r1, r6
 801dec4:	f003 0607 	and.w	r6, r3, #7
 801dec8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801decc:	9328      	str	r3, [sp, #160]	; 0xa0
 801dece:	eba9 0301 	sub.w	r3, r9, r1
 801ded2:	930a      	str	r3, [sp, #40]	; 0x28
 801ded4:	4651      	mov	r1, sl
 801ded6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ded8:	f7ff ff1c 	bl	801dd14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801dedc:	4681      	mov	r9, r0
 801dede:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dee0:	f7ff ff42 	bl	801dd68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801dee4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dee6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dee8:	eba3 0a01 	sub.w	sl, r3, r1
 801deec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801deee:	459a      	cmp	sl, r3
 801def0:	bfa8      	it	ge
 801def2:	469a      	movge	sl, r3
 801def4:	f1ba 0f00 	cmp.w	sl, #0
 801def8:	4683      	mov	fp, r0
 801defa:	f340 811a 	ble.w	801e132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801defe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801df00:	1b64      	subs	r4, r4, r5
 801df02:	1b1c      	subs	r4, r3, r4
 801df04:	42bc      	cmp	r4, r7
 801df06:	bfd4      	ite	le
 801df08:	ebc5 0504 	rsble	r5, r5, r4
 801df0c:	ebc5 0507 	rsbgt	r5, r5, r7
 801df10:	2d00      	cmp	r5, #0
 801df12:	f340 810e 	ble.w	801e132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801df16:	1b52      	subs	r2, r2, r5
 801df18:	fb08 f302 	mul.w	r3, r8, r2
 801df1c:	930f      	str	r3, [sp, #60]	; 0x3c
 801df1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801df20:	2b00      	cmp	r3, #0
 801df22:	f040 8116 	bne.w	801e152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801df26:	4b8d      	ldr	r3, [pc, #564]	; (801e15c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801df28:	6818      	ldr	r0, [r3, #0]
 801df2a:	6803      	ldr	r3, [r0, #0]
 801df2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801df2e:	4798      	blx	r3
 801df30:	2301      	movs	r3, #1
 801df32:	fa03 f308 	lsl.w	r3, r3, r8
 801df36:	4a8a      	ldr	r2, [pc, #552]	; (801e160 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801df38:	3b01      	subs	r3, #1
 801df3a:	b2db      	uxtb	r3, r3
 801df3c:	8811      	ldrh	r1, [r2, #0]
 801df3e:	930e      	str	r3, [sp, #56]	; 0x38
 801df40:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801df44:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801df48:	fb01 2303 	mla	r3, r1, r3, r2
 801df4c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801df50:	930a      	str	r3, [sp, #40]	; 0x28
 801df52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801df54:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801df58:	9313      	str	r3, [sp, #76]	; 0x4c
 801df5a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801df5c:	0a19      	lsrs	r1, r3, #8
 801df5e:	b2cb      	uxtb	r3, r1
 801df60:	9312      	str	r3, [sp, #72]	; 0x48
 801df62:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801df64:	b2db      	uxtb	r3, r3
 801df66:	9311      	str	r3, [sp, #68]	; 0x44
 801df68:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801df6a:	095a      	lsrs	r2, r3, #5
 801df6c:	4b7d      	ldr	r3, [pc, #500]	; (801e164 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801df6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801df72:	400b      	ands	r3, r1
 801df74:	4313      	orrs	r3, r2
 801df76:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801df78:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801df7c:	4313      	orrs	r3, r2
 801df7e:	b29b      	uxth	r3, r3
 801df80:	9310      	str	r3, [sp, #64]	; 0x40
 801df82:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801df84:	781a      	ldrb	r2, [r3, #0]
 801df86:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801df8a:	4132      	asrs	r2, r6
 801df8c:	fb05 b919 	mls	r9, r5, r9, fp
 801df90:	fb03 fb05 	mul.w	fp, r3, r5
 801df94:	b2d2      	uxtb	r2, r2
 801df96:	930d      	str	r3, [sp, #52]	; 0x34
 801df98:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801df9c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801dfa0:	f0c0 80f5 	bcc.w	801e18e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801dfa4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801dfa8:	46ae      	mov	lr, r5
 801dfaa:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801dfae:	f0c0 80dd 	bcc.w	801e16c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801dfb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dfb4:	4013      	ands	r3, r2
 801dfb6:	d055      	beq.n	801e064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801dfb8:	20ff      	movs	r0, #255	; 0xff
 801dfba:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dfbc:	fb90 f1f1 	sdiv	r1, r0, r1
 801dfc0:	434b      	muls	r3, r1
 801dfc2:	2bfe      	cmp	r3, #254	; 0xfe
 801dfc4:	dd03      	ble.n	801dfce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801dfc6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dfc8:	4281      	cmp	r1, r0
 801dfca:	f000 80cd 	beq.w	801e168 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801dfce:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dfd0:	f8bc 4000 	ldrh.w	r4, [ip]
 801dfd4:	fb11 f303 	smulbb	r3, r1, r3
 801dfd8:	b29b      	uxth	r3, r3
 801dfda:	1c59      	adds	r1, r3, #1
 801dfdc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dfe0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dfe4:	b29f      	uxth	r7, r3
 801dfe6:	43db      	mvns	r3, r3
 801dfe8:	b2db      	uxtb	r3, r3
 801dfea:	9309      	str	r3, [sp, #36]	; 0x24
 801dfec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801dfee:	1220      	asrs	r0, r4, #8
 801dff0:	fb13 f907 	smulbb	r9, r3, r7
 801dff4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dff8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dffa:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801dffe:	fb00 9003 	mla	r0, r0, r3, r9
 801e002:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e004:	10e1      	asrs	r1, r4, #3
 801e006:	fb13 f907 	smulbb	r9, r3, r7
 801e00a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e00e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e010:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801e014:	fb01 9103 	mla	r1, r1, r3, r9
 801e018:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e01a:	00e4      	lsls	r4, r4, #3
 801e01c:	fb13 f707 	smulbb	r7, r3, r7
 801e020:	b2e4      	uxtb	r4, r4
 801e022:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e024:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e028:	fb04 7403 	mla	r4, r4, r3, r7
 801e02c:	b280      	uxth	r0, r0
 801e02e:	b2a4      	uxth	r4, r4
 801e030:	1c43      	adds	r3, r0, #1
 801e032:	f104 0901 	add.w	r9, r4, #1
 801e036:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e03a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801e03e:	b289      	uxth	r1, r1
 801e040:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801e044:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e048:	ea49 0000 	orr.w	r0, r9, r0
 801e04c:	f101 0901 	add.w	r9, r1, #1
 801e050:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801e054:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e058:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e05c:	ea40 0009 	orr.w	r0, r0, r9
 801e060:	f8ac 0000 	strh.w	r0, [ip]
 801e064:	4446      	add	r6, r8
 801e066:	b2b6      	uxth	r6, r6
 801e068:	2e07      	cmp	r6, #7
 801e06a:	bf81      	itttt	hi
 801e06c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801e06e:	785a      	ldrbhi	r2, [r3, #1]
 801e070:	3301      	addhi	r3, #1
 801e072:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801e074:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e076:	bf9a      	itte	ls
 801e078:	fa42 f208 	asrls.w	r2, r2, r8
 801e07c:	b2d2      	uxtbls	r2, r2
 801e07e:	2600      	movhi	r6, #0
 801e080:	449c      	add	ip, r3
 801e082:	e792      	b.n	801dfaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801e084:	441c      	add	r4, r3
 801e086:	b224      	sxth	r4, r4
 801e088:	e6d5      	b.n	801de36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e08a:	f1ba 0f01 	cmp.w	sl, #1
 801e08e:	f47f af0c 	bne.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e092:	f1bb 0f01 	cmp.w	fp, #1
 801e096:	f47f af08 	bne.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e09a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801e15c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801e09e:	f8db 0000 	ldr.w	r0, [fp]
 801e0a2:	6803      	ldr	r3, [r0, #0]
 801e0a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e0a6:	4798      	blx	r3
 801e0a8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801e0ac:	465a      	mov	r2, fp
 801e0ae:	d006      	beq.n	801e0be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e0b0:	f1b8 0f04 	cmp.w	r8, #4
 801e0b4:	d140      	bne.n	801e138 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801e0b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e0b8:	3300      	adds	r3, #0
 801e0ba:	bf18      	it	ne
 801e0bc:	2301      	movne	r3, #1
 801e0be:	0580      	lsls	r0, r0, #22
 801e0c0:	d56e      	bpl.n	801e1a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e0c2:	f1b8 0f08 	cmp.w	r8, #8
 801e0c6:	d16b      	bne.n	801e1a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e0c8:	2b00      	cmp	r3, #0
 801e0ca:	bf0c      	ite	eq
 801e0cc:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801e0d0:	f44f 7180 	movne.w	r1, #256	; 0x100
 801e0d4:	2d00      	cmp	r5, #0
 801e0d6:	f47f aee8 	bne.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e0da:	2e00      	cmp	r6, #0
 801e0dc:	f47f aee5 	bne.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e0e0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e0e2:	19e3      	adds	r3, r4, r7
 801e0e4:	4283      	cmp	r3, r0
 801e0e6:	f73f aee0 	bgt.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e0ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e0ec:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e0ee:	444b      	add	r3, r9
 801e0f0:	4283      	cmp	r3, r0
 801e0f2:	f73f aeda 	bgt.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e0f6:	6810      	ldr	r0, [r2, #0]
 801e0f8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801e0fc:	6804      	ldr	r4, [r0, #0]
 801e0fe:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e102:	b2bf      	uxth	r7, r7
 801e104:	f1b8 0f08 	cmp.w	r8, #8
 801e108:	f04f 0500 	mov.w	r5, #0
 801e10c:	bf18      	it	ne
 801e10e:	3701      	addne	r7, #1
 801e110:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e114:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e116:	9104      	str	r1, [sp, #16]
 801e118:	bf18      	it	ne
 801e11a:	f027 0701 	bicne.w	r7, r7, #1
 801e11e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e120:	bf18      	it	ne
 801e122:	b2bf      	uxthne	r7, r7
 801e124:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801e128:	e9cd 7900 	strd	r7, r9, [sp]
 801e12c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801e12e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801e130:	47a0      	blx	r4
 801e132:	b019      	add	sp, #100	; 0x64
 801e134:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e138:	2300      	movs	r3, #0
 801e13a:	e7c0      	b.n	801e0be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e13c:	2208      	movs	r2, #8
 801e13e:	fb92 f3f8 	sdiv	r3, r2, r8
 801e142:	1e5a      	subs	r2, r3, #1
 801e144:	443a      	add	r2, r7
 801e146:	fb92 f2f3 	sdiv	r2, r2, r3
 801e14a:	fb12 f203 	smulbb	r2, r2, r3
 801e14e:	b292      	uxth	r2, r2
 801e150:	e6b0      	b.n	801deb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801e152:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e154:	e6ec      	b.n	801df30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801e156:	bf00      	nop
 801e158:	2000ef14 	.word	0x2000ef14
 801e15c:	2000ef1c 	.word	0x2000ef1c
 801e160:	2000ef16 	.word	0x2000ef16
 801e164:	00fff800 	.word	0x00fff800
 801e168:	9810      	ldr	r0, [sp, #64]	; 0x40
 801e16a:	e779      	b.n	801e060 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801e16c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e16e:	b153      	cbz	r3, 801e186 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801e170:	441e      	add	r6, r3
 801e172:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e174:	b2b6      	uxth	r6, r6
 801e176:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801e17a:	f006 0607 	and.w	r6, r6, #7
 801e17e:	781a      	ldrb	r2, [r3, #0]
 801e180:	9328      	str	r3, [sp, #160]	; 0xa0
 801e182:	4132      	asrs	r2, r6
 801e184:	b2d2      	uxtb	r2, r2
 801e186:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e188:	445b      	add	r3, fp
 801e18a:	930a      	str	r3, [sp, #40]	; 0x28
 801e18c:	e706      	b.n	801df9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801e18e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e190:	2b00      	cmp	r3, #0
 801e192:	d1ce      	bne.n	801e132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e194:	4b05      	ldr	r3, [pc, #20]	; (801e1ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801e196:	6818      	ldr	r0, [r3, #0]
 801e198:	6803      	ldr	r3, [r0, #0]
 801e19a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e19c:	4798      	blx	r3
 801e19e:	e7c8      	b.n	801e132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e1a0:	2b00      	cmp	r3, #0
 801e1a2:	f43f ae82 	beq.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e1a6:	f44f 7180 	mov.w	r1, #256	; 0x100
 801e1aa:	e793      	b.n	801e0d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801e1ac:	2000ef1c 	.word	0x2000ef1c

0801e1b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801e1b0:	b538      	push	{r3, r4, r5, lr}
 801e1b2:	4c15      	ldr	r4, [pc, #84]	; (801e208 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801e1b4:	7823      	ldrb	r3, [r4, #0]
 801e1b6:	f3bf 8f5b 	dmb	ish
 801e1ba:	07da      	lsls	r2, r3, #31
 801e1bc:	4605      	mov	r5, r0
 801e1be:	d40b      	bmi.n	801e1d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e1c0:	4620      	mov	r0, r4
 801e1c2:	f008 f9ff 	bl	80265c4 <__cxa_guard_acquire>
 801e1c6:	b138      	cbz	r0, 801e1d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e1c8:	4620      	mov	r0, r4
 801e1ca:	f008 fa07 	bl	80265dc <__cxa_guard_release>
 801e1ce:	4a0f      	ldr	r2, [pc, #60]	; (801e20c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e1d0:	490f      	ldr	r1, [pc, #60]	; (801e210 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801e1d2:	4810      	ldr	r0, [pc, #64]	; (801e214 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e1d4:	f008 f9ef 	bl	80265b6 <__aeabi_atexit>
 801e1d8:	4c0f      	ldr	r4, [pc, #60]	; (801e218 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801e1da:	7823      	ldrb	r3, [r4, #0]
 801e1dc:	f3bf 8f5b 	dmb	ish
 801e1e0:	07db      	lsls	r3, r3, #31
 801e1e2:	d40b      	bmi.n	801e1fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e1e4:	4620      	mov	r0, r4
 801e1e6:	f008 f9ed 	bl	80265c4 <__cxa_guard_acquire>
 801e1ea:	b138      	cbz	r0, 801e1fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e1ec:	4620      	mov	r0, r4
 801e1ee:	f008 f9f5 	bl	80265dc <__cxa_guard_release>
 801e1f2:	4a06      	ldr	r2, [pc, #24]	; (801e20c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e1f4:	4909      	ldr	r1, [pc, #36]	; (801e21c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801e1f6:	480a      	ldr	r0, [pc, #40]	; (801e220 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e1f8:	f008 f9dd 	bl	80265b6 <__aeabi_atexit>
 801e1fc:	4b05      	ldr	r3, [pc, #20]	; (801e214 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e1fe:	612b      	str	r3, [r5, #16]
 801e200:	4b07      	ldr	r3, [pc, #28]	; (801e220 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e202:	616b      	str	r3, [r5, #20]
 801e204:	bd38      	pop	{r3, r4, r5, pc}
 801e206:	bf00      	nop
 801e208:	2000effc 	.word	0x2000effc
 801e20c:	20000000 	.word	0x20000000
 801e210:	0801afb3 	.word	0x0801afb3
 801e214:	200000ac 	.word	0x200000ac
 801e218:	2000f000 	.word	0x2000f000
 801e21c:	0801afb1 	.word	0x0801afb1
 801e220:	200000b0 	.word	0x200000b0

0801e224 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801e224:	b538      	push	{r3, r4, r5, lr}
 801e226:	4c15      	ldr	r4, [pc, #84]	; (801e27c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801e228:	7823      	ldrb	r3, [r4, #0]
 801e22a:	f3bf 8f5b 	dmb	ish
 801e22e:	07da      	lsls	r2, r3, #31
 801e230:	4605      	mov	r5, r0
 801e232:	d40b      	bmi.n	801e24c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e234:	4620      	mov	r0, r4
 801e236:	f008 f9c5 	bl	80265c4 <__cxa_guard_acquire>
 801e23a:	b138      	cbz	r0, 801e24c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e23c:	4620      	mov	r0, r4
 801e23e:	f008 f9cd 	bl	80265dc <__cxa_guard_release>
 801e242:	4a0f      	ldr	r2, [pc, #60]	; (801e280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e244:	490f      	ldr	r1, [pc, #60]	; (801e284 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801e246:	4810      	ldr	r0, [pc, #64]	; (801e288 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e248:	f008 f9b5 	bl	80265b6 <__aeabi_atexit>
 801e24c:	4c0f      	ldr	r4, [pc, #60]	; (801e28c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801e24e:	7823      	ldrb	r3, [r4, #0]
 801e250:	f3bf 8f5b 	dmb	ish
 801e254:	07db      	lsls	r3, r3, #31
 801e256:	d40b      	bmi.n	801e270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e258:	4620      	mov	r0, r4
 801e25a:	f008 f9b3 	bl	80265c4 <__cxa_guard_acquire>
 801e25e:	b138      	cbz	r0, 801e270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e260:	4620      	mov	r0, r4
 801e262:	f008 f9bb 	bl	80265dc <__cxa_guard_release>
 801e266:	4a06      	ldr	r2, [pc, #24]	; (801e280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e268:	4909      	ldr	r1, [pc, #36]	; (801e290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801e26a:	480a      	ldr	r0, [pc, #40]	; (801e294 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e26c:	f008 f9a3 	bl	80265b6 <__aeabi_atexit>
 801e270:	4b05      	ldr	r3, [pc, #20]	; (801e288 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e272:	60ab      	str	r3, [r5, #8]
 801e274:	4b07      	ldr	r3, [pc, #28]	; (801e294 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e276:	60eb      	str	r3, [r5, #12]
 801e278:	bd38      	pop	{r3, r4, r5, pc}
 801e27a:	bf00      	nop
 801e27c:	2000efd4 	.word	0x2000efd4
 801e280:	20000000 	.word	0x20000000
 801e284:	0801afb7 	.word	0x0801afb7
 801e288:	20000084 	.word	0x20000084
 801e28c:	2000efd8 	.word	0x2000efd8
 801e290:	0801afb5 	.word	0x0801afb5
 801e294:	20000088 	.word	0x20000088

0801e298 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801e298:	b510      	push	{r4, lr}
 801e29a:	4604      	mov	r4, r0
 801e29c:	f7ff ff88 	bl	801e1b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e2a0:	4620      	mov	r0, r4
 801e2a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e2a6:	f7ff bfbd 	b.w	801e224 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e2ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e2ac:	b538      	push	{r3, r4, r5, lr}
 801e2ae:	4c15      	ldr	r4, [pc, #84]	; (801e304 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e2b0:	7823      	ldrb	r3, [r4, #0]
 801e2b2:	f3bf 8f5b 	dmb	ish
 801e2b6:	07da      	lsls	r2, r3, #31
 801e2b8:	4605      	mov	r5, r0
 801e2ba:	d40b      	bmi.n	801e2d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e2bc:	4620      	mov	r0, r4
 801e2be:	f008 f981 	bl	80265c4 <__cxa_guard_acquire>
 801e2c2:	b138      	cbz	r0, 801e2d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e2c4:	4620      	mov	r0, r4
 801e2c6:	f008 f989 	bl	80265dc <__cxa_guard_release>
 801e2ca:	4a0f      	ldr	r2, [pc, #60]	; (801e308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e2cc:	490f      	ldr	r1, [pc, #60]	; (801e30c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e2ce:	4810      	ldr	r0, [pc, #64]	; (801e310 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e2d0:	f008 f971 	bl	80265b6 <__aeabi_atexit>
 801e2d4:	4c0f      	ldr	r4, [pc, #60]	; (801e314 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e2d6:	7823      	ldrb	r3, [r4, #0]
 801e2d8:	f3bf 8f5b 	dmb	ish
 801e2dc:	07db      	lsls	r3, r3, #31
 801e2de:	d40b      	bmi.n	801e2f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e2e0:	4620      	mov	r0, r4
 801e2e2:	f008 f96f 	bl	80265c4 <__cxa_guard_acquire>
 801e2e6:	b138      	cbz	r0, 801e2f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e2e8:	4620      	mov	r0, r4
 801e2ea:	f008 f977 	bl	80265dc <__cxa_guard_release>
 801e2ee:	4a06      	ldr	r2, [pc, #24]	; (801e308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e2f0:	4909      	ldr	r1, [pc, #36]	; (801e318 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e2f2:	480a      	ldr	r0, [pc, #40]	; (801e31c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e2f4:	f008 f95f 	bl	80265b6 <__aeabi_atexit>
 801e2f8:	4b05      	ldr	r3, [pc, #20]	; (801e310 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e2fa:	622b      	str	r3, [r5, #32]
 801e2fc:	4b07      	ldr	r3, [pc, #28]	; (801e31c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e2fe:	626b      	str	r3, [r5, #36]	; 0x24
 801e300:	bd38      	pop	{r3, r4, r5, pc}
 801e302:	bf00      	nop
 801e304:	2000f004 	.word	0x2000f004
 801e308:	20000000 	.word	0x20000000
 801e30c:	0801afab 	.word	0x0801afab
 801e310:	200000b4 	.word	0x200000b4
 801e314:	2000f008 	.word	0x2000f008
 801e318:	0801afa9 	.word	0x0801afa9
 801e31c:	200000b8 	.word	0x200000b8

0801e320 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e320:	b538      	push	{r3, r4, r5, lr}
 801e322:	4c15      	ldr	r4, [pc, #84]	; (801e378 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e324:	7823      	ldrb	r3, [r4, #0]
 801e326:	f3bf 8f5b 	dmb	ish
 801e32a:	07da      	lsls	r2, r3, #31
 801e32c:	4605      	mov	r5, r0
 801e32e:	d40b      	bmi.n	801e348 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e330:	4620      	mov	r0, r4
 801e332:	f008 f947 	bl	80265c4 <__cxa_guard_acquire>
 801e336:	b138      	cbz	r0, 801e348 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e338:	4620      	mov	r0, r4
 801e33a:	f008 f94f 	bl	80265dc <__cxa_guard_release>
 801e33e:	4a0f      	ldr	r2, [pc, #60]	; (801e37c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e340:	490f      	ldr	r1, [pc, #60]	; (801e380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e342:	4810      	ldr	r0, [pc, #64]	; (801e384 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e344:	f008 f937 	bl	80265b6 <__aeabi_atexit>
 801e348:	4c0f      	ldr	r4, [pc, #60]	; (801e388 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e34a:	7823      	ldrb	r3, [r4, #0]
 801e34c:	f3bf 8f5b 	dmb	ish
 801e350:	07db      	lsls	r3, r3, #31
 801e352:	d40b      	bmi.n	801e36c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e354:	4620      	mov	r0, r4
 801e356:	f008 f935 	bl	80265c4 <__cxa_guard_acquire>
 801e35a:	b138      	cbz	r0, 801e36c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e35c:	4620      	mov	r0, r4
 801e35e:	f008 f93d 	bl	80265dc <__cxa_guard_release>
 801e362:	4a06      	ldr	r2, [pc, #24]	; (801e37c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e364:	4909      	ldr	r1, [pc, #36]	; (801e38c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e366:	480a      	ldr	r0, [pc, #40]	; (801e390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e368:	f008 f925 	bl	80265b6 <__aeabi_atexit>
 801e36c:	4b05      	ldr	r3, [pc, #20]	; (801e384 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e36e:	61ab      	str	r3, [r5, #24]
 801e370:	4b07      	ldr	r3, [pc, #28]	; (801e390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e372:	61eb      	str	r3, [r5, #28]
 801e374:	bd38      	pop	{r3, r4, r5, pc}
 801e376:	bf00      	nop
 801e378:	2000efdc 	.word	0x2000efdc
 801e37c:	20000000 	.word	0x20000000
 801e380:	0801afaf 	.word	0x0801afaf
 801e384:	2000008c 	.word	0x2000008c
 801e388:	2000efe0 	.word	0x2000efe0
 801e38c:	0801afad 	.word	0x0801afad
 801e390:	20000090 	.word	0x20000090

0801e394 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e394:	b510      	push	{r4, lr}
 801e396:	4604      	mov	r4, r0
 801e398:	f7ff ff88 	bl	801e2ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e39c:	4620      	mov	r0, r4
 801e39e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e3a2:	f7ff bfbd 	b.w	801e320 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e3a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e3a8:	b538      	push	{r3, r4, r5, lr}
 801e3aa:	4c15      	ldr	r4, [pc, #84]	; (801e400 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e3ac:	7823      	ldrb	r3, [r4, #0]
 801e3ae:	f3bf 8f5b 	dmb	ish
 801e3b2:	07da      	lsls	r2, r3, #31
 801e3b4:	4605      	mov	r5, r0
 801e3b6:	d40b      	bmi.n	801e3d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e3b8:	4620      	mov	r0, r4
 801e3ba:	f008 f903 	bl	80265c4 <__cxa_guard_acquire>
 801e3be:	b138      	cbz	r0, 801e3d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e3c0:	4620      	mov	r0, r4
 801e3c2:	f008 f90b 	bl	80265dc <__cxa_guard_release>
 801e3c6:	4a0f      	ldr	r2, [pc, #60]	; (801e404 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e3c8:	490f      	ldr	r1, [pc, #60]	; (801e408 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e3ca:	4810      	ldr	r0, [pc, #64]	; (801e40c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e3cc:	f008 f8f3 	bl	80265b6 <__aeabi_atexit>
 801e3d0:	4c0f      	ldr	r4, [pc, #60]	; (801e410 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e3d2:	7823      	ldrb	r3, [r4, #0]
 801e3d4:	f3bf 8f5b 	dmb	ish
 801e3d8:	07db      	lsls	r3, r3, #31
 801e3da:	d40b      	bmi.n	801e3f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e3dc:	4620      	mov	r0, r4
 801e3de:	f008 f8f1 	bl	80265c4 <__cxa_guard_acquire>
 801e3e2:	b138      	cbz	r0, 801e3f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e3e4:	4620      	mov	r0, r4
 801e3e6:	f008 f8f9 	bl	80265dc <__cxa_guard_release>
 801e3ea:	4a06      	ldr	r2, [pc, #24]	; (801e404 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e3ec:	4909      	ldr	r1, [pc, #36]	; (801e414 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e3ee:	480a      	ldr	r0, [pc, #40]	; (801e418 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e3f0:	f008 f8e1 	bl	80265b6 <__aeabi_atexit>
 801e3f4:	4b05      	ldr	r3, [pc, #20]	; (801e40c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e3f6:	632b      	str	r3, [r5, #48]	; 0x30
 801e3f8:	4b07      	ldr	r3, [pc, #28]	; (801e418 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e3fa:	636b      	str	r3, [r5, #52]	; 0x34
 801e3fc:	bd38      	pop	{r3, r4, r5, pc}
 801e3fe:	bf00      	nop
 801e400:	2000f014 	.word	0x2000f014
 801e404:	20000000 	.word	0x20000000
 801e408:	0801afa3 	.word	0x0801afa3
 801e40c:	200000c4 	.word	0x200000c4
 801e410:	2000f018 	.word	0x2000f018
 801e414:	0801afa1 	.word	0x0801afa1
 801e418:	200000c8 	.word	0x200000c8

0801e41c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e41c:	b538      	push	{r3, r4, r5, lr}
 801e41e:	4c15      	ldr	r4, [pc, #84]	; (801e474 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e420:	7823      	ldrb	r3, [r4, #0]
 801e422:	f3bf 8f5b 	dmb	ish
 801e426:	07da      	lsls	r2, r3, #31
 801e428:	4605      	mov	r5, r0
 801e42a:	d40b      	bmi.n	801e444 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e42c:	4620      	mov	r0, r4
 801e42e:	f008 f8c9 	bl	80265c4 <__cxa_guard_acquire>
 801e432:	b138      	cbz	r0, 801e444 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e434:	4620      	mov	r0, r4
 801e436:	f008 f8d1 	bl	80265dc <__cxa_guard_release>
 801e43a:	4a0f      	ldr	r2, [pc, #60]	; (801e478 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e43c:	490f      	ldr	r1, [pc, #60]	; (801e47c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e43e:	4810      	ldr	r0, [pc, #64]	; (801e480 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e440:	f008 f8b9 	bl	80265b6 <__aeabi_atexit>
 801e444:	4c0f      	ldr	r4, [pc, #60]	; (801e484 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e446:	7823      	ldrb	r3, [r4, #0]
 801e448:	f3bf 8f5b 	dmb	ish
 801e44c:	07db      	lsls	r3, r3, #31
 801e44e:	d40b      	bmi.n	801e468 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e450:	4620      	mov	r0, r4
 801e452:	f008 f8b7 	bl	80265c4 <__cxa_guard_acquire>
 801e456:	b138      	cbz	r0, 801e468 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e458:	4620      	mov	r0, r4
 801e45a:	f008 f8bf 	bl	80265dc <__cxa_guard_release>
 801e45e:	4a06      	ldr	r2, [pc, #24]	; (801e478 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e460:	4909      	ldr	r1, [pc, #36]	; (801e488 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e462:	480a      	ldr	r0, [pc, #40]	; (801e48c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e464:	f008 f8a7 	bl	80265b6 <__aeabi_atexit>
 801e468:	4b05      	ldr	r3, [pc, #20]	; (801e480 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e46a:	62ab      	str	r3, [r5, #40]	; 0x28
 801e46c:	4b07      	ldr	r3, [pc, #28]	; (801e48c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e46e:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e470:	bd38      	pop	{r3, r4, r5, pc}
 801e472:	bf00      	nop
 801e474:	2000efe4 	.word	0x2000efe4
 801e478:	20000000 	.word	0x20000000
 801e47c:	0801afa7 	.word	0x0801afa7
 801e480:	20000094 	.word	0x20000094
 801e484:	2000efe8 	.word	0x2000efe8
 801e488:	0801afa5 	.word	0x0801afa5
 801e48c:	20000098 	.word	0x20000098

0801e490 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e490:	b510      	push	{r4, lr}
 801e492:	4604      	mov	r4, r0
 801e494:	f7ff ff88 	bl	801e3a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e498:	4620      	mov	r0, r4
 801e49a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e49e:	f7ff bfbd 	b.w	801e41c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e4a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e4a4:	b538      	push	{r3, r4, r5, lr}
 801e4a6:	4c15      	ldr	r4, [pc, #84]	; (801e4fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e4a8:	7823      	ldrb	r3, [r4, #0]
 801e4aa:	f3bf 8f5b 	dmb	ish
 801e4ae:	07da      	lsls	r2, r3, #31
 801e4b0:	4605      	mov	r5, r0
 801e4b2:	d40b      	bmi.n	801e4cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e4b4:	4620      	mov	r0, r4
 801e4b6:	f008 f885 	bl	80265c4 <__cxa_guard_acquire>
 801e4ba:	b138      	cbz	r0, 801e4cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e4bc:	4620      	mov	r0, r4
 801e4be:	f008 f88d 	bl	80265dc <__cxa_guard_release>
 801e4c2:	4a0f      	ldr	r2, [pc, #60]	; (801e500 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e4c4:	490f      	ldr	r1, [pc, #60]	; (801e504 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e4c6:	4810      	ldr	r0, [pc, #64]	; (801e508 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e4c8:	f008 f875 	bl	80265b6 <__aeabi_atexit>
 801e4cc:	4c0f      	ldr	r4, [pc, #60]	; (801e50c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e4ce:	7823      	ldrb	r3, [r4, #0]
 801e4d0:	f3bf 8f5b 	dmb	ish
 801e4d4:	07db      	lsls	r3, r3, #31
 801e4d6:	d40b      	bmi.n	801e4f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e4d8:	4620      	mov	r0, r4
 801e4da:	f008 f873 	bl	80265c4 <__cxa_guard_acquire>
 801e4de:	b138      	cbz	r0, 801e4f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e4e0:	4620      	mov	r0, r4
 801e4e2:	f008 f87b 	bl	80265dc <__cxa_guard_release>
 801e4e6:	4a06      	ldr	r2, [pc, #24]	; (801e500 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e4e8:	4909      	ldr	r1, [pc, #36]	; (801e510 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e4ea:	480a      	ldr	r0, [pc, #40]	; (801e514 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e4ec:	f008 f863 	bl	80265b6 <__aeabi_atexit>
 801e4f0:	4b05      	ldr	r3, [pc, #20]	; (801e508 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e4f2:	652b      	str	r3, [r5, #80]	; 0x50
 801e4f4:	4b07      	ldr	r3, [pc, #28]	; (801e514 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e4f6:	656b      	str	r3, [r5, #84]	; 0x54
 801e4f8:	bd38      	pop	{r3, r4, r5, pc}
 801e4fa:	bf00      	nop
 801e4fc:	2000f01c 	.word	0x2000f01c
 801e500:	20000000 	.word	0x20000000
 801e504:	0801af93 	.word	0x0801af93
 801e508:	200000cc 	.word	0x200000cc
 801e50c:	2000f020 	.word	0x2000f020
 801e510:	0801af91 	.word	0x0801af91
 801e514:	200000d0 	.word	0x200000d0

0801e518 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e518:	b538      	push	{r3, r4, r5, lr}
 801e51a:	4c15      	ldr	r4, [pc, #84]	; (801e570 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e51c:	7823      	ldrb	r3, [r4, #0]
 801e51e:	f3bf 8f5b 	dmb	ish
 801e522:	07da      	lsls	r2, r3, #31
 801e524:	4605      	mov	r5, r0
 801e526:	d40b      	bmi.n	801e540 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e528:	4620      	mov	r0, r4
 801e52a:	f008 f84b 	bl	80265c4 <__cxa_guard_acquire>
 801e52e:	b138      	cbz	r0, 801e540 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e530:	4620      	mov	r0, r4
 801e532:	f008 f853 	bl	80265dc <__cxa_guard_release>
 801e536:	4a0f      	ldr	r2, [pc, #60]	; (801e574 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e538:	490f      	ldr	r1, [pc, #60]	; (801e578 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e53a:	4810      	ldr	r0, [pc, #64]	; (801e57c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e53c:	f008 f83b 	bl	80265b6 <__aeabi_atexit>
 801e540:	4c0f      	ldr	r4, [pc, #60]	; (801e580 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e542:	7823      	ldrb	r3, [r4, #0]
 801e544:	f3bf 8f5b 	dmb	ish
 801e548:	07db      	lsls	r3, r3, #31
 801e54a:	d40b      	bmi.n	801e564 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e54c:	4620      	mov	r0, r4
 801e54e:	f008 f839 	bl	80265c4 <__cxa_guard_acquire>
 801e552:	b138      	cbz	r0, 801e564 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e554:	4620      	mov	r0, r4
 801e556:	f008 f841 	bl	80265dc <__cxa_guard_release>
 801e55a:	4a06      	ldr	r2, [pc, #24]	; (801e574 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e55c:	4909      	ldr	r1, [pc, #36]	; (801e584 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e55e:	480a      	ldr	r0, [pc, #40]	; (801e588 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e560:	f008 f829 	bl	80265b6 <__aeabi_atexit>
 801e564:	4b05      	ldr	r3, [pc, #20]	; (801e57c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e566:	64ab      	str	r3, [r5, #72]	; 0x48
 801e568:	4b07      	ldr	r3, [pc, #28]	; (801e588 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e56a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e56c:	bd38      	pop	{r3, r4, r5, pc}
 801e56e:	bf00      	nop
 801e570:	2000f024 	.word	0x2000f024
 801e574:	20000000 	.word	0x20000000
 801e578:	0801af97 	.word	0x0801af97
 801e57c:	200000d4 	.word	0x200000d4
 801e580:	2000f028 	.word	0x2000f028
 801e584:	0801af95 	.word	0x0801af95
 801e588:	200000d8 	.word	0x200000d8

0801e58c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e58c:	b538      	push	{r3, r4, r5, lr}
 801e58e:	4c15      	ldr	r4, [pc, #84]	; (801e5e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e590:	7823      	ldrb	r3, [r4, #0]
 801e592:	f3bf 8f5b 	dmb	ish
 801e596:	07da      	lsls	r2, r3, #31
 801e598:	4605      	mov	r5, r0
 801e59a:	d40b      	bmi.n	801e5b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e59c:	4620      	mov	r0, r4
 801e59e:	f008 f811 	bl	80265c4 <__cxa_guard_acquire>
 801e5a2:	b138      	cbz	r0, 801e5b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e5a4:	4620      	mov	r0, r4
 801e5a6:	f008 f819 	bl	80265dc <__cxa_guard_release>
 801e5aa:	4a0f      	ldr	r2, [pc, #60]	; (801e5e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e5ac:	490f      	ldr	r1, [pc, #60]	; (801e5ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e5ae:	4810      	ldr	r0, [pc, #64]	; (801e5f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e5b0:	f008 f801 	bl	80265b6 <__aeabi_atexit>
 801e5b4:	4c0f      	ldr	r4, [pc, #60]	; (801e5f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e5b6:	7823      	ldrb	r3, [r4, #0]
 801e5b8:	f3bf 8f5b 	dmb	ish
 801e5bc:	07db      	lsls	r3, r3, #31
 801e5be:	d40b      	bmi.n	801e5d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e5c0:	4620      	mov	r0, r4
 801e5c2:	f007 ffff 	bl	80265c4 <__cxa_guard_acquire>
 801e5c6:	b138      	cbz	r0, 801e5d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e5c8:	4620      	mov	r0, r4
 801e5ca:	f008 f807 	bl	80265dc <__cxa_guard_release>
 801e5ce:	4a06      	ldr	r2, [pc, #24]	; (801e5e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e5d0:	4909      	ldr	r1, [pc, #36]	; (801e5f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e5d2:	480a      	ldr	r0, [pc, #40]	; (801e5fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e5d4:	f007 ffef 	bl	80265b6 <__aeabi_atexit>
 801e5d8:	4b05      	ldr	r3, [pc, #20]	; (801e5f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e5da:	642b      	str	r3, [r5, #64]	; 0x40
 801e5dc:	4b07      	ldr	r3, [pc, #28]	; (801e5fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e5de:	646b      	str	r3, [r5, #68]	; 0x44
 801e5e0:	bd38      	pop	{r3, r4, r5, pc}
 801e5e2:	bf00      	nop
 801e5e4:	2000efec 	.word	0x2000efec
 801e5e8:	20000000 	.word	0x20000000
 801e5ec:	0801af9b 	.word	0x0801af9b
 801e5f0:	2000009c 	.word	0x2000009c
 801e5f4:	2000eff0 	.word	0x2000eff0
 801e5f8:	0801af99 	.word	0x0801af99
 801e5fc:	200000a0 	.word	0x200000a0

0801e600 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e600:	b538      	push	{r3, r4, r5, lr}
 801e602:	4c15      	ldr	r4, [pc, #84]	; (801e658 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e604:	7823      	ldrb	r3, [r4, #0]
 801e606:	f3bf 8f5b 	dmb	ish
 801e60a:	07da      	lsls	r2, r3, #31
 801e60c:	4605      	mov	r5, r0
 801e60e:	d40b      	bmi.n	801e628 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e610:	4620      	mov	r0, r4
 801e612:	f007 ffd7 	bl	80265c4 <__cxa_guard_acquire>
 801e616:	b138      	cbz	r0, 801e628 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e618:	4620      	mov	r0, r4
 801e61a:	f007 ffdf 	bl	80265dc <__cxa_guard_release>
 801e61e:	4a0f      	ldr	r2, [pc, #60]	; (801e65c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e620:	490f      	ldr	r1, [pc, #60]	; (801e660 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e622:	4810      	ldr	r0, [pc, #64]	; (801e664 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e624:	f007 ffc7 	bl	80265b6 <__aeabi_atexit>
 801e628:	4c0f      	ldr	r4, [pc, #60]	; (801e668 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e62a:	7823      	ldrb	r3, [r4, #0]
 801e62c:	f3bf 8f5b 	dmb	ish
 801e630:	07db      	lsls	r3, r3, #31
 801e632:	d40b      	bmi.n	801e64c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e634:	4620      	mov	r0, r4
 801e636:	f007 ffc5 	bl	80265c4 <__cxa_guard_acquire>
 801e63a:	b138      	cbz	r0, 801e64c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e63c:	4620      	mov	r0, r4
 801e63e:	f007 ffcd 	bl	80265dc <__cxa_guard_release>
 801e642:	4a06      	ldr	r2, [pc, #24]	; (801e65c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e644:	4909      	ldr	r1, [pc, #36]	; (801e66c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e646:	480a      	ldr	r0, [pc, #40]	; (801e670 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e648:	f007 ffb5 	bl	80265b6 <__aeabi_atexit>
 801e64c:	4b05      	ldr	r3, [pc, #20]	; (801e664 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e64e:	63ab      	str	r3, [r5, #56]	; 0x38
 801e650:	4b07      	ldr	r3, [pc, #28]	; (801e670 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e652:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e654:	bd38      	pop	{r3, r4, r5, pc}
 801e656:	bf00      	nop
 801e658:	2000f00c 	.word	0x2000f00c
 801e65c:	20000000 	.word	0x20000000
 801e660:	0801af9f 	.word	0x0801af9f
 801e664:	200000bc 	.word	0x200000bc
 801e668:	2000f010 	.word	0x2000f010
 801e66c:	0801af9d 	.word	0x0801af9d
 801e670:	200000c0 	.word	0x200000c0

0801e674 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e674:	b510      	push	{r4, lr}
 801e676:	4604      	mov	r4, r0
 801e678:	f7ff ff14 	bl	801e4a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e67c:	4620      	mov	r0, r4
 801e67e:	f7ff ff85 	bl	801e58c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e682:	4620      	mov	r0, r4
 801e684:	f7ff ff48 	bl	801e518 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e688:	4620      	mov	r0, r4
 801e68a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e68e:	f7ff bfb7 	b.w	801e600 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e694 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e694:	b538      	push	{r3, r4, r5, lr}
 801e696:	4c15      	ldr	r4, [pc, #84]	; (801e6ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e698:	7823      	ldrb	r3, [r4, #0]
 801e69a:	f3bf 8f5b 	dmb	ish
 801e69e:	07da      	lsls	r2, r3, #31
 801e6a0:	4605      	mov	r5, r0
 801e6a2:	d40b      	bmi.n	801e6bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e6a4:	4620      	mov	r0, r4
 801e6a6:	f007 ff8d 	bl	80265c4 <__cxa_guard_acquire>
 801e6aa:	b138      	cbz	r0, 801e6bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e6ac:	4620      	mov	r0, r4
 801e6ae:	f007 ff95 	bl	80265dc <__cxa_guard_release>
 801e6b2:	4a0f      	ldr	r2, [pc, #60]	; (801e6f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e6b4:	490f      	ldr	r1, [pc, #60]	; (801e6f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e6b6:	4810      	ldr	r0, [pc, #64]	; (801e6f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e6b8:	f007 ff7d 	bl	80265b6 <__aeabi_atexit>
 801e6bc:	4c0f      	ldr	r4, [pc, #60]	; (801e6fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e6be:	7823      	ldrb	r3, [r4, #0]
 801e6c0:	f3bf 8f5b 	dmb	ish
 801e6c4:	07db      	lsls	r3, r3, #31
 801e6c6:	d40b      	bmi.n	801e6e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e6c8:	4620      	mov	r0, r4
 801e6ca:	f007 ff7b 	bl	80265c4 <__cxa_guard_acquire>
 801e6ce:	b138      	cbz	r0, 801e6e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e6d0:	4620      	mov	r0, r4
 801e6d2:	f007 ff83 	bl	80265dc <__cxa_guard_release>
 801e6d6:	4a06      	ldr	r2, [pc, #24]	; (801e6f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e6d8:	4909      	ldr	r1, [pc, #36]	; (801e700 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e6da:	480a      	ldr	r0, [pc, #40]	; (801e704 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e6dc:	f007 ff6b 	bl	80265b6 <__aeabi_atexit>
 801e6e0:	4b05      	ldr	r3, [pc, #20]	; (801e6f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e6e2:	662b      	str	r3, [r5, #96]	; 0x60
 801e6e4:	4b07      	ldr	r3, [pc, #28]	; (801e704 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e6e6:	666b      	str	r3, [r5, #100]	; 0x64
 801e6e8:	bd38      	pop	{r3, r4, r5, pc}
 801e6ea:	bf00      	nop
 801e6ec:	2000eff4 	.word	0x2000eff4
 801e6f0:	20000000 	.word	0x20000000
 801e6f4:	0801af8b 	.word	0x0801af8b
 801e6f8:	200000a4 	.word	0x200000a4
 801e6fc:	2000eff8 	.word	0x2000eff8
 801e700:	0801af89 	.word	0x0801af89
 801e704:	200000a8 	.word	0x200000a8

0801e708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e708:	b538      	push	{r3, r4, r5, lr}
 801e70a:	4c15      	ldr	r4, [pc, #84]	; (801e760 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e70c:	7823      	ldrb	r3, [r4, #0]
 801e70e:	f3bf 8f5b 	dmb	ish
 801e712:	07da      	lsls	r2, r3, #31
 801e714:	4605      	mov	r5, r0
 801e716:	d40b      	bmi.n	801e730 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e718:	4620      	mov	r0, r4
 801e71a:	f007 ff53 	bl	80265c4 <__cxa_guard_acquire>
 801e71e:	b138      	cbz	r0, 801e730 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e720:	4620      	mov	r0, r4
 801e722:	f007 ff5b 	bl	80265dc <__cxa_guard_release>
 801e726:	4a0f      	ldr	r2, [pc, #60]	; (801e764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e728:	490f      	ldr	r1, [pc, #60]	; (801e768 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e72a:	4810      	ldr	r0, [pc, #64]	; (801e76c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e72c:	f007 ff43 	bl	80265b6 <__aeabi_atexit>
 801e730:	4c0f      	ldr	r4, [pc, #60]	; (801e770 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e732:	7823      	ldrb	r3, [r4, #0]
 801e734:	f3bf 8f5b 	dmb	ish
 801e738:	07db      	lsls	r3, r3, #31
 801e73a:	d40b      	bmi.n	801e754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e73c:	4620      	mov	r0, r4
 801e73e:	f007 ff41 	bl	80265c4 <__cxa_guard_acquire>
 801e742:	b138      	cbz	r0, 801e754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e744:	4620      	mov	r0, r4
 801e746:	f007 ff49 	bl	80265dc <__cxa_guard_release>
 801e74a:	4a06      	ldr	r2, [pc, #24]	; (801e764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e74c:	4909      	ldr	r1, [pc, #36]	; (801e774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e74e:	480a      	ldr	r0, [pc, #40]	; (801e778 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e750:	f007 ff31 	bl	80265b6 <__aeabi_atexit>
 801e754:	4b05      	ldr	r3, [pc, #20]	; (801e76c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e756:	65ab      	str	r3, [r5, #88]	; 0x58
 801e758:	4b07      	ldr	r3, [pc, #28]	; (801e778 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e75a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e75c:	bd38      	pop	{r3, r4, r5, pc}
 801e75e:	bf00      	nop
 801e760:	2000efcc 	.word	0x2000efcc
 801e764:	20000000 	.word	0x20000000
 801e768:	0801af8f 	.word	0x0801af8f
 801e76c:	2000007c 	.word	0x2000007c
 801e770:	2000efd0 	.word	0x2000efd0
 801e774:	0801af8d 	.word	0x0801af8d
 801e778:	20000080 	.word	0x20000080

0801e77c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e77c:	b510      	push	{r4, lr}
 801e77e:	4604      	mov	r4, r0
 801e780:	f7ff ff88 	bl	801e694 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e784:	4620      	mov	r0, r4
 801e786:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e78a:	f7ff bfbd 	b.w	801e708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e790:	b538      	push	{r3, r4, r5, lr}
 801e792:	4c15      	ldr	r4, [pc, #84]	; (801e7e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e794:	7823      	ldrb	r3, [r4, #0]
 801e796:	f3bf 8f5b 	dmb	ish
 801e79a:	07da      	lsls	r2, r3, #31
 801e79c:	4605      	mov	r5, r0
 801e79e:	d40b      	bmi.n	801e7b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e7a0:	4620      	mov	r0, r4
 801e7a2:	f007 ff0f 	bl	80265c4 <__cxa_guard_acquire>
 801e7a6:	b138      	cbz	r0, 801e7b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e7a8:	4620      	mov	r0, r4
 801e7aa:	f007 ff17 	bl	80265dc <__cxa_guard_release>
 801e7ae:	4a0f      	ldr	r2, [pc, #60]	; (801e7ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e7b0:	490f      	ldr	r1, [pc, #60]	; (801e7f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e7b2:	4810      	ldr	r0, [pc, #64]	; (801e7f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e7b4:	f007 feff 	bl	80265b6 <__aeabi_atexit>
 801e7b8:	4c0f      	ldr	r4, [pc, #60]	; (801e7f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e7ba:	7823      	ldrb	r3, [r4, #0]
 801e7bc:	f3bf 8f5b 	dmb	ish
 801e7c0:	07db      	lsls	r3, r3, #31
 801e7c2:	d40b      	bmi.n	801e7dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e7c4:	4620      	mov	r0, r4
 801e7c6:	f007 fefd 	bl	80265c4 <__cxa_guard_acquire>
 801e7ca:	b138      	cbz	r0, 801e7dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e7cc:	4620      	mov	r0, r4
 801e7ce:	f007 ff05 	bl	80265dc <__cxa_guard_release>
 801e7d2:	4a06      	ldr	r2, [pc, #24]	; (801e7ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e7d4:	4909      	ldr	r1, [pc, #36]	; (801e7fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e7d6:	480a      	ldr	r0, [pc, #40]	; (801e800 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e7d8:	f007 feed 	bl	80265b6 <__aeabi_atexit>
 801e7dc:	4b05      	ldr	r3, [pc, #20]	; (801e7f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e7de:	672b      	str	r3, [r5, #112]	; 0x70
 801e7e0:	4b07      	ldr	r3, [pc, #28]	; (801e800 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e7e2:	676b      	str	r3, [r5, #116]	; 0x74
 801e7e4:	bd38      	pop	{r3, r4, r5, pc}
 801e7e6:	bf00      	nop
 801e7e8:	2000efc4 	.word	0x2000efc4
 801e7ec:	20000000 	.word	0x20000000
 801e7f0:	0801af83 	.word	0x0801af83
 801e7f4:	20000074 	.word	0x20000074
 801e7f8:	2000efc8 	.word	0x2000efc8
 801e7fc:	0801af81 	.word	0x0801af81
 801e800:	20000078 	.word	0x20000078

0801e804 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e804:	b538      	push	{r3, r4, r5, lr}
 801e806:	4c15      	ldr	r4, [pc, #84]	; (801e85c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e808:	7823      	ldrb	r3, [r4, #0]
 801e80a:	f3bf 8f5b 	dmb	ish
 801e80e:	07da      	lsls	r2, r3, #31
 801e810:	4605      	mov	r5, r0
 801e812:	d40b      	bmi.n	801e82c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e814:	4620      	mov	r0, r4
 801e816:	f007 fed5 	bl	80265c4 <__cxa_guard_acquire>
 801e81a:	b138      	cbz	r0, 801e82c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e81c:	4620      	mov	r0, r4
 801e81e:	f007 fedd 	bl	80265dc <__cxa_guard_release>
 801e822:	4a0f      	ldr	r2, [pc, #60]	; (801e860 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e824:	490f      	ldr	r1, [pc, #60]	; (801e864 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e826:	4810      	ldr	r0, [pc, #64]	; (801e868 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e828:	f007 fec5 	bl	80265b6 <__aeabi_atexit>
 801e82c:	4c0f      	ldr	r4, [pc, #60]	; (801e86c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e82e:	7823      	ldrb	r3, [r4, #0]
 801e830:	f3bf 8f5b 	dmb	ish
 801e834:	07db      	lsls	r3, r3, #31
 801e836:	d40b      	bmi.n	801e850 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e838:	4620      	mov	r0, r4
 801e83a:	f007 fec3 	bl	80265c4 <__cxa_guard_acquire>
 801e83e:	b138      	cbz	r0, 801e850 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e840:	4620      	mov	r0, r4
 801e842:	f007 fecb 	bl	80265dc <__cxa_guard_release>
 801e846:	4a06      	ldr	r2, [pc, #24]	; (801e860 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e848:	4909      	ldr	r1, [pc, #36]	; (801e870 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e84a:	480a      	ldr	r0, [pc, #40]	; (801e874 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e84c:	f007 feb3 	bl	80265b6 <__aeabi_atexit>
 801e850:	4b05      	ldr	r3, [pc, #20]	; (801e868 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e852:	66ab      	str	r3, [r5, #104]	; 0x68
 801e854:	4b07      	ldr	r3, [pc, #28]	; (801e874 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e856:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e858:	bd38      	pop	{r3, r4, r5, pc}
 801e85a:	bf00      	nop
 801e85c:	2000efbc 	.word	0x2000efbc
 801e860:	20000000 	.word	0x20000000
 801e864:	0801af87 	.word	0x0801af87
 801e868:	2000006c 	.word	0x2000006c
 801e86c:	2000efc0 	.word	0x2000efc0
 801e870:	0801af85 	.word	0x0801af85
 801e874:	20000070 	.word	0x20000070

0801e878 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e878:	b510      	push	{r4, lr}
 801e87a:	4604      	mov	r4, r0
 801e87c:	f7ff ff88 	bl	801e790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e880:	4620      	mov	r0, r4
 801e882:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e886:	f7ff bfbd 	b.w	801e804 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e88a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e88a:	b510      	push	{r4, lr}
 801e88c:	4604      	mov	r4, r0
 801e88e:	f7ff fff3 	bl	801e878 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e892:	4620      	mov	r0, r4
 801e894:	f7ff ff72 	bl	801e77c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e898:	4620      	mov	r0, r4
 801e89a:	f7ff fdf9 	bl	801e490 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e89e:	4620      	mov	r0, r4
 801e8a0:	f7ff fcfa 	bl	801e298 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e8a4:	4620      	mov	r0, r4
 801e8a6:	f7ff fd75 	bl	801e394 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e8aa:	4620      	mov	r0, r4
 801e8ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e8b0:	f7ff bee0 	b.w	801e674 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e8b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e8b4:	b538      	push	{r3, r4, r5, lr}
 801e8b6:	4c0b      	ldr	r4, [pc, #44]	; (801e8e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e8b8:	7823      	ldrb	r3, [r4, #0]
 801e8ba:	f3bf 8f5b 	dmb	ish
 801e8be:	07db      	lsls	r3, r3, #31
 801e8c0:	4605      	mov	r5, r0
 801e8c2:	d40b      	bmi.n	801e8dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e8c4:	4620      	mov	r0, r4
 801e8c6:	f007 fe7d 	bl	80265c4 <__cxa_guard_acquire>
 801e8ca:	b138      	cbz	r0, 801e8dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e8cc:	4620      	mov	r0, r4
 801e8ce:	f007 fe85 	bl	80265dc <__cxa_guard_release>
 801e8d2:	4a05      	ldr	r2, [pc, #20]	; (801e8e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e8d4:	4905      	ldr	r1, [pc, #20]	; (801e8ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e8d6:	4806      	ldr	r0, [pc, #24]	; (801e8f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e8d8:	f007 fe6d 	bl	80265b6 <__aeabi_atexit>
 801e8dc:	4b04      	ldr	r3, [pc, #16]	; (801e8f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e8de:	67ab      	str	r3, [r5, #120]	; 0x78
 801e8e0:	bd38      	pop	{r3, r4, r5, pc}
 801e8e2:	bf00      	nop
 801e8e4:	2000efb0 	.word	0x2000efb0
 801e8e8:	20000000 	.word	0x20000000
 801e8ec:	0801af7f 	.word	0x0801af7f
 801e8f0:	20000064 	.word	0x20000064

0801e8f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e8f4:	b538      	push	{r3, r4, r5, lr}
 801e8f6:	4c0b      	ldr	r4, [pc, #44]	; (801e924 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e8f8:	7823      	ldrb	r3, [r4, #0]
 801e8fa:	f3bf 8f5b 	dmb	ish
 801e8fe:	07db      	lsls	r3, r3, #31
 801e900:	4605      	mov	r5, r0
 801e902:	d40b      	bmi.n	801e91c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e904:	4620      	mov	r0, r4
 801e906:	f007 fe5d 	bl	80265c4 <__cxa_guard_acquire>
 801e90a:	b138      	cbz	r0, 801e91c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e90c:	4620      	mov	r0, r4
 801e90e:	f007 fe65 	bl	80265dc <__cxa_guard_release>
 801e912:	4a05      	ldr	r2, [pc, #20]	; (801e928 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e914:	4905      	ldr	r1, [pc, #20]	; (801e92c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e916:	4806      	ldr	r0, [pc, #24]	; (801e930 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e918:	f007 fe4d 	bl	80265b6 <__aeabi_atexit>
 801e91c:	4b04      	ldr	r3, [pc, #16]	; (801e930 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e91e:	67eb      	str	r3, [r5, #124]	; 0x7c
 801e920:	bd38      	pop	{r3, r4, r5, pc}
 801e922:	bf00      	nop
 801e924:	2000efb4 	.word	0x2000efb4
 801e928:	20000000 	.word	0x20000000
 801e92c:	0801af7d 	.word	0x0801af7d
 801e930:	20000068 	.word	0x20000068

0801e934 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e934:	b570      	push	{r4, r5, r6, lr}
 801e936:	4d0d      	ldr	r5, [pc, #52]	; (801e96c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e938:	4c0d      	ldr	r4, [pc, #52]	; (801e970 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e93a:	782b      	ldrb	r3, [r5, #0]
 801e93c:	f3bf 8f5b 	dmb	ish
 801e940:	f013 0f01 	tst.w	r3, #1
 801e944:	4606      	mov	r6, r0
 801e946:	d10d      	bne.n	801e964 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e948:	4628      	mov	r0, r5
 801e94a:	f007 fe3b 	bl	80265c4 <__cxa_guard_acquire>
 801e94e:	b148      	cbz	r0, 801e964 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e950:	4b08      	ldr	r3, [pc, #32]	; (801e974 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e952:	6023      	str	r3, [r4, #0]
 801e954:	4628      	mov	r0, r5
 801e956:	f007 fe41 	bl	80265dc <__cxa_guard_release>
 801e95a:	4a07      	ldr	r2, [pc, #28]	; (801e978 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e95c:	4907      	ldr	r1, [pc, #28]	; (801e97c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e95e:	4620      	mov	r0, r4
 801e960:	f007 fe29 	bl	80265b6 <__aeabi_atexit>
 801e964:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801e968:	bd70      	pop	{r4, r5, r6, pc}
 801e96a:	bf00      	nop
 801e96c:	2000efb8 	.word	0x2000efb8
 801e970:	2000f02c 	.word	0x2000f02c
 801e974:	0802a780 	.word	0x0802a780
 801e978:	20000000 	.word	0x20000000
 801e97c:	0801af7b 	.word	0x0801af7b

0801e980 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e980:	b510      	push	{r4, lr}
 801e982:	4604      	mov	r4, r0
 801e984:	f7ff ff96 	bl	801e8b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e988:	4620      	mov	r0, r4
 801e98a:	f7ff ffb3 	bl	801e8f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e98e:	4620      	mov	r0, r4
 801e990:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e994:	f7ff bfce 	b.w	801e934 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e998 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e99c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801e9a0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801e9a4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801e9a8:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801e9ac:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801e9b0:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801e9b4:	8808      	ldrh	r0, [r1, #0]
 801e9b6:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e9ba:	2d00      	cmp	r5, #0
 801e9bc:	eb02 0a0c 	add.w	sl, r2, ip
 801e9c0:	f2c0 80b0 	blt.w	801eb24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e9c4:	45ab      	cmp	fp, r5
 801e9c6:	f340 80ad 	ble.w	801eb24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e9ca:	2c00      	cmp	r4, #0
 801e9cc:	f2c0 80a8 	blt.w	801eb20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e9d0:	45a6      	cmp	lr, r4
 801e9d2:	f340 80a5 	ble.w	801eb20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e9d6:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e9da:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e9de:	1c62      	adds	r2, r4, #1
 801e9e0:	f100 80a3 	bmi.w	801eb2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e9e4:	4596      	cmp	lr, r2
 801e9e6:	f340 80a0 	ble.w	801eb2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e9ea:	f1b9 0f00 	cmp.w	r9, #0
 801e9ee:	f000 809c 	beq.w	801eb2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e9f2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e9f6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e9fa:	3501      	adds	r5, #1
 801e9fc:	f100 8099 	bmi.w	801eb32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ea00:	45ab      	cmp	fp, r5
 801ea02:	f340 8096 	ble.w	801eb32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ea06:	2f00      	cmp	r7, #0
 801ea08:	f000 8093 	beq.w	801eb32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ea0c:	2c00      	cmp	r4, #0
 801ea0e:	f2c0 808e 	blt.w	801eb2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ea12:	45a6      	cmp	lr, r4
 801ea14:	f340 808b 	ble.w	801eb2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ea18:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801ea1c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801ea20:	3401      	adds	r4, #1
 801ea22:	f100 8089 	bmi.w	801eb38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ea26:	45a6      	cmp	lr, r4
 801ea28:	f340 8086 	ble.w	801eb38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ea2c:	f1b9 0f00 	cmp.w	r9, #0
 801ea30:	f000 8082 	beq.w	801eb38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ea34:	44d6      	add	lr, sl
 801ea36:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ea3a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801ea3e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801ea42:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ea46:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801ea4a:	fb19 fe07 	smulbb	lr, r9, r7
 801ea4e:	ea44 0808 	orr.w	r8, r4, r8
 801ea52:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801ea56:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801ea5a:	f1c7 0210 	rsb	r2, r7, #16
 801ea5e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ea62:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ea66:	ea44 0c0c 	orr.w	ip, r4, ip
 801ea6a:	eba2 0209 	sub.w	r2, r2, r9
 801ea6e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801ea72:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801ea76:	fb04 f40c 	mul.w	r4, r4, ip
 801ea7a:	fb02 4808 	mla	r8, r2, r8, r4
 801ea7e:	041a      	lsls	r2, r3, #16
 801ea80:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ea84:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ea88:	4313      	orrs	r3, r2
 801ea8a:	042a      	lsls	r2, r5, #16
 801ea8c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ea90:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ea94:	fb0e 8303 	mla	r3, lr, r3, r8
 801ea98:	432a      	orrs	r2, r5
 801ea9a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801ea9e:	fb07 3202 	mla	r2, r7, r2, r3
 801eaa2:	0d53      	lsrs	r3, r2, #21
 801eaa4:	0952      	lsrs	r2, r2, #5
 801eaa6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eaaa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801eaae:	431a      	orrs	r2, r3
 801eab0:	b293      	uxth	r3, r2
 801eab2:	b2b4      	uxth	r4, r6
 801eab4:	1202      	asrs	r2, r0, #8
 801eab6:	43f6      	mvns	r6, r6
 801eab8:	b2f6      	uxtb	r6, r6
 801eaba:	121d      	asrs	r5, r3, #8
 801eabc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801eac0:	fb12 f206 	smulbb	r2, r2, r6
 801eac4:	10c7      	asrs	r7, r0, #3
 801eac6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801eaca:	00c0      	lsls	r0, r0, #3
 801eacc:	fb05 2504 	mla	r5, r5, r4, r2
 801ead0:	b2c0      	uxtb	r0, r0
 801ead2:	10da      	asrs	r2, r3, #3
 801ead4:	00db      	lsls	r3, r3, #3
 801ead6:	b2db      	uxtb	r3, r3
 801ead8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801eadc:	fb10 f006 	smulbb	r0, r0, r6
 801eae0:	b2ad      	uxth	r5, r5
 801eae2:	fb03 0004 	mla	r0, r3, r4, r0
 801eae6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801eaea:	fb17 f706 	smulbb	r7, r7, r6
 801eaee:	b280      	uxth	r0, r0
 801eaf0:	1c6b      	adds	r3, r5, #1
 801eaf2:	fb02 7204 	mla	r2, r2, r4, r7
 801eaf6:	b292      	uxth	r2, r2
 801eaf8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801eafc:	1c43      	adds	r3, r0, #1
 801eafe:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801eb02:	1c50      	adds	r0, r2, #1
 801eb04:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801eb08:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801eb0c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801eb10:	0952      	lsrs	r2, r2, #5
 801eb12:	432b      	orrs	r3, r5
 801eb14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb18:	4313      	orrs	r3, r2
 801eb1a:	800b      	strh	r3, [r1, #0]
 801eb1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb20:	4680      	mov	r8, r0
 801eb22:	e75c      	b.n	801e9de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801eb24:	4684      	mov	ip, r0
 801eb26:	4680      	mov	r8, r0
 801eb28:	e767      	b.n	801e9fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801eb2a:	4684      	mov	ip, r0
 801eb2c:	e765      	b.n	801e9fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801eb2e:	4605      	mov	r5, r0
 801eb30:	e776      	b.n	801ea20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801eb32:	4603      	mov	r3, r0
 801eb34:	4605      	mov	r5, r0
 801eb36:	e782      	b.n	801ea3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801eb38:	4603      	mov	r3, r0
 801eb3a:	e780      	b.n	801ea3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801eb3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eb3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb40:	b099      	sub	sp, #100	; 0x64
 801eb42:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801eb46:	9215      	str	r2, [sp, #84]	; 0x54
 801eb48:	9309      	str	r3, [sp, #36]	; 0x24
 801eb4a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801eb4c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801eb50:	930d      	str	r3, [sp, #52]	; 0x34
 801eb52:	910c      	str	r1, [sp, #48]	; 0x30
 801eb54:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801eb58:	9016      	str	r0, [sp, #88]	; 0x58
 801eb5a:	6850      	ldr	r0, [r2, #4]
 801eb5c:	6812      	ldr	r2, [r2, #0]
 801eb5e:	fb00 1303 	mla	r3, r0, r3, r1
 801eb62:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801eb66:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eb68:	681b      	ldr	r3, [r3, #0]
 801eb6a:	930b      	str	r3, [sp, #44]	; 0x2c
 801eb6c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eb6e:	685e      	ldr	r6, [r3, #4]
 801eb70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801eb72:	43db      	mvns	r3, r3
 801eb74:	b2db      	uxtb	r3, r3
 801eb76:	3604      	adds	r6, #4
 801eb78:	930a      	str	r3, [sp, #40]	; 0x28
 801eb7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eb7c:	2b00      	cmp	r3, #0
 801eb7e:	dc03      	bgt.n	801eb88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801eb80:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801eb82:	2b00      	cmp	r3, #0
 801eb84:	f340 8225 	ble.w	801efd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801eb88:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eb8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eb8e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eb92:	1e48      	subs	r0, r1, #1
 801eb94:	1e57      	subs	r7, r2, #1
 801eb96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eb98:	2b00      	cmp	r3, #0
 801eb9a:	f340 80e3 	ble.w	801ed64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801eb9e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801eba2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801eba6:	d406      	bmi.n	801ebb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801eba8:	4584      	cmp	ip, r0
 801ebaa:	da04      	bge.n	801ebb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ebac:	2b00      	cmp	r3, #0
 801ebae:	db02      	blt.n	801ebb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ebb0:	42bb      	cmp	r3, r7
 801ebb2:	f2c0 80d8 	blt.w	801ed66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ebb6:	f11c 0c01 	adds.w	ip, ip, #1
 801ebba:	f100 80c9 	bmi.w	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ebbe:	4561      	cmp	r1, ip
 801ebc0:	f2c0 80c6 	blt.w	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ebc4:	3301      	adds	r3, #1
 801ebc6:	f100 80c3 	bmi.w	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ebca:	429a      	cmp	r2, r3
 801ebcc:	f2c0 80c0 	blt.w	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ebd0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ebd4:	4647      	mov	r7, r8
 801ebd6:	f1bb 0f00 	cmp.w	fp, #0
 801ebda:	f340 80e3 	ble.w	801eda4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801ebde:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ebe0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ebe2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ebe6:	689b      	ldr	r3, [r3, #8]
 801ebe8:	ea5f 422a 	movs.w	r2, sl, asr #16
 801ebec:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ebf0:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801ebf4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ebf8:	f100 8121 	bmi.w	801ee3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ebfc:	f103 39ff 	add.w	r9, r3, #4294967295
 801ec00:	454a      	cmp	r2, r9
 801ec02:	f280 811c 	bge.w	801ee3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ec06:	f1bc 0f00 	cmp.w	ip, #0
 801ec0a:	f2c0 8118 	blt.w	801ee3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ec0e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801ec12:	45cc      	cmp	ip, r9
 801ec14:	f280 8113 	bge.w	801ee3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ec18:	b21b      	sxth	r3, r3
 801ec1a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ec1e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ec20:	eb04 0902 	add.w	r9, r4, r2
 801ec24:	5ca2      	ldrb	r2, [r4, r2]
 801ec26:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801ec2a:	2800      	cmp	r0, #0
 801ec2c:	f000 80fe 	beq.w	801ee2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801ec30:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ec34:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801ec38:	9211      	str	r2, [sp, #68]	; 0x44
 801ec3a:	b151      	cbz	r1, 801ec52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ec3c:	eb09 0203 	add.w	r2, r9, r3
 801ec40:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ec44:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ec48:	930f      	str	r3, [sp, #60]	; 0x3c
 801ec4a:	7853      	ldrb	r3, [r2, #1]
 801ec4c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ec50:	9312      	str	r3, [sp, #72]	; 0x48
 801ec52:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ec54:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ec56:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ec5a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ec5e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ec62:	ea4c 0c03 	orr.w	ip, ip, r3
 801ec66:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ec68:	041b      	lsls	r3, r3, #16
 801ec6a:	fb10 f201 	smulbb	r2, r0, r1
 801ec6e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ec72:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ec76:	10d2      	asrs	r2, r2, #3
 801ec78:	4323      	orrs	r3, r4
 801ec7a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801ec7e:	4353      	muls	r3, r2
 801ec80:	fb09 330c 	mla	r3, r9, ip, r3
 801ec84:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ec88:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ec8c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ec90:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ec94:	f1c1 0c10 	rsb	ip, r1, #16
 801ec98:	ebac 0c00 	sub.w	ip, ip, r0
 801ec9c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801eca0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801eca4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801eca6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801eca8:	0418      	lsls	r0, r3, #16
 801ecaa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ecae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ecb2:	4318      	orrs	r0, r3
 801ecb4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ecb8:	fb02 c200 	mla	r2, r2, r0, ip
 801ecbc:	0d53      	lsrs	r3, r2, #21
 801ecbe:	0952      	lsrs	r2, r2, #5
 801ecc0:	8838      	ldrh	r0, [r7, #0]
 801ecc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ecc6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ecca:	431a      	orrs	r2, r3
 801eccc:	b292      	uxth	r2, r2
 801ecce:	1201      	asrs	r1, r0, #8
 801ecd0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801ecd4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801ecd8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ecdc:	fb11 f104 	smulbb	r1, r1, r4
 801ece0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ece4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ece8:	00c0      	lsls	r0, r0, #3
 801ecea:	fb0c 1c03 	mla	ip, ip, r3, r1
 801ecee:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ecf2:	10d1      	asrs	r1, r2, #3
 801ecf4:	b2c0      	uxtb	r0, r0
 801ecf6:	00d2      	lsls	r2, r2, #3
 801ecf8:	b2d2      	uxtb	r2, r2
 801ecfa:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ecfe:	fb1e fe04 	smulbb	lr, lr, r4
 801ed02:	fb10 f004 	smulbb	r0, r0, r4
 801ed06:	fa1f fc8c 	uxth.w	ip, ip
 801ed0a:	fb01 e103 	mla	r1, r1, r3, lr
 801ed0e:	fb02 0303 	mla	r3, r2, r3, r0
 801ed12:	b29a      	uxth	r2, r3
 801ed14:	f10c 0301 	add.w	r3, ip, #1
 801ed18:	b289      	uxth	r1, r1
 801ed1a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ed1e:	1c53      	adds	r3, r2, #1
 801ed20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ed24:	1c4a      	adds	r2, r1, #1
 801ed26:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ed2a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ed2e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ed32:	0949      	lsrs	r1, r1, #5
 801ed34:	ea43 030c 	orr.w	r3, r3, ip
 801ed38:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ed3c:	430b      	orrs	r3, r1
 801ed3e:	803b      	strh	r3, [r7, #0]
 801ed40:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ed42:	449a      	add	sl, r3
 801ed44:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ed46:	3702      	adds	r7, #2
 801ed48:	441d      	add	r5, r3
 801ed4a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ed4e:	e742      	b.n	801ebd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ed50:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ed52:	449a      	add	sl, r3
 801ed54:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ed56:	441d      	add	r5, r3
 801ed58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed5a:	3b01      	subs	r3, #1
 801ed5c:	9309      	str	r3, [sp, #36]	; 0x24
 801ed5e:	f108 0802 	add.w	r8, r8, #2
 801ed62:	e718      	b.n	801eb96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ed64:	d023      	beq.n	801edae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ed66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed68:	9825      	ldr	r0, [sp, #148]	; 0x94
 801ed6a:	3b01      	subs	r3, #1
 801ed6c:	fb00 a003 	mla	r0, r0, r3, sl
 801ed70:	1400      	asrs	r0, r0, #16
 801ed72:	f53f af2d 	bmi.w	801ebd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ed76:	3901      	subs	r1, #1
 801ed78:	4288      	cmp	r0, r1
 801ed7a:	f6bf af29 	bge.w	801ebd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ed7e:	9926      	ldr	r1, [sp, #152]	; 0x98
 801ed80:	fb01 5303 	mla	r3, r1, r3, r5
 801ed84:	141b      	asrs	r3, r3, #16
 801ed86:	f53f af23 	bmi.w	801ebd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ed8a:	3a01      	subs	r2, #1
 801ed8c:	4293      	cmp	r3, r2
 801ed8e:	f6bf af1f 	bge.w	801ebd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ed92:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801ed96:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801ed9a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801ed9e:	f1be 0f00 	cmp.w	lr, #0
 801eda2:	dc6c      	bgt.n	801ee7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801eda4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eda6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801edaa:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801edae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801edb0:	2b00      	cmp	r3, #0
 801edb2:	f340 810e 	ble.w	801efd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801edb6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801edba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801edbe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801edc2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801edc4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801edc8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801edcc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801edd0:	eef0 6a62 	vmov.f32	s13, s5
 801edd4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801edd8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eddc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ede0:	ee16 aa90 	vmov	sl, s13
 801ede4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ede8:	eef0 6a43 	vmov.f32	s13, s6
 801edec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801edf0:	ee12 2a90 	vmov	r2, s5
 801edf4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801edf8:	fb92 f3f3 	sdiv	r3, r2, r3
 801edfc:	ee13 2a10 	vmov	r2, s6
 801ee00:	9325      	str	r3, [sp, #148]	; 0x94
 801ee02:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ee04:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee08:	9326      	str	r3, [sp, #152]	; 0x98
 801ee0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ee0c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801ee0e:	3b01      	subs	r3, #1
 801ee10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ee14:	930c      	str	r3, [sp, #48]	; 0x30
 801ee16:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ee18:	bf08      	it	eq
 801ee1a:	4613      	moveq	r3, r2
 801ee1c:	ee16 5a90 	vmov	r5, s13
 801ee20:	9309      	str	r3, [sp, #36]	; 0x24
 801ee22:	eeb0 3a67 	vmov.f32	s6, s15
 801ee26:	eef0 2a47 	vmov.f32	s5, s14
 801ee2a:	e6a6      	b.n	801eb7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ee2c:	2900      	cmp	r1, #0
 801ee2e:	f43f af10 	beq.w	801ec52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ee32:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ee36:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ee3a:	930f      	str	r3, [sp, #60]	; 0x3c
 801ee3c:	e709      	b.n	801ec52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ee3e:	f112 0901 	adds.w	r9, r2, #1
 801ee42:	f53f af7d 	bmi.w	801ed40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee46:	454b      	cmp	r3, r9
 801ee48:	f6ff af7a 	blt.w	801ed40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee4c:	f11c 0901 	adds.w	r9, ip, #1
 801ee50:	f53f af76 	bmi.w	801ed40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee54:	45ce      	cmp	lr, r9
 801ee56:	f6ff af73 	blt.w	801ed40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee5a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ee5c:	9202      	str	r2, [sp, #8]
 801ee5e:	b21b      	sxth	r3, r3
 801ee60:	fa0f f28e 	sxth.w	r2, lr
 801ee64:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ee68:	e9cd c003 	strd	ip, r0, [sp, #12]
 801ee6c:	9201      	str	r2, [sp, #4]
 801ee6e:	9300      	str	r3, [sp, #0]
 801ee70:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ee72:	9816      	ldr	r0, [sp, #88]	; 0x58
 801ee74:	4633      	mov	r3, r6
 801ee76:	4639      	mov	r1, r7
 801ee78:	f7ff fd8e 	bl	801e998 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801ee7c:	e760      	b.n	801ed40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee7e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee80:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ee82:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ee86:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ee8a:	1429      	asrs	r1, r5, #16
 801ee8c:	fb03 2101 	mla	r1, r3, r1, r2
 801ee90:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ee92:	440a      	add	r2, r1
 801ee94:	5c61      	ldrb	r1, [r4, r1]
 801ee96:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801ee9a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ee9e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801eea2:	f1bc 0f00 	cmp.w	ip, #0
 801eea6:	f000 808c 	beq.w	801efc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801eeaa:	7857      	ldrb	r7, [r2, #1]
 801eeac:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801eeb0:	9413      	str	r4, [sp, #76]	; 0x4c
 801eeb2:	b140      	cbz	r0, 801eec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801eeb4:	18d7      	adds	r7, r2, r3
 801eeb6:	5cd3      	ldrb	r3, [r2, r3]
 801eeb8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eebc:	9310      	str	r3, [sp, #64]	; 0x40
 801eebe:	787b      	ldrb	r3, [r7, #1]
 801eec0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eec4:	9314      	str	r3, [sp, #80]	; 0x50
 801eec6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801eec8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801eeca:	fb1c f200 	smulbb	r2, ip, r0
 801eece:	041f      	lsls	r7, r3, #16
 801eed0:	10d2      	asrs	r2, r2, #3
 801eed2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eed6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801eeda:	431f      	orrs	r7, r3
 801eedc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801eee0:	9317      	str	r3, [sp, #92]	; 0x5c
 801eee2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801eee4:	041b      	lsls	r3, r3, #16
 801eee6:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801eeea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801eeee:	ea43 030b 	orr.w	r3, r3, fp
 801eef2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801eef4:	4353      	muls	r3, r2
 801eef6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801eefa:	fb04 3707 	mla	r7, r4, r7, r3
 801eefe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ef02:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ef06:	ea43 0b01 	orr.w	fp, r3, r1
 801ef0a:	f1c0 0110 	rsb	r1, r0, #16
 801ef0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ef10:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ef12:	eba1 0c0c 	sub.w	ip, r1, ip
 801ef16:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ef1a:	fb0c 770b 	mla	r7, ip, fp, r7
 801ef1e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ef22:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801ef26:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ef2a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ef2e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ef32:	fb02 770c 	mla	r7, r2, ip, r7
 801ef36:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ef38:	0d79      	lsrs	r1, r7, #21
 801ef3a:	097f      	lsrs	r7, r7, #5
 801ef3c:	8812      	ldrh	r2, [r2, #0]
 801ef3e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ef42:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ef46:	430f      	orrs	r7, r1
 801ef48:	b2bb      	uxth	r3, r7
 801ef4a:	1211      	asrs	r1, r2, #8
 801ef4c:	1218      	asrs	r0, r3, #8
 801ef4e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ef52:	fb11 f104 	smulbb	r1, r1, r4
 801ef56:	10d7      	asrs	r7, r2, #3
 801ef58:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ef5c:	00d2      	lsls	r2, r2, #3
 801ef5e:	fb00 1009 	mla	r0, r0, r9, r1
 801ef62:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ef66:	10d9      	asrs	r1, r3, #3
 801ef68:	b2d2      	uxtb	r2, r2
 801ef6a:	00db      	lsls	r3, r3, #3
 801ef6c:	fb17 f704 	smulbb	r7, r7, r4
 801ef70:	fb12 f204 	smulbb	r2, r2, r4
 801ef74:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ef78:	b2db      	uxtb	r3, r3
 801ef7a:	b280      	uxth	r0, r0
 801ef7c:	fb01 7109 	mla	r1, r1, r9, r7
 801ef80:	fb03 2309 	mla	r3, r3, r9, r2
 801ef84:	b29b      	uxth	r3, r3
 801ef86:	b289      	uxth	r1, r1
 801ef88:	1c42      	adds	r2, r0, #1
 801ef8a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ef8e:	1c4f      	adds	r7, r1, #1
 801ef90:	1c5a      	adds	r2, r3, #1
 801ef92:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ef96:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ef9a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ef9e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801efa2:	0949      	lsrs	r1, r1, #5
 801efa4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801efa6:	4310      	orrs	r0, r2
 801efa8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801efac:	4308      	orrs	r0, r1
 801efae:	f823 0b02 	strh.w	r0, [r3], #2
 801efb2:	930e      	str	r3, [sp, #56]	; 0x38
 801efb4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801efb6:	449a      	add	sl, r3
 801efb8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801efba:	f10e 3eff 	add.w	lr, lr, #4294967295
 801efbe:	441d      	add	r5, r3
 801efc0:	e6ed      	b.n	801ed9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801efc2:	2800      	cmp	r0, #0
 801efc4:	f43f af7f 	beq.w	801eec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801efc8:	5cd3      	ldrb	r3, [r2, r3]
 801efca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801efce:	9310      	str	r3, [sp, #64]	; 0x40
 801efd0:	e779      	b.n	801eec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801efd2:	b019      	add	sp, #100	; 0x64
 801efd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801efd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801efd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801efdc:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801efe0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801efe4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801efe8:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801efec:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801eff0:	8808      	ldrh	r0, [r1, #0]
 801eff2:	fb08 470e 	mla	r7, r8, lr, r4
 801eff6:	f1b8 0f00 	cmp.w	r8, #0
 801effa:	eb02 0907 	add.w	r9, r2, r7
 801effe:	db67      	blt.n	801f0d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f000:	45c2      	cmp	sl, r8
 801f002:	dd65      	ble.n	801f0d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f004:	2c00      	cmp	r4, #0
 801f006:	db61      	blt.n	801f0cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f008:	45a6      	cmp	lr, r4
 801f00a:	dd5f      	ble.n	801f0cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f00c:	5dd2      	ldrb	r2, [r2, r7]
 801f00e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f012:	1c62      	adds	r2, r4, #1
 801f014:	d45f      	bmi.n	801f0d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f016:	4596      	cmp	lr, r2
 801f018:	dd5d      	ble.n	801f0d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f01a:	2d00      	cmp	r5, #0
 801f01c:	d05b      	beq.n	801f0d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f01e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f022:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801f026:	f118 0801 	adds.w	r8, r8, #1
 801f02a:	d458      	bmi.n	801f0de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f02c:	45c2      	cmp	sl, r8
 801f02e:	dd56      	ble.n	801f0de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f030:	2e00      	cmp	r6, #0
 801f032:	d054      	beq.n	801f0de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f034:	2c00      	cmp	r4, #0
 801f036:	db50      	blt.n	801f0da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f038:	45a6      	cmp	lr, r4
 801f03a:	dd4e      	ble.n	801f0da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f03c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801f040:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801f044:	3401      	adds	r4, #1
 801f046:	d407      	bmi.n	801f058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f048:	45a6      	cmp	lr, r4
 801f04a:	dd05      	ble.n	801f058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f04c:	b125      	cbz	r5, 801f058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f04e:	44ce      	add	lr, r9
 801f050:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801f054:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801f058:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801f05c:	fb15 f406 	smulbb	r4, r5, r6
 801f060:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f064:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801f068:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f06c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801f070:	ea43 0c0c 	orr.w	ip, r3, ip
 801f074:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801f078:	f1c6 0310 	rsb	r3, r6, #16
 801f07c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f080:	1b5b      	subs	r3, r3, r5
 801f082:	ea4e 0707 	orr.w	r7, lr, r7
 801f086:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801f08a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f08e:	437d      	muls	r5, r7
 801f090:	fb03 5c0c 	mla	ip, r3, ip, r5
 801f094:	0403      	lsls	r3, r0, #16
 801f096:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f09a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f09e:	4318      	orrs	r0, r3
 801f0a0:	0413      	lsls	r3, r2, #16
 801f0a2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f0a6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f0aa:	4313      	orrs	r3, r2
 801f0ac:	fb04 c000 	mla	r0, r4, r0, ip
 801f0b0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801f0b4:	fb06 0003 	mla	r0, r6, r3, r0
 801f0b8:	0d43      	lsrs	r3, r0, #21
 801f0ba:	0940      	lsrs	r0, r0, #5
 801f0bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f0c0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f0c4:	4318      	orrs	r0, r3
 801f0c6:	8008      	strh	r0, [r1, #0]
 801f0c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f0cc:	4684      	mov	ip, r0
 801f0ce:	e7a0      	b.n	801f012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801f0d0:	4607      	mov	r7, r0
 801f0d2:	4684      	mov	ip, r0
 801f0d4:	e7a7      	b.n	801f026 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f0d6:	4607      	mov	r7, r0
 801f0d8:	e7a5      	b.n	801f026 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f0da:	4602      	mov	r2, r0
 801f0dc:	e7b2      	b.n	801f044 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801f0de:	4602      	mov	r2, r0
 801f0e0:	e7ba      	b.n	801f058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801f0e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f0e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0e6:	b093      	sub	sp, #76	; 0x4c
 801f0e8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f0ec:	920f      	str	r2, [sp, #60]	; 0x3c
 801f0ee:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f0f0:	9108      	str	r1, [sp, #32]
 801f0f2:	9306      	str	r3, [sp, #24]
 801f0f4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f0f8:	9010      	str	r0, [sp, #64]	; 0x40
 801f0fa:	6850      	ldr	r0, [r2, #4]
 801f0fc:	6812      	ldr	r2, [r2, #0]
 801f0fe:	fb00 1303 	mla	r3, r0, r3, r1
 801f102:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f106:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f108:	681b      	ldr	r3, [r3, #0]
 801f10a:	9307      	str	r3, [sp, #28]
 801f10c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f10e:	685f      	ldr	r7, [r3, #4]
 801f110:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801f114:	3704      	adds	r7, #4
 801f116:	9b08      	ldr	r3, [sp, #32]
 801f118:	2b00      	cmp	r3, #0
 801f11a:	dc03      	bgt.n	801f124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f11c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f11e:	2b00      	cmp	r3, #0
 801f120:	f340 81b2 	ble.w	801f488 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f124:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f126:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f12a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f12e:	1e48      	subs	r0, r1, #1
 801f130:	f102 3cff 	add.w	ip, r2, #4294967295
 801f134:	9b06      	ldr	r3, [sp, #24]
 801f136:	2b00      	cmp	r3, #0
 801f138:	f340 80a9 	ble.w	801f28e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f13c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f140:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f144:	d406      	bmi.n	801f154 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f146:	4586      	cmp	lr, r0
 801f148:	da04      	bge.n	801f154 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f14a:	2b00      	cmp	r3, #0
 801f14c:	db02      	blt.n	801f154 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f14e:	4563      	cmp	r3, ip
 801f150:	f2c0 809e 	blt.w	801f290 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f154:	f11e 0e01 	adds.w	lr, lr, #1
 801f158:	f100 808f 	bmi.w	801f27a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f15c:	4571      	cmp	r1, lr
 801f15e:	f2c0 808c 	blt.w	801f27a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f162:	3301      	adds	r3, #1
 801f164:	f100 8089 	bmi.w	801f27a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f168:	429a      	cmp	r2, r3
 801f16a:	f2c0 8086 	blt.w	801f27a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f16e:	f8dd b018 	ldr.w	fp, [sp, #24]
 801f172:	46c8      	mov	r8, r9
 801f174:	f1bb 0f00 	cmp.w	fp, #0
 801f178:	f340 80a6 	ble.w	801f2c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f17c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801f17e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f180:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f184:	689b      	ldr	r3, [r3, #8]
 801f186:	1422      	asrs	r2, r4, #16
 801f188:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f18c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f190:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f194:	f100 80e3 	bmi.w	801f35e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f198:	f103 3aff 	add.w	sl, r3, #4294967295
 801f19c:	4552      	cmp	r2, sl
 801f19e:	f280 80de 	bge.w	801f35e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f1a2:	f1bc 0f00 	cmp.w	ip, #0
 801f1a6:	f2c0 80da 	blt.w	801f35e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f1aa:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f1ae:	45d4      	cmp	ip, sl
 801f1b0:	f280 80d5 	bge.w	801f35e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f1b4:	b21b      	sxth	r3, r3
 801f1b6:	fb0c 2203 	mla	r2, ip, r3, r2
 801f1ba:	9d07      	ldr	r5, [sp, #28]
 801f1bc:	eb05 0a02 	add.w	sl, r5, r2
 801f1c0:	5caa      	ldrb	r2, [r5, r2]
 801f1c2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801f1c6:	2800      	cmp	r0, #0
 801f1c8:	f000 80c0 	beq.w	801f34c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801f1cc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f1d0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801f1d4:	920b      	str	r2, [sp, #44]	; 0x2c
 801f1d6:	b151      	cbz	r1, 801f1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f1d8:	eb0a 0203 	add.w	r2, sl, r3
 801f1dc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f1e0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f1e4:	9309      	str	r3, [sp, #36]	; 0x24
 801f1e6:	7853      	ldrb	r3, [r2, #1]
 801f1e8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f1ec:	930c      	str	r3, [sp, #48]	; 0x30
 801f1ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f1f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f1f2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f1f6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f1fa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f1fe:	ea4c 0c03 	orr.w	ip, ip, r3
 801f202:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f204:	041b      	lsls	r3, r3, #16
 801f206:	fb10 f201 	smulbb	r2, r0, r1
 801f20a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f20e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f212:	10d2      	asrs	r2, r2, #3
 801f214:	432b      	orrs	r3, r5
 801f216:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801f21a:	4353      	muls	r3, r2
 801f21c:	fb0a 330c 	mla	r3, sl, ip, r3
 801f220:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f224:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f228:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f22c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f230:	f1c1 0c10 	rsb	ip, r1, #16
 801f234:	ebac 0c00 	sub.w	ip, ip, r0
 801f238:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f23c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f240:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f242:	0418      	lsls	r0, r3, #16
 801f244:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f248:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f24c:	4318      	orrs	r0, r3
 801f24e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f252:	fb02 c200 	mla	r2, r2, r0, ip
 801f256:	0d53      	lsrs	r3, r2, #21
 801f258:	0952      	lsrs	r2, r2, #5
 801f25a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f25e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f262:	431a      	orrs	r2, r3
 801f264:	f8a8 2000 	strh.w	r2, [r8]
 801f268:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f26a:	441c      	add	r4, r3
 801f26c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f26e:	f108 0802 	add.w	r8, r8, #2
 801f272:	441e      	add	r6, r3
 801f274:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f278:	e77c      	b.n	801f174 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f27a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f27c:	441c      	add	r4, r3
 801f27e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f280:	441e      	add	r6, r3
 801f282:	9b06      	ldr	r3, [sp, #24]
 801f284:	3b01      	subs	r3, #1
 801f286:	9306      	str	r3, [sp, #24]
 801f288:	f109 0902 	add.w	r9, r9, #2
 801f28c:	e752      	b.n	801f134 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f28e:	d020      	beq.n	801f2d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f290:	9b06      	ldr	r3, [sp, #24]
 801f292:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f294:	3b01      	subs	r3, #1
 801f296:	fb00 4003 	mla	r0, r0, r3, r4
 801f29a:	1400      	asrs	r0, r0, #16
 801f29c:	f53f af67 	bmi.w	801f16e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f2a0:	3901      	subs	r1, #1
 801f2a2:	4288      	cmp	r0, r1
 801f2a4:	f6bf af63 	bge.w	801f16e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f2a8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f2aa:	fb01 6303 	mla	r3, r1, r3, r6
 801f2ae:	141b      	asrs	r3, r3, #16
 801f2b0:	f53f af5d 	bmi.w	801f16e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f2b4:	3a01      	subs	r2, #1
 801f2b6:	4293      	cmp	r3, r2
 801f2b8:	f6bf af59 	bge.w	801f16e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f2bc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f2c0:	46ca      	mov	sl, r9
 801f2c2:	f1b8 0f00 	cmp.w	r8, #0
 801f2c6:	dc67      	bgt.n	801f398 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f2c8:	9b06      	ldr	r3, [sp, #24]
 801f2ca:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f2ce:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f2d2:	9b08      	ldr	r3, [sp, #32]
 801f2d4:	2b00      	cmp	r3, #0
 801f2d6:	f340 80d7 	ble.w	801f488 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f2da:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f2de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f2e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f2e6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f2e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f2ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f2f0:	eeb0 6a62 	vmov.f32	s12, s5
 801f2f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f2f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f2fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f300:	ee16 4a10 	vmov	r4, s12
 801f304:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f308:	eeb0 6a43 	vmov.f32	s12, s6
 801f30c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f310:	ee12 2a90 	vmov	r2, s5
 801f314:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f318:	fb92 f3f3 	sdiv	r3, r2, r3
 801f31c:	ee13 2a10 	vmov	r2, s6
 801f320:	931f      	str	r3, [sp, #124]	; 0x7c
 801f322:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f324:	fb92 f3f3 	sdiv	r3, r2, r3
 801f328:	9320      	str	r3, [sp, #128]	; 0x80
 801f32a:	9b08      	ldr	r3, [sp, #32]
 801f32c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f32e:	3b01      	subs	r3, #1
 801f330:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f334:	9308      	str	r3, [sp, #32]
 801f336:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f338:	bf08      	it	eq
 801f33a:	4613      	moveq	r3, r2
 801f33c:	ee16 6a10 	vmov	r6, s12
 801f340:	9306      	str	r3, [sp, #24]
 801f342:	eeb0 3a67 	vmov.f32	s6, s15
 801f346:	eef0 2a47 	vmov.f32	s5, s14
 801f34a:	e6e4      	b.n	801f116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f34c:	2900      	cmp	r1, #0
 801f34e:	f43f af4e 	beq.w	801f1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f352:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f356:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f35a:	9309      	str	r3, [sp, #36]	; 0x24
 801f35c:	e747      	b.n	801f1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f35e:	f112 0a01 	adds.w	sl, r2, #1
 801f362:	d481      	bmi.n	801f268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f364:	4553      	cmp	r3, sl
 801f366:	f6ff af7f 	blt.w	801f268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f36a:	f11c 0a01 	adds.w	sl, ip, #1
 801f36e:	f53f af7b 	bmi.w	801f268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f372:	45d6      	cmp	lr, sl
 801f374:	f6ff af78 	blt.w	801f268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f378:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f37c:	b21b      	sxth	r3, r3
 801f37e:	fa0f f28e 	sxth.w	r2, lr
 801f382:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f386:	9201      	str	r2, [sp, #4]
 801f388:	9300      	str	r3, [sp, #0]
 801f38a:	9a07      	ldr	r2, [sp, #28]
 801f38c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f38e:	463b      	mov	r3, r7
 801f390:	4641      	mov	r1, r8
 801f392:	f7ff fe21 	bl	801efd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f396:	e767      	b.n	801f268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f398:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f39a:	9d07      	ldr	r5, [sp, #28]
 801f39c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f3a0:	1422      	asrs	r2, r4, #16
 801f3a2:	1431      	asrs	r1, r6, #16
 801f3a4:	fb03 2101 	mla	r1, r3, r1, r2
 801f3a8:	9a07      	ldr	r2, [sp, #28]
 801f3aa:	440a      	add	r2, r1
 801f3ac:	5c69      	ldrb	r1, [r5, r1]
 801f3ae:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f3b2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f3b6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f3ba:	f1be 0f00 	cmp.w	lr, #0
 801f3be:	d05c      	beq.n	801f47a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f3c0:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f3c4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f3c8:	950d      	str	r5, [sp, #52]	; 0x34
 801f3ca:	b150      	cbz	r0, 801f3e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f3cc:	eb02 0c03 	add.w	ip, r2, r3
 801f3d0:	5cd3      	ldrb	r3, [r2, r3]
 801f3d2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f3d6:	930a      	str	r3, [sp, #40]	; 0x28
 801f3d8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f3dc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f3e0:	930e      	str	r3, [sp, #56]	; 0x38
 801f3e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f3e4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f3e6:	fb1e f200 	smulbb	r2, lr, r0
 801f3ea:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f3ee:	10d2      	asrs	r2, r2, #3
 801f3f0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f3f4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f3f8:	ea4c 0c03 	orr.w	ip, ip, r3
 801f3fc:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f400:	9311      	str	r3, [sp, #68]	; 0x44
 801f402:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f404:	041b      	lsls	r3, r3, #16
 801f406:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f40a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f40e:	ea43 030b 	orr.w	r3, r3, fp
 801f412:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f414:	4353      	muls	r3, r2
 801f416:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f41a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f41e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f422:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f426:	ea43 0b01 	orr.w	fp, r3, r1
 801f42a:	f1c0 0110 	rsb	r1, r0, #16
 801f42e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f430:	eba1 0e0e 	sub.w	lr, r1, lr
 801f434:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f438:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f43c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f440:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f444:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f448:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f44c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f450:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f454:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f458:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f45c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f460:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f464:	ea43 0c0c 	orr.w	ip, r3, ip
 801f468:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f46a:	f82a cb02 	strh.w	ip, [sl], #2
 801f46e:	441c      	add	r4, r3
 801f470:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f472:	f108 38ff 	add.w	r8, r8, #4294967295
 801f476:	441e      	add	r6, r3
 801f478:	e723      	b.n	801f2c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f47a:	2800      	cmp	r0, #0
 801f47c:	d0b1      	beq.n	801f3e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f47e:	5cd3      	ldrb	r3, [r2, r3]
 801f480:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f484:	930a      	str	r3, [sp, #40]	; 0x28
 801f486:	e7ac      	b.n	801f3e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f488:	b013      	add	sp, #76	; 0x4c
 801f48a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f48e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f48e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f492:	880d      	ldrh	r5, [r1, #0]
 801f494:	b087      	sub	sp, #28
 801f496:	10ef      	asrs	r7, r5, #3
 801f498:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f49c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f4a0:	00ed      	lsls	r5, r5, #3
 801f4a2:	9701      	str	r7, [sp, #4]
 801f4a4:	b2ed      	uxtb	r5, r5
 801f4a6:	9502      	str	r5, [sp, #8]
 801f4a8:	9d01      	ldr	r5, [sp, #4]
 801f4aa:	9103      	str	r1, [sp, #12]
 801f4ac:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f4b0:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f4b4:	9902      	ldr	r1, [sp, #8]
 801f4b6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f4ba:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f4be:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f4c2:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f4c6:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f4ca:	022d      	lsls	r5, r5, #8
 801f4cc:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f4d0:	fb06 0709 	mla	r7, r6, r9, r0
 801f4d4:	430d      	orrs	r5, r1
 801f4d6:	2e00      	cmp	r6, #0
 801f4d8:	eb02 0c07 	add.w	ip, r2, r7
 801f4dc:	9505      	str	r5, [sp, #20]
 801f4de:	f2c0 80b6 	blt.w	801f64e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f4e2:	45b3      	cmp	fp, r6
 801f4e4:	f340 80b3 	ble.w	801f64e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f4e8:	2800      	cmp	r0, #0
 801f4ea:	f2c0 80ae 	blt.w	801f64a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f4ee:	4581      	cmp	r9, r0
 801f4f0:	f340 80ab 	ble.w	801f64a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f4f4:	5dd7      	ldrb	r7, [r2, r7]
 801f4f6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f4fa:	441f      	add	r7, r3
 801f4fc:	1c42      	adds	r2, r0, #1
 801f4fe:	f100 80a9 	bmi.w	801f654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f502:	4591      	cmp	r9, r2
 801f504:	f340 80a6 	ble.w	801f654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f508:	2c00      	cmp	r4, #0
 801f50a:	f000 80a3 	beq.w	801f654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f50e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f512:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f516:	441d      	add	r5, r3
 801f518:	3601      	adds	r6, #1
 801f51a:	f100 809f 	bmi.w	801f65c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f51e:	45b3      	cmp	fp, r6
 801f520:	f340 809c 	ble.w	801f65c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f524:	f1be 0f00 	cmp.w	lr, #0
 801f528:	f000 8098 	beq.w	801f65c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f52c:	2800      	cmp	r0, #0
 801f52e:	f2c0 8093 	blt.w	801f658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f532:	4581      	cmp	r9, r0
 801f534:	f340 8090 	ble.w	801f658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f538:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f53c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f540:	441e      	add	r6, r3
 801f542:	3001      	adds	r0, #1
 801f544:	f100 808d 	bmi.w	801f662 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f548:	4581      	cmp	r9, r0
 801f54a:	f340 808a 	ble.w	801f662 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f54e:	2c00      	cmp	r4, #0
 801f550:	f000 8087 	beq.w	801f662 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f554:	44e1      	add	r9, ip
 801f556:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f55a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f55e:	4413      	add	r3, r2
 801f560:	b2a4      	uxth	r4, r4
 801f562:	fa1f fe8e 	uxth.w	lr, lr
 801f566:	fb04 fb0e 	mul.w	fp, r4, lr
 801f56a:	0124      	lsls	r4, r4, #4
 801f56c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f570:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801f574:	eba4 040b 	sub.w	r4, r4, fp
 801f578:	fa1f f08e 	uxth.w	r0, lr
 801f57c:	b2a2      	uxth	r2, r4
 801f57e:	78ac      	ldrb	r4, [r5, #2]
 801f580:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f584:	9901      	ldr	r1, [sp, #4]
 801f586:	eba9 0900 	sub.w	r9, r9, r0
 801f58a:	fa1f f989 	uxth.w	r9, r9
 801f58e:	4354      	muls	r4, r2
 801f590:	fb09 440c 	mla	r4, r9, ip, r4
 801f594:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f598:	fb00 440c 	mla	r4, r0, ip, r4
 801f59c:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f5a0:	fa1f fe88 	uxth.w	lr, r8
 801f5a4:	ea6f 0808 	mvn.w	r8, r8
 801f5a8:	fa5f f888 	uxtb.w	r8, r8
 801f5ac:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f5b0:	fb1a fa08 	smulbb	sl, sl, r8
 801f5b4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f5b8:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f5bc:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f5c0:	787c      	ldrb	r4, [r7, #1]
 801f5c2:	782d      	ldrb	r5, [r5, #0]
 801f5c4:	783f      	ldrb	r7, [r7, #0]
 801f5c6:	fb02 fa0a 	mul.w	sl, r2, sl
 801f5ca:	fb09 aa04 	mla	sl, r9, r4, sl
 801f5ce:	7874      	ldrb	r4, [r6, #1]
 801f5d0:	436a      	muls	r2, r5
 801f5d2:	7835      	ldrb	r5, [r6, #0]
 801f5d4:	fb00 aa04 	mla	sl, r0, r4, sl
 801f5d8:	fb09 2207 	mla	r2, r9, r7, r2
 801f5dc:	785c      	ldrb	r4, [r3, #1]
 801f5de:	781b      	ldrb	r3, [r3, #0]
 801f5e0:	fb00 2005 	mla	r0, r0, r5, r2
 801f5e4:	fb0b a404 	mla	r4, fp, r4, sl
 801f5e8:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f5ec:	9b02      	ldr	r3, [sp, #8]
 801f5ee:	fb11 fa08 	smulbb	sl, r1, r8
 801f5f2:	fa1f fc8c 	uxth.w	ip, ip
 801f5f6:	fb13 f808 	smulbb	r8, r3, r8
 801f5fa:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f5fe:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f602:	fb04 a40e 	mla	r4, r4, lr, sl
 801f606:	f10c 0301 	add.w	r3, ip, #1
 801f60a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f60e:	fa1f fe8e 	uxth.w	lr, lr
 801f612:	b2a4      	uxth	r4, r4
 801f614:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f618:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801f61c:	f104 0a01 	add.w	sl, r4, #1
 801f620:	f10e 0c01 	add.w	ip, lr, #1
 801f624:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f628:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f62c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f630:	0964      	lsrs	r4, r4, #5
 801f632:	ea4c 0c03 	orr.w	ip, ip, r3
 801f636:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f63a:	9b03      	ldr	r3, [sp, #12]
 801f63c:	ea4c 0c04 	orr.w	ip, ip, r4
 801f640:	f8a3 c000 	strh.w	ip, [r3]
 801f644:	b007      	add	sp, #28
 801f646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f64a:	af05      	add	r7, sp, #20
 801f64c:	e756      	b.n	801f4fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f64e:	ad05      	add	r5, sp, #20
 801f650:	462f      	mov	r7, r5
 801f652:	e761      	b.n	801f518 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f654:	ad05      	add	r5, sp, #20
 801f656:	e75f      	b.n	801f518 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f658:	ae05      	add	r6, sp, #20
 801f65a:	e772      	b.n	801f542 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f65c:	ab05      	add	r3, sp, #20
 801f65e:	461e      	mov	r6, r3
 801f660:	e77e      	b.n	801f560 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f662:	ab05      	add	r3, sp, #20
 801f664:	e77c      	b.n	801f560 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f666:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f66a:	b095      	sub	sp, #84	; 0x54
 801f66c:	9212      	str	r2, [sp, #72]	; 0x48
 801f66e:	9309      	str	r3, [sp, #36]	; 0x24
 801f670:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f672:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801f676:	930f      	str	r3, [sp, #60]	; 0x3c
 801f678:	910e      	str	r1, [sp, #56]	; 0x38
 801f67a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801f67e:	9013      	str	r0, [sp, #76]	; 0x4c
 801f680:	6850      	ldr	r0, [r2, #4]
 801f682:	6812      	ldr	r2, [r2, #0]
 801f684:	fb00 1303 	mla	r3, r0, r3, r1
 801f688:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f68c:	930a      	str	r3, [sp, #40]	; 0x28
 801f68e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f690:	681b      	ldr	r3, [r3, #0]
 801f692:	930d      	str	r3, [sp, #52]	; 0x34
 801f694:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f696:	685c      	ldr	r4, [r3, #4]
 801f698:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f69a:	43db      	mvns	r3, r3
 801f69c:	b2db      	uxtb	r3, r3
 801f69e:	3404      	adds	r4, #4
 801f6a0:	930b      	str	r3, [sp, #44]	; 0x2c
 801f6a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f6a4:	2b00      	cmp	r3, #0
 801f6a6:	dc03      	bgt.n	801f6b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f6a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f6aa:	2b00      	cmp	r3, #0
 801f6ac:	f340 8255 	ble.w	801fb5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f6b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f6b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f6b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f6ba:	1e48      	subs	r0, r1, #1
 801f6bc:	1e55      	subs	r5, r2, #1
 801f6be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6c0:	2b00      	cmp	r3, #0
 801f6c2:	f340 80f9 	ble.w	801f8b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f6c6:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f6c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f6ca:	1436      	asrs	r6, r6, #16
 801f6cc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f6d0:	d406      	bmi.n	801f6e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f6d2:	4286      	cmp	r6, r0
 801f6d4:	da04      	bge.n	801f6e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f6d6:	2b00      	cmp	r3, #0
 801f6d8:	db02      	blt.n	801f6e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f6da:	42ab      	cmp	r3, r5
 801f6dc:	f2c0 80ed 	blt.w	801f8ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f6e0:	3601      	adds	r6, #1
 801f6e2:	f100 80da 	bmi.w	801f89a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f6e6:	42b1      	cmp	r1, r6
 801f6e8:	f2c0 80d7 	blt.w	801f89a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f6ec:	3301      	adds	r3, #1
 801f6ee:	f100 80d4 	bmi.w	801f89a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f6f2:	429a      	cmp	r2, r3
 801f6f4:	f2c0 80d1 	blt.w	801f89a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f6f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6fa:	9311      	str	r3, [sp, #68]	; 0x44
 801f6fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f6fe:	930c      	str	r3, [sp, #48]	; 0x30
 801f700:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f702:	2b00      	cmp	r3, #0
 801f704:	f340 80fa 	ble.w	801f8fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f708:	9826      	ldr	r0, [sp, #152]	; 0x98
 801f70a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f70c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f70e:	68c6      	ldr	r6, [r0, #12]
 801f710:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f712:	141d      	asrs	r5, r3, #16
 801f714:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f718:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f71a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f71c:	1400      	asrs	r0, r0, #16
 801f71e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f722:	6892      	ldr	r2, [r2, #8]
 801f724:	f100 813e 	bmi.w	801f9a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f728:	1e57      	subs	r7, r2, #1
 801f72a:	42b8      	cmp	r0, r7
 801f72c:	f280 813a 	bge.w	801f9a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f730:	2d00      	cmp	r5, #0
 801f732:	f2c0 8137 	blt.w	801f9a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f736:	1e77      	subs	r7, r6, #1
 801f738:	42bd      	cmp	r5, r7
 801f73a:	f280 8133 	bge.w	801f9a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f73e:	b212      	sxth	r2, r2
 801f740:	fb05 0002 	mla	r0, r5, r2, r0
 801f744:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f746:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f74a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f74e:	182e      	adds	r6, r5, r0
 801f750:	eb04 050a 	add.w	r5, r4, sl
 801f754:	2b00      	cmp	r3, #0
 801f756:	f000 8117 	beq.w	801f988 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f75a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f75e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f762:	44a4      	add	ip, r4
 801f764:	2900      	cmp	r1, #0
 801f766:	f000 8117 	beq.w	801f998 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f76a:	18b0      	adds	r0, r6, r2
 801f76c:	5cb2      	ldrb	r2, [r6, r2]
 801f76e:	7840      	ldrb	r0, [r0, #1]
 801f770:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f774:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f778:	4422      	add	r2, r4
 801f77a:	4420      	add	r0, r4
 801f77c:	b29b      	uxth	r3, r3
 801f77e:	b289      	uxth	r1, r1
 801f780:	fb03 f901 	mul.w	r9, r3, r1
 801f784:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f788:	011b      	lsls	r3, r3, #4
 801f78a:	b289      	uxth	r1, r1
 801f78c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f790:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f794:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f796:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f79a:	f8b6 e000 	ldrh.w	lr, [r6]
 801f79e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f7a2:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f7a6:	eba3 0309 	sub.w	r3, r3, r9
 801f7aa:	b29b      	uxth	r3, r3
 801f7ac:	eba8 0801 	sub.w	r8, r8, r1
 801f7b0:	fa1f f888 	uxth.w	r8, r8
 801f7b4:	435f      	muls	r7, r3
 801f7b6:	fb08 770b 	mla	r7, r8, fp, r7
 801f7ba:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f7be:	9310      	str	r3, [sp, #64]	; 0x40
 801f7c0:	fb01 770b 	mla	r7, r1, fp, r7
 801f7c4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f7c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f7ca:	fb09 770b 	mla	r7, r9, fp, r7
 801f7ce:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f7d2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f7d6:	fb1b fb03 	smulbb	fp, fp, r3
 801f7da:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f7de:	fb07 b706 	mla	r7, r7, r6, fp
 801f7e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f7e4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f7e8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f7ec:	f89c c000 	ldrb.w	ip, [ip]
 801f7f0:	435d      	muls	r5, r3
 801f7f2:	fb08 550b 	mla	r5, r8, fp, r5
 801f7f6:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f7fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f7fc:	fb01 550b 	mla	r5, r1, fp, r5
 801f800:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f804:	fb09 550b 	mla	r5, r9, fp, r5
 801f808:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f80c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f810:	fb1b fb03 	smulbb	fp, fp, r3
 801f814:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f816:	fb03 f30c 	mul.w	r3, r3, ip
 801f81a:	f892 c000 	ldrb.w	ip, [r2]
 801f81e:	fb08 330a 	mla	r3, r8, sl, r3
 801f822:	fb01 330c 	mla	r3, r1, ip, r3
 801f826:	f890 c000 	ldrb.w	ip, [r0]
 801f82a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f82e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f832:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f834:	fa5f fe8e 	uxtb.w	lr, lr
 801f838:	b2bf      	uxth	r7, r7
 801f83a:	fb1e fe03 	smulbb	lr, lr, r3
 801f83e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f842:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f846:	fb05 b506 	mla	r5, r5, r6, fp
 801f84a:	1c7b      	adds	r3, r7, #1
 801f84c:	fb0c e606 	mla	r6, ip, r6, lr
 801f850:	b2ad      	uxth	r5, r5
 801f852:	b2b6      	uxth	r6, r6
 801f854:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f858:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f85c:	f105 0b01 	add.w	fp, r5, #1
 801f860:	1c77      	adds	r7, r6, #1
 801f862:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f866:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f86a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f86e:	096d      	lsrs	r5, r5, #5
 801f870:	431f      	orrs	r7, r3
 801f872:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f876:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f878:	433d      	orrs	r5, r7
 801f87a:	801d      	strh	r5, [r3, #0]
 801f87c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f87e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f880:	3302      	adds	r3, #2
 801f882:	930c      	str	r3, [sp, #48]	; 0x30
 801f884:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f886:	4413      	add	r3, r2
 801f888:	931f      	str	r3, [sp, #124]	; 0x7c
 801f88a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f88c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f88e:	4413      	add	r3, r2
 801f890:	9320      	str	r3, [sp, #128]	; 0x80
 801f892:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f894:	3b01      	subs	r3, #1
 801f896:	9311      	str	r3, [sp, #68]	; 0x44
 801f898:	e732      	b.n	801f700 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f89a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f89c:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f89e:	4433      	add	r3, r6
 801f8a0:	931f      	str	r3, [sp, #124]	; 0x7c
 801f8a2:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f8a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f8a6:	4433      	add	r3, r6
 801f8a8:	9320      	str	r3, [sp, #128]	; 0x80
 801f8aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8ac:	3b01      	subs	r3, #1
 801f8ae:	9309      	str	r3, [sp, #36]	; 0x24
 801f8b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f8b2:	3302      	adds	r3, #2
 801f8b4:	930a      	str	r3, [sp, #40]	; 0x28
 801f8b6:	e702      	b.n	801f6be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f8b8:	d027      	beq.n	801f90a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f8ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8bc:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f8be:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f8c0:	3b01      	subs	r3, #1
 801f8c2:	fb00 5003 	mla	r0, r0, r3, r5
 801f8c6:	1400      	asrs	r0, r0, #16
 801f8c8:	f53f af16 	bmi.w	801f6f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8cc:	3901      	subs	r1, #1
 801f8ce:	4288      	cmp	r0, r1
 801f8d0:	f6bf af12 	bge.w	801f6f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8d4:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f8d6:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f8d8:	fb01 0303 	mla	r3, r1, r3, r0
 801f8dc:	141b      	asrs	r3, r3, #16
 801f8de:	f53f af0b 	bmi.w	801f6f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8e2:	3a01      	subs	r2, #1
 801f8e4:	4293      	cmp	r3, r2
 801f8e6:	f6bf af07 	bge.w	801f6f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8ec:	9311      	str	r3, [sp, #68]	; 0x44
 801f8ee:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f8f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f8f4:	930c      	str	r3, [sp, #48]	; 0x30
 801f8f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f8f8:	2b00      	cmp	r3, #0
 801f8fa:	dc70      	bgt.n	801f9de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f8fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f900:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f904:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f908:	930a      	str	r3, [sp, #40]	; 0x28
 801f90a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f90c:	2b00      	cmp	r3, #0
 801f90e:	f340 8124 	ble.w	801fb5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f912:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f916:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f91a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f91e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f920:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f924:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f928:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f92c:	eef0 6a62 	vmov.f32	s13, s5
 801f930:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f934:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f938:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f93c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f940:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f944:	eef0 6a43 	vmov.f32	s13, s6
 801f948:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f94c:	ee12 2a90 	vmov	r2, s5
 801f950:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f954:	fb92 f3f3 	sdiv	r3, r2, r3
 801f958:	ee13 2a10 	vmov	r2, s6
 801f95c:	9321      	str	r3, [sp, #132]	; 0x84
 801f95e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f960:	fb92 f3f3 	sdiv	r3, r2, r3
 801f964:	9322      	str	r3, [sp, #136]	; 0x88
 801f966:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f968:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f96a:	3b01      	subs	r3, #1
 801f96c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f970:	930e      	str	r3, [sp, #56]	; 0x38
 801f972:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f974:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801f978:	bf08      	it	eq
 801f97a:	4613      	moveq	r3, r2
 801f97c:	9309      	str	r3, [sp, #36]	; 0x24
 801f97e:	eeb0 3a67 	vmov.f32	s6, s15
 801f982:	eef0 2a47 	vmov.f32	s5, s14
 801f986:	e68c      	b.n	801f6a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f988:	b149      	cbz	r1, 801f99e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f98a:	5cb2      	ldrb	r2, [r6, r2]
 801f98c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f990:	4422      	add	r2, r4
 801f992:	4628      	mov	r0, r5
 801f994:	46ac      	mov	ip, r5
 801f996:	e6f1      	b.n	801f77c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f998:	4628      	mov	r0, r5
 801f99a:	462a      	mov	r2, r5
 801f99c:	e6ee      	b.n	801f77c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f99e:	4628      	mov	r0, r5
 801f9a0:	462a      	mov	r2, r5
 801f9a2:	e7f7      	b.n	801f994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f9a4:	1c47      	adds	r7, r0, #1
 801f9a6:	f53f af69 	bmi.w	801f87c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9aa:	42ba      	cmp	r2, r7
 801f9ac:	f6ff af66 	blt.w	801f87c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9b0:	1c6f      	adds	r7, r5, #1
 801f9b2:	f53f af63 	bmi.w	801f87c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9b6:	42be      	cmp	r6, r7
 801f9b8:	f6ff af60 	blt.w	801f87c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9bc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f9be:	9002      	str	r0, [sp, #8]
 801f9c0:	b236      	sxth	r6, r6
 801f9c2:	b212      	sxth	r2, r2
 801f9c4:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f9c8:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f9cc:	9200      	str	r2, [sp, #0]
 801f9ce:	9601      	str	r6, [sp, #4]
 801f9d0:	4623      	mov	r3, r4
 801f9d2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f9d6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f9d8:	f7ff fd59 	bl	801f48e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f9dc:	e74e      	b.n	801f87c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9de:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f9e0:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f9e2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f9e4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f9e6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f9ea:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f9ec:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f9f0:	142d      	asrs	r5, r5, #16
 801f9f2:	1400      	asrs	r0, r0, #16
 801f9f4:	fb02 5000 	mla	r0, r2, r0, r5
 801f9f8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f9fa:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f9fe:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801fa02:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801fa06:	182e      	adds	r6, r5, r0
 801fa08:	eb04 0509 	add.w	r5, r4, r9
 801fa0c:	2b00      	cmp	r3, #0
 801fa0e:	f000 8096 	beq.w	801fb3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801fa12:	7877      	ldrb	r7, [r6, #1]
 801fa14:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fa18:	4427      	add	r7, r4
 801fa1a:	2900      	cmp	r1, #0
 801fa1c:	f000 8097 	beq.w	801fb4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801fa20:	18b0      	adds	r0, r6, r2
 801fa22:	5cb2      	ldrb	r2, [r6, r2]
 801fa24:	7840      	ldrb	r0, [r0, #1]
 801fa26:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fa2a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fa2e:	4422      	add	r2, r4
 801fa30:	4420      	add	r0, r4
 801fa32:	b29b      	uxth	r3, r3
 801fa34:	b289      	uxth	r1, r1
 801fa36:	fb03 f801 	mul.w	r8, r3, r1
 801fa3a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801fa3c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fa40:	f8b6 c000 	ldrh.w	ip, [r6]
 801fa44:	78be      	ldrb	r6, [r7, #2]
 801fa46:	f814 9009 	ldrb.w	r9, [r4, r9]
 801fa4a:	011b      	lsls	r3, r3, #4
 801fa4c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801fa50:	b289      	uxth	r1, r1
 801fa52:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fa56:	eba3 0308 	sub.w	r3, r3, r8
 801fa5a:	b29b      	uxth	r3, r3
 801fa5c:	ebae 0e01 	sub.w	lr, lr, r1
 801fa60:	fa1f fe8e 	uxth.w	lr, lr
 801fa64:	435e      	muls	r6, r3
 801fa66:	fb0e 660b 	mla	r6, lr, fp, r6
 801fa6a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fa6e:	9310      	str	r3, [sp, #64]	; 0x40
 801fa70:	fb01 660b 	mla	r6, r1, fp, r6
 801fa74:	f890 b002 	ldrb.w	fp, [r0, #2]
 801fa78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fa7a:	fb08 660b 	mla	r6, r8, fp, r6
 801fa7e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801fa82:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801fa86:	fb1b fb03 	smulbb	fp, fp, r3
 801fa8a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fa8e:	fb06 b60a 	mla	r6, r6, sl, fp
 801fa92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fa94:	f895 b001 	ldrb.w	fp, [r5, #1]
 801fa98:	787d      	ldrb	r5, [r7, #1]
 801fa9a:	783f      	ldrb	r7, [r7, #0]
 801fa9c:	435d      	muls	r5, r3
 801fa9e:	fb0e 550b 	mla	r5, lr, fp, r5
 801faa2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801faa6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801faa8:	fb01 550b 	mla	r5, r1, fp, r5
 801faac:	f890 b001 	ldrb.w	fp, [r0, #1]
 801fab0:	fb08 550b 	mla	r5, r8, fp, r5
 801fab4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801fab8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801fabc:	fb1b fb03 	smulbb	fp, fp, r3
 801fac0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fac2:	437b      	muls	r3, r7
 801fac4:	7817      	ldrb	r7, [r2, #0]
 801fac6:	fb0e 3309 	mla	r3, lr, r9, r3
 801faca:	fb01 3307 	mla	r3, r1, r7, r3
 801face:	7807      	ldrb	r7, [r0, #0]
 801fad0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fad4:	fb08 3707 	mla	r7, r8, r7, r3
 801fad8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fada:	fa5f fc8c 	uxtb.w	ip, ip
 801fade:	fb1c fc03 	smulbb	ip, ip, r3
 801fae2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801fae6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801faea:	fb05 b50a 	mla	r5, r5, sl, fp
 801faee:	fb07 c70a 	mla	r7, r7, sl, ip
 801faf2:	b2b6      	uxth	r6, r6
 801faf4:	b2ad      	uxth	r5, r5
 801faf6:	b2bf      	uxth	r7, r7
 801faf8:	1c73      	adds	r3, r6, #1
 801fafa:	1c7a      	adds	r2, r7, #1
 801fafc:	f105 0b01 	add.w	fp, r5, #1
 801fb00:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801fb04:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801fb08:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801fb0c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fb10:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801fb14:	096d      	lsrs	r5, r5, #5
 801fb16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fb18:	4316      	orrs	r6, r2
 801fb1a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fb1e:	432e      	orrs	r6, r5
 801fb20:	f823 6b02 	strh.w	r6, [r3], #2
 801fb24:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fb26:	930c      	str	r3, [sp, #48]	; 0x30
 801fb28:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fb2a:	4413      	add	r3, r2
 801fb2c:	931f      	str	r3, [sp, #124]	; 0x7c
 801fb2e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801fb30:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb32:	4413      	add	r3, r2
 801fb34:	9320      	str	r3, [sp, #128]	; 0x80
 801fb36:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fb38:	3b01      	subs	r3, #1
 801fb3a:	9311      	str	r3, [sp, #68]	; 0x44
 801fb3c:	e6db      	b.n	801f8f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801fb3e:	b149      	cbz	r1, 801fb54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801fb40:	5cb2      	ldrb	r2, [r6, r2]
 801fb42:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fb46:	4422      	add	r2, r4
 801fb48:	4628      	mov	r0, r5
 801fb4a:	462f      	mov	r7, r5
 801fb4c:	e771      	b.n	801fa32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801fb4e:	4628      	mov	r0, r5
 801fb50:	462a      	mov	r2, r5
 801fb52:	e76e      	b.n	801fa32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801fb54:	4628      	mov	r0, r5
 801fb56:	462a      	mov	r2, r5
 801fb58:	e7f7      	b.n	801fb4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fb5a:	b015      	add	sp, #84	; 0x54
 801fb5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fb60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801fb60:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb64:	880f      	ldrh	r7, [r1, #0]
 801fb66:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801fb6a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801fb6e:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801fb72:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801fb76:	023c      	lsls	r4, r7, #8
 801fb78:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801fb7c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801fb80:	017c      	lsls	r4, r7, #5
 801fb82:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801fb86:	00ff      	lsls	r7, r7, #3
 801fb88:	ea4b 0404 	orr.w	r4, fp, r4
 801fb8c:	b2ff      	uxtb	r7, r7
 801fb8e:	fb05 ca0e 	mla	sl, r5, lr, ip
 801fb92:	4327      	orrs	r7, r4
 801fb94:	2d00      	cmp	r5, #0
 801fb96:	eb02 080a 	add.w	r8, r2, sl
 801fb9a:	9701      	str	r7, [sp, #4]
 801fb9c:	db7e      	blt.n	801fc9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801fb9e:	45a9      	cmp	r9, r5
 801fba0:	dd7c      	ble.n	801fc9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801fba2:	f1bc 0f00 	cmp.w	ip, #0
 801fba6:	db77      	blt.n	801fc98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801fba8:	45e6      	cmp	lr, ip
 801fbaa:	dd75      	ble.n	801fc98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801fbac:	f812 700a 	ldrb.w	r7, [r2, sl]
 801fbb0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fbb4:	441f      	add	r7, r3
 801fbb6:	f11c 0201 	adds.w	r2, ip, #1
 801fbba:	d472      	bmi.n	801fca2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fbbc:	4596      	cmp	lr, r2
 801fbbe:	dd70      	ble.n	801fca2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fbc0:	2800      	cmp	r0, #0
 801fbc2:	d06e      	beq.n	801fca2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fbc4:	f898 4001 	ldrb.w	r4, [r8, #1]
 801fbc8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801fbcc:	441c      	add	r4, r3
 801fbce:	3501      	adds	r5, #1
 801fbd0:	d46b      	bmi.n	801fcaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fbd2:	45a9      	cmp	r9, r5
 801fbd4:	dd69      	ble.n	801fcaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fbd6:	2e00      	cmp	r6, #0
 801fbd8:	d067      	beq.n	801fcaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fbda:	f1bc 0f00 	cmp.w	ip, #0
 801fbde:	db62      	blt.n	801fca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801fbe0:	45e6      	cmp	lr, ip
 801fbe2:	dd60      	ble.n	801fca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801fbe4:	f818 500e 	ldrb.w	r5, [r8, lr]
 801fbe8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801fbec:	441d      	add	r5, r3
 801fbee:	f11c 0201 	adds.w	r2, ip, #1
 801fbf2:	d45d      	bmi.n	801fcb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fbf4:	4596      	cmp	lr, r2
 801fbf6:	dd5b      	ble.n	801fcb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fbf8:	2800      	cmp	r0, #0
 801fbfa:	d059      	beq.n	801fcb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fbfc:	44c6      	add	lr, r8
 801fbfe:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fc02:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fc06:	4413      	add	r3, r2
 801fc08:	b280      	uxth	r0, r0
 801fc0a:	b2b2      	uxth	r2, r6
 801fc0c:	fb00 f602 	mul.w	r6, r0, r2
 801fc10:	0100      	lsls	r0, r0, #4
 801fc12:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801fc16:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801fc1a:	1b80      	subs	r0, r0, r6
 801fc1c:	fa1f fc82 	uxth.w	ip, r2
 801fc20:	b282      	uxth	r2, r0
 801fc22:	78a0      	ldrb	r0, [r4, #2]
 801fc24:	f897 e002 	ldrb.w	lr, [r7, #2]
 801fc28:	f897 9000 	ldrb.w	r9, [r7]
 801fc2c:	787f      	ldrb	r7, [r7, #1]
 801fc2e:	eba8 080c 	sub.w	r8, r8, ip
 801fc32:	fa1f f888 	uxth.w	r8, r8
 801fc36:	4350      	muls	r0, r2
 801fc38:	fb08 0e0e 	mla	lr, r8, lr, r0
 801fc3c:	78a8      	ldrb	r0, [r5, #2]
 801fc3e:	fb0c e000 	mla	r0, ip, r0, lr
 801fc42:	f893 e002 	ldrb.w	lr, [r3, #2]
 801fc46:	fb06 0e0e 	mla	lr, r6, lr, r0
 801fc4a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801fc4e:	f894 e000 	ldrb.w	lr, [r4]
 801fc52:	fb02 fe0e 	mul.w	lr, r2, lr
 801fc56:	fb08 e909 	mla	r9, r8, r9, lr
 801fc5a:	f895 e000 	ldrb.w	lr, [r5]
 801fc5e:	fb0c 990e 	mla	r9, ip, lr, r9
 801fc62:	f893 e000 	ldrb.w	lr, [r3]
 801fc66:	785b      	ldrb	r3, [r3, #1]
 801fc68:	fb06 9e0e 	mla	lr, r6, lr, r9
 801fc6c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801fc70:	ea4e 0e00 	orr.w	lr, lr, r0
 801fc74:	7860      	ldrb	r0, [r4, #1]
 801fc76:	4350      	muls	r0, r2
 801fc78:	786a      	ldrb	r2, [r5, #1]
 801fc7a:	fb08 0007 	mla	r0, r8, r7, r0
 801fc7e:	fb0c 0202 	mla	r2, ip, r2, r0
 801fc82:	fb06 2303 	mla	r3, r6, r3, r2
 801fc86:	095b      	lsrs	r3, r3, #5
 801fc88:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fc8c:	ea4e 0303 	orr.w	r3, lr, r3
 801fc90:	800b      	strh	r3, [r1, #0]
 801fc92:	b003      	add	sp, #12
 801fc94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc98:	af01      	add	r7, sp, #4
 801fc9a:	e78c      	b.n	801fbb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801fc9c:	ac01      	add	r4, sp, #4
 801fc9e:	4627      	mov	r7, r4
 801fca0:	e795      	b.n	801fbce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fca2:	ac01      	add	r4, sp, #4
 801fca4:	e793      	b.n	801fbce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fca6:	ad01      	add	r5, sp, #4
 801fca8:	e7a1      	b.n	801fbee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801fcaa:	ab01      	add	r3, sp, #4
 801fcac:	461d      	mov	r5, r3
 801fcae:	e7ab      	b.n	801fc08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801fcb0:	ab01      	add	r3, sp, #4
 801fcb2:	e7a9      	b.n	801fc08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801fcb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fcb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fcb8:	b08f      	sub	sp, #60	; 0x3c
 801fcba:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801fcbe:	920c      	str	r2, [sp, #48]	; 0x30
 801fcc0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801fcc2:	910a      	str	r1, [sp, #40]	; 0x28
 801fcc4:	9306      	str	r3, [sp, #24]
 801fcc6:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801fcca:	900d      	str	r0, [sp, #52]	; 0x34
 801fccc:	6850      	ldr	r0, [r2, #4]
 801fcce:	6812      	ldr	r2, [r2, #0]
 801fcd0:	fb00 1303 	mla	r3, r0, r3, r1
 801fcd4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fcd8:	9307      	str	r3, [sp, #28]
 801fcda:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fcdc:	681b      	ldr	r3, [r3, #0]
 801fcde:	9308      	str	r3, [sp, #32]
 801fce0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fce2:	685c      	ldr	r4, [r3, #4]
 801fce4:	3404      	adds	r4, #4
 801fce6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fce8:	2b00      	cmp	r3, #0
 801fcea:	dc03      	bgt.n	801fcf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801fcec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fcee:	2b00      	cmp	r3, #0
 801fcf0:	f340 81d6 	ble.w	80200a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fcf4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fcf6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fcfa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fcfe:	1e48      	subs	r0, r1, #1
 801fd00:	1e56      	subs	r6, r2, #1
 801fd02:	9b06      	ldr	r3, [sp, #24]
 801fd04:	2b00      	cmp	r3, #0
 801fd06:	f340 80b7 	ble.w	801fe78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801fd0a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801fd0e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fd12:	d406      	bmi.n	801fd22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fd14:	4287      	cmp	r7, r0
 801fd16:	da04      	bge.n	801fd22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fd18:	2b00      	cmp	r3, #0
 801fd1a:	db02      	blt.n	801fd22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fd1c:	42b3      	cmp	r3, r6
 801fd1e:	f2c0 80ac 	blt.w	801fe7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801fd22:	3701      	adds	r7, #1
 801fd24:	f100 809d 	bmi.w	801fe62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fd28:	42b9      	cmp	r1, r7
 801fd2a:	f2c0 809a 	blt.w	801fe62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fd2e:	3301      	adds	r3, #1
 801fd30:	f100 8097 	bmi.w	801fe62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fd34:	429a      	cmp	r2, r3
 801fd36:	f2c0 8094 	blt.w	801fe62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fd3a:	9b06      	ldr	r3, [sp, #24]
 801fd3c:	930b      	str	r3, [sp, #44]	; 0x2c
 801fd3e:	9b07      	ldr	r3, [sp, #28]
 801fd40:	9309      	str	r3, [sp, #36]	; 0x24
 801fd42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fd44:	2b00      	cmp	r3, #0
 801fd46:	f340 80b5 	ble.w	801feb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801fd4a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801fd4c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fd4e:	68c7      	ldr	r7, [r0, #12]
 801fd50:	6892      	ldr	r2, [r2, #8]
 801fd52:	ea5f 402b 	movs.w	r0, fp, asr #16
 801fd56:	ea4f 4625 	mov.w	r6, r5, asr #16
 801fd5a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fd5e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fd62:	f100 80fb 	bmi.w	801ff5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fd66:	f102 3cff 	add.w	ip, r2, #4294967295
 801fd6a:	4560      	cmp	r0, ip
 801fd6c:	f280 80f6 	bge.w	801ff5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fd70:	2e00      	cmp	r6, #0
 801fd72:	f2c0 80f3 	blt.w	801ff5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fd76:	f107 3cff 	add.w	ip, r7, #4294967295
 801fd7a:	4566      	cmp	r6, ip
 801fd7c:	f280 80ee 	bge.w	801ff5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fd80:	b212      	sxth	r2, r2
 801fd82:	fb06 0002 	mla	r0, r6, r2, r0
 801fd86:	9e08      	ldr	r6, [sp, #32]
 801fd88:	1837      	adds	r7, r6, r0
 801fd8a:	5c30      	ldrb	r0, [r6, r0]
 801fd8c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801fd90:	eb04 0c08 	add.w	ip, r4, r8
 801fd94:	2b00      	cmp	r3, #0
 801fd96:	f000 80d3 	beq.w	801ff40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fd9a:	787e      	ldrb	r6, [r7, #1]
 801fd9c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fda0:	4426      	add	r6, r4
 801fda2:	2900      	cmp	r1, #0
 801fda4:	f000 80d4 	beq.w	801ff50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801fda8:	18b8      	adds	r0, r7, r2
 801fdaa:	5cba      	ldrb	r2, [r7, r2]
 801fdac:	7840      	ldrb	r0, [r0, #1]
 801fdae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fdb2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fdb6:	4422      	add	r2, r4
 801fdb8:	4420      	add	r0, r4
 801fdba:	b29b      	uxth	r3, r3
 801fdbc:	b289      	uxth	r1, r1
 801fdbe:	fb03 f901 	mul.w	r9, r3, r1
 801fdc2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fdc6:	011b      	lsls	r3, r3, #4
 801fdc8:	b289      	uxth	r1, r1
 801fdca:	78b7      	ldrb	r7, [r6, #2]
 801fdcc:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fdd0:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fdd4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fdd8:	eba3 0309 	sub.w	r3, r3, r9
 801fddc:	b29b      	uxth	r3, r3
 801fdde:	ebae 0e01 	sub.w	lr, lr, r1
 801fde2:	fa1f fe8e 	uxth.w	lr, lr
 801fde6:	435f      	muls	r7, r3
 801fde8:	fb0e 770a 	mla	r7, lr, sl, r7
 801fdec:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fdf0:	fb01 770a 	mla	r7, r1, sl, r7
 801fdf4:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fdf8:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fdfc:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fe00:	f896 8000 	ldrb.w	r8, [r6]
 801fe04:	7876      	ldrb	r6, [r6, #1]
 801fe06:	fb03 f808 	mul.w	r8, r3, r8
 801fe0a:	fb0e 8807 	mla	r8, lr, r7, r8
 801fe0e:	7817      	ldrb	r7, [r2, #0]
 801fe10:	fb01 8807 	mla	r8, r1, r7, r8
 801fe14:	7807      	ldrb	r7, [r0, #0]
 801fe16:	fb09 8707 	mla	r7, r9, r7, r8
 801fe1a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fe1e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fe22:	ea47 070a 	orr.w	r7, r7, sl
 801fe26:	4373      	muls	r3, r6
 801fe28:	f892 a001 	ldrb.w	sl, [r2, #1]
 801fe2c:	fb0e 330c 	mla	r3, lr, ip, r3
 801fe30:	fb01 310a 	mla	r1, r1, sl, r3
 801fe34:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fe38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe3a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801fe3e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fe42:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fe46:	ea47 070a 	orr.w	r7, r7, sl
 801fe4a:	801f      	strh	r7, [r3, #0]
 801fe4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe4e:	3302      	adds	r3, #2
 801fe50:	9309      	str	r3, [sp, #36]	; 0x24
 801fe52:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fe54:	449b      	add	fp, r3
 801fe56:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fe58:	441d      	add	r5, r3
 801fe5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fe5c:	3b01      	subs	r3, #1
 801fe5e:	930b      	str	r3, [sp, #44]	; 0x2c
 801fe60:	e76f      	b.n	801fd42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fe62:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fe64:	449b      	add	fp, r3
 801fe66:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fe68:	441d      	add	r5, r3
 801fe6a:	9b06      	ldr	r3, [sp, #24]
 801fe6c:	3b01      	subs	r3, #1
 801fe6e:	9306      	str	r3, [sp, #24]
 801fe70:	9b07      	ldr	r3, [sp, #28]
 801fe72:	3302      	adds	r3, #2
 801fe74:	9307      	str	r3, [sp, #28]
 801fe76:	e744      	b.n	801fd02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801fe78:	d023      	beq.n	801fec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fe7a:	9b06      	ldr	r3, [sp, #24]
 801fe7c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801fe7e:	3b01      	subs	r3, #1
 801fe80:	fb00 b003 	mla	r0, r0, r3, fp
 801fe84:	1400      	asrs	r0, r0, #16
 801fe86:	f53f af58 	bmi.w	801fd3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fe8a:	3901      	subs	r1, #1
 801fe8c:	4288      	cmp	r0, r1
 801fe8e:	f6bf af54 	bge.w	801fd3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fe92:	991c      	ldr	r1, [sp, #112]	; 0x70
 801fe94:	fb01 5303 	mla	r3, r1, r3, r5
 801fe98:	141b      	asrs	r3, r3, #16
 801fe9a:	f53f af4e 	bmi.w	801fd3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fe9e:	3a01      	subs	r2, #1
 801fea0:	4293      	cmp	r3, r2
 801fea2:	f6bf af4a 	bge.w	801fd3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fea6:	9b06      	ldr	r3, [sp, #24]
 801fea8:	9309      	str	r3, [sp, #36]	; 0x24
 801feaa:	9b07      	ldr	r3, [sp, #28]
 801feac:	930b      	str	r3, [sp, #44]	; 0x2c
 801feae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801feb0:	2b00      	cmp	r3, #0
 801feb2:	dc70      	bgt.n	801ff96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801feb4:	9b06      	ldr	r3, [sp, #24]
 801feb6:	9a07      	ldr	r2, [sp, #28]
 801feb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801febc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fec0:	9307      	str	r3, [sp, #28]
 801fec2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fec4:	2b00      	cmp	r3, #0
 801fec6:	f340 80eb 	ble.w	80200a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801feca:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fece:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fed2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fed6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fed8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fedc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fee0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fee4:	eef0 6a62 	vmov.f32	s13, s5
 801fee8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801feec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fef0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fef4:	ee16 ba90 	vmov	fp, s13
 801fef8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fefc:	eef0 6a43 	vmov.f32	s13, s6
 801ff00:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ff04:	ee12 2a90 	vmov	r2, s5
 801ff08:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ff0c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff10:	ee13 2a10 	vmov	r2, s6
 801ff14:	931b      	str	r3, [sp, #108]	; 0x6c
 801ff16:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ff18:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff1c:	931c      	str	r3, [sp, #112]	; 0x70
 801ff1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ff20:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ff22:	3b01      	subs	r3, #1
 801ff24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff28:	930a      	str	r3, [sp, #40]	; 0x28
 801ff2a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ff2c:	bf08      	it	eq
 801ff2e:	4613      	moveq	r3, r2
 801ff30:	ee16 5a90 	vmov	r5, s13
 801ff34:	9306      	str	r3, [sp, #24]
 801ff36:	eeb0 3a67 	vmov.f32	s6, s15
 801ff3a:	eef0 2a47 	vmov.f32	s5, s14
 801ff3e:	e6d2      	b.n	801fce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ff40:	b149      	cbz	r1, 801ff56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ff42:	5cba      	ldrb	r2, [r7, r2]
 801ff44:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ff48:	4422      	add	r2, r4
 801ff4a:	4660      	mov	r0, ip
 801ff4c:	4666      	mov	r6, ip
 801ff4e:	e734      	b.n	801fdba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ff50:	4660      	mov	r0, ip
 801ff52:	4662      	mov	r2, ip
 801ff54:	e731      	b.n	801fdba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ff56:	4660      	mov	r0, ip
 801ff58:	4662      	mov	r2, ip
 801ff5a:	e7f7      	b.n	801ff4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801ff5c:	f110 0c01 	adds.w	ip, r0, #1
 801ff60:	f53f af74 	bmi.w	801fe4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff64:	4562      	cmp	r2, ip
 801ff66:	f6ff af71 	blt.w	801fe4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff6a:	f116 0c01 	adds.w	ip, r6, #1
 801ff6e:	f53f af6d 	bmi.w	801fe4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff72:	4567      	cmp	r7, ip
 801ff74:	f6ff af6a 	blt.w	801fe4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff78:	b23f      	sxth	r7, r7
 801ff7a:	b212      	sxth	r2, r2
 801ff7c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801ff80:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801ff84:	9200      	str	r2, [sp, #0]
 801ff86:	9701      	str	r7, [sp, #4]
 801ff88:	4623      	mov	r3, r4
 801ff8a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801ff8e:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ff90:	f7ff fde6 	bl	801fb60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801ff94:	e75a      	b.n	801fe4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff96:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ff98:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ff9c:	ea4f 462b 	mov.w	r6, fp, asr #16
 801ffa0:	1428      	asrs	r0, r5, #16
 801ffa2:	fb02 6000 	mla	r0, r2, r0, r6
 801ffa6:	9e08      	ldr	r6, [sp, #32]
 801ffa8:	f816 8000 	ldrb.w	r8, [r6, r0]
 801ffac:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ffb0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ffb4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ffb8:	1837      	adds	r7, r6, r0
 801ffba:	eb04 0c08 	add.w	ip, r4, r8
 801ffbe:	2b00      	cmp	r3, #0
 801ffc0:	d060      	beq.n	8020084 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801ffc2:	787e      	ldrb	r6, [r7, #1]
 801ffc4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ffc8:	4426      	add	r6, r4
 801ffca:	2900      	cmp	r1, #0
 801ffcc:	d062      	beq.n	8020094 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801ffce:	18b8      	adds	r0, r7, r2
 801ffd0:	5cba      	ldrb	r2, [r7, r2]
 801ffd2:	7840      	ldrb	r0, [r0, #1]
 801ffd4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ffd8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ffdc:	4422      	add	r2, r4
 801ffde:	4420      	add	r0, r4
 801ffe0:	b29b      	uxth	r3, r3
 801ffe2:	b289      	uxth	r1, r1
 801ffe4:	fb03 f901 	mul.w	r9, r3, r1
 801ffe8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ffec:	011b      	lsls	r3, r3, #4
 801ffee:	b289      	uxth	r1, r1
 801fff0:	78b7      	ldrb	r7, [r6, #2]
 801fff2:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fff6:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fffa:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fffe:	eba3 0309 	sub.w	r3, r3, r9
 8020002:	b29b      	uxth	r3, r3
 8020004:	ebae 0e01 	sub.w	lr, lr, r1
 8020008:	fa1f fe8e 	uxth.w	lr, lr
 802000c:	435f      	muls	r7, r3
 802000e:	fb0e 770a 	mla	r7, lr, sl, r7
 8020012:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020016:	fb01 770a 	mla	r7, r1, sl, r7
 802001a:	f890 a002 	ldrb.w	sl, [r0, #2]
 802001e:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020022:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020026:	f896 8000 	ldrb.w	r8, [r6]
 802002a:	7876      	ldrb	r6, [r6, #1]
 802002c:	fb03 f808 	mul.w	r8, r3, r8
 8020030:	fb0e 8807 	mla	r8, lr, r7, r8
 8020034:	7817      	ldrb	r7, [r2, #0]
 8020036:	fb01 8807 	mla	r8, r1, r7, r8
 802003a:	7807      	ldrb	r7, [r0, #0]
 802003c:	fb09 8707 	mla	r7, r9, r7, r8
 8020040:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020044:	4373      	muls	r3, r6
 8020046:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802004a:	7856      	ldrb	r6, [r2, #1]
 802004c:	ea47 070a 	orr.w	r7, r7, sl
 8020050:	fb0e 330c 	mla	r3, lr, ip, r3
 8020054:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020058:	fb01 3306 	mla	r3, r1, r6, r3
 802005c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020060:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020064:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020066:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802006a:	ea47 070a 	orr.w	r7, r7, sl
 802006e:	f823 7b02 	strh.w	r7, [r3], #2
 8020072:	930b      	str	r3, [sp, #44]	; 0x2c
 8020074:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020076:	449b      	add	fp, r3
 8020078:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802007a:	441d      	add	r5, r3
 802007c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802007e:	3b01      	subs	r3, #1
 8020080:	9309      	str	r3, [sp, #36]	; 0x24
 8020082:	e714      	b.n	801feae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8020084:	b149      	cbz	r1, 802009a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020086:	5cba      	ldrb	r2, [r7, r2]
 8020088:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802008c:	4422      	add	r2, r4
 802008e:	4660      	mov	r0, ip
 8020090:	4666      	mov	r6, ip
 8020092:	e7a5      	b.n	801ffe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020094:	4660      	mov	r0, ip
 8020096:	4662      	mov	r2, ip
 8020098:	e7a2      	b.n	801ffe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802009a:	4660      	mov	r0, ip
 802009c:	4662      	mov	r2, ip
 802009e:	e7f7      	b.n	8020090 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 80200a0:	b00f      	add	sp, #60	; 0x3c
 80200a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080200a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80200a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200aa:	b085      	sub	sp, #20
 80200ac:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 80200b0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80200b4:	9102      	str	r1, [sp, #8]
 80200b6:	2c00      	cmp	r4, #0
 80200b8:	fb04 710c 	mla	r1, r4, ip, r7
 80200bc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80200c0:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80200c4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80200c8:	eb02 0e01 	add.w	lr, r2, r1
 80200cc:	f2c0 8122 	blt.w	8020314 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80200d0:	45a0      	cmp	r8, r4
 80200d2:	f340 811f 	ble.w	8020314 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80200d6:	2f00      	cmp	r7, #0
 80200d8:	f2c0 811a 	blt.w	8020310 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80200dc:	45bc      	cmp	ip, r7
 80200de:	f340 8117 	ble.w	8020310 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80200e2:	5c52      	ldrb	r2, [r2, r1]
 80200e4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80200e8:	1c7a      	adds	r2, r7, #1
 80200ea:	f100 8116 	bmi.w	802031a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80200ee:	4594      	cmp	ip, r2
 80200f0:	f340 8113 	ble.w	802031a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80200f4:	2e00      	cmp	r6, #0
 80200f6:	f000 8112 	beq.w	802031e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80200fa:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80200fe:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020102:	3401      	adds	r4, #1
 8020104:	f100 810f 	bmi.w	8020326 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020108:	45a0      	cmp	r8, r4
 802010a:	f340 810c 	ble.w	8020326 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 802010e:	2800      	cmp	r0, #0
 8020110:	f000 810c 	beq.w	802032c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8020114:	2f00      	cmp	r7, #0
 8020116:	f2c0 8104 	blt.w	8020322 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802011a:	45bc      	cmp	ip, r7
 802011c:	f340 8101 	ble.w	8020322 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020120:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8020124:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8020128:	3701      	adds	r7, #1
 802012a:	f100 8102 	bmi.w	8020332 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802012e:	45bc      	cmp	ip, r7
 8020130:	f340 80ff 	ble.w	8020332 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020134:	2e00      	cmp	r6, #0
 8020136:	f000 80fe 	beq.w	8020336 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 802013a:	44f4      	add	ip, lr
 802013c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020140:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8020144:	b2b6      	uxth	r6, r6
 8020146:	b280      	uxth	r0, r0
 8020148:	fb00 fe06 	mul.w	lr, r0, r6
 802014c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020150:	0136      	lsls	r6, r6, #4
 8020152:	eba6 070e 	sub.w	r7, r6, lr
 8020156:	b280      	uxth	r0, r0
 8020158:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802015c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020160:	b2bf      	uxth	r7, r7
 8020162:	1a1b      	subs	r3, r3, r0
 8020164:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020168:	b29b      	uxth	r3, r3
 802016a:	fb0a f607 	mul.w	r6, sl, r7
 802016e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020172:	fb0b 6603 	mla	r6, fp, r3, r6
 8020176:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802017a:	fb00 6609 	mla	r6, r0, r9, r6
 802017e:	fb0e 6608 	mla	r6, lr, r8, r6
 8020182:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020186:	9600      	str	r6, [sp, #0]
 8020188:	2e00      	cmp	r6, #0
 802018a:	f000 80be 	beq.w	802030a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 802018e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020192:	fb0b fc0c 	mul.w	ip, fp, ip
 8020196:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802019a:	fb0b f505 	mul.w	r5, fp, r5
 802019e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80201a2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80201a6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80201aa:	44dc      	add	ip, fp
 80201ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80201b0:	9501      	str	r5, [sp, #4]
 80201b2:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80201b6:	9503      	str	r5, [sp, #12]
 80201b8:	9d01      	ldr	r5, [sp, #4]
 80201ba:	9e02      	ldr	r6, [sp, #8]
 80201bc:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80201c0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80201c4:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80201c8:	fb0a fc0c 	mul.w	ip, sl, ip
 80201cc:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80201d0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80201d4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80201d8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80201dc:	4465      	add	r5, ip
 80201de:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80201e2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80201e6:	fb09 fc0c 	mul.w	ip, r9, ip
 80201ea:	fb09 f904 	mul.w	r9, r9, r4
 80201ee:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80201f2:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80201f6:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80201fa:	fb08 f404 	mul.w	r4, r8, r4
 80201fe:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020202:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020206:	fb08 f802 	mul.w	r8, r8, r2
 802020a:	fb0a fa01 	mul.w	sl, sl, r1
 802020e:	0a22      	lsrs	r2, r4, #8
 8020210:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8020214:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020218:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802021c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020220:	4414      	add	r4, r2
 8020222:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8020226:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802022a:	0a2d      	lsrs	r5, r5, #8
 802022c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020230:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020234:	9a03      	ldr	r2, [sp, #12]
 8020236:	8836      	ldrh	r6, [r6, #0]
 8020238:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802023c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020240:	437d      	muls	r5, r7
 8020242:	4461      	add	r1, ip
 8020244:	0a24      	lsrs	r4, r4, #8
 8020246:	fb02 5503 	mla	r5, r2, r3, r5
 802024a:	0a09      	lsrs	r1, r1, #8
 802024c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020250:	fb04 540e 	mla	r4, r4, lr, r5
 8020254:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020258:	fb01 4100 	mla	r1, r1, r0, r4
 802025c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020260:	0a09      	lsrs	r1, r1, #8
 8020262:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020266:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802026a:	fb07 f70a 	mul.w	r7, r7, sl
 802026e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020272:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8020276:	fb03 7101 	mla	r1, r3, r1, r7
 802027a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802027e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8020282:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020286:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802028a:	fb00 e101 	mla	r1, r0, r1, lr
 802028e:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8020292:	9a00      	ldr	r2, [sp, #0]
 8020294:	b287      	uxth	r7, r0
 8020296:	437a      	muls	r2, r7
 8020298:	0a09      	lsrs	r1, r1, #8
 802029a:	1c53      	adds	r3, r2, #1
 802029c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80202a0:	4321      	orrs	r1, r4
 80202a2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80202a6:	1235      	asrs	r5, r6, #8
 80202a8:	0c0a      	lsrs	r2, r1, #16
 80202aa:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80202ae:	b2db      	uxtb	r3, r3
 80202b0:	fb12 f207 	smulbb	r2, r2, r7
 80202b4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80202b8:	fb05 2503 	mla	r5, r5, r3, r2
 80202bc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80202c0:	10f2      	asrs	r2, r6, #3
 80202c2:	b2c8      	uxtb	r0, r1
 80202c4:	00f6      	lsls	r6, r6, #3
 80202c6:	fb14 f407 	smulbb	r4, r4, r7
 80202ca:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80202ce:	b2f6      	uxtb	r6, r6
 80202d0:	fb10 f007 	smulbb	r0, r0, r7
 80202d4:	fb02 4203 	mla	r2, r2, r3, r4
 80202d8:	b2ad      	uxth	r5, r5
 80202da:	fb06 0303 	mla	r3, r6, r3, r0
 80202de:	b299      	uxth	r1, r3
 80202e0:	b294      	uxth	r4, r2
 80202e2:	1c6b      	adds	r3, r5, #1
 80202e4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80202e8:	1c62      	adds	r2, r4, #1
 80202ea:	1c4b      	adds	r3, r1, #1
 80202ec:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80202f0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80202f4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80202f8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80202fc:	0952      	lsrs	r2, r2, #5
 80202fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020302:	432b      	orrs	r3, r5
 8020304:	4313      	orrs	r3, r2
 8020306:	9a02      	ldr	r2, [sp, #8]
 8020308:	8013      	strh	r3, [r2, #0]
 802030a:	b005      	add	sp, #20
 802030c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020310:	2500      	movs	r5, #0
 8020312:	e6e9      	b.n	80200e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8020314:	2100      	movs	r1, #0
 8020316:	460d      	mov	r5, r1
 8020318:	e6f3      	b.n	8020102 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802031a:	2100      	movs	r1, #0
 802031c:	e6f1      	b.n	8020102 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802031e:	4631      	mov	r1, r6
 8020320:	e6ef      	b.n	8020102 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8020322:	2400      	movs	r4, #0
 8020324:	e700      	b.n	8020128 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8020326:	2200      	movs	r2, #0
 8020328:	4614      	mov	r4, r2
 802032a:	e70b      	b.n	8020144 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802032c:	4602      	mov	r2, r0
 802032e:	4604      	mov	r4, r0
 8020330:	e708      	b.n	8020144 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020332:	2200      	movs	r2, #0
 8020334:	e706      	b.n	8020144 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020336:	4632      	mov	r2, r6
 8020338:	e704      	b.n	8020144 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802033a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802033a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802033e:	b09f      	sub	sp, #124	; 0x7c
 8020340:	921b      	str	r2, [sp, #108]	; 0x6c
 8020342:	9309      	str	r3, [sp, #36]	; 0x24
 8020344:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8020346:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802034a:	931c      	str	r3, [sp, #112]	; 0x70
 802034c:	9119      	str	r1, [sp, #100]	; 0x64
 802034e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8020352:	901d      	str	r0, [sp, #116]	; 0x74
 8020354:	6850      	ldr	r0, [r2, #4]
 8020356:	6812      	ldr	r2, [r2, #0]
 8020358:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 802035a:	fb00 1303 	mla	r3, r0, r3, r1
 802035e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020362:	930c      	str	r3, [sp, #48]	; 0x30
 8020364:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020366:	681b      	ldr	r3, [r3, #0]
 8020368:	9312      	str	r3, [sp, #72]	; 0x48
 802036a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802036c:	685e      	ldr	r6, [r3, #4]
 802036e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8020372:	930d      	str	r3, [sp, #52]	; 0x34
 8020374:	3604      	adds	r6, #4
 8020376:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020378:	2b00      	cmp	r3, #0
 802037a:	dc03      	bgt.n	8020384 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802037c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802037e:	2b00      	cmp	r3, #0
 8020380:	f340 8388 	ble.w	8020a94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020384:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020386:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802038a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802038e:	1e48      	subs	r0, r1, #1
 8020390:	1e57      	subs	r7, r2, #1
 8020392:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020394:	2b00      	cmp	r3, #0
 8020396:	f340 8195 	ble.w	80206c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802039a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802039c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80203a0:	ea4f 4325 	mov.w	r3, r5, asr #16
 80203a4:	d406      	bmi.n	80203b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80203a6:	4584      	cmp	ip, r0
 80203a8:	da04      	bge.n	80203b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80203aa:	2b00      	cmp	r3, #0
 80203ac:	db02      	blt.n	80203b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80203ae:	42bb      	cmp	r3, r7
 80203b0:	f2c0 8189 	blt.w	80206c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80203b4:	f11c 0c01 	adds.w	ip, ip, #1
 80203b8:	f100 8177 	bmi.w	80206aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80203bc:	4561      	cmp	r1, ip
 80203be:	f2c0 8174 	blt.w	80206aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80203c2:	3301      	adds	r3, #1
 80203c4:	f100 8171 	bmi.w	80206aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80203c8:	429a      	cmp	r2, r3
 80203ca:	f2c0 816e 	blt.w	80206aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80203ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203d0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80203d2:	931a      	str	r3, [sp, #104]	; 0x68
 80203d4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80203d6:	2b00      	cmp	r3, #0
 80203d8:	f340 8193 	ble.w	8020702 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80203dc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80203de:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80203e2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80203e4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80203e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80203ea:	141b      	asrs	r3, r3, #16
 80203ec:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80203f0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80203f4:	f100 81d6 	bmi.w	80207a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80203f8:	f100 38ff 	add.w	r8, r0, #4294967295
 80203fc:	4543      	cmp	r3, r8
 80203fe:	f280 81d1 	bge.w	80207a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020402:	f1bc 0f00 	cmp.w	ip, #0
 8020406:	f2c0 81cd 	blt.w	80207a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802040a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802040e:	45c4      	cmp	ip, r8
 8020410:	f280 81c8 	bge.w	80207a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020414:	b200      	sxth	r0, r0
 8020416:	fb0c 3300 	mla	r3, ip, r0, r3
 802041a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802041c:	eb04 0803 	add.w	r8, r4, r3
 8020420:	5ce3      	ldrb	r3, [r4, r3]
 8020422:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020426:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802042a:	2a00      	cmp	r2, #0
 802042c:	f000 81af 	beq.w	802078e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020430:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020434:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020438:	940e      	str	r4, [sp, #56]	; 0x38
 802043a:	0e24      	lsrs	r4, r4, #24
 802043c:	9415      	str	r4, [sp, #84]	; 0x54
 802043e:	b179      	cbz	r1, 8020460 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020440:	eb08 0c00 	add.w	ip, r8, r0
 8020444:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020448:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802044c:	900a      	str	r0, [sp, #40]	; 0x28
 802044e:	0e00      	lsrs	r0, r0, #24
 8020450:	9013      	str	r0, [sp, #76]	; 0x4c
 8020452:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8020456:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802045a:	900f      	str	r0, [sp, #60]	; 0x3c
 802045c:	0e00      	lsrs	r0, r0, #24
 802045e:	9016      	str	r0, [sp, #88]	; 0x58
 8020460:	b292      	uxth	r2, r2
 8020462:	b289      	uxth	r1, r1
 8020464:	fb02 f901 	mul.w	r9, r2, r1
 8020468:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802046c:	0112      	lsls	r2, r2, #4
 802046e:	eba2 0809 	sub.w	r8, r2, r9
 8020472:	b289      	uxth	r1, r1
 8020474:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020478:	9815      	ldr	r0, [sp, #84]	; 0x54
 802047a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802047c:	fa1f f888 	uxth.w	r8, r8
 8020480:	1a52      	subs	r2, r2, r1
 8020482:	b292      	uxth	r2, r2
 8020484:	fb08 f000 	mul.w	r0, r8, r0
 8020488:	fb02 000e 	mla	r0, r2, lr, r0
 802048c:	fb01 0004 	mla	r0, r1, r4, r0
 8020490:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020492:	fb09 0004 	mla	r0, r9, r4, r0
 8020496:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802049a:	2800      	cmp	r0, #0
 802049c:	f000 80fa 	beq.w	8020694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80204a0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80204a4:	d01b      	beq.n	80204de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80204a6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80204aa:	fb0e fa0a 	mul.w	sl, lr, sl
 80204ae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80204b2:	fb0e fe03 	mul.w	lr, lr, r3
 80204b6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80204ba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80204be:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80204c2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80204c6:	4453      	add	r3, sl
 80204c8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80204cc:	0a1b      	lsrs	r3, r3, #8
 80204ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80204d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80204d6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80204da:	ea43 030c 	orr.w	r3, r3, ip
 80204de:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80204e0:	2cff      	cmp	r4, #255	; 0xff
 80204e2:	d021      	beq.n	8020528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80204e4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80204e6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80204ea:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80204ec:	fb04 fb0b 	mul.w	fp, r4, fp
 80204f0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80204f2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80204f6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80204f8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80204fc:	fb04 fa0a 	mul.w	sl, r4, sl
 8020500:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020504:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020508:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802050c:	44de      	add	lr, fp
 802050e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020512:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020516:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802051a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802051e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020522:	ea4e 040a 	orr.w	r4, lr, sl
 8020526:	940e      	str	r4, [sp, #56]	; 0x38
 8020528:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802052a:	2cff      	cmp	r4, #255	; 0xff
 802052c:	d021      	beq.n	8020572 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802052e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020530:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020534:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020536:	fb04 fb0b 	mul.w	fp, r4, fp
 802053a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802053c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020540:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020542:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020546:	fb04 fa0a 	mul.w	sl, r4, sl
 802054a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802054e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020552:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020556:	44de      	add	lr, fp
 8020558:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802055c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020560:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020564:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020568:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802056c:	ea4e 040a 	orr.w	r4, lr, sl
 8020570:	940a      	str	r4, [sp, #40]	; 0x28
 8020572:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020574:	2cff      	cmp	r4, #255	; 0xff
 8020576:	d021      	beq.n	80205bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020578:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802057a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802057e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020580:	fb04 fb0b 	mul.w	fp, r4, fp
 8020584:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020586:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802058a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802058c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020590:	fb04 fa0a 	mul.w	sl, r4, sl
 8020594:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020598:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802059c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80205a0:	44de      	add	lr, fp
 80205a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80205a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80205aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80205ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80205b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80205b6:	ea4e 040a 	orr.w	r4, lr, sl
 80205ba:	940f      	str	r4, [sp, #60]	; 0x3c
 80205bc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80205be:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80205c2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80205c4:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80205c8:	fb08 fc0c 	mul.w	ip, r8, ip
 80205cc:	fb02 cc0e 	mla	ip, r2, lr, ip
 80205d0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80205d4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80205d6:	fb01 cc0e 	mla	ip, r1, lr, ip
 80205da:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80205de:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80205e0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80205e4:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80205e8:	fb08 f80e 	mul.w	r8, r8, lr
 80205ec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80205f0:	fb02 8303 	mla	r3, r2, r3, r8
 80205f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80205f6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80205f8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80205fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80205fe:	fb01 330a 	mla	r3, r1, sl, r3
 8020602:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8020606:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8020608:	fb09 3901 	mla	r9, r9, r1, r3
 802060c:	4342      	muls	r2, r0
 802060e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020612:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020616:	883b      	ldrh	r3, [r7, #0]
 8020618:	1c50      	adds	r0, r2, #1
 802061a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802061e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020622:	ea4c 0c09 	orr.w	ip, ip, r9
 8020626:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802062a:	1219      	asrs	r1, r3, #8
 802062c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020630:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020634:	b2c0      	uxtb	r0, r0
 8020636:	fb12 f204 	smulbb	r2, r2, r4
 802063a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802063e:	fb01 2100 	mla	r1, r1, r0, r2
 8020642:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8020646:	10da      	asrs	r2, r3, #3
 8020648:	fa5f fc8c 	uxtb.w	ip, ip
 802064c:	00db      	lsls	r3, r3, #3
 802064e:	fb1c fc04 	smulbb	ip, ip, r4
 8020652:	b2db      	uxtb	r3, r3
 8020654:	b289      	uxth	r1, r1
 8020656:	fb03 c300 	mla	r3, r3, r0, ip
 802065a:	fa1f fc83 	uxth.w	ip, r3
 802065e:	1c4b      	adds	r3, r1, #1
 8020660:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020664:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020668:	fb1e fe04 	smulbb	lr, lr, r4
 802066c:	f10c 0301 	add.w	r3, ip, #1
 8020670:	fb02 e200 	mla	r2, r2, r0, lr
 8020674:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020678:	b292      	uxth	r2, r2
 802067a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802067e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020682:	430b      	orrs	r3, r1
 8020684:	1c51      	adds	r1, r2, #1
 8020686:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802068a:	0952      	lsrs	r2, r2, #5
 802068c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020690:	4313      	orrs	r3, r2
 8020692:	803b      	strh	r3, [r7, #0]
 8020694:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020696:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020698:	441a      	add	r2, r3
 802069a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802069c:	9229      	str	r2, [sp, #164]	; 0xa4
 802069e:	441d      	add	r5, r3
 80206a0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80206a2:	3b01      	subs	r3, #1
 80206a4:	3702      	adds	r7, #2
 80206a6:	931a      	str	r3, [sp, #104]	; 0x68
 80206a8:	e694      	b.n	80203d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80206aa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80206ac:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80206ae:	441c      	add	r4, r3
 80206b0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80206b2:	9429      	str	r4, [sp, #164]	; 0xa4
 80206b4:	441d      	add	r5, r3
 80206b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206b8:	3b01      	subs	r3, #1
 80206ba:	9309      	str	r3, [sp, #36]	; 0x24
 80206bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80206be:	3302      	adds	r3, #2
 80206c0:	930c      	str	r3, [sp, #48]	; 0x30
 80206c2:	e666      	b.n	8020392 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80206c4:	d024      	beq.n	8020710 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80206c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206c8:	982b      	ldr	r0, [sp, #172]	; 0xac
 80206ca:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80206cc:	3b01      	subs	r3, #1
 80206ce:	fb00 4003 	mla	r0, r0, r3, r4
 80206d2:	1400      	asrs	r0, r0, #16
 80206d4:	f53f ae7b 	bmi.w	80203ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80206d8:	3901      	subs	r1, #1
 80206da:	4288      	cmp	r0, r1
 80206dc:	f6bf ae77 	bge.w	80203ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80206e0:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80206e2:	fb01 5303 	mla	r3, r1, r3, r5
 80206e6:	141b      	asrs	r3, r3, #16
 80206e8:	f53f ae71 	bmi.w	80203ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80206ec:	3a01      	subs	r2, #1
 80206ee:	4293      	cmp	r3, r2
 80206f0:	f6bf ae6d 	bge.w	80203ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80206f4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80206f8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80206fc:	f1bb 0f00 	cmp.w	fp, #0
 8020700:	dc70      	bgt.n	80207e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8020702:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020704:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020708:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802070a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802070e:	930c      	str	r3, [sp, #48]	; 0x30
 8020710:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020712:	2b00      	cmp	r3, #0
 8020714:	f340 81be 	ble.w	8020a94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020718:	ee30 0a04 	vadd.f32	s0, s0, s8
 802071c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020720:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020724:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020726:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802072a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802072e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020732:	eef0 6a62 	vmov.f32	s13, s5
 8020736:	ee61 7a27 	vmul.f32	s15, s2, s15
 802073a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802073e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020742:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8020746:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802074a:	eef0 6a43 	vmov.f32	s13, s6
 802074e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020752:	ee12 2a90 	vmov	r2, s5
 8020756:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802075a:	fb92 f3f3 	sdiv	r3, r2, r3
 802075e:	ee13 2a10 	vmov	r2, s6
 8020762:	932b      	str	r3, [sp, #172]	; 0xac
 8020764:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020766:	fb92 f3f3 	sdiv	r3, r2, r3
 802076a:	932c      	str	r3, [sp, #176]	; 0xb0
 802076c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802076e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020770:	3b01      	subs	r3, #1
 8020772:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020776:	9319      	str	r3, [sp, #100]	; 0x64
 8020778:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802077a:	bf08      	it	eq
 802077c:	4613      	moveq	r3, r2
 802077e:	ee16 5a90 	vmov	r5, s13
 8020782:	9309      	str	r3, [sp, #36]	; 0x24
 8020784:	eeb0 3a67 	vmov.f32	s6, s15
 8020788:	eef0 2a47 	vmov.f32	s5, s14
 802078c:	e5f3      	b.n	8020376 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802078e:	2900      	cmp	r1, #0
 8020790:	f43f ae66 	beq.w	8020460 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020794:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020798:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802079c:	900a      	str	r0, [sp, #40]	; 0x28
 802079e:	0e00      	lsrs	r0, r0, #24
 80207a0:	9013      	str	r0, [sp, #76]	; 0x4c
 80207a2:	e65d      	b.n	8020460 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80207a4:	f113 0801 	adds.w	r8, r3, #1
 80207a8:	f53f af74 	bmi.w	8020694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207ac:	4540      	cmp	r0, r8
 80207ae:	f6ff af71 	blt.w	8020694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207b2:	f11c 0801 	adds.w	r8, ip, #1
 80207b6:	f53f af6d 	bmi.w	8020694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207ba:	45c6      	cmp	lr, r8
 80207bc:	f6ff af6a 	blt.w	8020694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207c0:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80207c2:	9302      	str	r3, [sp, #8]
 80207c4:	b200      	sxth	r0, r0
 80207c6:	fa0f f38e 	sxth.w	r3, lr
 80207ca:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80207ce:	e9cd c203 	strd	ip, r2, [sp, #12]
 80207d2:	9301      	str	r3, [sp, #4]
 80207d4:	9000      	str	r0, [sp, #0]
 80207d6:	4633      	mov	r3, r6
 80207d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80207da:	981d      	ldr	r0, [sp, #116]	; 0x74
 80207dc:	4639      	mov	r1, r7
 80207de:	f7ff fc62 	bl	80200a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80207e2:	e757      	b.n	8020694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80207e6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80207e8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80207ec:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80207ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80207f2:	1427      	asrs	r7, r4, #16
 80207f4:	142b      	asrs	r3, r5, #16
 80207f6:	fb01 7303 	mla	r3, r1, r3, r7
 80207fa:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80207fc:	18e7      	adds	r7, r4, r3
 80207fe:	5ce3      	ldrb	r3, [r4, r3]
 8020800:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020804:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020808:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802080c:	2a00      	cmp	r2, #0
 802080e:	f000 8137 	beq.w	8020a80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020812:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020816:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802081a:	9410      	str	r4, [sp, #64]	; 0x40
 802081c:	0e24      	lsrs	r4, r4, #24
 802081e:	9417      	str	r4, [sp, #92]	; 0x5c
 8020820:	b170      	cbz	r0, 8020840 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020822:	eb07 0e01 	add.w	lr, r7, r1
 8020826:	5c79      	ldrb	r1, [r7, r1]
 8020828:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802082c:	910b      	str	r1, [sp, #44]	; 0x2c
 802082e:	0e09      	lsrs	r1, r1, #24
 8020830:	9114      	str	r1, [sp, #80]	; 0x50
 8020832:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020836:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802083a:	9111      	str	r1, [sp, #68]	; 0x44
 802083c:	0e09      	lsrs	r1, r1, #24
 802083e:	9118      	str	r1, [sp, #96]	; 0x60
 8020840:	b292      	uxth	r2, r2
 8020842:	b280      	uxth	r0, r0
 8020844:	fb02 f800 	mul.w	r8, r2, r0
 8020848:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802084c:	0112      	lsls	r2, r2, #4
 802084e:	eba2 0e08 	sub.w	lr, r2, r8
 8020852:	b280      	uxth	r0, r0
 8020854:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020858:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802085a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802085c:	fa1f fe8e 	uxth.w	lr, lr
 8020860:	1a12      	subs	r2, r2, r0
 8020862:	b292      	uxth	r2, r2
 8020864:	fb0e f101 	mul.w	r1, lr, r1
 8020868:	fb02 110c 	mla	r1, r2, ip, r1
 802086c:	fb00 1104 	mla	r1, r0, r4, r1
 8020870:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020872:	fb08 1104 	mla	r1, r8, r4, r1
 8020876:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802087a:	2900      	cmp	r1, #0
 802087c:	f000 80f5 	beq.w	8020a6a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020880:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020884:	d019      	beq.n	80208ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8020886:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802088a:	fb0c fa0a 	mul.w	sl, ip, sl
 802088e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020892:	fb0c fc03 	mul.w	ip, ip, r3
 8020896:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802089a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802089e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80208a2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80208a6:	4453      	add	r3, sl
 80208a8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80208ac:	0a1b      	lsrs	r3, r3, #8
 80208ae:	0a3f      	lsrs	r7, r7, #8
 80208b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80208b4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80208b8:	433b      	orrs	r3, r7
 80208ba:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80208bc:	2cff      	cmp	r4, #255	; 0xff
 80208be:	d020      	beq.n	8020902 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80208c0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80208c2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80208c6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80208c8:	4367      	muls	r7, r4
 80208ca:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80208cc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80208d0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80208d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80208d6:	fb04 fa0a 	mul.w	sl, r4, sl
 80208da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80208de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80208e2:	44bc      	add	ip, r7
 80208e4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80208e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80208ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80208f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80208f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80208f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80208fc:	ea4c 040a 	orr.w	r4, ip, sl
 8020900:	9410      	str	r4, [sp, #64]	; 0x40
 8020902:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020904:	2cff      	cmp	r4, #255	; 0xff
 8020906:	d020      	beq.n	802094a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020908:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802090a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802090e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020910:	4367      	muls	r7, r4
 8020912:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020914:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020918:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802091a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802091e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020922:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020926:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802092a:	44bc      	add	ip, r7
 802092c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020930:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020934:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020938:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802093c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020940:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020944:	ea4c 040a 	orr.w	r4, ip, sl
 8020948:	940b      	str	r4, [sp, #44]	; 0x2c
 802094a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802094c:	2cff      	cmp	r4, #255	; 0xff
 802094e:	d020      	beq.n	8020992 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020950:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020952:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020956:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020958:	4367      	muls	r7, r4
 802095a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802095c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020960:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020962:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020966:	fb04 fa0a 	mul.w	sl, r4, sl
 802096a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802096e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020972:	44bc      	add	ip, r7
 8020974:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020978:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802097c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020980:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020984:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020988:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802098c:	ea4c 040a 	orr.w	r4, ip, sl
 8020990:	9411      	str	r4, [sp, #68]	; 0x44
 8020992:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020994:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020998:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802099a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802099e:	fb0e f707 	mul.w	r7, lr, r7
 80209a2:	fb02 770c 	mla	r7, r2, ip, r7
 80209a6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80209aa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80209ac:	fb00 770c 	mla	r7, r0, ip, r7
 80209b0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80209b4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80209b6:	fb08 770c 	mla	r7, r8, ip, r7
 80209ba:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80209be:	fb0e fe0c 	mul.w	lr, lr, ip
 80209c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80209c6:	fb02 e303 	mla	r3, r2, r3, lr
 80209ca:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80209cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80209ce:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80209d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80209d4:	fb00 330a 	mla	r3, r0, sl, r3
 80209d8:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80209dc:	fb08 3c0c 	mla	ip, r8, ip, r3
 80209e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80209e2:	f8b9 0000 	ldrh.w	r0, [r9]
 80209e6:	434b      	muls	r3, r1
 80209e8:	0a3f      	lsrs	r7, r7, #8
 80209ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80209ee:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80209f2:	1c59      	adds	r1, r3, #1
 80209f4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80209f8:	ea47 070c 	orr.w	r7, r7, ip
 80209fc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020a00:	1202      	asrs	r2, r0, #8
 8020a02:	0c3b      	lsrs	r3, r7, #16
 8020a04:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020a08:	b2c9      	uxtb	r1, r1
 8020a0a:	fb13 f304 	smulbb	r3, r3, r4
 8020a0e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020a12:	fb02 3201 	mla	r2, r2, r1, r3
 8020a16:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020a1a:	10c3      	asrs	r3, r0, #3
 8020a1c:	b2ff      	uxtb	r7, r7
 8020a1e:	00c0      	lsls	r0, r0, #3
 8020a20:	b292      	uxth	r2, r2
 8020a22:	fb1c fc04 	smulbb	ip, ip, r4
 8020a26:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020a2a:	b2c0      	uxtb	r0, r0
 8020a2c:	fb17 f704 	smulbb	r7, r7, r4
 8020a30:	fb03 c301 	mla	r3, r3, r1, ip
 8020a34:	fb00 7001 	mla	r0, r0, r1, r7
 8020a38:	f102 0c01 	add.w	ip, r2, #1
 8020a3c:	b280      	uxth	r0, r0
 8020a3e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020a42:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8020a46:	1c42      	adds	r2, r0, #1
 8020a48:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020a4c:	b29b      	uxth	r3, r3
 8020a4e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020a52:	ea42 020c 	orr.w	r2, r2, ip
 8020a56:	f103 0c01 	add.w	ip, r3, #1
 8020a5a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020a5e:	095b      	lsrs	r3, r3, #5
 8020a60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a64:	431a      	orrs	r2, r3
 8020a66:	f8a9 2000 	strh.w	r2, [r9]
 8020a6a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020a6c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020a6e:	441a      	add	r2, r3
 8020a70:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020a72:	9229      	str	r2, [sp, #164]	; 0xa4
 8020a74:	f109 0902 	add.w	r9, r9, #2
 8020a78:	441d      	add	r5, r3
 8020a7a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020a7e:	e63d      	b.n	80206fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020a80:	2800      	cmp	r0, #0
 8020a82:	f43f aedd 	beq.w	8020840 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020a86:	5c79      	ldrb	r1, [r7, r1]
 8020a88:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020a8c:	910b      	str	r1, [sp, #44]	; 0x2c
 8020a8e:	0e09      	lsrs	r1, r1, #24
 8020a90:	9114      	str	r1, [sp, #80]	; 0x50
 8020a92:	e6d5      	b.n	8020840 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020a94:	b01f      	add	sp, #124	; 0x7c
 8020a96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020a9a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8020a9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a9e:	b089      	sub	sp, #36	; 0x24
 8020aa0:	9101      	str	r1, [sp, #4]
 8020aa2:	9801      	ldr	r0, [sp, #4]
 8020aa4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8020aa8:	8800      	ldrh	r0, [r0, #0]
 8020aaa:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8020aae:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8020ab2:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8020ab6:	1206      	asrs	r6, r0, #8
 8020ab8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8020abc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020ac0:	9602      	str	r6, [sp, #8]
 8020ac2:	10c6      	asrs	r6, r0, #3
 8020ac4:	00c0      	lsls	r0, r0, #3
 8020ac6:	b2c0      	uxtb	r0, r0
 8020ac8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020acc:	9004      	str	r0, [sp, #16]
 8020ace:	2f00      	cmp	r7, #0
 8020ad0:	fb07 100c 	mla	r0, r7, ip, r1
 8020ad4:	9603      	str	r6, [sp, #12]
 8020ad6:	eb02 0e00 	add.w	lr, r2, r0
 8020ada:	f2c0 810a 	blt.w	8020cf2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020ade:	45b8      	cmp	r8, r7
 8020ae0:	f340 8107 	ble.w	8020cf2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020ae4:	2900      	cmp	r1, #0
 8020ae6:	f2c0 8102 	blt.w	8020cee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020aea:	458c      	cmp	ip, r1
 8020aec:	f340 80ff 	ble.w	8020cee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020af0:	5c12      	ldrb	r2, [r2, r0]
 8020af2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020af6:	1c4a      	adds	r2, r1, #1
 8020af8:	f100 80fe 	bmi.w	8020cf8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020afc:	4594      	cmp	ip, r2
 8020afe:	f340 80fb 	ble.w	8020cf8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020b02:	2d00      	cmp	r5, #0
 8020b04:	f000 80fa 	beq.w	8020cfc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8020b08:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020b0c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020b10:	3701      	adds	r7, #1
 8020b12:	f100 80f7 	bmi.w	8020d04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020b16:	45b8      	cmp	r8, r7
 8020b18:	f340 80f4 	ble.w	8020d04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020b1c:	2c00      	cmp	r4, #0
 8020b1e:	f000 80f4 	beq.w	8020d0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8020b22:	2900      	cmp	r1, #0
 8020b24:	eb0e 020c 	add.w	r2, lr, ip
 8020b28:	f2c0 80ea 	blt.w	8020d00 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020b2c:	458c      	cmp	ip, r1
 8020b2e:	f340 80e7 	ble.w	8020d00 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020b32:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8020b36:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8020b3a:	3101      	adds	r1, #1
 8020b3c:	f100 80e8 	bmi.w	8020d10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020b40:	458c      	cmp	ip, r1
 8020b42:	f340 80e5 	ble.w	8020d10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020b46:	2d00      	cmp	r5, #0
 8020b48:	f000 80e4 	beq.w	8020d14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8020b4c:	7852      	ldrb	r2, [r2, #1]
 8020b4e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020b52:	0e0b      	lsrs	r3, r1, #24
 8020b54:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8020b58:	9300      	str	r3, [sp, #0]
 8020b5a:	b2a4      	uxth	r4, r4
 8020b5c:	b2ab      	uxth	r3, r5
 8020b5e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8020b62:	fb03 f904 	mul.w	r9, r3, r4
 8020b66:	fb0a f505 	mul.w	r5, sl, r5
 8020b6a:	011b      	lsls	r3, r3, #4
 8020b6c:	eba3 0e09 	sub.w	lr, r3, r9
 8020b70:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8020b74:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8020b78:	0a28      	lsrs	r0, r5, #8
 8020b7a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020b7e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8020b82:	4405      	add	r5, r0
 8020b84:	0a2d      	lsrs	r5, r5, #8
 8020b86:	fb0a f303 	mul.w	r3, sl, r3
 8020b8a:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8020b8e:	9005      	str	r0, [sp, #20]
 8020b90:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8020b94:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8020b98:	0a1b      	lsrs	r3, r3, #8
 8020b9a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8020b9e:	9306      	str	r3, [sp, #24]
 8020ba0:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8020ba4:	fb0b f303 	mul.w	r3, fp, r3
 8020ba8:	0a1d      	lsrs	r5, r3, #8
 8020baa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020bae:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8020bb2:	fb0b f606 	mul.w	r6, fp, r6
 8020bb6:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8020bba:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8020bbe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020bc2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020bc6:	fb08 f707 	mul.w	r7, r8, r7
 8020bca:	441d      	add	r5, r3
 8020bcc:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8020bd0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020bd4:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8020bd8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020bdc:	fb08 fc0c 	mul.w	ip, r8, ip
 8020be0:	0a1b      	lsrs	r3, r3, #8
 8020be2:	9307      	str	r3, [sp, #28]
 8020be4:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8020be8:	0e0b      	lsrs	r3, r1, #24
 8020bea:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8020bee:	435f      	muls	r7, r3
 8020bf0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020bf4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020bf8:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8020bfc:	4460      	add	r0, ip
 8020bfe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020c02:	b2a4      	uxth	r4, r4
 8020c04:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020c08:	0a2d      	lsrs	r5, r5, #8
 8020c0a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020c0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c12:	fa1f fe8e 	uxth.w	lr, lr
 8020c16:	4359      	muls	r1, r3
 8020c18:	1b12      	subs	r2, r2, r4
 8020c1a:	9b05      	ldr	r3, [sp, #20]
 8020c1c:	44bc      	add	ip, r7
 8020c1e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020c22:	b292      	uxth	r2, r2
 8020c24:	fb05 f50e 	mul.w	r5, r5, lr
 8020c28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020c2c:	fb03 5502 	mla	r5, r3, r2, r5
 8020c30:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c34:	9b06      	ldr	r3, [sp, #24]
 8020c36:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8020c3a:	0a36      	lsrs	r6, r6, #8
 8020c3c:	0a00      	lsrs	r0, r0, #8
 8020c3e:	fb0c 5509 	mla	r5, ip, r9, r5
 8020c42:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020c46:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020c4a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020c4e:	fb00 5504 	mla	r5, r0, r4, r5
 8020c52:	fb0e f606 	mul.w	r6, lr, r6
 8020c56:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8020c5a:	0a09      	lsrs	r1, r1, #8
 8020c5c:	9b07      	ldr	r3, [sp, #28]
 8020c5e:	fb02 6000 	mla	r0, r2, r0, r6
 8020c62:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020c66:	fb09 0001 	mla	r0, r9, r1, r0
 8020c6a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020c6e:	fb0e fe0b 	mul.w	lr, lr, fp
 8020c72:	fb04 0003 	mla	r0, r4, r3, r0
 8020c76:	fb02 e20a 	mla	r2, r2, sl, lr
 8020c7a:	9b00      	ldr	r3, [sp, #0]
 8020c7c:	fb04 2408 	mla	r4, r4, r8, r2
 8020c80:	fb09 4903 	mla	r9, r9, r3, r4
 8020c84:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8020c88:	9b02      	ldr	r3, [sp, #8]
 8020c8a:	9a04      	ldr	r2, [sp, #16]
 8020c8c:	fa5f f989 	uxtb.w	r9, r9
 8020c90:	fb03 f109 	mul.w	r1, r3, r9
 8020c94:	9b03      	ldr	r3, [sp, #12]
 8020c96:	0a2d      	lsrs	r5, r5, #8
 8020c98:	0a00      	lsrs	r0, r0, #8
 8020c9a:	fb03 f309 	mul.w	r3, r3, r9
 8020c9e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020ca2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020ca6:	4305      	orrs	r5, r0
 8020ca8:	fb02 f909 	mul.w	r9, r2, r9
 8020cac:	1c58      	adds	r0, r3, #1
 8020cae:	1c4a      	adds	r2, r1, #1
 8020cb0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020cb4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020cb8:	0a2b      	lsrs	r3, r5, #8
 8020cba:	0c2a      	lsrs	r2, r5, #16
 8020cbc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020cc0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020cc4:	00db      	lsls	r3, r3, #3
 8020cc6:	0212      	lsls	r2, r2, #8
 8020cc8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8020ccc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020cd0:	4313      	orrs	r3, r2
 8020cd2:	f109 0201 	add.w	r2, r9, #1
 8020cd6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8020cda:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8020cde:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020ce2:	431d      	orrs	r5, r3
 8020ce4:	9b01      	ldr	r3, [sp, #4]
 8020ce6:	801d      	strh	r5, [r3, #0]
 8020ce8:	b009      	add	sp, #36	; 0x24
 8020cea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020cee:	2000      	movs	r0, #0
 8020cf0:	e701      	b.n	8020af6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020cf2:	2600      	movs	r6, #0
 8020cf4:	4630      	mov	r0, r6
 8020cf6:	e70b      	b.n	8020b10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020cf8:	2600      	movs	r6, #0
 8020cfa:	e709      	b.n	8020b10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020cfc:	462e      	mov	r6, r5
 8020cfe:	e707      	b.n	8020b10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020d00:	2700      	movs	r7, #0
 8020d02:	e71a      	b.n	8020b3a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020d04:	2100      	movs	r1, #0
 8020d06:	460f      	mov	r7, r1
 8020d08:	e723      	b.n	8020b52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020d0a:	4621      	mov	r1, r4
 8020d0c:	4627      	mov	r7, r4
 8020d0e:	e720      	b.n	8020b52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020d10:	2100      	movs	r1, #0
 8020d12:	e71e      	b.n	8020b52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020d14:	4629      	mov	r1, r5
 8020d16:	e71c      	b.n	8020b52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020d18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d1c:	b09b      	sub	sp, #108	; 0x6c
 8020d1e:	9218      	str	r2, [sp, #96]	; 0x60
 8020d20:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020d22:	9116      	str	r1, [sp, #88]	; 0x58
 8020d24:	9307      	str	r3, [sp, #28]
 8020d26:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8020d2a:	9019      	str	r0, [sp, #100]	; 0x64
 8020d2c:	6850      	ldr	r0, [r2, #4]
 8020d2e:	6812      	ldr	r2, [r2, #0]
 8020d30:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8020d32:	fb00 1303 	mla	r3, r0, r3, r1
 8020d36:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020d3a:	930a      	str	r3, [sp, #40]	; 0x28
 8020d3c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020d3e:	681b      	ldr	r3, [r3, #0]
 8020d40:	930f      	str	r3, [sp, #60]	; 0x3c
 8020d42:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020d44:	685e      	ldr	r6, [r3, #4]
 8020d46:	3604      	adds	r6, #4
 8020d48:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020d4a:	2b00      	cmp	r3, #0
 8020d4c:	dc03      	bgt.n	8020d56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020d4e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020d50:	2b00      	cmp	r3, #0
 8020d52:	f340 8373 	ble.w	802143c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020d56:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020d58:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d5c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020d60:	1e48      	subs	r0, r1, #1
 8020d62:	1e57      	subs	r7, r2, #1
 8020d64:	9b07      	ldr	r3, [sp, #28]
 8020d66:	2b00      	cmp	r3, #0
 8020d68:	f340 8190 	ble.w	802108c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020d6c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020d6e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020d72:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020d76:	d406      	bmi.n	8020d86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020d78:	4584      	cmp	ip, r0
 8020d7a:	da04      	bge.n	8020d86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020d7c:	2b00      	cmp	r3, #0
 8020d7e:	db02      	blt.n	8020d86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020d80:	42bb      	cmp	r3, r7
 8020d82:	f2c0 8184 	blt.w	802108e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8020d86:	f11c 0c01 	adds.w	ip, ip, #1
 8020d8a:	f100 8172 	bmi.w	8021072 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d8e:	4561      	cmp	r1, ip
 8020d90:	f2c0 816f 	blt.w	8021072 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d94:	3301      	adds	r3, #1
 8020d96:	f100 816c 	bmi.w	8021072 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d9a:	429a      	cmp	r2, r3
 8020d9c:	f2c0 8169 	blt.w	8021072 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020da0:	9b07      	ldr	r3, [sp, #28]
 8020da2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020da4:	9317      	str	r3, [sp, #92]	; 0x5c
 8020da6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020da8:	2b00      	cmp	r3, #0
 8020daa:	f340 818e 	ble.w	80210ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8020dae:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020db0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020db4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020db6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8020dba:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020dbc:	141b      	asrs	r3, r3, #16
 8020dbe:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020dc2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020dc6:	f100 81d1 	bmi.w	802116c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020dca:	f101 38ff 	add.w	r8, r1, #4294967295
 8020dce:	4543      	cmp	r3, r8
 8020dd0:	f280 81cc 	bge.w	802116c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020dd4:	f1bc 0f00 	cmp.w	ip, #0
 8020dd8:	f2c0 81c8 	blt.w	802116c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020ddc:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020de0:	45c4      	cmp	ip, r8
 8020de2:	f280 81c3 	bge.w	802116c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020de6:	b209      	sxth	r1, r1
 8020de8:	fb0c 3301 	mla	r3, ip, r1, r3
 8020dec:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020dee:	eb04 0803 	add.w	r8, r4, r3
 8020df2:	5ce3      	ldrb	r3, [r4, r3]
 8020df4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020df8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020dfc:	2a00      	cmp	r2, #0
 8020dfe:	f000 81aa 	beq.w	8021156 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020e02:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020e06:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020e0a:	940b      	str	r4, [sp, #44]	; 0x2c
 8020e0c:	0e24      	lsrs	r4, r4, #24
 8020e0e:	9412      	str	r4, [sp, #72]	; 0x48
 8020e10:	b178      	cbz	r0, 8020e32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020e12:	eb08 0c01 	add.w	ip, r8, r1
 8020e16:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020e1a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e1e:	9108      	str	r1, [sp, #32]
 8020e20:	0e09      	lsrs	r1, r1, #24
 8020e22:	9110      	str	r1, [sp, #64]	; 0x40
 8020e24:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020e28:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e2c:	910c      	str	r1, [sp, #48]	; 0x30
 8020e2e:	0e09      	lsrs	r1, r1, #24
 8020e30:	9113      	str	r1, [sp, #76]	; 0x4c
 8020e32:	b292      	uxth	r2, r2
 8020e34:	b280      	uxth	r0, r0
 8020e36:	fb02 f900 	mul.w	r9, r2, r0
 8020e3a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020e3e:	0112      	lsls	r2, r2, #4
 8020e40:	eba2 0809 	sub.w	r8, r2, r9
 8020e44:	b280      	uxth	r0, r0
 8020e46:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020e4a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020e4c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020e4e:	fa1f f888 	uxth.w	r8, r8
 8020e52:	1a12      	subs	r2, r2, r0
 8020e54:	b292      	uxth	r2, r2
 8020e56:	fb08 f101 	mul.w	r1, r8, r1
 8020e5a:	fb02 110e 	mla	r1, r2, lr, r1
 8020e5e:	fb00 1104 	mla	r1, r0, r4, r1
 8020e62:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020e64:	fb09 1104 	mla	r1, r9, r4, r1
 8020e68:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020e6c:	2900      	cmp	r1, #0
 8020e6e:	f000 80f5 	beq.w	802105c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020e72:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020e76:	d01b      	beq.n	8020eb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e78:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020e7c:	fb0e fa0a 	mul.w	sl, lr, sl
 8020e80:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020e84:	fb0e fe03 	mul.w	lr, lr, r3
 8020e88:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020e8c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020e90:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020e94:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020e98:	4453      	add	r3, sl
 8020e9a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020e9e:	0a1b      	lsrs	r3, r3, #8
 8020ea0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ea4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020ea8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020eac:	ea43 030c 	orr.w	r3, r3, ip
 8020eb0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020eb2:	2cff      	cmp	r4, #255	; 0xff
 8020eb4:	d021      	beq.n	8020efa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8020eb6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020eb8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020ebc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020ebe:	fb04 fb0b 	mul.w	fp, r4, fp
 8020ec2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ec4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ec8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020eca:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020ece:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ed2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ed6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020eda:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020ede:	44de      	add	lr, fp
 8020ee0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020ee4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020ee8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020eec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ef0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ef4:	ea4e 040a 	orr.w	r4, lr, sl
 8020ef8:	940b      	str	r4, [sp, #44]	; 0x2c
 8020efa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020efc:	2cff      	cmp	r4, #255	; 0xff
 8020efe:	d021      	beq.n	8020f44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020f00:	9c08      	ldr	r4, [sp, #32]
 8020f02:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020f06:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020f08:	fb04 fb0b 	mul.w	fp, r4, fp
 8020f0c:	9c08      	ldr	r4, [sp, #32]
 8020f0e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020f12:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020f14:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020f18:	fb04 fa0a 	mul.w	sl, r4, sl
 8020f1c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f20:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020f24:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020f28:	44de      	add	lr, fp
 8020f2a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020f2e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020f32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f3a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f3e:	ea4e 040a 	orr.w	r4, lr, sl
 8020f42:	9408      	str	r4, [sp, #32]
 8020f44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020f46:	2cff      	cmp	r4, #255	; 0xff
 8020f48:	d021      	beq.n	8020f8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020f4a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020f4c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020f50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020f52:	fb04 fb0b 	mul.w	fp, r4, fp
 8020f56:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020f58:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020f5c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020f5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020f62:	fb04 fa0a 	mul.w	sl, r4, sl
 8020f66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f6a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020f6e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020f72:	44de      	add	lr, fp
 8020f74:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020f78:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020f7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f88:	ea4e 040a 	orr.w	r4, lr, sl
 8020f8c:	940c      	str	r4, [sp, #48]	; 0x30
 8020f8e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020f90:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020f94:	9c08      	ldr	r4, [sp, #32]
 8020f96:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020f9a:	fb08 fc0c 	mul.w	ip, r8, ip
 8020f9e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020fa2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020fa6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020fa8:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020fac:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020fb0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020fb2:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020fb6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020fba:	fb08 f80e 	mul.w	r8, r8, lr
 8020fbe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020fc2:	fb02 8303 	mla	r3, r2, r3, r8
 8020fc6:	9a08      	ldr	r2, [sp, #32]
 8020fc8:	f8b7 8000 	ldrh.w	r8, [r7]
 8020fcc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020fd0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020fd2:	fb00 330a 	mla	r3, r0, sl, r3
 8020fd6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8020fda:	fb09 3900 	mla	r9, r9, r0, r3
 8020fde:	43c9      	mvns	r1, r1
 8020fe0:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020fe4:	fa5f fe81 	uxtb.w	lr, r1
 8020fe8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020fec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020ff0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020ff4:	fb02 f20e 	mul.w	r2, r2, lr
 8020ff8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ffc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021000:	ea4c 0c09 	orr.w	ip, ip, r9
 8021004:	1c53      	adds	r3, r2, #1
 8021006:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 802100a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 802100e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8021012:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021016:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802101a:	4a63      	ldr	r2, [pc, #396]	; (80211a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 802101c:	fb00 f00e 	mul.w	r0, r0, lr
 8021020:	b2db      	uxtb	r3, r3
 8021022:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8021026:	1c43      	adds	r3, r0, #1
 8021028:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802102c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021030:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8021034:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021038:	b2c9      	uxtb	r1, r1
 802103a:	00db      	lsls	r3, r3, #3
 802103c:	fb01 f10e 	mul.w	r1, r1, lr
 8021040:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021044:	4313      	orrs	r3, r2
 8021046:	1c4a      	adds	r2, r1, #1
 8021048:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802104c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021050:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021054:	ea4c 0c03 	orr.w	ip, ip, r3
 8021058:	f8a7 c000 	strh.w	ip, [r7]
 802105c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802105e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021060:	441a      	add	r2, r3
 8021062:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021064:	9225      	str	r2, [sp, #148]	; 0x94
 8021066:	441d      	add	r5, r3
 8021068:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802106a:	3b01      	subs	r3, #1
 802106c:	3702      	adds	r7, #2
 802106e:	9317      	str	r3, [sp, #92]	; 0x5c
 8021070:	e699      	b.n	8020da6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021072:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021074:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021076:	441c      	add	r4, r3
 8021078:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802107a:	9425      	str	r4, [sp, #148]	; 0x94
 802107c:	441d      	add	r5, r3
 802107e:	9b07      	ldr	r3, [sp, #28]
 8021080:	3b01      	subs	r3, #1
 8021082:	9307      	str	r3, [sp, #28]
 8021084:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021086:	3302      	adds	r3, #2
 8021088:	930a      	str	r3, [sp, #40]	; 0x28
 802108a:	e66b      	b.n	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802108c:	d024      	beq.n	80210d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802108e:	9b07      	ldr	r3, [sp, #28]
 8021090:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8021092:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021094:	3b01      	subs	r3, #1
 8021096:	fb00 4003 	mla	r0, r0, r3, r4
 802109a:	1400      	asrs	r0, r0, #16
 802109c:	f53f ae80 	bmi.w	8020da0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80210a0:	3901      	subs	r1, #1
 80210a2:	4288      	cmp	r0, r1
 80210a4:	f6bf ae7c 	bge.w	8020da0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80210a8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80210aa:	fb01 5303 	mla	r3, r1, r3, r5
 80210ae:	141b      	asrs	r3, r3, #16
 80210b0:	f53f ae76 	bmi.w	8020da0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80210b4:	3a01      	subs	r2, #1
 80210b6:	4293      	cmp	r3, r2
 80210b8:	f6bf ae72 	bge.w	8020da0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80210bc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80210c0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80210c4:	f1bb 0f00 	cmp.w	fp, #0
 80210c8:	dc70      	bgt.n	80211ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80210ca:	9b07      	ldr	r3, [sp, #28]
 80210cc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80210d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80210d2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80210d6:	930a      	str	r3, [sp, #40]	; 0x28
 80210d8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80210da:	2b00      	cmp	r3, #0
 80210dc:	f340 81ae 	ble.w	802143c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80210e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80210e4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80210e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80210ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80210ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80210f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80210f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80210fa:	eef0 6a62 	vmov.f32	s13, s5
 80210fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021102:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021106:	ee77 2a62 	vsub.f32	s5, s14, s5
 802110a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 802110e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021112:	eef0 6a43 	vmov.f32	s13, s6
 8021116:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802111a:	ee12 2a90 	vmov	r2, s5
 802111e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021122:	fb92 f3f3 	sdiv	r3, r2, r3
 8021126:	ee13 2a10 	vmov	r2, s6
 802112a:	9327      	str	r3, [sp, #156]	; 0x9c
 802112c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802112e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021132:	9328      	str	r3, [sp, #160]	; 0xa0
 8021134:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021136:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021138:	3b01      	subs	r3, #1
 802113a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802113e:	9316      	str	r3, [sp, #88]	; 0x58
 8021140:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021142:	bf08      	it	eq
 8021144:	4613      	moveq	r3, r2
 8021146:	ee16 5a90 	vmov	r5, s13
 802114a:	9307      	str	r3, [sp, #28]
 802114c:	eeb0 3a67 	vmov.f32	s6, s15
 8021150:	eef0 2a47 	vmov.f32	s5, s14
 8021154:	e5f8      	b.n	8020d48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8021156:	2800      	cmp	r0, #0
 8021158:	f43f ae6b 	beq.w	8020e32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802115c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021160:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021164:	9108      	str	r1, [sp, #32]
 8021166:	0e09      	lsrs	r1, r1, #24
 8021168:	9110      	str	r1, [sp, #64]	; 0x40
 802116a:	e662      	b.n	8020e32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802116c:	f113 0801 	adds.w	r8, r3, #1
 8021170:	f53f af74 	bmi.w	802105c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021174:	4541      	cmp	r1, r8
 8021176:	f6ff af71 	blt.w	802105c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802117a:	f11c 0801 	adds.w	r8, ip, #1
 802117e:	f53f af6d 	bmi.w	802105c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021182:	45c6      	cmp	lr, r8
 8021184:	f6ff af6a 	blt.w	802105c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021188:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 802118c:	b209      	sxth	r1, r1
 802118e:	fa0f f38e 	sxth.w	r3, lr
 8021192:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8021196:	9301      	str	r3, [sp, #4]
 8021198:	9100      	str	r1, [sp, #0]
 802119a:	4633      	mov	r3, r6
 802119c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802119e:	9819      	ldr	r0, [sp, #100]	; 0x64
 80211a0:	4639      	mov	r1, r7
 80211a2:	f7ff fc7a 	bl	8020a9a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80211a6:	e759      	b.n	802105c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80211a8:	fffff800 	.word	0xfffff800
 80211ac:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80211ae:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80211b0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80211b4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80211b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80211ba:	1427      	asrs	r7, r4, #16
 80211bc:	142b      	asrs	r3, r5, #16
 80211be:	fb01 7303 	mla	r3, r1, r3, r7
 80211c2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80211c4:	18e7      	adds	r7, r4, r3
 80211c6:	5ce3      	ldrb	r3, [r4, r3]
 80211c8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80211cc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80211d0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80211d4:	2a00      	cmp	r2, #0
 80211d6:	f000 8127 	beq.w	8021428 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80211da:	f897 e001 	ldrb.w	lr, [r7, #1]
 80211de:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80211e2:	940d      	str	r4, [sp, #52]	; 0x34
 80211e4:	0e24      	lsrs	r4, r4, #24
 80211e6:	9414      	str	r4, [sp, #80]	; 0x50
 80211e8:	b170      	cbz	r0, 8021208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80211ea:	eb07 0e01 	add.w	lr, r7, r1
 80211ee:	5c79      	ldrb	r1, [r7, r1]
 80211f0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80211f4:	9109      	str	r1, [sp, #36]	; 0x24
 80211f6:	0e09      	lsrs	r1, r1, #24
 80211f8:	9111      	str	r1, [sp, #68]	; 0x44
 80211fa:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80211fe:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021202:	910e      	str	r1, [sp, #56]	; 0x38
 8021204:	0e09      	lsrs	r1, r1, #24
 8021206:	9115      	str	r1, [sp, #84]	; 0x54
 8021208:	b292      	uxth	r2, r2
 802120a:	b280      	uxth	r0, r0
 802120c:	fb02 f800 	mul.w	r8, r2, r0
 8021210:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021214:	0112      	lsls	r2, r2, #4
 8021216:	eba2 0e08 	sub.w	lr, r2, r8
 802121a:	b280      	uxth	r0, r0
 802121c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8021220:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021222:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021224:	fa1f fe8e 	uxth.w	lr, lr
 8021228:	1a09      	subs	r1, r1, r0
 802122a:	b289      	uxth	r1, r1
 802122c:	fb0e f202 	mul.w	r2, lr, r2
 8021230:	fb01 220c 	mla	r2, r1, ip, r2
 8021234:	fb00 2204 	mla	r2, r0, r4, r2
 8021238:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802123a:	fb08 2204 	mla	r2, r8, r4, r2
 802123e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8021242:	2a00      	cmp	r2, #0
 8021244:	f000 80e5 	beq.w	8021412 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8021248:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802124c:	d019      	beq.n	8021282 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 802124e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021252:	fb0c fa0a 	mul.w	sl, ip, sl
 8021256:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802125a:	fb0c fc03 	mul.w	ip, ip, r3
 802125e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021262:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021266:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802126a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802126e:	4453      	add	r3, sl
 8021270:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021274:	0a1b      	lsrs	r3, r3, #8
 8021276:	0a3f      	lsrs	r7, r7, #8
 8021278:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802127c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021280:	433b      	orrs	r3, r7
 8021282:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021284:	2cff      	cmp	r4, #255	; 0xff
 8021286:	d020      	beq.n	80212ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8021288:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802128a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802128e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021290:	4367      	muls	r7, r4
 8021292:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021294:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021298:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802129a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802129e:	fb04 fa0a 	mul.w	sl, r4, sl
 80212a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80212a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80212aa:	44bc      	add	ip, r7
 80212ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80212b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80212b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80212b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80212bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80212c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80212c4:	ea4c 040a 	orr.w	r4, ip, sl
 80212c8:	940d      	str	r4, [sp, #52]	; 0x34
 80212ca:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80212cc:	2cff      	cmp	r4, #255	; 0xff
 80212ce:	d020      	beq.n	8021312 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80212d0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80212d2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80212d6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80212d8:	4367      	muls	r7, r4
 80212da:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80212dc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80212e0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80212e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80212e6:	fb04 fa0a 	mul.w	sl, r4, sl
 80212ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80212ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80212f2:	44bc      	add	ip, r7
 80212f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80212f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80212fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021300:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021304:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021308:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802130c:	ea4c 040a 	orr.w	r4, ip, sl
 8021310:	9409      	str	r4, [sp, #36]	; 0x24
 8021312:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021314:	2cff      	cmp	r4, #255	; 0xff
 8021316:	d020      	beq.n	802135a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8021318:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802131a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802131e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021320:	4367      	muls	r7, r4
 8021322:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021324:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021328:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802132a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802132e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021332:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021336:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802133a:	44bc      	add	ip, r7
 802133c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021340:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021344:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021348:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802134c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021350:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021354:	ea4c 040a 	orr.w	r4, ip, sl
 8021358:	940e      	str	r4, [sp, #56]	; 0x38
 802135a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802135c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021360:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021362:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021366:	fb0e f707 	mul.w	r7, lr, r7
 802136a:	fb01 770c 	mla	r7, r1, ip, r7
 802136e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021372:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021374:	fb00 770c 	mla	r7, r0, ip, r7
 8021378:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802137c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802137e:	fb08 770c 	mla	r7, r8, ip, r7
 8021382:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8021386:	fb0e fe0c 	mul.w	lr, lr, ip
 802138a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802138e:	fb01 e303 	mla	r3, r1, r3, lr
 8021392:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021394:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021398:	990e      	ldr	r1, [sp, #56]	; 0x38
 802139a:	fb00 330a 	mla	r3, r0, sl, r3
 802139e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80213a2:	fb08 3c0c 	mla	ip, r8, ip, r3
 80213a6:	f8b9 3000 	ldrh.w	r3, [r9]
 80213aa:	43d2      	mvns	r2, r2
 80213ac:	1218      	asrs	r0, r3, #8
 80213ae:	b2d2      	uxtb	r2, r2
 80213b0:	10d9      	asrs	r1, r3, #3
 80213b2:	0a3f      	lsrs	r7, r7, #8
 80213b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80213b8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80213bc:	00db      	lsls	r3, r3, #3
 80213be:	4350      	muls	r0, r2
 80213c0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80213c4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80213c8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80213cc:	b2db      	uxtb	r3, r3
 80213ce:	ea47 070c 	orr.w	r7, r7, ip
 80213d2:	4351      	muls	r1, r2
 80213d4:	4353      	muls	r3, r2
 80213d6:	1c42      	adds	r2, r0, #1
 80213d8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80213dc:	0c3a      	lsrs	r2, r7, #16
 80213de:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80213e2:	4a18      	ldr	r2, [pc, #96]	; (8021444 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80213e4:	b2c0      	uxtb	r0, r0
 80213e6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80213ea:	1c4a      	adds	r2, r1, #1
 80213ec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80213f0:	0a3a      	lsrs	r2, r7, #8
 80213f2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80213f6:	00c9      	lsls	r1, r1, #3
 80213f8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80213fc:	4301      	orrs	r1, r0
 80213fe:	1c58      	adds	r0, r3, #1
 8021400:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021404:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021408:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 802140c:	4308      	orrs	r0, r1
 802140e:	f8a9 0000 	strh.w	r0, [r9]
 8021412:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021414:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021416:	441a      	add	r2, r3
 8021418:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802141a:	9225      	str	r2, [sp, #148]	; 0x94
 802141c:	f109 0902 	add.w	r9, r9, #2
 8021420:	441d      	add	r5, r3
 8021422:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021426:	e64d      	b.n	80210c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8021428:	2800      	cmp	r0, #0
 802142a:	f43f aeed 	beq.w	8021208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802142e:	5c79      	ldrb	r1, [r7, r1]
 8021430:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021434:	9109      	str	r1, [sp, #36]	; 0x24
 8021436:	0e09      	lsrs	r1, r1, #24
 8021438:	9111      	str	r1, [sp, #68]	; 0x44
 802143a:	e6e5      	b.n	8021208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802143c:	b01b      	add	sp, #108	; 0x6c
 802143e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021442:	bf00      	nop
 8021444:	fffff800 	.word	0xfffff800

08021448 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8021448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802144c:	b085      	sub	sp, #20
 802144e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021452:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021456:	9103      	str	r1, [sp, #12]
 8021458:	fb00 7406 	mla	r4, r0, r6, r7
 802145c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8021460:	2800      	cmp	r0, #0
 8021462:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021466:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802146a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802146e:	9501      	str	r5, [sp, #4]
 8021470:	eb03 0904 	add.w	r9, r3, r4
 8021474:	f2c0 8150 	blt.w	8021718 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021478:	4583      	cmp	fp, r0
 802147a:	f340 814d 	ble.w	8021718 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802147e:	2f00      	cmp	r7, #0
 8021480:	f2c0 8146 	blt.w	8021710 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021484:	42be      	cmp	r6, r7
 8021486:	f340 8143 	ble.w	8021710 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802148a:	f813 c004 	ldrb.w	ip, [r3, r4]
 802148e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8021492:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021496:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802149a:	4355      	muls	r5, r2
 802149c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80214a0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80214a4:	fb0c f203 	mul.w	r2, ip, r3
 80214a8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80214ac:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80214b0:	441d      	add	r5, r3
 80214b2:	f102 0320 	add.w	r3, r2, #32
 80214b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80214ba:	0a1b      	lsrs	r3, r3, #8
 80214bc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80214c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80214c4:	431c      	orrs	r4, r3
 80214c6:	1c7b      	adds	r3, r7, #1
 80214c8:	f100 812b 	bmi.w	8021722 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80214cc:	429e      	cmp	r6, r3
 80214ce:	f340 8128 	ble.w	8021722 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80214d2:	2900      	cmp	r1, #0
 80214d4:	f000 8128 	beq.w	8021728 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80214d8:	9a01      	ldr	r2, [sp, #4]
 80214da:	f899 3001 	ldrb.w	r3, [r9, #1]
 80214de:	8855      	ldrh	r5, [r2, #2]
 80214e0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80214e4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80214e8:	fb08 f802 	mul.w	r8, r8, r2
 80214ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80214f0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80214f4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80214f8:	435d      	muls	r5, r3
 80214fa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80214fe:	44d0      	add	r8, sl
 8021500:	f105 0a20 	add.w	sl, r5, #32
 8021504:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021508:	0a2d      	lsrs	r5, r5, #8
 802150a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802150e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021512:	432a      	orrs	r2, r5
 8021514:	3001      	adds	r0, #1
 8021516:	f100 810d 	bmi.w	8021734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802151a:	4583      	cmp	fp, r0
 802151c:	f340 810a 	ble.w	8021734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021520:	f1be 0f00 	cmp.w	lr, #0
 8021524:	f000 810b 	beq.w	802173e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8021528:	2f00      	cmp	r7, #0
 802152a:	f2c0 8100 	blt.w	802172e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802152e:	42be      	cmp	r6, r7
 8021530:	f340 80fd 	ble.w	802172e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021534:	9801      	ldr	r0, [sp, #4]
 8021536:	f819 5006 	ldrb.w	r5, [r9, r6]
 802153a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802153e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021542:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021546:	fb0a fa00 	mul.w	sl, sl, r0
 802154a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802154e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021552:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021556:	fb05 f808 	mul.w	r8, r5, r8
 802155a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802155e:	4482      	add	sl, r0
 8021560:	f108 0020 	add.w	r0, r8, #32
 8021564:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021568:	0a00      	lsrs	r0, r0, #8
 802156a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802156e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021572:	ea4b 0b00 	orr.w	fp, fp, r0
 8021576:	3701      	adds	r7, #1
 8021578:	f100 80e6 	bmi.w	8021748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802157c:	42be      	cmp	r6, r7
 802157e:	f340 80e3 	ble.w	8021748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021582:	2900      	cmp	r1, #0
 8021584:	f000 80e3 	beq.w	802174e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021588:	3601      	adds	r6, #1
 802158a:	9801      	ldr	r0, [sp, #4]
 802158c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021590:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021594:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021598:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802159c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80215a0:	fb09 f906 	mul.w	r9, r9, r6
 80215a4:	fb07 f800 	mul.w	r8, r7, r0
 80215a8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80215ac:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80215b0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80215b4:	44d1      	add	r9, sl
 80215b6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80215ba:	f108 0020 	add.w	r0, r8, #32
 80215be:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80215c2:	0a00      	lsrs	r0, r0, #8
 80215c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80215c8:	4330      	orrs	r0, r6
 80215ca:	b28e      	uxth	r6, r1
 80215cc:	fa1f f98e 	uxth.w	r9, lr
 80215d0:	fb06 f809 	mul.w	r8, r6, r9
 80215d4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80215d8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80215dc:	0136      	lsls	r6, r6, #4
 80215de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80215e2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80215e6:	9601      	str	r6, [sp, #4]
 80215e8:	ea4a 0404 	orr.w	r4, sl, r4
 80215ec:	fa1f f689 	uxth.w	r6, r9
 80215f0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80215f4:	fb11 f90e 	smulbb	r9, r1, lr
 80215f8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80215fc:	9602      	str	r6, [sp, #8]
 80215fe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021602:	4626      	mov	r6, r4
 8021604:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021608:	f1ce 0410 	rsb	r4, lr, #16
 802160c:	1a64      	subs	r4, r4, r1
 802160e:	ea4a 0202 	orr.w	r2, sl, r2
 8021612:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021616:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802161a:	434a      	muls	r2, r1
 802161c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021620:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021624:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021628:	fb04 2406 	mla	r4, r4, r6, r2
 802162c:	ea4a 0000 	orr.w	r0, sl, r0
 8021630:	fb09 4200 	mla	r2, r9, r0, r4
 8021634:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021638:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802163c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021640:	ea44 0b0b 	orr.w	fp, r4, fp
 8021644:	9c01      	ldr	r4, [sp, #4]
 8021646:	9e02      	ldr	r6, [sp, #8]
 8021648:	9903      	ldr	r1, [sp, #12]
 802164a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 802164e:	1ba4      	subs	r4, r4, r6
 8021650:	9e01      	ldr	r6, [sp, #4]
 8021652:	8808      	ldrh	r0, [r1, #0]
 8021654:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8021658:	eba6 0608 	sub.w	r6, r6, r8
 802165c:	b2b6      	uxth	r6, r6
 802165e:	b2a4      	uxth	r4, r4
 8021660:	4373      	muls	r3, r6
 8021662:	fb0c 3304 	mla	r3, ip, r4, r3
 8021666:	9c02      	ldr	r4, [sp, #8]
 8021668:	fb04 3505 	mla	r5, r4, r5, r3
 802166c:	fb08 5707 	mla	r7, r8, r7, r5
 8021670:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021674:	b289      	uxth	r1, r1
 8021676:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802167a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802167e:	434f      	muls	r7, r1
 8021680:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021684:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021688:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802168c:	1c7b      	adds	r3, r7, #1
 802168e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021692:	ea42 0e0e 	orr.w	lr, r2, lr
 8021696:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802169a:	fa1f f28e 	uxth.w	r2, lr
 802169e:	1203      	asrs	r3, r0, #8
 80216a0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80216a4:	b2ff      	uxtb	r7, r7
 80216a6:	1215      	asrs	r5, r2, #8
 80216a8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80216ac:	fb13 f307 	smulbb	r3, r3, r7
 80216b0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80216b4:	fb05 3501 	mla	r5, r5, r1, r3
 80216b8:	10c3      	asrs	r3, r0, #3
 80216ba:	10d4      	asrs	r4, r2, #3
 80216bc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80216c0:	fb13 f307 	smulbb	r3, r3, r7
 80216c4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80216c8:	fb04 3401 	mla	r4, r4, r1, r3
 80216cc:	00c3      	lsls	r3, r0, #3
 80216ce:	00d2      	lsls	r2, r2, #3
 80216d0:	b2db      	uxtb	r3, r3
 80216d2:	fb13 f307 	smulbb	r3, r3, r7
 80216d6:	b2d2      	uxtb	r2, r2
 80216d8:	fb02 3101 	mla	r1, r2, r1, r3
 80216dc:	b2ad      	uxth	r5, r5
 80216de:	b289      	uxth	r1, r1
 80216e0:	b2a4      	uxth	r4, r4
 80216e2:	1c6b      	adds	r3, r5, #1
 80216e4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80216e8:	1c62      	adds	r2, r4, #1
 80216ea:	1c4b      	adds	r3, r1, #1
 80216ec:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80216f0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80216f4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80216f8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80216fc:	0964      	lsrs	r4, r4, #5
 80216fe:	432b      	orrs	r3, r5
 8021700:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021704:	9a03      	ldr	r2, [sp, #12]
 8021706:	4323      	orrs	r3, r4
 8021708:	8013      	strh	r3, [r2, #0]
 802170a:	b005      	add	sp, #20
 802170c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021710:	f04f 0c00 	mov.w	ip, #0
 8021714:	4664      	mov	r4, ip
 8021716:	e6d6      	b.n	80214c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8021718:	2300      	movs	r3, #0
 802171a:	469c      	mov	ip, r3
 802171c:	461a      	mov	r2, r3
 802171e:	461c      	mov	r4, r3
 8021720:	e6f8      	b.n	8021514 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021722:	2300      	movs	r3, #0
 8021724:	461a      	mov	r2, r3
 8021726:	e6f5      	b.n	8021514 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021728:	460b      	mov	r3, r1
 802172a:	460a      	mov	r2, r1
 802172c:	e6f2      	b.n	8021514 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802172e:	2500      	movs	r5, #0
 8021730:	46ab      	mov	fp, r5
 8021732:	e720      	b.n	8021576 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8021734:	2700      	movs	r7, #0
 8021736:	463d      	mov	r5, r7
 8021738:	4638      	mov	r0, r7
 802173a:	46bb      	mov	fp, r7
 802173c:	e745      	b.n	80215ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802173e:	4677      	mov	r7, lr
 8021740:	4675      	mov	r5, lr
 8021742:	4670      	mov	r0, lr
 8021744:	46f3      	mov	fp, lr
 8021746:	e740      	b.n	80215ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021748:	2700      	movs	r7, #0
 802174a:	4638      	mov	r0, r7
 802174c:	e73d      	b.n	80215ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802174e:	460f      	mov	r7, r1
 8021750:	4608      	mov	r0, r1
 8021752:	e73a      	b.n	80215ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08021754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021758:	b097      	sub	sp, #92	; 0x5c
 802175a:	9214      	str	r2, [sp, #80]	; 0x50
 802175c:	9308      	str	r3, [sp, #32]
 802175e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021760:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021764:	9312      	str	r3, [sp, #72]	; 0x48
 8021766:	9111      	str	r1, [sp, #68]	; 0x44
 8021768:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802176c:	9015      	str	r0, [sp, #84]	; 0x54
 802176e:	6850      	ldr	r0, [r2, #4]
 8021770:	6812      	ldr	r2, [r2, #0]
 8021772:	fb00 1303 	mla	r3, r0, r3, r1
 8021776:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802177a:	9309      	str	r3, [sp, #36]	; 0x24
 802177c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802177e:	681b      	ldr	r3, [r3, #0]
 8021780:	930b      	str	r3, [sp, #44]	; 0x2c
 8021782:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021784:	685b      	ldr	r3, [r3, #4]
 8021786:	930c      	str	r3, [sp, #48]	; 0x30
 8021788:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 802178c:	930a      	str	r3, [sp, #40]	; 0x28
 802178e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021790:	2b00      	cmp	r3, #0
 8021792:	dc03      	bgt.n	802179c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021794:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021796:	2b00      	cmp	r3, #0
 8021798:	f340 83cb 	ble.w	8021f32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 802179c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802179e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80217a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80217a6:	1e48      	subs	r0, r1, #1
 80217a8:	1e55      	subs	r5, r2, #1
 80217aa:	9b08      	ldr	r3, [sp, #32]
 80217ac:	2b00      	cmp	r3, #0
 80217ae:	f340 81a3 	ble.w	8021af8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80217b2:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80217b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80217b6:	1436      	asrs	r6, r6, #16
 80217b8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80217bc:	d406      	bmi.n	80217cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80217be:	4286      	cmp	r6, r0
 80217c0:	da04      	bge.n	80217cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80217c2:	2b00      	cmp	r3, #0
 80217c4:	db02      	blt.n	80217cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80217c6:	42ab      	cmp	r3, r5
 80217c8:	f2c0 8197 	blt.w	8021afa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80217cc:	3601      	adds	r6, #1
 80217ce:	f100 8184 	bmi.w	8021ada <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80217d2:	42b1      	cmp	r1, r6
 80217d4:	f2c0 8181 	blt.w	8021ada <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80217d8:	3301      	adds	r3, #1
 80217da:	f100 817e 	bmi.w	8021ada <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80217de:	429a      	cmp	r2, r3
 80217e0:	f2c0 817b 	blt.w	8021ada <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80217e4:	9b08      	ldr	r3, [sp, #32]
 80217e6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80217e8:	9313      	str	r3, [sp, #76]	; 0x4c
 80217ea:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80217ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80217f0:	2b00      	cmp	r3, #0
 80217f2:	f340 81a4 	ble.w	8021b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80217f6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80217f8:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80217fa:	1418      	asrs	r0, r3, #16
 80217fc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80217fe:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021802:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021804:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021808:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802180a:	142d      	asrs	r5, r5, #16
 802180c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021810:	f100 81f8 	bmi.w	8021c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021814:	f102 3eff 	add.w	lr, r2, #4294967295
 8021818:	4575      	cmp	r5, lr
 802181a:	f280 81f3 	bge.w	8021c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802181e:	2800      	cmp	r0, #0
 8021820:	f2c0 81f0 	blt.w	8021c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021824:	f103 3eff 	add.w	lr, r3, #4294967295
 8021828:	4570      	cmp	r0, lr
 802182a:	f280 81eb 	bge.w	8021c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802182e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021830:	b212      	sxth	r2, r2
 8021832:	fb00 5002 	mla	r0, r0, r2, r5
 8021836:	fa1f fe81 	uxth.w	lr, r1
 802183a:	eb03 0a00 	add.w	sl, r3, r0
 802183e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021842:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021846:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802184a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802184e:	b29b      	uxth	r3, r3
 8021850:	f1bc 0f00 	cmp.w	ip, #0
 8021854:	f000 81b9 	beq.w	8021bca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021858:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802185c:	940d      	str	r4, [sp, #52]	; 0x34
 802185e:	eb0a 0b02 	add.w	fp, sl, r2
 8021862:	fa1f fa8c 	uxth.w	sl, ip
 8021866:	fb0a fe0e 	mul.w	lr, sl, lr
 802186a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802186e:	fa1f fa8a 	uxth.w	sl, sl
 8021872:	eba5 050e 	sub.w	r5, r5, lr
 8021876:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802187a:	940e      	str	r4, [sp, #56]	; 0x38
 802187c:	eba3 030a 	sub.w	r3, r3, sl
 8021880:	b2ad      	uxth	r5, r5
 8021882:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021884:	b29b      	uxth	r3, r3
 8021886:	fb08 f505 	mul.w	r5, r8, r5
 802188a:	fb09 5303 	mla	r3, r9, r3, r5
 802188e:	fb0a 3304 	mla	r3, sl, r4, r3
 8021892:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021894:	fb0e 3304 	mla	r3, lr, r4, r3
 8021898:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802189c:	2b00      	cmp	r3, #0
 802189e:	f000 810f 	beq.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80218a2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80218a4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80218a8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80218ac:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80218b0:	f000 8190 	beq.w	8021bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80218b4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80218b8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80218bc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80218c0:	fb09 f000 	mul.w	r0, r9, r0
 80218c4:	fb0a fe0e 	mul.w	lr, sl, lr
 80218c8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80218cc:	f100 0b20 	add.w	fp, r0, #32
 80218d0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80218d4:	44ce      	add	lr, r9
 80218d6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80218da:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80218de:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80218e2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80218e6:	ea4e 0909 	orr.w	r9, lr, r9
 80218ea:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80218ee:	8868      	ldrh	r0, [r5, #2]
 80218f0:	d019      	beq.n	8021926 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80218f2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80218f6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80218fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80218fe:	fb08 f800 	mul.w	r8, r8, r0
 8021902:	fb0a fe0e 	mul.w	lr, sl, lr
 8021906:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802190a:	f108 0b20 	add.w	fp, r8, #32
 802190e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021912:	4486      	add	lr, r0
 8021914:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021918:	0a00      	lsrs	r0, r0, #8
 802191a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802191e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021922:	ea4e 0000 	orr.w	r0, lr, r0
 8021926:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802192a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802192e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021932:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021936:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802193a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802193e:	ea4e 0909 	orr.w	r9, lr, r9
 8021942:	ea4a 0000 	orr.w	r0, sl, r0
 8021946:	f1bc 0f00 	cmp.w	ip, #0
 802194a:	f000 8145 	beq.w	8021bd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802194e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021952:	3a01      	subs	r2, #1
 8021954:	0052      	lsls	r2, r2, #1
 8021956:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021958:	3202      	adds	r2, #2
 802195a:	2cff      	cmp	r4, #255	; 0xff
 802195c:	eb05 0e02 	add.w	lr, r5, r2
 8021960:	5aaa      	ldrh	r2, [r5, r2]
 8021962:	d018      	beq.n	8021996 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021964:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021968:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802196c:	fb04 fa02 	mul.w	sl, r4, r2
 8021970:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021974:	fb08 f805 	mul.w	r8, r8, r5
 8021978:	f10a 0520 	add.w	r5, sl, #32
 802197c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021980:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021984:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021988:	4442      	add	r2, r8
 802198a:	0a2d      	lsrs	r5, r5, #8
 802198c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021990:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021994:	432a      	orrs	r2, r5
 8021996:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021998:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802199c:	2cff      	cmp	r4, #255	; 0xff
 802199e:	d01a      	beq.n	80219d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80219a0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80219a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80219a8:	fb04 fa05 	mul.w	sl, r4, r5
 80219ac:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80219b0:	fb08 f80e 	mul.w	r8, r8, lr
 80219b4:	f10a 0e20 	add.w	lr, sl, #32
 80219b8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80219bc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80219c0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80219c4:	4445      	add	r5, r8
 80219c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80219ca:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80219ce:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80219d2:	ea45 050e 	orr.w	r5, r5, lr
 80219d6:	fb1c fe01 	smulbb	lr, ip, r1
 80219da:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80219de:	f1cc 0810 	rsb	r8, ip, #16
 80219e2:	eba8 0801 	sub.w	r8, r8, r1
 80219e6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80219ea:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80219ee:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80219f2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80219f6:	4341      	muls	r1, r0
 80219f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80219fc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021a00:	ea4a 0202 	orr.w	r2, sl, r2
 8021a04:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021a08:	fb09 1108 	mla	r1, r9, r8, r1
 8021a0c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021a10:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021a14:	fb0c 1102 	mla	r1, ip, r2, r1
 8021a18:	ea4b 0505 	orr.w	r5, fp, r5
 8021a1c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021a20:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021a24:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021a28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021a2c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021a30:	ea42 0e0e 	orr.w	lr, r2, lr
 8021a34:	fa1f f28e 	uxth.w	r2, lr
 8021a38:	2bff      	cmp	r3, #255	; 0xff
 8021a3a:	d103      	bne.n	8021a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021a3c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021a3e:	29ff      	cmp	r1, #255	; 0xff
 8021a40:	f000 80de 	beq.w	8021c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021a44:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021a46:	8838      	ldrh	r0, [r7, #0]
 8021a48:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021a4a:	434b      	muls	r3, r1
 8021a4c:	f103 0c01 	add.w	ip, r3, #1
 8021a50:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021a54:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021a58:	fa5f fc83 	uxtb.w	ip, r3
 8021a5c:	1203      	asrs	r3, r0, #8
 8021a5e:	1215      	asrs	r5, r2, #8
 8021a60:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021a64:	fb13 f30c 	smulbb	r3, r3, ip
 8021a68:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021a6c:	fb05 3501 	mla	r5, r5, r1, r3
 8021a70:	10c3      	asrs	r3, r0, #3
 8021a72:	10d1      	asrs	r1, r2, #3
 8021a74:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021a78:	fb13 f30c 	smulbb	r3, r3, ip
 8021a7c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021a80:	fb01 3104 	mla	r1, r1, r4, r3
 8021a84:	00c3      	lsls	r3, r0, #3
 8021a86:	00d2      	lsls	r2, r2, #3
 8021a88:	b2db      	uxtb	r3, r3
 8021a8a:	b2d2      	uxtb	r2, r2
 8021a8c:	fb13 f30c 	smulbb	r3, r3, ip
 8021a90:	b2ad      	uxth	r5, r5
 8021a92:	fb02 3304 	mla	r3, r2, r4, r3
 8021a96:	b29a      	uxth	r2, r3
 8021a98:	1c6b      	adds	r3, r5, #1
 8021a9a:	b289      	uxth	r1, r1
 8021a9c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021aa0:	1c53      	adds	r3, r2, #1
 8021aa2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021aa6:	1c4a      	adds	r2, r1, #1
 8021aa8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021aac:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021ab0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021ab4:	0949      	lsrs	r1, r1, #5
 8021ab6:	432b      	orrs	r3, r5
 8021ab8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021abc:	430b      	orrs	r3, r1
 8021abe:	803b      	strh	r3, [r7, #0]
 8021ac0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021ac2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021ac4:	4413      	add	r3, r2
 8021ac6:	9321      	str	r3, [sp, #132]	; 0x84
 8021ac8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021aca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021acc:	441a      	add	r2, r3
 8021ace:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021ad0:	9222      	str	r2, [sp, #136]	; 0x88
 8021ad2:	3b01      	subs	r3, #1
 8021ad4:	3702      	adds	r7, #2
 8021ad6:	9313      	str	r3, [sp, #76]	; 0x4c
 8021ad8:	e689      	b.n	80217ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021ada:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021adc:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8021ade:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8021ae0:	4433      	add	r3, r6
 8021ae2:	9321      	str	r3, [sp, #132]	; 0x84
 8021ae4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021ae6:	441c      	add	r4, r3
 8021ae8:	9b08      	ldr	r3, [sp, #32]
 8021aea:	9422      	str	r4, [sp, #136]	; 0x88
 8021aec:	3b01      	subs	r3, #1
 8021aee:	9308      	str	r3, [sp, #32]
 8021af0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021af2:	3302      	adds	r3, #2
 8021af4:	9309      	str	r3, [sp, #36]	; 0x24
 8021af6:	e658      	b.n	80217aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021af8:	d028      	beq.n	8021b4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021afa:	9b08      	ldr	r3, [sp, #32]
 8021afc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8021afe:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021b00:	3b01      	subs	r3, #1
 8021b02:	fb00 5003 	mla	r0, r0, r3, r5
 8021b06:	1400      	asrs	r0, r0, #16
 8021b08:	f53f ae6c 	bmi.w	80217e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021b0c:	3901      	subs	r1, #1
 8021b0e:	4288      	cmp	r0, r1
 8021b10:	f6bf ae68 	bge.w	80217e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021b14:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021b16:	9822      	ldr	r0, [sp, #136]	; 0x88
 8021b18:	fb01 0303 	mla	r3, r1, r3, r0
 8021b1c:	141b      	asrs	r3, r3, #16
 8021b1e:	f53f ae61 	bmi.w	80217e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021b22:	3a01      	subs	r2, #1
 8021b24:	4293      	cmp	r3, r2
 8021b26:	f6bf ae5d 	bge.w	80217e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021b2a:	9b08      	ldr	r3, [sp, #32]
 8021b2c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021b30:	9313      	str	r3, [sp, #76]	; 0x4c
 8021b32:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021b36:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021b38:	2b00      	cmp	r3, #0
 8021b3a:	f300 8082 	bgt.w	8021c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021b3e:	9b08      	ldr	r3, [sp, #32]
 8021b40:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021b44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b46:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021b4a:	9309      	str	r3, [sp, #36]	; 0x24
 8021b4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021b4e:	2b00      	cmp	r3, #0
 8021b50:	f340 81ef 	ble.w	8021f32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021b54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021b58:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021b5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021b60:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021b66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021b6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021b6e:	eef0 6a62 	vmov.f32	s13, s5
 8021b72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021b76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021b7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021b7e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8021b82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021b86:	eef0 6a43 	vmov.f32	s13, s6
 8021b8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021b8e:	ee12 2a90 	vmov	r2, s5
 8021b92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021b96:	fb92 f3f3 	sdiv	r3, r2, r3
 8021b9a:	ee13 2a10 	vmov	r2, s6
 8021b9e:	9323      	str	r3, [sp, #140]	; 0x8c
 8021ba0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021ba2:	fb92 f3f3 	sdiv	r3, r2, r3
 8021ba6:	9324      	str	r3, [sp, #144]	; 0x90
 8021ba8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021baa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021bac:	3b01      	subs	r3, #1
 8021bae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021bb2:	9311      	str	r3, [sp, #68]	; 0x44
 8021bb4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021bb6:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8021bba:	bf08      	it	eq
 8021bbc:	4613      	moveq	r3, r2
 8021bbe:	9308      	str	r3, [sp, #32]
 8021bc0:	eeb0 3a67 	vmov.f32	s6, s15
 8021bc4:	eef0 2a47 	vmov.f32	s5, s14
 8021bc8:	e5e1      	b.n	802178e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021bca:	fb08 f505 	mul.w	r5, r8, r5
 8021bce:	fb09 5303 	mla	r3, r9, r3, r5
 8021bd2:	e661      	b.n	8021898 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021bd4:	4681      	mov	r9, r0
 8021bd6:	e688      	b.n	80218ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021bd8:	f1c1 0210 	rsb	r2, r1, #16
 8021bdc:	4341      	muls	r1, r0
 8021bde:	fb09 1902 	mla	r9, r9, r2, r1
 8021be2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021be6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021bea:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021bee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021bf2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021bf6:	ea42 0909 	orr.w	r9, r2, r9
 8021bfa:	fa1f f289 	uxth.w	r2, r9
 8021bfe:	e71b      	b.n	8021a38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021c00:	803a      	strh	r2, [r7, #0]
 8021c02:	e75d      	b.n	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c04:	f115 0e01 	adds.w	lr, r5, #1
 8021c08:	f53f af5a 	bmi.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c0c:	4572      	cmp	r2, lr
 8021c0e:	f6ff af57 	blt.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c12:	f110 0e01 	adds.w	lr, r0, #1
 8021c16:	f53f af53 	bmi.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c1a:	4573      	cmp	r3, lr
 8021c1c:	f6ff af50 	blt.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c20:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021c22:	9502      	str	r5, [sp, #8]
 8021c24:	b21b      	sxth	r3, r3
 8021c26:	b212      	sxth	r2, r2
 8021c28:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8021c2c:	9301      	str	r3, [sp, #4]
 8021c2e:	9200      	str	r2, [sp, #0]
 8021c30:	e9cd c405 	strd	ip, r4, [sp, #20]
 8021c34:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8021c38:	4639      	mov	r1, r7
 8021c3a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021c3c:	f7ff fc04 	bl	8021448 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021c40:	e73e      	b.n	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c42:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021c44:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021c48:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021c4a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021c4e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021c50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021c54:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021c56:	141f      	asrs	r7, r3, #16
 8021c58:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021c5a:	141b      	asrs	r3, r3, #16
 8021c5c:	fb01 3707 	mla	r7, r1, r7, r3
 8021c60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021c62:	fa1f fc82 	uxth.w	ip, r2
 8021c66:	eb03 0a07 	add.w	sl, r3, r7
 8021c6a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021c6e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021c72:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021c76:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8021c7a:	b29b      	uxth	r3, r3
 8021c7c:	2d00      	cmp	r5, #0
 8021c7e:	f000 813d 	beq.w	8021efc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021c82:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021c86:	940f      	str	r4, [sp, #60]	; 0x3c
 8021c88:	eb0a 0b01 	add.w	fp, sl, r1
 8021c8c:	fa1f fa85 	uxth.w	sl, r5
 8021c90:	fb0a fc0c 	mul.w	ip, sl, ip
 8021c94:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021c98:	fa1f fa8a 	uxth.w	sl, sl
 8021c9c:	eba0 000c 	sub.w	r0, r0, ip
 8021ca0:	eba3 030a 	sub.w	r3, r3, sl
 8021ca4:	b280      	uxth	r0, r0
 8021ca6:	fb08 f000 	mul.w	r0, r8, r0
 8021caa:	b29b      	uxth	r3, r3
 8021cac:	fb09 0303 	mla	r3, r9, r3, r0
 8021cb0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021cb2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021cb6:	9410      	str	r4, [sp, #64]	; 0x40
 8021cb8:	fb0a 3300 	mla	r3, sl, r0, r3
 8021cbc:	fb0c 3304 	mla	r3, ip, r4, r3
 8021cc0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021cc4:	2b00      	cmp	r3, #0
 8021cc6:	f000 810b 	beq.w	8021ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021cca:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021ccc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021cce:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021cd2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021cd6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021cda:	f000 8114 	beq.w	8021f06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8021cde:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021ce2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021ce6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021cea:	fb09 f707 	mul.w	r7, r9, r7
 8021cee:	fb0a fc0c 	mul.w	ip, sl, ip
 8021cf2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021cf6:	f107 0b20 	add.w	fp, r7, #32
 8021cfa:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021cfe:	44cc      	add	ip, r9
 8021d00:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021d04:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021d08:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021d0c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021d10:	ea4c 0909 	orr.w	r9, ip, r9
 8021d14:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021d18:	8847      	ldrh	r7, [r0, #2]
 8021d1a:	d019      	beq.n	8021d50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8021d1c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021d20:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021d24:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021d28:	fb08 f807 	mul.w	r8, r8, r7
 8021d2c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021d30:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021d34:	f108 0b20 	add.w	fp, r8, #32
 8021d38:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021d3c:	44bc      	add	ip, r7
 8021d3e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021d42:	0a3f      	lsrs	r7, r7, #8
 8021d44:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021d48:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021d4c:	ea4c 0707 	orr.w	r7, ip, r7
 8021d50:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021d54:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021d58:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021d5c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021d60:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021d64:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021d68:	ea4c 0909 	orr.w	r9, ip, r9
 8021d6c:	ea4a 0707 	orr.w	r7, sl, r7
 8021d70:	2d00      	cmp	r5, #0
 8021d72:	f000 80ca 	beq.w	8021f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021d76:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021d7a:	3901      	subs	r1, #1
 8021d7c:	0049      	lsls	r1, r1, #1
 8021d7e:	3102      	adds	r1, #2
 8021d80:	eb00 0c01 	add.w	ip, r0, r1
 8021d84:	5a41      	ldrh	r1, [r0, r1]
 8021d86:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021d88:	28ff      	cmp	r0, #255	; 0xff
 8021d8a:	d019      	beq.n	8021dc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8021d8c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021d8e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021d92:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021d96:	fb04 fa01 	mul.w	sl, r4, r1
 8021d9a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021d9e:	fb08 f800 	mul.w	r8, r8, r0
 8021da2:	f10a 0020 	add.w	r0, sl, #32
 8021da6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8021daa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021dae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021db2:	4441      	add	r1, r8
 8021db4:	0a00      	lsrs	r0, r0, #8
 8021db6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021dba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021dbe:	4301      	orrs	r1, r0
 8021dc0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021dc2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021dc6:	2cff      	cmp	r4, #255	; 0xff
 8021dc8:	d01a      	beq.n	8021e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8021dca:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021dce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021dd2:	fb04 fa00 	mul.w	sl, r4, r0
 8021dd6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021dda:	fb08 f80c 	mul.w	r8, r8, ip
 8021dde:	f10a 0c20 	add.w	ip, sl, #32
 8021de2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021de6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021dea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021dee:	4440      	add	r0, r8
 8021df0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021df4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021df8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021dfc:	ea40 000c 	orr.w	r0, r0, ip
 8021e00:	fb15 fc02 	smulbb	ip, r5, r2
 8021e04:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021e08:	f1c5 0810 	rsb	r8, r5, #16
 8021e0c:	eba8 0802 	sub.w	r8, r8, r2
 8021e10:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021e14:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021e18:	437a      	muls	r2, r7
 8021e1a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021e1e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021e22:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021e26:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021e2a:	fb09 2208 	mla	r2, r9, r8, r2
 8021e2e:	ea4a 0101 	orr.w	r1, sl, r1
 8021e32:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021e36:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021e3a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021e3e:	fb05 2201 	mla	r2, r5, r1, r2
 8021e42:	ea4b 0000 	orr.w	r0, fp, r0
 8021e46:	fb0c 2200 	mla	r2, ip, r0, r2
 8021e4a:	0d57      	lsrs	r7, r2, #21
 8021e4c:	0952      	lsrs	r2, r2, #5
 8021e4e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021e52:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021e56:	433a      	orrs	r2, r7
 8021e58:	2bff      	cmp	r3, #255	; 0xff
 8021e5a:	b292      	uxth	r2, r2
 8021e5c:	d102      	bne.n	8021e64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021e5e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021e60:	29ff      	cmp	r1, #255	; 0xff
 8021e62:	d063      	beq.n	8021f2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021e64:	980a      	ldr	r0, [sp, #40]	; 0x28
 8021e66:	f8be 1000 	ldrh.w	r1, [lr]
 8021e6a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021e6c:	4343      	muls	r3, r0
 8021e6e:	1c58      	adds	r0, r3, #1
 8021e70:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021e74:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021e78:	1208      	asrs	r0, r1, #8
 8021e7a:	b2db      	uxtb	r3, r3
 8021e7c:	1215      	asrs	r5, r2, #8
 8021e7e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021e82:	fb10 f003 	smulbb	r0, r0, r3
 8021e86:	10cf      	asrs	r7, r1, #3
 8021e88:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021e8c:	00c9      	lsls	r1, r1, #3
 8021e8e:	fb05 0504 	mla	r5, r5, r4, r0
 8021e92:	b2c9      	uxtb	r1, r1
 8021e94:	10d0      	asrs	r0, r2, #3
 8021e96:	00d2      	lsls	r2, r2, #3
 8021e98:	fb11 f103 	smulbb	r1, r1, r3
 8021e9c:	b2d2      	uxtb	r2, r2
 8021e9e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021ea2:	fb02 1204 	mla	r2, r2, r4, r1
 8021ea6:	fb17 f703 	smulbb	r7, r7, r3
 8021eaa:	b2ad      	uxth	r5, r5
 8021eac:	b292      	uxth	r2, r2
 8021eae:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021eb2:	fb00 7004 	mla	r0, r0, r4, r7
 8021eb6:	1c6b      	adds	r3, r5, #1
 8021eb8:	1c57      	adds	r7, r2, #1
 8021eba:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021ebe:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021ec2:	b280      	uxth	r0, r0
 8021ec4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021ec8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021ecc:	433d      	orrs	r5, r7
 8021ece:	1c47      	adds	r7, r0, #1
 8021ed0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021ed4:	097f      	lsrs	r7, r7, #5
 8021ed6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021eda:	433d      	orrs	r5, r7
 8021edc:	f8ae 5000 	strh.w	r5, [lr]
 8021ee0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021ee2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021ee4:	4413      	add	r3, r2
 8021ee6:	9321      	str	r3, [sp, #132]	; 0x84
 8021ee8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021eea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021eec:	441a      	add	r2, r3
 8021eee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021ef0:	9222      	str	r2, [sp, #136]	; 0x88
 8021ef2:	3b01      	subs	r3, #1
 8021ef4:	f10e 0e02 	add.w	lr, lr, #2
 8021ef8:	9313      	str	r3, [sp, #76]	; 0x4c
 8021efa:	e61c      	b.n	8021b36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8021efc:	fb08 f000 	mul.w	r0, r8, r0
 8021f00:	fb09 0303 	mla	r3, r9, r3, r0
 8021f04:	e6dc      	b.n	8021cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021f06:	46b9      	mov	r9, r7
 8021f08:	e704      	b.n	8021d14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8021f0a:	f1c2 0110 	rsb	r1, r2, #16
 8021f0e:	437a      	muls	r2, r7
 8021f10:	fb09 2901 	mla	r9, r9, r1, r2
 8021f14:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021f18:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021f1c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021f20:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021f24:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021f28:	4302      	orrs	r2, r0
 8021f2a:	e795      	b.n	8021e58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8021f2c:	f8ae 2000 	strh.w	r2, [lr]
 8021f30:	e7d6      	b.n	8021ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021f32:	b017      	add	sp, #92	; 0x5c
 8021f34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021f38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021f38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f3c:	b085      	sub	sp, #20
 8021f3e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021f42:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021f46:	9103      	str	r1, [sp, #12]
 8021f48:	fb00 7406 	mla	r4, r0, r6, r7
 8021f4c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021f50:	2800      	cmp	r0, #0
 8021f52:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021f56:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021f5a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021f5e:	9501      	str	r5, [sp, #4]
 8021f60:	eb02 0904 	add.w	r9, r2, r4
 8021f64:	f2c0 8141 	blt.w	80221ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021f68:	4583      	cmp	fp, r0
 8021f6a:	f340 813e 	ble.w	80221ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021f6e:	2f00      	cmp	r7, #0
 8021f70:	f2c0 8137 	blt.w	80221e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021f74:	42be      	cmp	r6, r7
 8021f76:	f340 8134 	ble.w	80221e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021f7a:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021f7e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021f82:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021f86:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021f8a:	4355      	muls	r5, r2
 8021f8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021f90:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021f94:	fb0c f203 	mul.w	r2, ip, r3
 8021f98:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021f9c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021fa0:	441d      	add	r5, r3
 8021fa2:	f102 0320 	add.w	r3, r2, #32
 8021fa6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021faa:	0a1b      	lsrs	r3, r3, #8
 8021fac:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021fb0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021fb4:	431c      	orrs	r4, r3
 8021fb6:	1c7b      	adds	r3, r7, #1
 8021fb8:	f100 811c 	bmi.w	80221f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021fbc:	429e      	cmp	r6, r3
 8021fbe:	f340 8119 	ble.w	80221f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021fc2:	2900      	cmp	r1, #0
 8021fc4:	f000 8119 	beq.w	80221fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021fc8:	9a01      	ldr	r2, [sp, #4]
 8021fca:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021fce:	8855      	ldrh	r5, [r2, #2]
 8021fd0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021fd4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021fd8:	fb08 f802 	mul.w	r8, r8, r2
 8021fdc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021fe0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021fe4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021fe8:	435d      	muls	r5, r3
 8021fea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021fee:	44d0      	add	r8, sl
 8021ff0:	f105 0a20 	add.w	sl, r5, #32
 8021ff4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021ff8:	0a2d      	lsrs	r5, r5, #8
 8021ffa:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021ffe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022002:	432a      	orrs	r2, r5
 8022004:	3001      	adds	r0, #1
 8022006:	f100 80fe 	bmi.w	8022206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802200a:	4583      	cmp	fp, r0
 802200c:	f340 80fb 	ble.w	8022206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022010:	f1be 0f00 	cmp.w	lr, #0
 8022014:	f000 80fc 	beq.w	8022210 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8022018:	2f00      	cmp	r7, #0
 802201a:	f2c0 80f1 	blt.w	8022200 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802201e:	42be      	cmp	r6, r7
 8022020:	f340 80ee 	ble.w	8022200 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022024:	9801      	ldr	r0, [sp, #4]
 8022026:	f819 5006 	ldrb.w	r5, [r9, r6]
 802202a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802202e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022032:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022036:	fb0a fa00 	mul.w	sl, sl, r0
 802203a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802203e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022042:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022046:	fb05 f808 	mul.w	r8, r5, r8
 802204a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802204e:	4482      	add	sl, r0
 8022050:	f108 0020 	add.w	r0, r8, #32
 8022054:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022058:	0a00      	lsrs	r0, r0, #8
 802205a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802205e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022062:	ea4b 0b00 	orr.w	fp, fp, r0
 8022066:	3701      	adds	r7, #1
 8022068:	f100 80d7 	bmi.w	802221a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802206c:	42be      	cmp	r6, r7
 802206e:	f340 80d4 	ble.w	802221a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022072:	2900      	cmp	r1, #0
 8022074:	f000 80d4 	beq.w	8022220 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022078:	3601      	adds	r6, #1
 802207a:	9801      	ldr	r0, [sp, #4]
 802207c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022080:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022084:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022088:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802208c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022090:	fb09 f906 	mul.w	r9, r9, r6
 8022094:	fb07 f800 	mul.w	r8, r7, r0
 8022098:	f64f 001f 	movw	r0, #63519	; 0xf81f
 802209c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80220a0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80220a4:	44d1      	add	r9, sl
 80220a6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80220aa:	f108 0020 	add.w	r0, r8, #32
 80220ae:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80220b2:	0a00      	lsrs	r0, r0, #8
 80220b4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80220b8:	4330      	orrs	r0, r6
 80220ba:	b28e      	uxth	r6, r1
 80220bc:	fa1f f98e 	uxth.w	r9, lr
 80220c0:	fb06 f809 	mul.w	r8, r6, r9
 80220c4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80220c8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80220cc:	0136      	lsls	r6, r6, #4
 80220ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80220d2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80220d6:	9601      	str	r6, [sp, #4]
 80220d8:	ea4a 0404 	orr.w	r4, sl, r4
 80220dc:	fa1f f689 	uxth.w	r6, r9
 80220e0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80220e4:	fb11 f90e 	smulbb	r9, r1, lr
 80220e8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80220ec:	9602      	str	r6, [sp, #8]
 80220ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80220f2:	4626      	mov	r6, r4
 80220f4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80220f8:	f1ce 0410 	rsb	r4, lr, #16
 80220fc:	1a64      	subs	r4, r4, r1
 80220fe:	ea4a 0202 	orr.w	r2, sl, r2
 8022102:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022106:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802210a:	434a      	muls	r2, r1
 802210c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022110:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022114:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022118:	fb04 2406 	mla	r4, r4, r6, r2
 802211c:	ea4a 0000 	orr.w	r0, sl, r0
 8022120:	fb09 4200 	mla	r2, r9, r0, r4
 8022124:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022128:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802212c:	9801      	ldr	r0, [sp, #4]
 802212e:	9903      	ldr	r1, [sp, #12]
 8022130:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022134:	ea44 0b0b 	orr.w	fp, r4, fp
 8022138:	9c02      	ldr	r4, [sp, #8]
 802213a:	8809      	ldrh	r1, [r1, #0]
 802213c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022140:	1b00      	subs	r0, r0, r4
 8022142:	9c01      	ldr	r4, [sp, #4]
 8022144:	eba4 0608 	sub.w	r6, r4, r8
 8022148:	b2b6      	uxth	r6, r6
 802214a:	b280      	uxth	r0, r0
 802214c:	4373      	muls	r3, r6
 802214e:	fb0c 3300 	mla	r3, ip, r0, r3
 8022152:	9802      	ldr	r0, [sp, #8]
 8022154:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022158:	fb00 3505 	mla	r5, r0, r5, r3
 802215c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022160:	fb08 5707 	mla	r7, r8, r7, r5
 8022164:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022168:	120b      	asrs	r3, r1, #8
 802216a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802216e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8022172:	b2ff      	uxtb	r7, r7
 8022174:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022178:	10c8      	asrs	r0, r1, #3
 802217a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802217e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022182:	00c9      	lsls	r1, r1, #3
 8022184:	437b      	muls	r3, r7
 8022186:	ea42 0e0e 	orr.w	lr, r2, lr
 802218a:	b2c9      	uxtb	r1, r1
 802218c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022190:	fa1f f28e 	uxth.w	r2, lr
 8022194:	4378      	muls	r0, r7
 8022196:	434f      	muls	r7, r1
 8022198:	1c59      	adds	r1, r3, #1
 802219a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802219e:	1213      	asrs	r3, r2, #8
 80221a0:	f023 0307 	bic.w	r3, r3, #7
 80221a4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80221a8:	1c41      	adds	r1, r0, #1
 80221aa:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80221ae:	10d1      	asrs	r1, r2, #3
 80221b0:	f021 0103 	bic.w	r1, r1, #3
 80221b4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80221b8:	021b      	lsls	r3, r3, #8
 80221ba:	00c9      	lsls	r1, r1, #3
 80221bc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80221c0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80221c4:	430b      	orrs	r3, r1
 80221c6:	1c79      	adds	r1, r7, #1
 80221c8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80221cc:	00d2      	lsls	r2, r2, #3
 80221ce:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80221d2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80221d6:	431a      	orrs	r2, r3
 80221d8:	9b03      	ldr	r3, [sp, #12]
 80221da:	801a      	strh	r2, [r3, #0]
 80221dc:	b005      	add	sp, #20
 80221de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80221e2:	f04f 0c00 	mov.w	ip, #0
 80221e6:	4664      	mov	r4, ip
 80221e8:	e6e5      	b.n	8021fb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80221ea:	2300      	movs	r3, #0
 80221ec:	469c      	mov	ip, r3
 80221ee:	461a      	mov	r2, r3
 80221f0:	461c      	mov	r4, r3
 80221f2:	e707      	b.n	8022004 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80221f4:	2300      	movs	r3, #0
 80221f6:	461a      	mov	r2, r3
 80221f8:	e704      	b.n	8022004 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80221fa:	460b      	mov	r3, r1
 80221fc:	460a      	mov	r2, r1
 80221fe:	e701      	b.n	8022004 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022200:	2500      	movs	r5, #0
 8022202:	46ab      	mov	fp, r5
 8022204:	e72f      	b.n	8022066 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8022206:	2700      	movs	r7, #0
 8022208:	463d      	mov	r5, r7
 802220a:	4638      	mov	r0, r7
 802220c:	46bb      	mov	fp, r7
 802220e:	e754      	b.n	80220ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022210:	4677      	mov	r7, lr
 8022212:	4675      	mov	r5, lr
 8022214:	4670      	mov	r0, lr
 8022216:	46f3      	mov	fp, lr
 8022218:	e74f      	b.n	80220ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802221a:	2700      	movs	r7, #0
 802221c:	4638      	mov	r0, r7
 802221e:	e74c      	b.n	80220ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022220:	460f      	mov	r7, r1
 8022222:	4608      	mov	r0, r1
 8022224:	e749      	b.n	80220ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08022228 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802222c:	b093      	sub	sp, #76	; 0x4c
 802222e:	9210      	str	r2, [sp, #64]	; 0x40
 8022230:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022232:	910e      	str	r1, [sp, #56]	; 0x38
 8022234:	9306      	str	r3, [sp, #24]
 8022236:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802223a:	9011      	str	r0, [sp, #68]	; 0x44
 802223c:	6850      	ldr	r0, [r2, #4]
 802223e:	6812      	ldr	r2, [r2, #0]
 8022240:	fb00 1303 	mla	r3, r0, r3, r1
 8022244:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022248:	9307      	str	r3, [sp, #28]
 802224a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802224c:	681b      	ldr	r3, [r3, #0]
 802224e:	9308      	str	r3, [sp, #32]
 8022250:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022252:	685b      	ldr	r3, [r3, #4]
 8022254:	9309      	str	r3, [sp, #36]	; 0x24
 8022256:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022258:	2b00      	cmp	r3, #0
 802225a:	dc03      	bgt.n	8022264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802225c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802225e:	2b00      	cmp	r3, #0
 8022260:	f340 83b4 	ble.w	80229cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022264:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022266:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802226a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802226e:	1e48      	subs	r0, r1, #1
 8022270:	1e55      	subs	r5, r2, #1
 8022272:	9b06      	ldr	r3, [sp, #24]
 8022274:	2b00      	cmp	r3, #0
 8022276:	f340 8163 	ble.w	8022540 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802227a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 802227c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802227e:	1436      	asrs	r6, r6, #16
 8022280:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022284:	d406      	bmi.n	8022294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022286:	4286      	cmp	r6, r0
 8022288:	da04      	bge.n	8022294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802228a:	2b00      	cmp	r3, #0
 802228c:	db02      	blt.n	8022294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802228e:	42ab      	cmp	r3, r5
 8022290:	f2c0 8157 	blt.w	8022542 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8022294:	3601      	adds	r6, #1
 8022296:	f100 8144 	bmi.w	8022522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802229a:	42b1      	cmp	r1, r6
 802229c:	f2c0 8141 	blt.w	8022522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80222a0:	3301      	adds	r3, #1
 80222a2:	f100 813e 	bmi.w	8022522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80222a6:	429a      	cmp	r2, r3
 80222a8:	f2c0 813b 	blt.w	8022522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80222ac:	9b06      	ldr	r3, [sp, #24]
 80222ae:	9f07      	ldr	r7, [sp, #28]
 80222b0:	930f      	str	r3, [sp, #60]	; 0x3c
 80222b2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80222b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80222b8:	2b00      	cmp	r3, #0
 80222ba:	f340 8164 	ble.w	8022586 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80222be:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80222c0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80222c2:	1418      	asrs	r0, r3, #16
 80222c4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80222c6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80222ca:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80222cc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80222d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80222d2:	142d      	asrs	r5, r5, #16
 80222d4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80222d8:	f100 81ee 	bmi.w	80226b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80222dc:	f102 3eff 	add.w	lr, r2, #4294967295
 80222e0:	4575      	cmp	r5, lr
 80222e2:	f280 81e9 	bge.w	80226b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80222e6:	2800      	cmp	r0, #0
 80222e8:	f2c0 81e6 	blt.w	80226b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80222ec:	f103 3eff 	add.w	lr, r3, #4294967295
 80222f0:	4570      	cmp	r0, lr
 80222f2:	f280 81e1 	bge.w	80226b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80222f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80222f8:	b212      	sxth	r2, r2
 80222fa:	fb00 5002 	mla	r0, r0, r2, r5
 80222fe:	fa1f fe81 	uxth.w	lr, r1
 8022302:	eb03 0a00 	add.w	sl, r3, r0
 8022306:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802230a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802230e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022312:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8022316:	b29b      	uxth	r3, r3
 8022318:	f1bc 0f00 	cmp.w	ip, #0
 802231c:	f000 8179 	beq.w	8022612 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8022320:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8022324:	940a      	str	r4, [sp, #40]	; 0x28
 8022326:	eb0a 0b02 	add.w	fp, sl, r2
 802232a:	fa1f fa8c 	uxth.w	sl, ip
 802232e:	fb0a fe0e 	mul.w	lr, sl, lr
 8022332:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022336:	fa1f fa8a 	uxth.w	sl, sl
 802233a:	eba5 050e 	sub.w	r5, r5, lr
 802233e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022342:	940b      	str	r4, [sp, #44]	; 0x2c
 8022344:	eba3 030a 	sub.w	r3, r3, sl
 8022348:	b2ad      	uxth	r5, r5
 802234a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802234c:	b29b      	uxth	r3, r3
 802234e:	fb08 f505 	mul.w	r5, r8, r5
 8022352:	fb09 5303 	mla	r3, r9, r3, r5
 8022356:	fb0a 3304 	mla	r3, sl, r4, r3
 802235a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802235c:	fb0e 3304 	mla	r3, lr, r4, r3
 8022360:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022364:	2b00      	cmp	r3, #0
 8022366:	f000 80cf 	beq.w	8022508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802236a:	9c08      	ldr	r4, [sp, #32]
 802236c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022370:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022374:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022378:	f000 8150 	beq.w	802261c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 802237c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022380:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022384:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022388:	fb09 f000 	mul.w	r0, r9, r0
 802238c:	fb0a fe0e 	mul.w	lr, sl, lr
 8022390:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022394:	f100 0b20 	add.w	fp, r0, #32
 8022398:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802239c:	44ce      	add	lr, r9
 802239e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80223a2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80223a6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80223aa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80223ae:	ea4e 0909 	orr.w	r9, lr, r9
 80223b2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80223b6:	8868      	ldrh	r0, [r5, #2]
 80223b8:	d019      	beq.n	80223ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80223ba:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80223be:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80223c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223c6:	fb08 f800 	mul.w	r8, r8, r0
 80223ca:	fb0a fe0e 	mul.w	lr, sl, lr
 80223ce:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80223d2:	f108 0b20 	add.w	fp, r8, #32
 80223d6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80223da:	4486      	add	lr, r0
 80223dc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80223e0:	0a00      	lsrs	r0, r0, #8
 80223e2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80223e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223ea:	ea4e 0000 	orr.w	r0, lr, r0
 80223ee:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80223f2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80223f6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80223fa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80223fe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022402:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022406:	ea4e 0909 	orr.w	r9, lr, r9
 802240a:	ea4a 0000 	orr.w	r0, sl, r0
 802240e:	f1bc 0f00 	cmp.w	ip, #0
 8022412:	f000 8105 	beq.w	8022620 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022416:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802241a:	3a01      	subs	r2, #1
 802241c:	0052      	lsls	r2, r2, #1
 802241e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022420:	3202      	adds	r2, #2
 8022422:	2cff      	cmp	r4, #255	; 0xff
 8022424:	eb05 0e02 	add.w	lr, r5, r2
 8022428:	5aaa      	ldrh	r2, [r5, r2]
 802242a:	d018      	beq.n	802245e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802242c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022430:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022434:	fb04 fa02 	mul.w	sl, r4, r2
 8022438:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802243c:	fb08 f805 	mul.w	r8, r8, r5
 8022440:	f10a 0520 	add.w	r5, sl, #32
 8022444:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022448:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802244c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022450:	4442      	add	r2, r8
 8022452:	0a2d      	lsrs	r5, r5, #8
 8022454:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022458:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802245c:	432a      	orrs	r2, r5
 802245e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022460:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022464:	2cff      	cmp	r4, #255	; 0xff
 8022466:	d01a      	beq.n	802249e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022468:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802246c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022470:	fb04 fa05 	mul.w	sl, r4, r5
 8022474:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022478:	fb08 f80e 	mul.w	r8, r8, lr
 802247c:	f10a 0e20 	add.w	lr, sl, #32
 8022480:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022484:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022488:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802248c:	4445      	add	r5, r8
 802248e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022492:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022496:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802249a:	ea45 050e 	orr.w	r5, r5, lr
 802249e:	fb1c fe01 	smulbb	lr, ip, r1
 80224a2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80224a6:	f1cc 0810 	rsb	r8, ip, #16
 80224aa:	eba8 0801 	sub.w	r8, r8, r1
 80224ae:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80224b2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80224b6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80224ba:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80224be:	4341      	muls	r1, r0
 80224c0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80224c4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80224c8:	ea4a 0202 	orr.w	r2, sl, r2
 80224cc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80224d0:	fb09 1108 	mla	r1, r9, r8, r1
 80224d4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80224d8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80224dc:	fb0c 1102 	mla	r1, ip, r2, r1
 80224e0:	ea4b 0505 	orr.w	r5, fp, r5
 80224e4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80224e8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80224ec:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80224f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80224f4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80224f8:	ea42 0e0e 	orr.w	lr, r2, lr
 80224fc:	fa1f f28e 	uxth.w	r2, lr
 8022500:	2bff      	cmp	r3, #255	; 0xff
 8022502:	f040 80a1 	bne.w	8022648 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8022506:	803a      	strh	r2, [r7, #0]
 8022508:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802250a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802250c:	4413      	add	r3, r2
 802250e:	931d      	str	r3, [sp, #116]	; 0x74
 8022510:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022512:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022514:	441a      	add	r2, r3
 8022516:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022518:	921e      	str	r2, [sp, #120]	; 0x78
 802251a:	3b01      	subs	r3, #1
 802251c:	3702      	adds	r7, #2
 802251e:	930f      	str	r3, [sp, #60]	; 0x3c
 8022520:	e6c9      	b.n	80222b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022522:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022524:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8022526:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8022528:	4433      	add	r3, r6
 802252a:	931d      	str	r3, [sp, #116]	; 0x74
 802252c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802252e:	441c      	add	r4, r3
 8022530:	9b06      	ldr	r3, [sp, #24]
 8022532:	941e      	str	r4, [sp, #120]	; 0x78
 8022534:	3b01      	subs	r3, #1
 8022536:	9306      	str	r3, [sp, #24]
 8022538:	9b07      	ldr	r3, [sp, #28]
 802253a:	3302      	adds	r3, #2
 802253c:	9307      	str	r3, [sp, #28]
 802253e:	e698      	b.n	8022272 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022540:	d028      	beq.n	8022594 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022542:	9b06      	ldr	r3, [sp, #24]
 8022544:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022546:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8022548:	3b01      	subs	r3, #1
 802254a:	fb00 5003 	mla	r0, r0, r3, r5
 802254e:	1400      	asrs	r0, r0, #16
 8022550:	f53f aeac 	bmi.w	80222ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022554:	3901      	subs	r1, #1
 8022556:	4288      	cmp	r0, r1
 8022558:	f6bf aea8 	bge.w	80222ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802255c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802255e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8022560:	fb01 0303 	mla	r3, r1, r3, r0
 8022564:	141b      	asrs	r3, r3, #16
 8022566:	f53f aea1 	bmi.w	80222ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802256a:	3a01      	subs	r2, #1
 802256c:	4293      	cmp	r3, r2
 802256e:	f6bf ae9d 	bge.w	80222ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022572:	9b06      	ldr	r3, [sp, #24]
 8022574:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022578:	930f      	str	r3, [sp, #60]	; 0x3c
 802257a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802257e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022580:	2b00      	cmp	r3, #0
 8022582:	f300 80b6 	bgt.w	80226f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8022586:	9b06      	ldr	r3, [sp, #24]
 8022588:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802258c:	9b07      	ldr	r3, [sp, #28]
 802258e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022592:	9307      	str	r3, [sp, #28]
 8022594:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022596:	2b00      	cmp	r3, #0
 8022598:	f340 8218 	ble.w	80229cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802259c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225a0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80225a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80225a8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80225aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80225b6:	eef0 6a62 	vmov.f32	s13, s5
 80225ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80225be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80225c6:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80225ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80225ce:	eef0 6a43 	vmov.f32	s13, s6
 80225d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80225d6:	ee12 2a90 	vmov	r2, s5
 80225da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80225de:	fb92 f3f3 	sdiv	r3, r2, r3
 80225e2:	ee13 2a10 	vmov	r2, s6
 80225e6:	931f      	str	r3, [sp, #124]	; 0x7c
 80225e8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80225ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80225ee:	9320      	str	r3, [sp, #128]	; 0x80
 80225f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80225f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80225f4:	3b01      	subs	r3, #1
 80225f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225fa:	930e      	str	r3, [sp, #56]	; 0x38
 80225fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80225fe:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8022602:	bf08      	it	eq
 8022604:	4613      	moveq	r3, r2
 8022606:	9306      	str	r3, [sp, #24]
 8022608:	eeb0 3a67 	vmov.f32	s6, s15
 802260c:	eef0 2a47 	vmov.f32	s5, s14
 8022610:	e621      	b.n	8022256 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8022612:	fb08 f505 	mul.w	r5, r8, r5
 8022616:	fb09 5303 	mla	r3, r9, r3, r5
 802261a:	e6a1      	b.n	8022360 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802261c:	4681      	mov	r9, r0
 802261e:	e6c8      	b.n	80223b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8022620:	f1c1 0210 	rsb	r2, r1, #16
 8022624:	4341      	muls	r1, r0
 8022626:	fb09 1902 	mla	r9, r9, r2, r1
 802262a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802262e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022632:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022636:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802263a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802263e:	ea42 0909 	orr.w	r9, r2, r9
 8022642:	fa1f f289 	uxth.w	r2, r9
 8022646:	e75b      	b.n	8022500 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022648:	f8b7 c000 	ldrh.w	ip, [r7]
 802264c:	43db      	mvns	r3, r3
 802264e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8022652:	fa5f fe83 	uxtb.w	lr, r3
 8022656:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802265a:	fb00 f00e 	mul.w	r0, r0, lr
 802265e:	1c41      	adds	r1, r0, #1
 8022660:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022664:	1211      	asrs	r1, r2, #8
 8022666:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802266a:	f021 0107 	bic.w	r1, r1, #7
 802266e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022672:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022676:	48d7      	ldr	r0, [pc, #860]	; (80229d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022678:	fb05 f50e 	mul.w	r5, r5, lr
 802267c:	b2c9      	uxtb	r1, r1
 802267e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022682:	1c69      	adds	r1, r5, #1
 8022684:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022688:	10d1      	asrs	r1, r2, #3
 802268a:	f021 0103 	bic.w	r1, r1, #3
 802268e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8022692:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022696:	b2db      	uxtb	r3, r3
 8022698:	00c9      	lsls	r1, r1, #3
 802269a:	fb03 f30e 	mul.w	r3, r3, lr
 802269e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80226a2:	4301      	orrs	r1, r0
 80226a4:	1c58      	adds	r0, r3, #1
 80226a6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80226aa:	00d2      	lsls	r2, r2, #3
 80226ac:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80226b0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80226b4:	430a      	orrs	r2, r1
 80226b6:	e726      	b.n	8022506 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80226b8:	f115 0e01 	adds.w	lr, r5, #1
 80226bc:	f53f af24 	bmi.w	8022508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226c0:	4572      	cmp	r2, lr
 80226c2:	f6ff af21 	blt.w	8022508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226c6:	f110 0e01 	adds.w	lr, r0, #1
 80226ca:	f53f af1d 	bmi.w	8022508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226ce:	4573      	cmp	r3, lr
 80226d0:	f6ff af1a 	blt.w	8022508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226d4:	b21b      	sxth	r3, r3
 80226d6:	b212      	sxth	r2, r2
 80226d8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80226dc:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80226e0:	9301      	str	r3, [sp, #4]
 80226e2:	9200      	str	r2, [sp, #0]
 80226e4:	4639      	mov	r1, r7
 80226e6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80226ea:	9811      	ldr	r0, [sp, #68]	; 0x44
 80226ec:	f7ff fc24 	bl	8021f38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80226f0:	e70a      	b.n	8022508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226f2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80226f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80226f8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80226fa:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80226fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022700:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022704:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022706:	141f      	asrs	r7, r3, #16
 8022708:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802270a:	141b      	asrs	r3, r3, #16
 802270c:	fb01 3707 	mla	r7, r1, r7, r3
 8022710:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022712:	fa1f fc82 	uxth.w	ip, r2
 8022716:	eb03 0a07 	add.w	sl, r3, r7
 802271a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802271e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022722:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022726:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802272a:	b29b      	uxth	r3, r3
 802272c:	2d00      	cmp	r5, #0
 802272e:	f000 80fe 	beq.w	802292e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8022732:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022736:	940c      	str	r4, [sp, #48]	; 0x30
 8022738:	eb0a 0b01 	add.w	fp, sl, r1
 802273c:	fa1f fa85 	uxth.w	sl, r5
 8022740:	fb0a fc0c 	mul.w	ip, sl, ip
 8022744:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022748:	fa1f fa8a 	uxth.w	sl, sl
 802274c:	eba0 000c 	sub.w	r0, r0, ip
 8022750:	eba3 030a 	sub.w	r3, r3, sl
 8022754:	b280      	uxth	r0, r0
 8022756:	fb08 f000 	mul.w	r0, r8, r0
 802275a:	b29b      	uxth	r3, r3
 802275c:	fb09 0303 	mla	r3, r9, r3, r0
 8022760:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022762:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022766:	940d      	str	r4, [sp, #52]	; 0x34
 8022768:	fb0a 3300 	mla	r3, sl, r0, r3
 802276c:	fb0c 3304 	mla	r3, ip, r4, r3
 8022770:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022774:	2b00      	cmp	r3, #0
 8022776:	f000 80cc 	beq.w	8022912 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802277a:	9808      	ldr	r0, [sp, #32]
 802277c:	9c08      	ldr	r4, [sp, #32]
 802277e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022782:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022786:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802278a:	f000 80d5 	beq.w	8022938 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802278e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022792:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022796:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802279a:	fb09 f707 	mul.w	r7, r9, r7
 802279e:	fb0a fc0c 	mul.w	ip, sl, ip
 80227a2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80227a6:	f107 0b20 	add.w	fp, r7, #32
 80227aa:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80227ae:	44cc      	add	ip, r9
 80227b0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80227b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80227b8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80227bc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80227c0:	ea4c 0909 	orr.w	r9, ip, r9
 80227c4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80227c8:	8847      	ldrh	r7, [r0, #2]
 80227ca:	d019      	beq.n	8022800 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80227cc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80227d0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80227d4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80227d8:	fb08 f807 	mul.w	r8, r8, r7
 80227dc:	fb0a fc0c 	mul.w	ip, sl, ip
 80227e0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80227e4:	f108 0b20 	add.w	fp, r8, #32
 80227e8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80227ec:	44bc      	add	ip, r7
 80227ee:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80227f2:	0a3f      	lsrs	r7, r7, #8
 80227f4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80227f8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80227fc:	ea4c 0707 	orr.w	r7, ip, r7
 8022800:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022804:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022808:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802280c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022810:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022814:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022818:	ea4c 0909 	orr.w	r9, ip, r9
 802281c:	ea4a 0707 	orr.w	r7, sl, r7
 8022820:	2d00      	cmp	r5, #0
 8022822:	f000 808b 	beq.w	802293c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8022826:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802282a:	3901      	subs	r1, #1
 802282c:	0049      	lsls	r1, r1, #1
 802282e:	3102      	adds	r1, #2
 8022830:	eb00 0c01 	add.w	ip, r0, r1
 8022834:	5a41      	ldrh	r1, [r0, r1]
 8022836:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022838:	28ff      	cmp	r0, #255	; 0xff
 802283a:	d019      	beq.n	8022870 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802283c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802283e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022842:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022846:	fb04 fa01 	mul.w	sl, r4, r1
 802284a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802284e:	fb08 f800 	mul.w	r8, r8, r0
 8022852:	f10a 0020 	add.w	r0, sl, #32
 8022856:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802285a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802285e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022862:	4441      	add	r1, r8
 8022864:	0a00      	lsrs	r0, r0, #8
 8022866:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802286a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802286e:	4301      	orrs	r1, r0
 8022870:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022872:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022876:	2cff      	cmp	r4, #255	; 0xff
 8022878:	d01a      	beq.n	80228b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802287a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802287e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022882:	fb04 fa00 	mul.w	sl, r4, r0
 8022886:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802288a:	fb08 f80c 	mul.w	r8, r8, ip
 802288e:	f10a 0c20 	add.w	ip, sl, #32
 8022892:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022896:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802289a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802289e:	4440      	add	r0, r8
 80228a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80228a4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80228a8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80228ac:	ea40 000c 	orr.w	r0, r0, ip
 80228b0:	fb15 fc02 	smulbb	ip, r5, r2
 80228b4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80228b8:	f1c5 0810 	rsb	r8, r5, #16
 80228bc:	eba8 0802 	sub.w	r8, r8, r2
 80228c0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80228c4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80228c8:	437a      	muls	r2, r7
 80228ca:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80228ce:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80228d2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80228d6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80228da:	fb09 2208 	mla	r2, r9, r8, r2
 80228de:	ea4a 0101 	orr.w	r1, sl, r1
 80228e2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80228e6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80228ea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80228ee:	fb05 2201 	mla	r2, r5, r1, r2
 80228f2:	ea4b 0000 	orr.w	r0, fp, r0
 80228f6:	fb0c 2200 	mla	r2, ip, r0, r2
 80228fa:	0d57      	lsrs	r7, r2, #21
 80228fc:	0952      	lsrs	r2, r2, #5
 80228fe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022902:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022906:	433a      	orrs	r2, r7
 8022908:	2bff      	cmp	r3, #255	; 0xff
 802290a:	b292      	uxth	r2, r2
 802290c:	d127      	bne.n	802295e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802290e:	f8ae 2000 	strh.w	r2, [lr]
 8022912:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022914:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022916:	4413      	add	r3, r2
 8022918:	931d      	str	r3, [sp, #116]	; 0x74
 802291a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802291c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802291e:	441a      	add	r2, r3
 8022920:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022922:	921e      	str	r2, [sp, #120]	; 0x78
 8022924:	3b01      	subs	r3, #1
 8022926:	f10e 0e02 	add.w	lr, lr, #2
 802292a:	930f      	str	r3, [sp, #60]	; 0x3c
 802292c:	e627      	b.n	802257e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802292e:	fb08 f000 	mul.w	r0, r8, r0
 8022932:	fb09 0303 	mla	r3, r9, r3, r0
 8022936:	e71b      	b.n	8022770 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022938:	46b9      	mov	r9, r7
 802293a:	e743      	b.n	80227c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802293c:	f1c2 0110 	rsb	r1, r2, #16
 8022940:	437a      	muls	r2, r7
 8022942:	fb09 2901 	mla	r9, r9, r1, r2
 8022946:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802294a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802294e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022952:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022956:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802295a:	4302      	orrs	r2, r0
 802295c:	e7d4      	b.n	8022908 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802295e:	f8be 7000 	ldrh.w	r7, [lr]
 8022962:	4c1c      	ldr	r4, [pc, #112]	; (80229d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022964:	43db      	mvns	r3, r3
 8022966:	1238      	asrs	r0, r7, #8
 8022968:	fa5f fc83 	uxtb.w	ip, r3
 802296c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022970:	10fd      	asrs	r5, r7, #3
 8022972:	fb00 f00c 	mul.w	r0, r0, ip
 8022976:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802297a:	fb05 f10c 	mul.w	r1, r5, ip
 802297e:	1c45      	adds	r5, r0, #1
 8022980:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022984:	1215      	asrs	r5, r2, #8
 8022986:	f025 0507 	bic.w	r5, r5, #7
 802298a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802298e:	1c4d      	adds	r5, r1, #1
 8022990:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022994:	10d1      	asrs	r1, r2, #3
 8022996:	f021 0103 	bic.w	r1, r1, #3
 802299a:	00fb      	lsls	r3, r7, #3
 802299c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80229a0:	b2db      	uxtb	r3, r3
 80229a2:	b2c0      	uxtb	r0, r0
 80229a4:	00c9      	lsls	r1, r1, #3
 80229a6:	fb03 f30c 	mul.w	r3, r3, ip
 80229aa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80229ae:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80229b2:	4308      	orrs	r0, r1
 80229b4:	1c59      	adds	r1, r3, #1
 80229b6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80229ba:	00d2      	lsls	r2, r2, #3
 80229bc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80229c0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80229c4:	4318      	orrs	r0, r3
 80229c6:	f8ae 0000 	strh.w	r0, [lr]
 80229ca:	e7a2      	b.n	8022912 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80229cc:	b013      	add	sp, #76	; 0x4c
 80229ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80229d2:	bf00      	nop
 80229d4:	fffff800 	.word	0xfffff800

080229d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80229d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80229dc:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80229e0:	fb05 4c03 	mla	ip, r5, r3, r4
 80229e4:	2d00      	cmp	r5, #0
 80229e6:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80229ea:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80229ee:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80229f2:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80229f6:	8808      	ldrh	r0, [r1, #0]
 80229f8:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80229fc:	f2c0 80a7 	blt.w	8022b4e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022a00:	45aa      	cmp	sl, r5
 8022a02:	f340 80a4 	ble.w	8022b4e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022a06:	2c00      	cmp	r4, #0
 8022a08:	f2c0 809f 	blt.w	8022b4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022a0c:	42a3      	cmp	r3, r4
 8022a0e:	f340 809c 	ble.w	8022b4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022a12:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022a16:	1c62      	adds	r2, r4, #1
 8022a18:	f100 809c 	bmi.w	8022b54 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022a1c:	4293      	cmp	r3, r2
 8022a1e:	f340 8099 	ble.w	8022b54 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022a22:	f1b9 0f00 	cmp.w	r9, #0
 8022a26:	f000 8095 	beq.w	8022b54 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022a2a:	f8be c002 	ldrh.w	ip, [lr, #2]
 8022a2e:	3501      	adds	r5, #1
 8022a30:	f100 8094 	bmi.w	8022b5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022a34:	45aa      	cmp	sl, r5
 8022a36:	f340 8091 	ble.w	8022b5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022a3a:	2f00      	cmp	r7, #0
 8022a3c:	f000 808e 	beq.w	8022b5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022a40:	2c00      	cmp	r4, #0
 8022a42:	f2c0 8089 	blt.w	8022b58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022a46:	42a3      	cmp	r3, r4
 8022a48:	f340 8086 	ble.w	8022b58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022a4c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022a50:	3401      	adds	r4, #1
 8022a52:	f100 8086 	bmi.w	8022b62 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022a56:	42a3      	cmp	r3, r4
 8022a58:	f340 8083 	ble.w	8022b62 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022a5c:	f1b9 0f00 	cmp.w	r9, #0
 8022a60:	d07f      	beq.n	8022b62 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022a62:	3301      	adds	r3, #1
 8022a64:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022a68:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022a6c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022a70:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8022a74:	fb19 fe07 	smulbb	lr, r9, r7
 8022a78:	ea44 0808 	orr.w	r8, r4, r8
 8022a7c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022a80:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022a84:	f1c7 0210 	rsb	r2, r7, #16
 8022a88:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022a8c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022a90:	ea44 0c0c 	orr.w	ip, r4, ip
 8022a94:	eba2 0209 	sub.w	r2, r2, r9
 8022a98:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022a9c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022aa0:	fb04 f40c 	mul.w	r4, r4, ip
 8022aa4:	fb02 4808 	mla	r8, r2, r8, r4
 8022aa8:	041a      	lsls	r2, r3, #16
 8022aaa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022aae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022ab2:	4313      	orrs	r3, r2
 8022ab4:	042a      	lsls	r2, r5, #16
 8022ab6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022aba:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022abe:	fb0e 8303 	mla	r3, lr, r3, r8
 8022ac2:	432a      	orrs	r2, r5
 8022ac4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022ac8:	fb07 3202 	mla	r2, r7, r2, r3
 8022acc:	0d53      	lsrs	r3, r2, #21
 8022ace:	0952      	lsrs	r2, r2, #5
 8022ad0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ad4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022ad8:	431a      	orrs	r2, r3
 8022ada:	b293      	uxth	r3, r2
 8022adc:	b2b4      	uxth	r4, r6
 8022ade:	1202      	asrs	r2, r0, #8
 8022ae0:	43f6      	mvns	r6, r6
 8022ae2:	b2f6      	uxtb	r6, r6
 8022ae4:	121d      	asrs	r5, r3, #8
 8022ae6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022aea:	fb12 f206 	smulbb	r2, r2, r6
 8022aee:	10c7      	asrs	r7, r0, #3
 8022af0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022af4:	00c0      	lsls	r0, r0, #3
 8022af6:	fb05 2504 	mla	r5, r5, r4, r2
 8022afa:	b2c0      	uxtb	r0, r0
 8022afc:	10da      	asrs	r2, r3, #3
 8022afe:	00db      	lsls	r3, r3, #3
 8022b00:	b2db      	uxtb	r3, r3
 8022b02:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022b06:	fb10 f006 	smulbb	r0, r0, r6
 8022b0a:	b2ad      	uxth	r5, r5
 8022b0c:	fb03 0004 	mla	r0, r3, r4, r0
 8022b10:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022b14:	fb17 f706 	smulbb	r7, r7, r6
 8022b18:	b280      	uxth	r0, r0
 8022b1a:	1c6b      	adds	r3, r5, #1
 8022b1c:	fb02 7204 	mla	r2, r2, r4, r7
 8022b20:	b292      	uxth	r2, r2
 8022b22:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022b26:	1c43      	adds	r3, r0, #1
 8022b28:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022b2c:	1c50      	adds	r0, r2, #1
 8022b2e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022b32:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022b36:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022b3a:	0952      	lsrs	r2, r2, #5
 8022b3c:	432b      	orrs	r3, r5
 8022b3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022b42:	4313      	orrs	r3, r2
 8022b44:	800b      	strh	r3, [r1, #0]
 8022b46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022b4a:	4680      	mov	r8, r0
 8022b4c:	e763      	b.n	8022a16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8022b4e:	4684      	mov	ip, r0
 8022b50:	4680      	mov	r8, r0
 8022b52:	e76c      	b.n	8022a2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022b54:	4684      	mov	ip, r0
 8022b56:	e76a      	b.n	8022a2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022b58:	4605      	mov	r5, r0
 8022b5a:	e779      	b.n	8022a50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8022b5c:	4603      	mov	r3, r0
 8022b5e:	4605      	mov	r5, r0
 8022b60:	e782      	b.n	8022a68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8022b62:	4603      	mov	r3, r0
 8022b64:	e780      	b.n	8022a68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08022b66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022b66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b6a:	b093      	sub	sp, #76	; 0x4c
 8022b6c:	461d      	mov	r5, r3
 8022b6e:	9210      	str	r2, [sp, #64]	; 0x40
 8022b70:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022b72:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8022b76:	920b      	str	r2, [sp, #44]	; 0x2c
 8022b78:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8022b7c:	910a      	str	r1, [sp, #40]	; 0x28
 8022b7e:	6859      	ldr	r1, [r3, #4]
 8022b80:	681b      	ldr	r3, [r3, #0]
 8022b82:	9011      	str	r0, [sp, #68]	; 0x44
 8022b84:	fb01 2707 	mla	r7, r1, r7, r2
 8022b88:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022b8c:	9307      	str	r3, [sp, #28]
 8022b8e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b90:	681b      	ldr	r3, [r3, #0]
 8022b92:	9309      	str	r3, [sp, #36]	; 0x24
 8022b94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022b96:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022b9a:	43db      	mvns	r3, r3
 8022b9c:	b2db      	uxtb	r3, r3
 8022b9e:	9308      	str	r3, [sp, #32]
 8022ba0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022ba2:	2b00      	cmp	r3, #0
 8022ba4:	dc03      	bgt.n	8022bae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022ba6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022ba8:	2b00      	cmp	r3, #0
 8022baa:	f340 8203 	ble.w	8022fb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022bae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022bb0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022bb4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022bb8:	1e48      	subs	r0, r1, #1
 8022bba:	f102 3cff 	add.w	ip, r2, #4294967295
 8022bbe:	2d00      	cmp	r5, #0
 8022bc0:	f340 80da 	ble.w	8022d78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022bc4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022bc8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022bcc:	d406      	bmi.n	8022bdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022bce:	4586      	cmp	lr, r0
 8022bd0:	da04      	bge.n	8022bdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022bd2:	2b00      	cmp	r3, #0
 8022bd4:	db02      	blt.n	8022bdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022bd6:	4563      	cmp	r3, ip
 8022bd8:	f2c0 80cf 	blt.w	8022d7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022bdc:	f11e 0e01 	adds.w	lr, lr, #1
 8022be0:	f100 80c1 	bmi.w	8022d66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022be4:	4571      	cmp	r1, lr
 8022be6:	f2c0 80be 	blt.w	8022d66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022bea:	3301      	adds	r3, #1
 8022bec:	f100 80bb 	bmi.w	8022d66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022bf0:	429a      	cmp	r2, r3
 8022bf2:	f2c0 80b8 	blt.w	8022d66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022bf6:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8022bfa:	46a9      	mov	r9, r5
 8022bfc:	f1b9 0f00 	cmp.w	r9, #0
 8022c00:	f340 80d8 	ble.w	8022db4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022c04:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c06:	1421      	asrs	r1, r4, #16
 8022c08:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022c0c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022c10:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022c14:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022c18:	f100 8111 	bmi.w	8022e3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022c1c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022c20:	4551      	cmp	r1, sl
 8022c22:	f280 810c 	bge.w	8022e3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022c26:	2800      	cmp	r0, #0
 8022c28:	f2c0 8109 	blt.w	8022e3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022c2c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022c30:	4550      	cmp	r0, sl
 8022c32:	f280 8104 	bge.w	8022e3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022c36:	fa0f f38e 	sxth.w	r3, lr
 8022c3a:	fb00 1103 	mla	r1, r0, r3, r1
 8022c3e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8022c40:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022c44:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8022c48:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8022c4c:	f1bc 0f00 	cmp.w	ip, #0
 8022c50:	d007      	beq.n	8022c62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8022c52:	005b      	lsls	r3, r3, #1
 8022c54:	eb0a 0003 	add.w	r0, sl, r3
 8022c58:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8022c5c:	930c      	str	r3, [sp, #48]	; 0x30
 8022c5e:	8843      	ldrh	r3, [r0, #2]
 8022c60:	930d      	str	r3, [sp, #52]	; 0x34
 8022c62:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8022c66:	fb12 f30c 	smulbb	r3, r2, ip
 8022c6a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022c6e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022c72:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022c76:	10db      	asrs	r3, r3, #3
 8022c78:	ea40 000e 	orr.w	r0, r0, lr
 8022c7c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022c80:	f1cc 0e10 	rsb	lr, ip, #16
 8022c84:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022c88:	ebae 0e02 	sub.w	lr, lr, r2
 8022c8c:	ea4a 0101 	orr.w	r1, sl, r1
 8022c90:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022c94:	4351      	muls	r1, r2
 8022c96:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8022c98:	9f08      	ldr	r7, [sp, #32]
 8022c9a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022c9e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022ca2:	0410      	lsls	r0, r2, #16
 8022ca4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022ca8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022cac:	4310      	orrs	r0, r2
 8022cae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022cb0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022cb2:	0412      	lsls	r2, r2, #16
 8022cb4:	fb03 e000 	mla	r0, r3, r0, lr
 8022cb8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022cbc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022cc0:	ea42 020e 	orr.w	r2, r2, lr
 8022cc4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022cc8:	fb03 0302 	mla	r3, r3, r2, r0
 8022ccc:	0d5a      	lsrs	r2, r3, #21
 8022cce:	095b      	lsrs	r3, r3, #5
 8022cd0:	f8b8 0000 	ldrh.w	r0, [r8]
 8022cd4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022cd8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022cdc:	4313      	orrs	r3, r2
 8022cde:	b29b      	uxth	r3, r3
 8022ce0:	1201      	asrs	r1, r0, #8
 8022ce2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8022ce6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8022cea:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022cee:	fb11 f107 	smulbb	r1, r1, r7
 8022cf2:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022cf6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022cfa:	00c0      	lsls	r0, r0, #3
 8022cfc:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022d00:	b2c0      	uxtb	r0, r0
 8022d02:	10d9      	asrs	r1, r3, #3
 8022d04:	00db      	lsls	r3, r3, #3
 8022d06:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022d0a:	b2db      	uxtb	r3, r3
 8022d0c:	fb10 f007 	smulbb	r0, r0, r7
 8022d10:	fa1f fc8c 	uxth.w	ip, ip
 8022d14:	fb03 0302 	mla	r3, r3, r2, r0
 8022d18:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022d1c:	fb1e fe07 	smulbb	lr, lr, r7
 8022d20:	fb01 e102 	mla	r1, r1, r2, lr
 8022d24:	b29a      	uxth	r2, r3
 8022d26:	f10c 0301 	add.w	r3, ip, #1
 8022d2a:	b289      	uxth	r1, r1
 8022d2c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022d30:	1c53      	adds	r3, r2, #1
 8022d32:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022d36:	1c4a      	adds	r2, r1, #1
 8022d38:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022d3c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022d40:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022d44:	0949      	lsrs	r1, r1, #5
 8022d46:	ea43 030c 	orr.w	r3, r3, ip
 8022d4a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022d4e:	430b      	orrs	r3, r1
 8022d50:	f8a8 3000 	strh.w	r3, [r8]
 8022d54:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022d56:	441c      	add	r4, r3
 8022d58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d5a:	f108 0802 	add.w	r8, r8, #2
 8022d5e:	441e      	add	r6, r3
 8022d60:	f109 39ff 	add.w	r9, r9, #4294967295
 8022d64:	e74a      	b.n	8022bfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022d66:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022d68:	441c      	add	r4, r3
 8022d6a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d6c:	441e      	add	r6, r3
 8022d6e:	9b07      	ldr	r3, [sp, #28]
 8022d70:	3302      	adds	r3, #2
 8022d72:	3d01      	subs	r5, #1
 8022d74:	9307      	str	r3, [sp, #28]
 8022d76:	e722      	b.n	8022bbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022d78:	d022      	beq.n	8022dc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8022d7a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022d7c:	1e6b      	subs	r3, r5, #1
 8022d7e:	fb00 4003 	mla	r0, r0, r3, r4
 8022d82:	1400      	asrs	r0, r0, #16
 8022d84:	f53f af37 	bmi.w	8022bf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022d88:	3901      	subs	r1, #1
 8022d8a:	4288      	cmp	r0, r1
 8022d8c:	f6bf af33 	bge.w	8022bf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022d90:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022d92:	fb01 6303 	mla	r3, r1, r3, r6
 8022d96:	141b      	asrs	r3, r3, #16
 8022d98:	f53f af2d 	bmi.w	8022bf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022d9c:	3a01      	subs	r2, #1
 8022d9e:	4293      	cmp	r3, r2
 8022da0:	f6bf af29 	bge.w	8022bf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022da4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022da8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8022dac:	46a8      	mov	r8, r5
 8022dae:	f1b8 0f00 	cmp.w	r8, #0
 8022db2:	dc5e      	bgt.n	8022e72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8022db4:	9b07      	ldr	r3, [sp, #28]
 8022db6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022dba:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022dbe:	9307      	str	r3, [sp, #28]
 8022dc0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022dc2:	2b00      	cmp	r3, #0
 8022dc4:	f340 80f6 	ble.w	8022fb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022dc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022dcc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022dd0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022dd4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022dd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022dda:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022dde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022de2:	eef0 6a62 	vmov.f32	s13, s5
 8022de6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022dea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022dee:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022df2:	ee16 4a90 	vmov	r4, s13
 8022df6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022dfa:	eef0 6a43 	vmov.f32	s13, s6
 8022dfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022e02:	ee12 2a90 	vmov	r2, s5
 8022e06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022e0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e0e:	ee13 2a10 	vmov	r2, s6
 8022e12:	931f      	str	r3, [sp, #124]	; 0x7c
 8022e14:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e16:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e1a:	9320      	str	r3, [sp, #128]	; 0x80
 8022e1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022e1e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022e20:	3b01      	subs	r3, #1
 8022e22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022e26:	930a      	str	r3, [sp, #40]	; 0x28
 8022e28:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e2a:	ee16 6a90 	vmov	r6, s13
 8022e2e:	bf14      	ite	ne
 8022e30:	461d      	movne	r5, r3
 8022e32:	4615      	moveq	r5, r2
 8022e34:	eeb0 3a67 	vmov.f32	s6, s15
 8022e38:	eef0 2a47 	vmov.f32	s5, s14
 8022e3c:	e6b0      	b.n	8022ba0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022e3e:	f111 0a01 	adds.w	sl, r1, #1
 8022e42:	d487      	bmi.n	8022d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e44:	45d6      	cmp	lr, sl
 8022e46:	db85      	blt.n	8022d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e48:	f110 0a01 	adds.w	sl, r0, #1
 8022e4c:	d482      	bmi.n	8022d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e4e:	4553      	cmp	r3, sl
 8022e50:	db80      	blt.n	8022d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e52:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022e54:	9101      	str	r1, [sp, #4]
 8022e56:	b21b      	sxth	r3, r3
 8022e58:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022e5c:	9300      	str	r3, [sp, #0]
 8022e5e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022e62:	fa0f f38e 	sxth.w	r3, lr
 8022e66:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022e68:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022e6a:	4641      	mov	r1, r8
 8022e6c:	f7ff fdb4 	bl	80229d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022e70:	e770      	b.n	8022d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e72:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e74:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022e76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022e7a:	1430      	asrs	r0, r6, #16
 8022e7c:	1423      	asrs	r3, r4, #16
 8022e7e:	fb01 3000 	mla	r0, r1, r0, r3
 8022e82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022e84:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022e88:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022e8c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022e90:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022e94:	8858      	ldrh	r0, [r3, #2]
 8022e96:	f1be 0f00 	cmp.w	lr, #0
 8022e9a:	d00b      	beq.n	8022eb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8022e9c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022ea0:	3901      	subs	r1, #1
 8022ea2:	0049      	lsls	r1, r1, #1
 8022ea4:	3102      	adds	r1, #2
 8022ea6:	eb03 0b01 	add.w	fp, r3, r1
 8022eaa:	5a5b      	ldrh	r3, [r3, r1]
 8022eac:	930e      	str	r3, [sp, #56]	; 0x38
 8022eae:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022eb2:	930f      	str	r3, [sp, #60]	; 0x3c
 8022eb4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022eb8:	fb12 f30e 	smulbb	r3, r2, lr
 8022ebc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022ec0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022ec4:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022ec8:	10db      	asrs	r3, r3, #3
 8022eca:	ea41 010c 	orr.w	r1, r1, ip
 8022ece:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022ed2:	f1ce 0c10 	rsb	ip, lr, #16
 8022ed6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022eda:	ebac 0c02 	sub.w	ip, ip, r2
 8022ede:	ea4b 0000 	orr.w	r0, fp, r0
 8022ee2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022ee6:	4350      	muls	r0, r2
 8022ee8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022eea:	9f08      	ldr	r7, [sp, #32]
 8022eec:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022ef0:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022ef4:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022ef8:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8022efc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022efe:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022f00:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022f04:	0412      	lsls	r2, r2, #16
 8022f06:	ea4b 0101 	orr.w	r1, fp, r1
 8022f0a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f0e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022f12:	fb03 c101 	mla	r1, r3, r1, ip
 8022f16:	4302      	orrs	r2, r0
 8022f18:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022f1c:	fb03 1202 	mla	r2, r3, r2, r1
 8022f20:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022f24:	0952      	lsrs	r2, r2, #5
 8022f26:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8022f2a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8022f2e:	f8b9 2000 	ldrh.w	r2, [r9]
 8022f32:	ea4b 0303 	orr.w	r3, fp, r3
 8022f36:	b29b      	uxth	r3, r3
 8022f38:	1211      	asrs	r1, r2, #8
 8022f3a:	1218      	asrs	r0, r3, #8
 8022f3c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022f40:	fb11 f107 	smulbb	r1, r1, r7
 8022f44:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022f48:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022f4c:	00d2      	lsls	r2, r2, #3
 8022f4e:	fb00 100a 	mla	r0, r0, sl, r1
 8022f52:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022f56:	10d9      	asrs	r1, r3, #3
 8022f58:	b2d2      	uxtb	r2, r2
 8022f5a:	00db      	lsls	r3, r3, #3
 8022f5c:	fb1c fc07 	smulbb	ip, ip, r7
 8022f60:	fb12 f207 	smulbb	r2, r2, r7
 8022f64:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022f68:	b2db      	uxtb	r3, r3
 8022f6a:	b280      	uxth	r0, r0
 8022f6c:	fb01 c10a 	mla	r1, r1, sl, ip
 8022f70:	fb03 230a 	mla	r3, r3, sl, r2
 8022f74:	b29b      	uxth	r3, r3
 8022f76:	b289      	uxth	r1, r1
 8022f78:	1c42      	adds	r2, r0, #1
 8022f7a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022f7e:	f101 0c01 	add.w	ip, r1, #1
 8022f82:	1c5a      	adds	r2, r3, #1
 8022f84:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022f88:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022f8c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022f8e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022f92:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022f96:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022f9a:	4310      	orrs	r0, r2
 8022f9c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022fa0:	441c      	add	r4, r3
 8022fa2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022fa4:	ea40 000c 	orr.w	r0, r0, ip
 8022fa8:	f829 0b02 	strh.w	r0, [r9], #2
 8022fac:	441e      	add	r6, r3
 8022fae:	f108 38ff 	add.w	r8, r8, #4294967295
 8022fb2:	e6fc      	b.n	8022dae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022fb4:	b013      	add	sp, #76	; 0x4c
 8022fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022fba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022fba:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022fbe:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022fc2:	fb0e 4703 	mla	r7, lr, r3, r4
 8022fc6:	f1be 0f00 	cmp.w	lr, #0
 8022fca:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022fce:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8022fd2:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8022fd6:	8808      	ldrh	r0, [r1, #0]
 8022fd8:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022fdc:	db60      	blt.n	80230a0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022fde:	45f1      	cmp	r9, lr
 8022fe0:	dd5e      	ble.n	80230a0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022fe2:	2c00      	cmp	r4, #0
 8022fe4:	db5a      	blt.n	802309c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022fe6:	42a3      	cmp	r3, r4
 8022fe8:	dd58      	ble.n	802309c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022fea:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022fee:	1c62      	adds	r2, r4, #1
 8022ff0:	d459      	bmi.n	80230a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022ff2:	4293      	cmp	r3, r2
 8022ff4:	dd57      	ble.n	80230a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022ff6:	2d00      	cmp	r5, #0
 8022ff8:	d055      	beq.n	80230a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022ffa:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8022ffe:	f11e 0e01 	adds.w	lr, lr, #1
 8023002:	d454      	bmi.n	80230ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023004:	45f1      	cmp	r9, lr
 8023006:	dd52      	ble.n	80230ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023008:	2e00      	cmp	r6, #0
 802300a:	d050      	beq.n	80230ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802300c:	2c00      	cmp	r4, #0
 802300e:	db4c      	blt.n	80230aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023010:	42a3      	cmp	r3, r4
 8023012:	dd4a      	ble.n	80230aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023014:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8023018:	3401      	adds	r4, #1
 802301a:	d405      	bmi.n	8023028 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802301c:	42a3      	cmp	r3, r4
 802301e:	dd03      	ble.n	8023028 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023020:	b115      	cbz	r5, 8023028 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023022:	3301      	adds	r3, #1
 8023024:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023028:	ea4f 430c 	mov.w	r3, ip, lsl #16
 802302c:	fb15 f406 	smulbb	r4, r5, r6
 8023030:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023034:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023038:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802303c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023040:	ea43 0c0c 	orr.w	ip, r3, ip
 8023044:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023048:	f1c6 0310 	rsb	r3, r6, #16
 802304c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023050:	1b5b      	subs	r3, r3, r5
 8023052:	ea4e 0707 	orr.w	r7, lr, r7
 8023056:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802305a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802305e:	437d      	muls	r5, r7
 8023060:	fb03 5c0c 	mla	ip, r3, ip, r5
 8023064:	0403      	lsls	r3, r0, #16
 8023066:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802306a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802306e:	4318      	orrs	r0, r3
 8023070:	0413      	lsls	r3, r2, #16
 8023072:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023076:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802307a:	4313      	orrs	r3, r2
 802307c:	fb04 c000 	mla	r0, r4, r0, ip
 8023080:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023084:	fb06 0003 	mla	r0, r6, r3, r0
 8023088:	0d43      	lsrs	r3, r0, #21
 802308a:	0940      	lsrs	r0, r0, #5
 802308c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023090:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023094:	4318      	orrs	r0, r3
 8023096:	8008      	strh	r0, [r1, #0]
 8023098:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802309c:	4684      	mov	ip, r0
 802309e:	e7a6      	b.n	8022fee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80230a0:	4607      	mov	r7, r0
 80230a2:	4684      	mov	ip, r0
 80230a4:	e7ab      	b.n	8022ffe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80230a6:	4607      	mov	r7, r0
 80230a8:	e7a9      	b.n	8022ffe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80230aa:	4602      	mov	r2, r0
 80230ac:	e7b4      	b.n	8023018 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80230ae:	4602      	mov	r2, r0
 80230b0:	e7ba      	b.n	8023028 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

080230b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80230b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80230b6:	b08f      	sub	sp, #60	; 0x3c
 80230b8:	461d      	mov	r5, r3
 80230ba:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80230bc:	920c      	str	r2, [sp, #48]	; 0x30
 80230be:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 80230c2:	9107      	str	r1, [sp, #28]
 80230c4:	6859      	ldr	r1, [r3, #4]
 80230c6:	681b      	ldr	r3, [r3, #0]
 80230c8:	900d      	str	r0, [sp, #52]	; 0x34
 80230ca:	fb01 2707 	mla	r7, r1, r7, r2
 80230ce:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80230d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80230d4:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 80230d8:	f8d3 8000 	ldr.w	r8, [r3]
 80230dc:	9b07      	ldr	r3, [sp, #28]
 80230de:	2b00      	cmp	r3, #0
 80230e0:	dc03      	bgt.n	80230ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80230e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80230e4:	2b00      	cmp	r3, #0
 80230e6:	f340 8181 	ble.w	80233ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80230ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80230ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80230f0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80230f4:	1e48      	subs	r0, r1, #1
 80230f6:	f102 3cff 	add.w	ip, r2, #4294967295
 80230fa:	2d00      	cmp	r5, #0
 80230fc:	f340 809b 	ble.w	8023236 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8023100:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023104:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023108:	d406      	bmi.n	8023118 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802310a:	4586      	cmp	lr, r0
 802310c:	da04      	bge.n	8023118 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802310e:	2b00      	cmp	r3, #0
 8023110:	db02      	blt.n	8023118 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023112:	4563      	cmp	r3, ip
 8023114:	f2c0 8090 	blt.w	8023238 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023118:	f11e 0e01 	adds.w	lr, lr, #1
 802311c:	f100 8084 	bmi.w	8023228 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023120:	4571      	cmp	r1, lr
 8023122:	f2c0 8081 	blt.w	8023228 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023126:	3301      	adds	r3, #1
 8023128:	d47e      	bmi.n	8023228 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802312a:	429a      	cmp	r2, r3
 802312c:	db7c      	blt.n	8023228 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802312e:	46aa      	mov	sl, r5
 8023130:	46b9      	mov	r9, r7
 8023132:	f1ba 0f00 	cmp.w	sl, #0
 8023136:	f340 8099 	ble.w	802326c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802313a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802313c:	1421      	asrs	r1, r4, #16
 802313e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023142:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023146:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802314a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802314e:	f100 80d0 	bmi.w	80232f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023152:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023156:	4559      	cmp	r1, fp
 8023158:	f280 80cb 	bge.w	80232f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802315c:	2800      	cmp	r0, #0
 802315e:	f2c0 80c8 	blt.w	80232f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023162:	f103 3bff 	add.w	fp, r3, #4294967295
 8023166:	4558      	cmp	r0, fp
 8023168:	f280 80c3 	bge.w	80232f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802316c:	fa0f fe8e 	sxth.w	lr, lr
 8023170:	fb00 110e 	mla	r1, r0, lr, r1
 8023174:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023178:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 802317c:	8841      	ldrh	r1, [r0, #2]
 802317e:	f1bc 0f00 	cmp.w	ip, #0
 8023182:	d00b      	beq.n	802319c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8023184:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8023188:	3b01      	subs	r3, #1
 802318a:	005b      	lsls	r3, r3, #1
 802318c:	3302      	adds	r3, #2
 802318e:	eb00 0e03 	add.w	lr, r0, r3
 8023192:	5ac3      	ldrh	r3, [r0, r3]
 8023194:	9308      	str	r3, [sp, #32]
 8023196:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802319a:	9309      	str	r3, [sp, #36]	; 0x24
 802319c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80231a0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80231a4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80231a8:	ea40 000b 	orr.w	r0, r0, fp
 80231ac:	fb12 f30c 	smulbb	r3, r2, ip
 80231b0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80231b4:	10db      	asrs	r3, r3, #3
 80231b6:	f1cc 0e10 	rsb	lr, ip, #16
 80231ba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80231be:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80231c2:	ebae 0e02 	sub.w	lr, lr, r2
 80231c6:	ea4b 0101 	orr.w	r1, fp, r1
 80231ca:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80231ce:	4351      	muls	r1, r2
 80231d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80231d2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80231d6:	fb0e 1e00 	mla	lr, lr, r0, r1
 80231da:	0410      	lsls	r0, r2, #16
 80231dc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80231e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80231e4:	4310      	orrs	r0, r2
 80231e6:	9a08      	ldr	r2, [sp, #32]
 80231e8:	9908      	ldr	r1, [sp, #32]
 80231ea:	0412      	lsls	r2, r2, #16
 80231ec:	fb03 e000 	mla	r0, r3, r0, lr
 80231f0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80231f4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80231f8:	ea42 020e 	orr.w	r2, r2, lr
 80231fc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023200:	fb03 0302 	mla	r3, r3, r2, r0
 8023204:	0d5a      	lsrs	r2, r3, #21
 8023206:	095b      	lsrs	r3, r3, #5
 8023208:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802320c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023210:	4313      	orrs	r3, r2
 8023212:	f8a9 3000 	strh.w	r3, [r9]
 8023216:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023218:	441c      	add	r4, r3
 802321a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802321c:	f109 0902 	add.w	r9, r9, #2
 8023220:	441e      	add	r6, r3
 8023222:	f10a 3aff 	add.w	sl, sl, #4294967295
 8023226:	e784      	b.n	8023132 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8023228:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802322a:	441c      	add	r4, r3
 802322c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802322e:	3d01      	subs	r5, #1
 8023230:	441e      	add	r6, r3
 8023232:	3702      	adds	r7, #2
 8023234:	e761      	b.n	80230fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023236:	d01d      	beq.n	8023274 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8023238:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802323a:	1e6b      	subs	r3, r5, #1
 802323c:	fb00 4003 	mla	r0, r0, r3, r4
 8023240:	1400      	asrs	r0, r0, #16
 8023242:	f53f af74 	bmi.w	802312e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023246:	3901      	subs	r1, #1
 8023248:	4288      	cmp	r0, r1
 802324a:	f6bf af70 	bge.w	802312e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802324e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023250:	fb01 6303 	mla	r3, r1, r3, r6
 8023254:	141b      	asrs	r3, r3, #16
 8023256:	f53f af6a 	bmi.w	802312e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802325a:	3a01      	subs	r2, #1
 802325c:	4293      	cmp	r3, r2
 802325e:	f6bf af66 	bge.w	802312e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023262:	46a9      	mov	r9, r5
 8023264:	46ba      	mov	sl, r7
 8023266:	f1b9 0f00 	cmp.w	r9, #0
 802326a:	dc5a      	bgt.n	8023322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 802326c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023270:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8023274:	9b07      	ldr	r3, [sp, #28]
 8023276:	2b00      	cmp	r3, #0
 8023278:	f340 80b8 	ble.w	80233ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802327c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023280:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023284:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023288:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802328a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802328e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023292:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023296:	eef0 6a62 	vmov.f32	s13, s5
 802329a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802329e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80232a6:	ee16 4a90 	vmov	r4, s13
 80232aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80232ae:	eef0 6a43 	vmov.f32	s13, s6
 80232b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80232b6:	ee12 2a90 	vmov	r2, s5
 80232ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80232be:	fb92 f3f3 	sdiv	r3, r2, r3
 80232c2:	ee13 2a10 	vmov	r2, s6
 80232c6:	931b      	str	r3, [sp, #108]	; 0x6c
 80232c8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80232ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80232ce:	931c      	str	r3, [sp, #112]	; 0x70
 80232d0:	9b07      	ldr	r3, [sp, #28]
 80232d2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80232d4:	3b01      	subs	r3, #1
 80232d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232da:	9307      	str	r3, [sp, #28]
 80232dc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80232de:	ee16 6a90 	vmov	r6, s13
 80232e2:	bf14      	ite	ne
 80232e4:	461d      	movne	r5, r3
 80232e6:	4615      	moveq	r5, r2
 80232e8:	eeb0 3a67 	vmov.f32	s6, s15
 80232ec:	eef0 2a47 	vmov.f32	s5, s14
 80232f0:	e6f4      	b.n	80230dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80232f2:	f111 0b01 	adds.w	fp, r1, #1
 80232f6:	d48e      	bmi.n	8023216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80232f8:	45de      	cmp	lr, fp
 80232fa:	db8c      	blt.n	8023216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80232fc:	f110 0b01 	adds.w	fp, r0, #1
 8023300:	d489      	bmi.n	8023216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023302:	455b      	cmp	r3, fp
 8023304:	db87      	blt.n	8023216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023306:	b21b      	sxth	r3, r3
 8023308:	e9cd 1001 	strd	r1, r0, [sp, #4]
 802330c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8023310:	9300      	str	r3, [sp, #0]
 8023312:	4642      	mov	r2, r8
 8023314:	fa0f f38e 	sxth.w	r3, lr
 8023318:	4649      	mov	r1, r9
 802331a:	980d      	ldr	r0, [sp, #52]	; 0x34
 802331c:	f7ff fe4d 	bl	8022fba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8023320:	e779      	b.n	8023216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023322:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023324:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023328:	1420      	asrs	r0, r4, #16
 802332a:	1431      	asrs	r1, r6, #16
 802332c:	fb03 0101 	mla	r1, r3, r1, r0
 8023330:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023334:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023338:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802333c:	8841      	ldrh	r1, [r0, #2]
 802333e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023342:	f1be 0f00 	cmp.w	lr, #0
 8023346:	d00b      	beq.n	8023360 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023348:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802334c:	3b01      	subs	r3, #1
 802334e:	005b      	lsls	r3, r3, #1
 8023350:	3302      	adds	r3, #2
 8023352:	eb00 0b03 	add.w	fp, r0, r3
 8023356:	5ac3      	ldrh	r3, [r0, r3]
 8023358:	930a      	str	r3, [sp, #40]	; 0x28
 802335a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802335e:	930b      	str	r3, [sp, #44]	; 0x2c
 8023360:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8023364:	fb12 f30e 	smulbb	r3, r2, lr
 8023368:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802336c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023370:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023374:	10db      	asrs	r3, r3, #3
 8023376:	ea40 000c 	orr.w	r0, r0, ip
 802337a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802337e:	f1ce 0c10 	rsb	ip, lr, #16
 8023382:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023386:	ebac 0c02 	sub.w	ip, ip, r2
 802338a:	ea4b 0101 	orr.w	r1, fp, r1
 802338e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023392:	4351      	muls	r1, r2
 8023394:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023396:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802339a:	fb0c 1c00 	mla	ip, ip, r0, r1
 802339e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80233a2:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80233a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80233a8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80233aa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80233ae:	0412      	lsls	r2, r2, #16
 80233b0:	ea4b 0000 	orr.w	r0, fp, r0
 80233b4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80233b8:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80233bc:	fb03 c000 	mla	r0, r3, r0, ip
 80233c0:	ea42 0b0b 	orr.w	fp, r2, fp
 80233c4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80233c8:	fb03 000b 	mla	r0, r3, fp, r0
 80233cc:	0d43      	lsrs	r3, r0, #21
 80233ce:	0940      	lsrs	r0, r0, #5
 80233d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80233d4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80233d8:	4318      	orrs	r0, r3
 80233da:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80233dc:	f82a 0b02 	strh.w	r0, [sl], #2
 80233e0:	441c      	add	r4, r3
 80233e2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80233e4:	f109 39ff 	add.w	r9, r9, #4294967295
 80233e8:	441e      	add	r6, r3
 80233ea:	e73c      	b.n	8023266 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80233ec:	b00f      	add	sp, #60	; 0x3c
 80233ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080233f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80233f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80233f6:	b085      	sub	sp, #20
 80233f8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80233fc:	9102      	str	r1, [sp, #8]
 80233fe:	2c00      	cmp	r4, #0
 8023400:	fb04 7103 	mla	r1, r4, r3, r7
 8023404:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023408:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802340c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023410:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023414:	f2c0 811b 	blt.w	802364e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8023418:	45a6      	cmp	lr, r4
 802341a:	f340 8118 	ble.w	802364e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802341e:	2f00      	cmp	r7, #0
 8023420:	f2c0 8113 	blt.w	802364a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8023424:	42bb      	cmp	r3, r7
 8023426:	f340 8110 	ble.w	802364a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802342a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802342e:	1c7a      	adds	r2, r7, #1
 8023430:	f100 8110 	bmi.w	8023654 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8023434:	4293      	cmp	r3, r2
 8023436:	f340 810d 	ble.w	8023654 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802343a:	2e00      	cmp	r6, #0
 802343c:	f000 810c 	beq.w	8023658 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8023440:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023444:	3401      	adds	r4, #1
 8023446:	f100 810b 	bmi.w	8023660 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802344a:	45a6      	cmp	lr, r4
 802344c:	f340 8108 	ble.w	8023660 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023450:	2800      	cmp	r0, #0
 8023452:	f000 8108 	beq.w	8023666 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8023456:	2f00      	cmp	r7, #0
 8023458:	f2c0 8100 	blt.w	802365c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802345c:	42bb      	cmp	r3, r7
 802345e:	f340 80fd 	ble.w	802365c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023462:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023466:	3701      	adds	r7, #1
 8023468:	f100 8100 	bmi.w	802366c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802346c:	42bb      	cmp	r3, r7
 802346e:	f340 80fd 	ble.w	802366c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023472:	2e00      	cmp	r6, #0
 8023474:	f000 80fc 	beq.w	8023670 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8023478:	3301      	adds	r3, #1
 802347a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802347e:	b2b6      	uxth	r6, r6
 8023480:	b280      	uxth	r0, r0
 8023482:	fb00 fe06 	mul.w	lr, r0, r6
 8023486:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802348a:	0136      	lsls	r6, r6, #4
 802348c:	eba6 070e 	sub.w	r7, r6, lr
 8023490:	b280      	uxth	r0, r0
 8023492:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023496:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802349a:	b2bf      	uxth	r7, r7
 802349c:	1a1b      	subs	r3, r3, r0
 802349e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80234a2:	b29b      	uxth	r3, r3
 80234a4:	fb0a f607 	mul.w	r6, sl, r7
 80234a8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80234ac:	fb0b 6603 	mla	r6, fp, r3, r6
 80234b0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80234b4:	fb00 6609 	mla	r6, r0, r9, r6
 80234b8:	fb0e 6608 	mla	r6, lr, r8, r6
 80234bc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80234c0:	9600      	str	r6, [sp, #0]
 80234c2:	2e00      	cmp	r6, #0
 80234c4:	f000 80be 	beq.w	8023644 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80234c8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80234cc:	fb0b fc0c 	mul.w	ip, fp, ip
 80234d0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80234d4:	fb0b f505 	mul.w	r5, fp, r5
 80234d8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80234dc:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80234e0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80234e4:	44dc      	add	ip, fp
 80234e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80234ea:	9501      	str	r5, [sp, #4]
 80234ec:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80234f0:	9503      	str	r5, [sp, #12]
 80234f2:	9d01      	ldr	r5, [sp, #4]
 80234f4:	9e02      	ldr	r6, [sp, #8]
 80234f6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80234fa:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80234fe:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023502:	fb0a fc0c 	mul.w	ip, sl, ip
 8023506:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802350a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802350e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023512:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023516:	4465      	add	r5, ip
 8023518:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802351c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023520:	fb09 fc0c 	mul.w	ip, r9, ip
 8023524:	fb09 f904 	mul.w	r9, r9, r4
 8023528:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802352c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023530:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023534:	fb08 f404 	mul.w	r4, r8, r4
 8023538:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802353c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023540:	fb08 f802 	mul.w	r8, r8, r2
 8023544:	fb0a fa01 	mul.w	sl, sl, r1
 8023548:	0a22      	lsrs	r2, r4, #8
 802354a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802354e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023552:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023556:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802355a:	4414      	add	r4, r2
 802355c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023560:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023564:	0a2d      	lsrs	r5, r5, #8
 8023566:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802356a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802356e:	9a03      	ldr	r2, [sp, #12]
 8023570:	8836      	ldrh	r6, [r6, #0]
 8023572:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023576:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802357a:	437d      	muls	r5, r7
 802357c:	4461      	add	r1, ip
 802357e:	0a24      	lsrs	r4, r4, #8
 8023580:	fb02 5503 	mla	r5, r2, r3, r5
 8023584:	0a09      	lsrs	r1, r1, #8
 8023586:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802358a:	fb04 540e 	mla	r4, r4, lr, r5
 802358e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023592:	fb01 4100 	mla	r1, r1, r0, r4
 8023596:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802359a:	0a09      	lsrs	r1, r1, #8
 802359c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80235a0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80235a4:	fb07 f70a 	mul.w	r7, r7, sl
 80235a8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80235ac:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80235b0:	fb03 7101 	mla	r1, r3, r1, r7
 80235b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80235b8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80235bc:	fb0e 1e08 	mla	lr, lr, r8, r1
 80235c0:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80235c4:	fb00 e101 	mla	r1, r0, r1, lr
 80235c8:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80235cc:	9a00      	ldr	r2, [sp, #0]
 80235ce:	b287      	uxth	r7, r0
 80235d0:	437a      	muls	r2, r7
 80235d2:	0a09      	lsrs	r1, r1, #8
 80235d4:	1c53      	adds	r3, r2, #1
 80235d6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80235da:	4321      	orrs	r1, r4
 80235dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80235e0:	1235      	asrs	r5, r6, #8
 80235e2:	0c0a      	lsrs	r2, r1, #16
 80235e4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80235e8:	b2db      	uxtb	r3, r3
 80235ea:	fb12 f207 	smulbb	r2, r2, r7
 80235ee:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80235f2:	fb05 2503 	mla	r5, r5, r3, r2
 80235f6:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80235fa:	10f2      	asrs	r2, r6, #3
 80235fc:	b2c8      	uxtb	r0, r1
 80235fe:	00f6      	lsls	r6, r6, #3
 8023600:	fb14 f407 	smulbb	r4, r4, r7
 8023604:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023608:	b2f6      	uxtb	r6, r6
 802360a:	fb10 f007 	smulbb	r0, r0, r7
 802360e:	fb02 4203 	mla	r2, r2, r3, r4
 8023612:	b2ad      	uxth	r5, r5
 8023614:	fb06 0303 	mla	r3, r6, r3, r0
 8023618:	b299      	uxth	r1, r3
 802361a:	b294      	uxth	r4, r2
 802361c:	1c6b      	adds	r3, r5, #1
 802361e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023622:	1c62      	adds	r2, r4, #1
 8023624:	1c4b      	adds	r3, r1, #1
 8023626:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802362a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802362e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023632:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023636:	0952      	lsrs	r2, r2, #5
 8023638:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802363c:	432b      	orrs	r3, r5
 802363e:	4313      	orrs	r3, r2
 8023640:	9a02      	ldr	r2, [sp, #8]
 8023642:	8013      	strh	r3, [r2, #0]
 8023644:	b005      	add	sp, #20
 8023646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802364a:	2500      	movs	r5, #0
 802364c:	e6ef      	b.n	802342e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802364e:	2100      	movs	r1, #0
 8023650:	460d      	mov	r5, r1
 8023652:	e6f7      	b.n	8023444 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023654:	2100      	movs	r1, #0
 8023656:	e6f5      	b.n	8023444 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023658:	4631      	mov	r1, r6
 802365a:	e6f3      	b.n	8023444 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802365c:	2400      	movs	r4, #0
 802365e:	e702      	b.n	8023466 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023660:	2200      	movs	r2, #0
 8023662:	4614      	mov	r4, r2
 8023664:	e70b      	b.n	802347e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023666:	4602      	mov	r2, r0
 8023668:	4604      	mov	r4, r0
 802366a:	e708      	b.n	802347e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802366c:	2200      	movs	r2, #0
 802366e:	e706      	b.n	802347e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023670:	4632      	mov	r2, r6
 8023672:	e704      	b.n	802347e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023674 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023678:	b09d      	sub	sp, #116	; 0x74
 802367a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 802367e:	9219      	str	r2, [sp, #100]	; 0x64
 8023680:	9307      	str	r3, [sp, #28]
 8023682:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8023684:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023688:	931a      	str	r3, [sp, #104]	; 0x68
 802368a:	9117      	str	r1, [sp, #92]	; 0x5c
 802368c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023690:	901b      	str	r0, [sp, #108]	; 0x6c
 8023692:	6850      	ldr	r0, [r2, #4]
 8023694:	6812      	ldr	r2, [r2, #0]
 8023696:	fb00 1303 	mla	r3, r0, r3, r1
 802369a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802369e:	930a      	str	r3, [sp, #40]	; 0x28
 80236a0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80236a2:	681b      	ldr	r3, [r3, #0]
 80236a4:	9310      	str	r3, [sp, #64]	; 0x40
 80236a6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80236aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80236ac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80236ae:	2b00      	cmp	r3, #0
 80236b0:	dc03      	bgt.n	80236ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80236b2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80236b4:	2b00      	cmp	r3, #0
 80236b6:	f340 8375 	ble.w	8023da4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80236ba:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80236bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80236c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80236c4:	1e48      	subs	r0, r1, #1
 80236c6:	1e57      	subs	r7, r2, #1
 80236c8:	9b07      	ldr	r3, [sp, #28]
 80236ca:	2b00      	cmp	r3, #0
 80236cc:	f340 818e 	ble.w	80239ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80236d0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80236d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80236d8:	d406      	bmi.n	80236e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80236da:	4584      	cmp	ip, r0
 80236dc:	da04      	bge.n	80236e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80236de:	2b00      	cmp	r3, #0
 80236e0:	db02      	blt.n	80236e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80236e2:	42bb      	cmp	r3, r7
 80236e4:	f2c0 8183 	blt.w	80239ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80236e8:	f11c 0c01 	adds.w	ip, ip, #1
 80236ec:	f100 8173 	bmi.w	80239d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80236f0:	4561      	cmp	r1, ip
 80236f2:	f2c0 8170 	blt.w	80239d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80236f6:	3301      	adds	r3, #1
 80236f8:	f100 816d 	bmi.w	80239d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80236fc:	429a      	cmp	r2, r3
 80236fe:	f2c0 816a 	blt.w	80239d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023702:	9b07      	ldr	r3, [sp, #28]
 8023704:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023706:	9318      	str	r3, [sp, #96]	; 0x60
 8023708:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802370a:	2b00      	cmp	r3, #0
 802370c:	f340 818c 	ble.w	8023a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023710:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8023712:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023714:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023718:	689b      	ldr	r3, [r3, #8]
 802371a:	1422      	asrs	r2, r4, #16
 802371c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023720:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023724:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023728:	f100 81cd 	bmi.w	8023ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802372c:	f103 38ff 	add.w	r8, r3, #4294967295
 8023730:	4542      	cmp	r2, r8
 8023732:	f280 81c8 	bge.w	8023ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023736:	f1bc 0f00 	cmp.w	ip, #0
 802373a:	f2c0 81c4 	blt.w	8023ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802373e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023742:	45c4      	cmp	ip, r8
 8023744:	f280 81bf 	bge.w	8023ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023748:	b21b      	sxth	r3, r3
 802374a:	fb0c 2203 	mla	r2, ip, r3, r2
 802374e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023750:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023754:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023758:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802375c:	2800      	cmp	r0, #0
 802375e:	f000 81a9 	beq.w	8023ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023762:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023766:	950c      	str	r5, [sp, #48]	; 0x30
 8023768:	0e2d      	lsrs	r5, r5, #24
 802376a:	9513      	str	r5, [sp, #76]	; 0x4c
 802376c:	b181      	cbz	r1, 8023790 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802376e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023772:	3b01      	subs	r3, #1
 8023774:	009b      	lsls	r3, r3, #2
 8023776:	3304      	adds	r3, #4
 8023778:	eb08 0c03 	add.w	ip, r8, r3
 802377c:	f858 3003 	ldr.w	r3, [r8, r3]
 8023780:	9308      	str	r3, [sp, #32]
 8023782:	0e1b      	lsrs	r3, r3, #24
 8023784:	9311      	str	r3, [sp, #68]	; 0x44
 8023786:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802378a:	930d      	str	r3, [sp, #52]	; 0x34
 802378c:	0e1b      	lsrs	r3, r3, #24
 802378e:	9314      	str	r3, [sp, #80]	; 0x50
 8023790:	b280      	uxth	r0, r0
 8023792:	b289      	uxth	r1, r1
 8023794:	fb00 f901 	mul.w	r9, r0, r1
 8023798:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802379c:	0100      	lsls	r0, r0, #4
 802379e:	eba0 0809 	sub.w	r8, r0, r9
 80237a2:	b289      	uxth	r1, r1
 80237a4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80237a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80237aa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80237ac:	fa1f f888 	uxth.w	r8, r8
 80237b0:	1a5b      	subs	r3, r3, r1
 80237b2:	b29b      	uxth	r3, r3
 80237b4:	fb08 f000 	mul.w	r0, r8, r0
 80237b8:	fb03 000e 	mla	r0, r3, lr, r0
 80237bc:	fb01 0005 	mla	r0, r1, r5, r0
 80237c0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80237c2:	fb09 0005 	mla	r0, r9, r5, r0
 80237c6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80237ca:	2800      	cmp	r0, #0
 80237cc:	f000 80fa 	beq.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80237d0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80237d4:	d01b      	beq.n	802380e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80237d6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80237da:	fb0e fa0a 	mul.w	sl, lr, sl
 80237de:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80237e2:	fb0e fe02 	mul.w	lr, lr, r2
 80237e6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80237ea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80237ee:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80237f2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80237f6:	4452      	add	r2, sl
 80237f8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80237fc:	0a12      	lsrs	r2, r2, #8
 80237fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023802:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023806:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802380a:	ea42 020c 	orr.w	r2, r2, ip
 802380e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023810:	2dff      	cmp	r5, #255	; 0xff
 8023812:	d021      	beq.n	8023858 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023814:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023816:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802381a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802381c:	fb05 fb0b 	mul.w	fp, r5, fp
 8023820:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023822:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023826:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023828:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802382c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023830:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023834:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023838:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802383c:	44de      	add	lr, fp
 802383e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023842:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023846:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802384a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802384e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023852:	ea4e 050a 	orr.w	r5, lr, sl
 8023856:	950c      	str	r5, [sp, #48]	; 0x30
 8023858:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802385a:	2dff      	cmp	r5, #255	; 0xff
 802385c:	d021      	beq.n	80238a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802385e:	9d08      	ldr	r5, [sp, #32]
 8023860:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023864:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023866:	fb05 fb0b 	mul.w	fp, r5, fp
 802386a:	9d08      	ldr	r5, [sp, #32]
 802386c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023870:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023872:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023876:	fb05 fa0a 	mul.w	sl, r5, sl
 802387a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802387e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023882:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023886:	44de      	add	lr, fp
 8023888:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802388c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023890:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023894:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023898:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802389c:	ea4e 050a 	orr.w	r5, lr, sl
 80238a0:	9508      	str	r5, [sp, #32]
 80238a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80238a4:	2dff      	cmp	r5, #255	; 0xff
 80238a6:	d021      	beq.n	80238ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80238a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80238aa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80238ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80238b0:	fb05 fb0b 	mul.w	fp, r5, fp
 80238b4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80238b6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80238ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80238bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80238c0:	fb05 fa0a 	mul.w	sl, r5, sl
 80238c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80238c8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80238cc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80238d0:	44de      	add	lr, fp
 80238d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80238d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80238da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80238de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80238e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80238e6:	ea4e 050a 	orr.w	r5, lr, sl
 80238ea:	950d      	str	r5, [sp, #52]	; 0x34
 80238ec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80238ee:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80238f2:	9d08      	ldr	r5, [sp, #32]
 80238f4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80238f8:	fb08 fc0c 	mul.w	ip, r8, ip
 80238fc:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023900:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023904:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023906:	fb01 cc0e 	mla	ip, r1, lr, ip
 802390a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802390e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023910:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023914:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023918:	fb08 f80e 	mul.w	r8, r8, lr
 802391c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023920:	fb03 8202 	mla	r2, r3, r2, r8
 8023924:	9b08      	ldr	r3, [sp, #32]
 8023926:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023928:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 802392c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802392e:	fb01 220a 	mla	r2, r1, sl, r2
 8023932:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8023936:	fb09 2901 	mla	r9, r9, r1, r2
 802393a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802393c:	883b      	ldrh	r3, [r7, #0]
 802393e:	4342      	muls	r2, r0
 8023940:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023944:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023948:	1c50      	adds	r0, r2, #1
 802394a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802394e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023952:	ea4c 0c09 	orr.w	ip, ip, r9
 8023956:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802395a:	1219      	asrs	r1, r3, #8
 802395c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023960:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023964:	b2c0      	uxtb	r0, r0
 8023966:	fb12 f205 	smulbb	r2, r2, r5
 802396a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802396e:	fb01 2100 	mla	r1, r1, r0, r2
 8023972:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023976:	10da      	asrs	r2, r3, #3
 8023978:	fa5f fc8c 	uxtb.w	ip, ip
 802397c:	00db      	lsls	r3, r3, #3
 802397e:	fb1c fc05 	smulbb	ip, ip, r5
 8023982:	b2db      	uxtb	r3, r3
 8023984:	b289      	uxth	r1, r1
 8023986:	fb03 c300 	mla	r3, r3, r0, ip
 802398a:	fa1f fc83 	uxth.w	ip, r3
 802398e:	1c4b      	adds	r3, r1, #1
 8023990:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023994:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023998:	fb1e fe05 	smulbb	lr, lr, r5
 802399c:	f10c 0301 	add.w	r3, ip, #1
 80239a0:	fb02 e200 	mla	r2, r2, r0, lr
 80239a4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80239a8:	b292      	uxth	r2, r2
 80239aa:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80239ae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80239b2:	430b      	orrs	r3, r1
 80239b4:	1c51      	adds	r1, r2, #1
 80239b6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80239ba:	0952      	lsrs	r2, r2, #5
 80239bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80239c0:	4313      	orrs	r3, r2
 80239c2:	803b      	strh	r3, [r7, #0]
 80239c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80239c6:	441c      	add	r4, r3
 80239c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80239ca:	441e      	add	r6, r3
 80239cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80239ce:	3b01      	subs	r3, #1
 80239d0:	3702      	adds	r7, #2
 80239d2:	9318      	str	r3, [sp, #96]	; 0x60
 80239d4:	e698      	b.n	8023708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80239d6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80239d8:	441c      	add	r4, r3
 80239da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80239dc:	441e      	add	r6, r3
 80239de:	9b07      	ldr	r3, [sp, #28]
 80239e0:	3b01      	subs	r3, #1
 80239e2:	9307      	str	r3, [sp, #28]
 80239e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80239e6:	3302      	adds	r3, #2
 80239e8:	930a      	str	r3, [sp, #40]	; 0x28
 80239ea:	e66d      	b.n	80236c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80239ec:	d023      	beq.n	8023a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80239ee:	9b07      	ldr	r3, [sp, #28]
 80239f0:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80239f2:	3b01      	subs	r3, #1
 80239f4:	fb00 4003 	mla	r0, r0, r3, r4
 80239f8:	1400      	asrs	r0, r0, #16
 80239fa:	f53f ae82 	bmi.w	8023702 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80239fe:	3901      	subs	r1, #1
 8023a00:	4288      	cmp	r0, r1
 8023a02:	f6bf ae7e 	bge.w	8023702 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023a06:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8023a08:	fb01 6303 	mla	r3, r1, r3, r6
 8023a0c:	141b      	asrs	r3, r3, #16
 8023a0e:	f53f ae78 	bmi.w	8023702 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023a12:	3a01      	subs	r2, #1
 8023a14:	4293      	cmp	r3, r2
 8023a16:	f6bf ae74 	bge.w	8023702 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023a1a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023a1e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023a22:	f1bb 0f00 	cmp.w	fp, #0
 8023a26:	dc6c      	bgt.n	8023b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023a28:	9b07      	ldr	r3, [sp, #28]
 8023a2a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023a2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023a30:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023a34:	930a      	str	r3, [sp, #40]	; 0x28
 8023a36:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023a38:	2b00      	cmp	r3, #0
 8023a3a:	f340 81b3 	ble.w	8023da4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023a3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023a42:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023a46:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023a4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023a4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023a50:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023a54:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023a58:	eef0 6a62 	vmov.f32	s13, s5
 8023a5c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023a60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a64:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023a68:	ee16 4a90 	vmov	r4, s13
 8023a6c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023a70:	eef0 6a43 	vmov.f32	s13, s6
 8023a74:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023a78:	ee12 2a90 	vmov	r2, s5
 8023a7c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023a80:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a84:	ee13 2a10 	vmov	r2, s6
 8023a88:	9329      	str	r3, [sp, #164]	; 0xa4
 8023a8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023a8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a90:	932a      	str	r3, [sp, #168]	; 0xa8
 8023a92:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023a94:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8023a96:	3b01      	subs	r3, #1
 8023a98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a9c:	9317      	str	r3, [sp, #92]	; 0x5c
 8023a9e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023aa0:	bf08      	it	eq
 8023aa2:	4613      	moveq	r3, r2
 8023aa4:	ee16 6a90 	vmov	r6, s13
 8023aa8:	9307      	str	r3, [sp, #28]
 8023aaa:	eeb0 3a67 	vmov.f32	s6, s15
 8023aae:	eef0 2a47 	vmov.f32	s5, s14
 8023ab2:	e5fb      	b.n	80236ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023ab4:	2900      	cmp	r1, #0
 8023ab6:	f43f ae6b 	beq.w	8023790 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023aba:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023abe:	9308      	str	r3, [sp, #32]
 8023ac0:	0e1b      	lsrs	r3, r3, #24
 8023ac2:	9311      	str	r3, [sp, #68]	; 0x44
 8023ac4:	e664      	b.n	8023790 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023ac6:	f112 0801 	adds.w	r8, r2, #1
 8023aca:	f53f af7b 	bmi.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023ace:	4543      	cmp	r3, r8
 8023ad0:	f6ff af78 	blt.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023ad4:	f11c 0801 	adds.w	r8, ip, #1
 8023ad8:	f53f af74 	bmi.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023adc:	45c6      	cmp	lr, r8
 8023ade:	f6ff af71 	blt.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023ae2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8023ae4:	9201      	str	r2, [sp, #4]
 8023ae6:	fa0f f28e 	sxth.w	r2, lr
 8023aea:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8023aee:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023af2:	9200      	str	r2, [sp, #0]
 8023af4:	b21b      	sxth	r3, r3
 8023af6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023af8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023afa:	4639      	mov	r1, r7
 8023afc:	f7ff fc79 	bl	80233f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023b00:	e760      	b.n	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023b02:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023b04:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023b06:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023b0a:	1427      	asrs	r7, r4, #16
 8023b0c:	1433      	asrs	r3, r6, #16
 8023b0e:	fb01 7303 	mla	r3, r1, r3, r7
 8023b12:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8023b16:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023b1a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023b1e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023b22:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023b26:	2a00      	cmp	r2, #0
 8023b28:	f000 8133 	beq.w	8023d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8023b2c:	687d      	ldr	r5, [r7, #4]
 8023b2e:	950e      	str	r5, [sp, #56]	; 0x38
 8023b30:	0e2d      	lsrs	r5, r5, #24
 8023b32:	9515      	str	r5, [sp, #84]	; 0x54
 8023b34:	b178      	cbz	r0, 8023b56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023b36:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8023b3a:	3901      	subs	r1, #1
 8023b3c:	0089      	lsls	r1, r1, #2
 8023b3e:	3104      	adds	r1, #4
 8023b40:	eb07 0e01 	add.w	lr, r7, r1
 8023b44:	5879      	ldr	r1, [r7, r1]
 8023b46:	9109      	str	r1, [sp, #36]	; 0x24
 8023b48:	0e09      	lsrs	r1, r1, #24
 8023b4a:	9112      	str	r1, [sp, #72]	; 0x48
 8023b4c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023b50:	910f      	str	r1, [sp, #60]	; 0x3c
 8023b52:	0e09      	lsrs	r1, r1, #24
 8023b54:	9116      	str	r1, [sp, #88]	; 0x58
 8023b56:	b292      	uxth	r2, r2
 8023b58:	b280      	uxth	r0, r0
 8023b5a:	fb02 f800 	mul.w	r8, r2, r0
 8023b5e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023b62:	0112      	lsls	r2, r2, #4
 8023b64:	eba2 0e08 	sub.w	lr, r2, r8
 8023b68:	b280      	uxth	r0, r0
 8023b6a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023b6e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8023b70:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023b72:	fa1f fe8e 	uxth.w	lr, lr
 8023b76:	1a12      	subs	r2, r2, r0
 8023b78:	b292      	uxth	r2, r2
 8023b7a:	fb0e f101 	mul.w	r1, lr, r1
 8023b7e:	fb02 110c 	mla	r1, r2, ip, r1
 8023b82:	fb00 1105 	mla	r1, r0, r5, r1
 8023b86:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023b88:	fb08 1105 	mla	r1, r8, r5, r1
 8023b8c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023b90:	2900      	cmp	r1, #0
 8023b92:	f000 80f5 	beq.w	8023d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8023b96:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023b9a:	d019      	beq.n	8023bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8023b9c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023ba0:	fb0c fa0a 	mul.w	sl, ip, sl
 8023ba4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023ba8:	fb0c fc03 	mul.w	ip, ip, r3
 8023bac:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023bb0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023bb4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023bb8:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023bbc:	4453      	add	r3, sl
 8023bbe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023bc2:	0a1b      	lsrs	r3, r3, #8
 8023bc4:	0a3f      	lsrs	r7, r7, #8
 8023bc6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023bca:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023bce:	433b      	orrs	r3, r7
 8023bd0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023bd2:	2dff      	cmp	r5, #255	; 0xff
 8023bd4:	d020      	beq.n	8023c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8023bd6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023bd8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023bdc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023bde:	436f      	muls	r7, r5
 8023be0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023be2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023be6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023be8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023bec:	fb05 fa0a 	mul.w	sl, r5, sl
 8023bf0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023bf4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023bf8:	44bc      	add	ip, r7
 8023bfa:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023bfe:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023c02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c06:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c0e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023c12:	ea4c 050a 	orr.w	r5, ip, sl
 8023c16:	950e      	str	r5, [sp, #56]	; 0x38
 8023c18:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023c1a:	2dff      	cmp	r5, #255	; 0xff
 8023c1c:	d020      	beq.n	8023c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8023c1e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023c20:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023c24:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023c26:	436f      	muls	r7, r5
 8023c28:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023c2a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023c2e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023c30:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023c34:	fb05 fa0a 	mul.w	sl, r5, sl
 8023c38:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023c3c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c40:	44bc      	add	ip, r7
 8023c42:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023c46:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023c4a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c4e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c52:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c56:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023c5a:	ea4c 050a 	orr.w	r5, ip, sl
 8023c5e:	9509      	str	r5, [sp, #36]	; 0x24
 8023c60:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023c62:	2dff      	cmp	r5, #255	; 0xff
 8023c64:	d020      	beq.n	8023ca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8023c66:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023c68:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023c6c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023c6e:	436f      	muls	r7, r5
 8023c70:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023c72:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023c76:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023c78:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023c7c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023c80:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023c84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c88:	44bc      	add	ip, r7
 8023c8a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023c8e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023c92:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c9a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023ca2:	ea4c 050a 	orr.w	r5, ip, sl
 8023ca6:	950f      	str	r5, [sp, #60]	; 0x3c
 8023ca8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023caa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023cae:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023cb0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023cb4:	fb0e f707 	mul.w	r7, lr, r7
 8023cb8:	fb02 770c 	mla	r7, r2, ip, r7
 8023cbc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023cc0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023cc2:	fb00 770c 	mla	r7, r0, ip, r7
 8023cc6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023cca:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023ccc:	fb08 770c 	mla	r7, r8, ip, r7
 8023cd0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023cd4:	fb0e fe0c 	mul.w	lr, lr, ip
 8023cd8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023cdc:	fb02 e303 	mla	r3, r2, r3, lr
 8023ce0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023ce2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023ce4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023ce8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023cea:	fb00 330a 	mla	r3, r0, sl, r3
 8023cee:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023cf2:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023cf6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023cf8:	f8b9 0000 	ldrh.w	r0, [r9]
 8023cfc:	4359      	muls	r1, r3
 8023cfe:	0a3f      	lsrs	r7, r7, #8
 8023d00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d04:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023d08:	1c4b      	adds	r3, r1, #1
 8023d0a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023d0e:	ea47 070c 	orr.w	r7, r7, ip
 8023d12:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023d16:	1202      	asrs	r2, r0, #8
 8023d18:	0c3b      	lsrs	r3, r7, #16
 8023d1a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023d1e:	b2c9      	uxtb	r1, r1
 8023d20:	fb13 f305 	smulbb	r3, r3, r5
 8023d24:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023d28:	fb02 3201 	mla	r2, r2, r1, r3
 8023d2c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023d30:	10c3      	asrs	r3, r0, #3
 8023d32:	b2ff      	uxtb	r7, r7
 8023d34:	00c0      	lsls	r0, r0, #3
 8023d36:	b2c0      	uxtb	r0, r0
 8023d38:	fb17 f705 	smulbb	r7, r7, r5
 8023d3c:	fb00 7001 	mla	r0, r0, r1, r7
 8023d40:	b292      	uxth	r2, r2
 8023d42:	fb1c fc05 	smulbb	ip, ip, r5
 8023d46:	b280      	uxth	r0, r0
 8023d48:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023d4c:	fb03 c301 	mla	r3, r3, r1, ip
 8023d50:	1c51      	adds	r1, r2, #1
 8023d52:	f100 0c01 	add.w	ip, r0, #1
 8023d56:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023d5a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8023d5e:	b29b      	uxth	r3, r3
 8023d60:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023d64:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023d68:	ea4c 0202 	orr.w	r2, ip, r2
 8023d6c:	f103 0c01 	add.w	ip, r3, #1
 8023d70:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023d74:	095b      	lsrs	r3, r3, #5
 8023d76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023d7a:	431a      	orrs	r2, r3
 8023d7c:	f8a9 2000 	strh.w	r2, [r9]
 8023d80:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023d82:	441c      	add	r4, r3
 8023d84:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023d86:	f109 0902 	add.w	r9, r9, #2
 8023d8a:	441e      	add	r6, r3
 8023d8c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023d90:	e647      	b.n	8023a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023d92:	2800      	cmp	r0, #0
 8023d94:	f43f aedf 	beq.w	8023b56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023d98:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8023d9c:	9109      	str	r1, [sp, #36]	; 0x24
 8023d9e:	0e09      	lsrs	r1, r1, #24
 8023da0:	9112      	str	r1, [sp, #72]	; 0x48
 8023da2:	e6d8      	b.n	8023b56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023da4:	b01d      	add	sp, #116	; 0x74
 8023da6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023daa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8023daa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023dae:	b085      	sub	sp, #20
 8023db0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023db4:	9102      	str	r1, [sp, #8]
 8023db6:	2c00      	cmp	r4, #0
 8023db8:	fb04 7103 	mla	r1, r4, r3, r7
 8023dbc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023dc0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023dc4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023dc8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023dcc:	f2c0 810c 	blt.w	8023fe8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023dd0:	45a6      	cmp	lr, r4
 8023dd2:	f340 8109 	ble.w	8023fe8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023dd6:	2f00      	cmp	r7, #0
 8023dd8:	f2c0 8104 	blt.w	8023fe4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023ddc:	42bb      	cmp	r3, r7
 8023dde:	f340 8101 	ble.w	8023fe4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023de2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023de6:	1c7a      	adds	r2, r7, #1
 8023de8:	f100 8101 	bmi.w	8023fee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023dec:	4293      	cmp	r3, r2
 8023dee:	f340 80fe 	ble.w	8023fee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023df2:	2e00      	cmp	r6, #0
 8023df4:	f000 80fd 	beq.w	8023ff2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023df8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023dfc:	3401      	adds	r4, #1
 8023dfe:	f100 80fc 	bmi.w	8023ffa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023e02:	45a6      	cmp	lr, r4
 8023e04:	f340 80f9 	ble.w	8023ffa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023e08:	2800      	cmp	r0, #0
 8023e0a:	f000 80f9 	beq.w	8024000 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023e0e:	2f00      	cmp	r7, #0
 8023e10:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023e14:	f2c0 80ef 	blt.w	8023ff6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023e18:	42bb      	cmp	r3, r7
 8023e1a:	f340 80ec 	ble.w	8023ff6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023e1e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023e22:	3701      	adds	r7, #1
 8023e24:	f100 80ef 	bmi.w	8024006 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023e28:	42bb      	cmp	r3, r7
 8023e2a:	f340 80ec 	ble.w	8024006 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023e2e:	2e00      	cmp	r6, #0
 8023e30:	f000 80eb 	beq.w	802400a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023e34:	6852      	ldr	r2, [r2, #4]
 8023e36:	b2b6      	uxth	r6, r6
 8023e38:	b280      	uxth	r0, r0
 8023e3a:	fb00 fe06 	mul.w	lr, r0, r6
 8023e3e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023e42:	0136      	lsls	r6, r6, #4
 8023e44:	eba6 070e 	sub.w	r7, r6, lr
 8023e48:	b280      	uxth	r0, r0
 8023e4a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023e4e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023e52:	b2bf      	uxth	r7, r7
 8023e54:	1a1b      	subs	r3, r3, r0
 8023e56:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023e5a:	b29b      	uxth	r3, r3
 8023e5c:	fb07 f60a 	mul.w	r6, r7, sl
 8023e60:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023e64:	fb0b 6603 	mla	r6, fp, r3, r6
 8023e68:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023e6c:	fb00 6609 	mla	r6, r0, r9, r6
 8023e70:	fb0e 6608 	mla	r6, lr, r8, r6
 8023e74:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023e78:	9600      	str	r6, [sp, #0]
 8023e7a:	2e00      	cmp	r6, #0
 8023e7c:	f000 80af 	beq.w	8023fde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023e80:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023e84:	fb0b fc0c 	mul.w	ip, fp, ip
 8023e88:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023e8c:	fb0b f505 	mul.w	r5, fp, r5
 8023e90:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023e94:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023e98:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023e9c:	44dc      	add	ip, fp
 8023e9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ea2:	9501      	str	r5, [sp, #4]
 8023ea4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023ea8:	9503      	str	r5, [sp, #12]
 8023eaa:	9d01      	ldr	r5, [sp, #4]
 8023eac:	9e02      	ldr	r6, [sp, #8]
 8023eae:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023eb2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023eb6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023eba:	fb0a fc0c 	mul.w	ip, sl, ip
 8023ebe:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023ec2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023ec6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023eca:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023ece:	4465      	add	r5, ip
 8023ed0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023ed4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023ed8:	fb09 fc0c 	mul.w	ip, r9, ip
 8023edc:	fb09 f904 	mul.w	r9, r9, r4
 8023ee0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023ee4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023ee8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023eec:	fb08 f404 	mul.w	r4, r8, r4
 8023ef0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023ef4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023ef8:	fb08 f802 	mul.w	r8, r8, r2
 8023efc:	fb0a fa01 	mul.w	sl, sl, r1
 8023f00:	0a22      	lsrs	r2, r4, #8
 8023f02:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023f06:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023f0a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023f0e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023f12:	4414      	add	r4, r2
 8023f14:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023f18:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023f1c:	0a2d      	lsrs	r5, r5, #8
 8023f1e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023f22:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023f26:	9a03      	ldr	r2, [sp, #12]
 8023f28:	8836      	ldrh	r6, [r6, #0]
 8023f2a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023f2e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023f32:	437d      	muls	r5, r7
 8023f34:	4461      	add	r1, ip
 8023f36:	0a24      	lsrs	r4, r4, #8
 8023f38:	fb02 5503 	mla	r5, r2, r3, r5
 8023f3c:	0a09      	lsrs	r1, r1, #8
 8023f3e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023f42:	fb04 540e 	mla	r4, r4, lr, r5
 8023f46:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023f4a:	fb01 4100 	mla	r1, r1, r0, r4
 8023f4e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f52:	0a09      	lsrs	r1, r1, #8
 8023f54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f58:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023f5c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023f60:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023f64:	fb07 f70a 	mul.w	r7, r7, sl
 8023f68:	fb03 7101 	mla	r1, r3, r1, r7
 8023f6c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023f70:	9b00      	ldr	r3, [sp, #0]
 8023f72:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023f76:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023f7a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023f7e:	fb00 e101 	mla	r1, r0, r1, lr
 8023f82:	43da      	mvns	r2, r3
 8023f84:	1233      	asrs	r3, r6, #8
 8023f86:	b2d2      	uxtb	r2, r2
 8023f88:	10f0      	asrs	r0, r6, #3
 8023f8a:	0a09      	lsrs	r1, r1, #8
 8023f8c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023f90:	00f6      	lsls	r6, r6, #3
 8023f92:	4353      	muls	r3, r2
 8023f94:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023f98:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023f9c:	b2f6      	uxtb	r6, r6
 8023f9e:	4321      	orrs	r1, r4
 8023fa0:	4350      	muls	r0, r2
 8023fa2:	4356      	muls	r6, r2
 8023fa4:	1c5a      	adds	r2, r3, #1
 8023fa6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023faa:	0c0b      	lsrs	r3, r1, #16
 8023fac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023fb0:	1c42      	adds	r2, r0, #1
 8023fb2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023fb6:	0a0a      	lsrs	r2, r1, #8
 8023fb8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023fbc:	021b      	lsls	r3, r3, #8
 8023fbe:	00d2      	lsls	r2, r2, #3
 8023fc0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023fc4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023fc8:	4313      	orrs	r3, r2
 8023fca:	1c72      	adds	r2, r6, #1
 8023fcc:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023fd0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023fd4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023fd8:	4319      	orrs	r1, r3
 8023fda:	9b02      	ldr	r3, [sp, #8]
 8023fdc:	8019      	strh	r1, [r3, #0]
 8023fde:	b005      	add	sp, #20
 8023fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023fe4:	2500      	movs	r5, #0
 8023fe6:	e6fe      	b.n	8023de6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023fe8:	2100      	movs	r1, #0
 8023fea:	460d      	mov	r5, r1
 8023fec:	e706      	b.n	8023dfc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023fee:	2100      	movs	r1, #0
 8023ff0:	e704      	b.n	8023dfc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023ff2:	4631      	mov	r1, r6
 8023ff4:	e702      	b.n	8023dfc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023ff6:	2400      	movs	r4, #0
 8023ff8:	e713      	b.n	8023e22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8023ffa:	2200      	movs	r2, #0
 8023ffc:	4614      	mov	r4, r2
 8023ffe:	e71a      	b.n	8023e36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024000:	4602      	mov	r2, r0
 8024002:	4604      	mov	r4, r0
 8024004:	e717      	b.n	8023e36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024006:	2200      	movs	r2, #0
 8024008:	e715      	b.n	8023e36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802400a:	4632      	mov	r2, r6
 802400c:	e713      	b.n	8023e36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08024010 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024014:	b09b      	sub	sp, #108	; 0x6c
 8024016:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 802401a:	9218      	str	r2, [sp, #96]	; 0x60
 802401c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802401e:	9116      	str	r1, [sp, #88]	; 0x58
 8024020:	9307      	str	r3, [sp, #28]
 8024022:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024026:	9019      	str	r0, [sp, #100]	; 0x64
 8024028:	6850      	ldr	r0, [r2, #4]
 802402a:	6812      	ldr	r2, [r2, #0]
 802402c:	fb00 1303 	mla	r3, r0, r3, r1
 8024030:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024034:	930a      	str	r3, [sp, #40]	; 0x28
 8024036:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024038:	681b      	ldr	r3, [r3, #0]
 802403a:	930f      	str	r3, [sp, #60]	; 0x3c
 802403c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802403e:	2b00      	cmp	r3, #0
 8024040:	dc03      	bgt.n	802404a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024042:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024044:	2b00      	cmp	r3, #0
 8024046:	f340 8386 	ble.w	8024756 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802404a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802404c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024050:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024054:	1e48      	subs	r0, r1, #1
 8024056:	1e57      	subs	r7, r2, #1
 8024058:	9b07      	ldr	r3, [sp, #28]
 802405a:	2b00      	cmp	r3, #0
 802405c:	f340 8166 	ble.w	802432c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024060:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024064:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024068:	d406      	bmi.n	8024078 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802406a:	4584      	cmp	ip, r0
 802406c:	da04      	bge.n	8024078 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802406e:	2b00      	cmp	r3, #0
 8024070:	db02      	blt.n	8024078 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024072:	42bb      	cmp	r3, r7
 8024074:	f2c0 815b 	blt.w	802432e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024078:	f11c 0c01 	adds.w	ip, ip, #1
 802407c:	f100 814b 	bmi.w	8024316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024080:	4561      	cmp	r1, ip
 8024082:	f2c0 8148 	blt.w	8024316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024086:	3301      	adds	r3, #1
 8024088:	f100 8145 	bmi.w	8024316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802408c:	429a      	cmp	r2, r3
 802408e:	f2c0 8142 	blt.w	8024316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024092:	9b07      	ldr	r3, [sp, #28]
 8024094:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024096:	9317      	str	r3, [sp, #92]	; 0x5c
 8024098:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802409a:	2b00      	cmp	r3, #0
 802409c:	f340 8165 	ble.w	802436a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80240a0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80240a2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80240a4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80240a8:	689b      	ldr	r3, [r3, #8]
 80240aa:	1422      	asrs	r2, r4, #16
 80240ac:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80240b0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80240b4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80240b8:	f100 81d5 	bmi.w	8024466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80240bc:	f103 38ff 	add.w	r8, r3, #4294967295
 80240c0:	4542      	cmp	r2, r8
 80240c2:	f280 81d0 	bge.w	8024466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80240c6:	f1bc 0f00 	cmp.w	ip, #0
 80240ca:	f2c0 81cc 	blt.w	8024466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80240ce:	f10e 38ff 	add.w	r8, lr, #4294967295
 80240d2:	45c4      	cmp	ip, r8
 80240d4:	f280 81c7 	bge.w	8024466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80240d8:	b21b      	sxth	r3, r3
 80240da:	fb0c 2203 	mla	r2, ip, r3, r2
 80240de:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80240e0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80240e4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80240e8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80240ec:	2900      	cmp	r1, #0
 80240ee:	f000 8182 	beq.w	80243f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80240f2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80240f6:	950b      	str	r5, [sp, #44]	; 0x2c
 80240f8:	0e2d      	lsrs	r5, r5, #24
 80240fa:	9512      	str	r5, [sp, #72]	; 0x48
 80240fc:	b180      	cbz	r0, 8024120 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80240fe:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024102:	3b01      	subs	r3, #1
 8024104:	009b      	lsls	r3, r3, #2
 8024106:	3304      	adds	r3, #4
 8024108:	eb08 0c03 	add.w	ip, r8, r3
 802410c:	f858 3003 	ldr.w	r3, [r8, r3]
 8024110:	9308      	str	r3, [sp, #32]
 8024112:	0e1b      	lsrs	r3, r3, #24
 8024114:	9310      	str	r3, [sp, #64]	; 0x40
 8024116:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802411a:	930c      	str	r3, [sp, #48]	; 0x30
 802411c:	0e1b      	lsrs	r3, r3, #24
 802411e:	9313      	str	r3, [sp, #76]	; 0x4c
 8024120:	b289      	uxth	r1, r1
 8024122:	b280      	uxth	r0, r0
 8024124:	fb01 f900 	mul.w	r9, r1, r0
 8024128:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802412c:	0109      	lsls	r1, r1, #4
 802412e:	eba1 0809 	sub.w	r8, r1, r9
 8024132:	b280      	uxth	r0, r0
 8024134:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024138:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802413a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802413c:	fa1f f888 	uxth.w	r8, r8
 8024140:	1a09      	subs	r1, r1, r0
 8024142:	b289      	uxth	r1, r1
 8024144:	fb08 f303 	mul.w	r3, r8, r3
 8024148:	fb01 330e 	mla	r3, r1, lr, r3
 802414c:	fb00 3305 	mla	r3, r0, r5, r3
 8024150:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024152:	fb09 3305 	mla	r3, r9, r5, r3
 8024156:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802415a:	2b00      	cmp	r3, #0
 802415c:	f000 80d2 	beq.w	8024304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024160:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024164:	d01b      	beq.n	802419e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8024166:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802416a:	fb0e fa0a 	mul.w	sl, lr, sl
 802416e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024172:	fb0e fe02 	mul.w	lr, lr, r2
 8024176:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802417a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802417e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024182:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024186:	4452      	add	r2, sl
 8024188:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802418c:	0a12      	lsrs	r2, r2, #8
 802418e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024192:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024196:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802419a:	ea42 020c 	orr.w	r2, r2, ip
 802419e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80241a0:	2dff      	cmp	r5, #255	; 0xff
 80241a2:	d021      	beq.n	80241e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80241a4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80241a6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80241aa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80241ac:	fb05 fb0b 	mul.w	fp, r5, fp
 80241b0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80241b2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80241b6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80241b8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80241bc:	fb05 fa0a 	mul.w	sl, r5, sl
 80241c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241c4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80241c8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80241cc:	44de      	add	lr, fp
 80241ce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80241d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80241d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80241e2:	ea4e 050a 	orr.w	r5, lr, sl
 80241e6:	950b      	str	r5, [sp, #44]	; 0x2c
 80241e8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80241ea:	2dff      	cmp	r5, #255	; 0xff
 80241ec:	d021      	beq.n	8024232 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80241ee:	9d08      	ldr	r5, [sp, #32]
 80241f0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80241f4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80241f6:	fb05 fb0b 	mul.w	fp, r5, fp
 80241fa:	9d08      	ldr	r5, [sp, #32]
 80241fc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024200:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024202:	fb05 fa0e 	mul.w	sl, r5, lr
 8024206:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802420a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802420e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024212:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024216:	44de      	add	lr, fp
 8024218:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802421c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024220:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024224:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024228:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802422c:	ea4e 050a 	orr.w	r5, lr, sl
 8024230:	9508      	str	r5, [sp, #32]
 8024232:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024234:	2dff      	cmp	r5, #255	; 0xff
 8024236:	d021      	beq.n	802427c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8024238:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802423a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802423e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024240:	fb05 fb0b 	mul.w	fp, r5, fp
 8024244:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024246:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802424a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802424c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024250:	fb05 fa0a 	mul.w	sl, r5, sl
 8024254:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024258:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802425c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024260:	44de      	add	lr, fp
 8024262:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024266:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802426a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802426e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024272:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024276:	ea4e 050a 	orr.w	r5, lr, sl
 802427a:	950c      	str	r5, [sp, #48]	; 0x30
 802427c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802427e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024282:	9d08      	ldr	r5, [sp, #32]
 8024284:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024288:	fb08 fc0c 	mul.w	ip, r8, ip
 802428c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024290:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024294:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024296:	fb00 cc0e 	mla	ip, r0, lr, ip
 802429a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802429e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80242a0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80242a4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80242a8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80242ac:	fb08 f80e 	mul.w	r8, r8, lr
 80242b0:	fb01 8202 	mla	r2, r1, r2, r8
 80242b4:	9908      	ldr	r1, [sp, #32]
 80242b6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80242ba:	990c      	ldr	r1, [sp, #48]	; 0x30
 80242bc:	fb00 220a 	mla	r2, r0, sl, r2
 80242c0:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80242c4:	fb09 2900 	mla	r9, r9, r0, r2
 80242c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80242cc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80242d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80242d4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80242d8:	ea4c 0c09 	orr.w	ip, ip, r9
 80242dc:	2bff      	cmp	r3, #255	; 0xff
 80242de:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80242e2:	f040 8091 	bne.w	8024408 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80242e6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80242ea:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80242ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80242f2:	f022 0207 	bic.w	r2, r2, #7
 80242f6:	431a      	orrs	r2, r3
 80242f8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80242fc:	ea4c 0c02 	orr.w	ip, ip, r2
 8024300:	f8a7 c000 	strh.w	ip, [r7]
 8024304:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024306:	441c      	add	r4, r3
 8024308:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802430a:	441e      	add	r6, r3
 802430c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802430e:	3b01      	subs	r3, #1
 8024310:	3702      	adds	r7, #2
 8024312:	9317      	str	r3, [sp, #92]	; 0x5c
 8024314:	e6c0      	b.n	8024098 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024316:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024318:	441c      	add	r4, r3
 802431a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802431c:	441e      	add	r6, r3
 802431e:	9b07      	ldr	r3, [sp, #28]
 8024320:	3b01      	subs	r3, #1
 8024322:	9307      	str	r3, [sp, #28]
 8024324:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024326:	3302      	adds	r3, #2
 8024328:	930a      	str	r3, [sp, #40]	; 0x28
 802432a:	e695      	b.n	8024058 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802432c:	d024      	beq.n	8024378 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802432e:	9b07      	ldr	r3, [sp, #28]
 8024330:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024332:	3b01      	subs	r3, #1
 8024334:	fb00 4003 	mla	r0, r0, r3, r4
 8024338:	1400      	asrs	r0, r0, #16
 802433a:	f53f aeaa 	bmi.w	8024092 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802433e:	3901      	subs	r1, #1
 8024340:	4288      	cmp	r0, r1
 8024342:	f6bf aea6 	bge.w	8024092 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024346:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024348:	fb01 6303 	mla	r3, r1, r3, r6
 802434c:	141b      	asrs	r3, r3, #16
 802434e:	f53f aea0 	bmi.w	8024092 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024352:	3a01      	subs	r2, #1
 8024354:	4293      	cmp	r3, r2
 8024356:	f6bf ae9c 	bge.w	8024092 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802435a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802435e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8024362:	f1bb 0f00 	cmp.w	fp, #0
 8024366:	f300 809a 	bgt.w	802449e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802436a:	9b07      	ldr	r3, [sp, #28]
 802436c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024370:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024372:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024376:	930a      	str	r3, [sp, #40]	; 0x28
 8024378:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802437a:	2b00      	cmp	r3, #0
 802437c:	f340 81eb 	ble.w	8024756 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024380:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024384:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024388:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802438c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802438e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024392:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024396:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802439a:	eef0 6a62 	vmov.f32	s13, s5
 802439e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80243a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80243aa:	ee16 4a90 	vmov	r4, s13
 80243ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80243b2:	eef0 6a43 	vmov.f32	s13, s6
 80243b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80243ba:	ee12 2a90 	vmov	r2, s5
 80243be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80243c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80243c6:	ee13 2a10 	vmov	r2, s6
 80243ca:	9327      	str	r3, [sp, #156]	; 0x9c
 80243cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80243ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80243d2:	9328      	str	r3, [sp, #160]	; 0xa0
 80243d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80243d6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80243d8:	3b01      	subs	r3, #1
 80243da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243de:	9316      	str	r3, [sp, #88]	; 0x58
 80243e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80243e2:	bf08      	it	eq
 80243e4:	4613      	moveq	r3, r2
 80243e6:	ee16 6a90 	vmov	r6, s13
 80243ea:	9307      	str	r3, [sp, #28]
 80243ec:	eeb0 3a67 	vmov.f32	s6, s15
 80243f0:	eef0 2a47 	vmov.f32	s5, s14
 80243f4:	e622      	b.n	802403c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80243f6:	2800      	cmp	r0, #0
 80243f8:	f43f ae92 	beq.w	8024120 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80243fc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024400:	9308      	str	r3, [sp, #32]
 8024402:	0e1b      	lsrs	r3, r3, #24
 8024404:	9310      	str	r3, [sp, #64]	; 0x40
 8024406:	e68b      	b.n	8024120 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024408:	8839      	ldrh	r1, [r7, #0]
 802440a:	4dd4      	ldr	r5, [pc, #848]	; (802475c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802440c:	43db      	mvns	r3, r3
 802440e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8024412:	fa5f f883 	uxtb.w	r8, r3
 8024416:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802441a:	fb0e fe08 	mul.w	lr, lr, r8
 802441e:	10c8      	asrs	r0, r1, #3
 8024420:	00cb      	lsls	r3, r1, #3
 8024422:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024426:	f10e 0101 	add.w	r1, lr, #1
 802442a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802442e:	fb00 f008 	mul.w	r0, r0, r8
 8024432:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8024436:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802443a:	f100 0e01 	add.w	lr, r0, #1
 802443e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8024442:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024446:	b2db      	uxtb	r3, r3
 8024448:	b2c9      	uxtb	r1, r1
 802444a:	00d2      	lsls	r2, r2, #3
 802444c:	fb03 f308 	mul.w	r3, r3, r8
 8024450:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8024454:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024458:	430a      	orrs	r2, r1
 802445a:	1c59      	adds	r1, r3, #1
 802445c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024460:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024464:	e748      	b.n	80242f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8024466:	f112 0801 	adds.w	r8, r2, #1
 802446a:	f53f af4b 	bmi.w	8024304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802446e:	4543      	cmp	r3, r8
 8024470:	f6ff af48 	blt.w	8024304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024474:	f11c 0801 	adds.w	r8, ip, #1
 8024478:	f53f af44 	bmi.w	8024304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802447c:	45c6      	cmp	lr, r8
 802447e:	f6ff af41 	blt.w	8024304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024482:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8024486:	fa0f f28e 	sxth.w	r2, lr
 802448a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802448e:	9200      	str	r2, [sp, #0]
 8024490:	b21b      	sxth	r3, r3
 8024492:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024494:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024496:	4639      	mov	r1, r7
 8024498:	f7ff fc87 	bl	8023daa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802449c:	e732      	b.n	8024304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802449e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80244a0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80244a2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80244a6:	1421      	asrs	r1, r4, #16
 80244a8:	1433      	asrs	r3, r6, #16
 80244aa:	fb07 1303 	mla	r3, r7, r3, r1
 80244ae:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80244b0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80244b4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80244b8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80244bc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80244c0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80244c4:	2a00      	cmp	r2, #0
 80244c6:	f000 8107 	beq.w	80246d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80244ca:	684d      	ldr	r5, [r1, #4]
 80244cc:	950d      	str	r5, [sp, #52]	; 0x34
 80244ce:	0e2d      	lsrs	r5, r5, #24
 80244d0:	9514      	str	r5, [sp, #80]	; 0x50
 80244d2:	b178      	cbz	r0, 80244f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80244d4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80244d8:	3f01      	subs	r7, #1
 80244da:	00bf      	lsls	r7, r7, #2
 80244dc:	3704      	adds	r7, #4
 80244de:	eb01 0e07 	add.w	lr, r1, r7
 80244e2:	59c9      	ldr	r1, [r1, r7]
 80244e4:	9109      	str	r1, [sp, #36]	; 0x24
 80244e6:	0e09      	lsrs	r1, r1, #24
 80244e8:	9111      	str	r1, [sp, #68]	; 0x44
 80244ea:	f8de 1004 	ldr.w	r1, [lr, #4]
 80244ee:	910e      	str	r1, [sp, #56]	; 0x38
 80244f0:	0e09      	lsrs	r1, r1, #24
 80244f2:	9115      	str	r1, [sp, #84]	; 0x54
 80244f4:	b292      	uxth	r2, r2
 80244f6:	b280      	uxth	r0, r0
 80244f8:	fb02 f900 	mul.w	r9, r2, r0
 80244fc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024500:	0112      	lsls	r2, r2, #4
 8024502:	eba2 0e09 	sub.w	lr, r2, r9
 8024506:	b280      	uxth	r0, r0
 8024508:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802450c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802450e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024510:	fa1f fe8e 	uxth.w	lr, lr
 8024514:	1a09      	subs	r1, r1, r0
 8024516:	b289      	uxth	r1, r1
 8024518:	fb0e f202 	mul.w	r2, lr, r2
 802451c:	fb01 220c 	mla	r2, r1, ip, r2
 8024520:	fb00 2205 	mla	r2, r0, r5, r2
 8024524:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024526:	fb09 2205 	mla	r2, r9, r5, r2
 802452a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802452e:	2a00      	cmp	r2, #0
 8024530:	f000 80c9 	beq.w	80246c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024534:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024538:	d019      	beq.n	802456e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802453a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802453e:	fb0c fa0a 	mul.w	sl, ip, sl
 8024542:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024546:	fb0c fc03 	mul.w	ip, ip, r3
 802454a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802454e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024552:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024556:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802455a:	4453      	add	r3, sl
 802455c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024560:	0a1b      	lsrs	r3, r3, #8
 8024562:	0a3f      	lsrs	r7, r7, #8
 8024564:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024568:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802456c:	433b      	orrs	r3, r7
 802456e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024570:	2dff      	cmp	r5, #255	; 0xff
 8024572:	d020      	beq.n	80245b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8024574:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024576:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802457a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802457c:	436f      	muls	r7, r5
 802457e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024580:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024584:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024586:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802458a:	fb05 fa0a 	mul.w	sl, r5, sl
 802458e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024592:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024596:	44bc      	add	ip, r7
 8024598:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802459c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80245a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80245b0:	ea4c 050a 	orr.w	r5, ip, sl
 80245b4:	950d      	str	r5, [sp, #52]	; 0x34
 80245b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80245b8:	2dff      	cmp	r5, #255	; 0xff
 80245ba:	d020      	beq.n	80245fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80245bc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80245be:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80245c2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80245c4:	436f      	muls	r7, r5
 80245c6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80245c8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80245cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80245ce:	fb05 fa0c 	mul.w	sl, r5, ip
 80245d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80245d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80245de:	44bc      	add	ip, r7
 80245e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80245e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80245e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80245f8:	ea4c 050a 	orr.w	r5, ip, sl
 80245fc:	9509      	str	r5, [sp, #36]	; 0x24
 80245fe:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024600:	2dff      	cmp	r5, #255	; 0xff
 8024602:	d020      	beq.n	8024646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8024604:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024606:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802460a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802460c:	436f      	muls	r7, r5
 802460e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024610:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024614:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024616:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802461a:	fb05 fa0a 	mul.w	sl, r5, sl
 802461e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024622:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024626:	44bc      	add	ip, r7
 8024628:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802462c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024630:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024634:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024638:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802463c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024640:	ea4c 050a 	orr.w	r5, ip, sl
 8024644:	950e      	str	r5, [sp, #56]	; 0x38
 8024646:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024648:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802464c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802464e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024652:	fb0e f707 	mul.w	r7, lr, r7
 8024656:	fb01 770c 	mla	r7, r1, ip, r7
 802465a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802465e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024660:	fb00 770c 	mla	r7, r0, ip, r7
 8024664:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024668:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802466a:	fb09 770c 	mla	r7, r9, ip, r7
 802466e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024672:	fb0e fe0c 	mul.w	lr, lr, ip
 8024676:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802467a:	fb01 e303 	mla	r3, r1, r3, lr
 802467e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024680:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024684:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024686:	fb00 330a 	mla	r3, r0, sl, r3
 802468a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802468e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8024692:	0a3f      	lsrs	r7, r7, #8
 8024694:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024698:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802469c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80246a0:	ea47 070c 	orr.w	r7, r7, ip
 80246a4:	2aff      	cmp	r2, #255	; 0xff
 80246a6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80246aa:	d11e      	bne.n	80246ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80246ac:	097a      	lsrs	r2, r7, #5
 80246ae:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80246b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80246b6:	f023 0307 	bic.w	r3, r3, #7
 80246ba:	4313      	orrs	r3, r2
 80246bc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80246c0:	431f      	orrs	r7, r3
 80246c2:	f8a8 7000 	strh.w	r7, [r8]
 80246c6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80246c8:	441c      	add	r4, r3
 80246ca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80246cc:	f108 0802 	add.w	r8, r8, #2
 80246d0:	441e      	add	r6, r3
 80246d2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80246d6:	e644      	b.n	8024362 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80246d8:	2800      	cmp	r0, #0
 80246da:	f43f af0b 	beq.w	80244f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80246de:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80246e2:	9109      	str	r1, [sp, #36]	; 0x24
 80246e4:	0e09      	lsrs	r1, r1, #24
 80246e6:	9111      	str	r1, [sp, #68]	; 0x44
 80246e8:	e704      	b.n	80244f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80246ea:	f8b8 1000 	ldrh.w	r1, [r8]
 80246ee:	43d2      	mvns	r2, r2
 80246f0:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80246f4:	fa5f fe82 	uxtb.w	lr, r2
 80246f8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80246fc:	fb0c fc0e 	mul.w	ip, ip, lr
 8024700:	10c8      	asrs	r0, r1, #3
 8024702:	00ca      	lsls	r2, r1, #3
 8024704:	f10c 0101 	add.w	r1, ip, #1
 8024708:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802470c:	0c39      	lsrs	r1, r7, #16
 802470e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024712:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024716:	4911      	ldr	r1, [pc, #68]	; (802475c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024718:	fb00 f00e 	mul.w	r0, r0, lr
 802471c:	fa5f fc8c 	uxtb.w	ip, ip
 8024720:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024724:	b2d2      	uxtb	r2, r2
 8024726:	1c41      	adds	r1, r0, #1
 8024728:	fb02 f20e 	mul.w	r2, r2, lr
 802472c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024730:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024734:	1c51      	adds	r1, r2, #1
 8024736:	00c0      	lsls	r0, r0, #3
 8024738:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802473c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024740:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024744:	ea4c 0c00 	orr.w	ip, ip, r0
 8024748:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802474c:	ea47 0c0c 	orr.w	ip, r7, ip
 8024750:	f8a8 c000 	strh.w	ip, [r8]
 8024754:	e7b7      	b.n	80246c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024756:	b01b      	add	sp, #108	; 0x6c
 8024758:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802475c:	fffff800 	.word	0xfffff800

08024760 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024760:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024764:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024768:	2d00      	cmp	r5, #0
 802476a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802476e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024772:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024776:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802477a:	fb05 0e03 	mla	lr, r5, r3, r0
 802477e:	f2c0 808c 	blt.w	802489a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024782:	45a9      	cmp	r9, r5
 8024784:	f340 8089 	ble.w	802489a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024788:	2800      	cmp	r0, #0
 802478a:	f2c0 8084 	blt.w	8024896 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802478e:	4580      	cmp	r8, r0
 8024790:	f340 8081 	ble.w	8024896 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024794:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024798:	f01e 0f01 	tst.w	lr, #1
 802479c:	5d16      	ldrb	r6, [r2, r4]
 802479e:	bf0c      	ite	eq
 80247a0:	f006 060f 	andeq.w	r6, r6, #15
 80247a4:	1136      	asrne	r6, r6, #4
 80247a6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80247aa:	b2f6      	uxtb	r6, r6
 80247ac:	1c44      	adds	r4, r0, #1
 80247ae:	d477      	bmi.n	80248a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80247b0:	45a0      	cmp	r8, r4
 80247b2:	dd75      	ble.n	80248a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80247b4:	2f00      	cmp	r7, #0
 80247b6:	d075      	beq.n	80248a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80247b8:	f10e 0a01 	add.w	sl, lr, #1
 80247bc:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80247c0:	f01a 0f01 	tst.w	sl, #1
 80247c4:	5d14      	ldrb	r4, [r2, r4]
 80247c6:	bf0c      	ite	eq
 80247c8:	f004 040f 	andeq.w	r4, r4, #15
 80247cc:	1124      	asrne	r4, r4, #4
 80247ce:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80247d2:	b2e4      	uxtb	r4, r4
 80247d4:	3501      	adds	r5, #1
 80247d6:	d469      	bmi.n	80248ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80247d8:	45a9      	cmp	r9, r5
 80247da:	dd67      	ble.n	80248ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80247dc:	f1bc 0f00 	cmp.w	ip, #0
 80247e0:	d067      	beq.n	80248b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80247e2:	2800      	cmp	r0, #0
 80247e4:	db60      	blt.n	80248a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80247e6:	4580      	cmp	r8, r0
 80247e8:	dd5e      	ble.n	80248a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80247ea:	eb03 090e 	add.w	r9, r3, lr
 80247ee:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80247f2:	f019 0f01 	tst.w	r9, #1
 80247f6:	5d55      	ldrb	r5, [r2, r5]
 80247f8:	bf0c      	ite	eq
 80247fa:	f005 050f 	andeq.w	r5, r5, #15
 80247fe:	112d      	asrne	r5, r5, #4
 8024800:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024804:	b2ed      	uxtb	r5, r5
 8024806:	3001      	adds	r0, #1
 8024808:	d456      	bmi.n	80248b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802480a:	4580      	cmp	r8, r0
 802480c:	dd54      	ble.n	80248b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802480e:	2f00      	cmp	r7, #0
 8024810:	d054      	beq.n	80248bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024812:	3301      	adds	r3, #1
 8024814:	449e      	add	lr, r3
 8024816:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802481a:	f01e 0f01 	tst.w	lr, #1
 802481e:	5cd0      	ldrb	r0, [r2, r3]
 8024820:	bf0c      	ite	eq
 8024822:	f000 000f 	andeq.w	r0, r0, #15
 8024826:	1100      	asrne	r0, r0, #4
 8024828:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802482c:	b2c3      	uxtb	r3, r0
 802482e:	b2ba      	uxth	r2, r7
 8024830:	fa1f fc8c 	uxth.w	ip, ip
 8024834:	fb02 f00c 	mul.w	r0, r2, ip
 8024838:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802483c:	0112      	lsls	r2, r2, #4
 802483e:	fa1f fc8c 	uxth.w	ip, ip
 8024842:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024846:	1a12      	subs	r2, r2, r0
 8024848:	eba7 070c 	sub.w	r7, r7, ip
 802484c:	b292      	uxth	r2, r2
 802484e:	b2bf      	uxth	r7, r7
 8024850:	4362      	muls	r2, r4
 8024852:	fb06 2207 	mla	r2, r6, r7, r2
 8024856:	fb0c 2505 	mla	r5, ip, r5, r2
 802485a:	fb00 5303 	mla	r3, r0, r3, r5
 802485e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024862:	b1b3      	cbz	r3, 8024892 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024864:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024868:	435a      	muls	r2, r3
 802486a:	1c53      	adds	r3, r2, #1
 802486c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024870:	4a2d      	ldr	r2, [pc, #180]	; (8024928 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024872:	121b      	asrs	r3, r3, #8
 8024874:	6812      	ldr	r2, [r2, #0]
 8024876:	2bff      	cmp	r3, #255	; 0xff
 8024878:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802487c:	d120      	bne.n	80248c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802487e:	4b2b      	ldr	r3, [pc, #172]	; (802492c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024880:	0950      	lsrs	r0, r2, #5
 8024882:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024886:	4033      	ands	r3, r6
 8024888:	4318      	orrs	r0, r3
 802488a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802488e:	4302      	orrs	r2, r0
 8024890:	800a      	strh	r2, [r1, #0]
 8024892:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024896:	2600      	movs	r6, #0
 8024898:	e788      	b.n	80247ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802489a:	2400      	movs	r4, #0
 802489c:	4626      	mov	r6, r4
 802489e:	e799      	b.n	80247d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80248a0:	2400      	movs	r4, #0
 80248a2:	e797      	b.n	80247d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80248a4:	463c      	mov	r4, r7
 80248a6:	e795      	b.n	80247d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80248a8:	2500      	movs	r5, #0
 80248aa:	e7ac      	b.n	8024806 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80248ac:	2300      	movs	r3, #0
 80248ae:	461d      	mov	r5, r3
 80248b0:	e7bd      	b.n	802482e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80248b2:	4663      	mov	r3, ip
 80248b4:	4665      	mov	r5, ip
 80248b6:	e7ba      	b.n	802482e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80248b8:	2300      	movs	r3, #0
 80248ba:	e7b8      	b.n	802482e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80248bc:	463b      	mov	r3, r7
 80248be:	e7b6      	b.n	802482e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80248c0:	880d      	ldrh	r5, [r1, #0]
 80248c2:	b29f      	uxth	r7, r3
 80248c4:	122c      	asrs	r4, r5, #8
 80248c6:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80248ca:	43db      	mvns	r3, r3
 80248cc:	b2db      	uxtb	r3, r3
 80248ce:	fb10 f007 	smulbb	r0, r0, r7
 80248d2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80248d6:	fb04 0403 	mla	r4, r4, r3, r0
 80248da:	b2f6      	uxtb	r6, r6
 80248dc:	10e8      	asrs	r0, r5, #3
 80248de:	b2d2      	uxtb	r2, r2
 80248e0:	00ed      	lsls	r5, r5, #3
 80248e2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80248e6:	fb12 f207 	smulbb	r2, r2, r7
 80248ea:	fb16 f607 	smulbb	r6, r6, r7
 80248ee:	b2ed      	uxtb	r5, r5
 80248f0:	b2a4      	uxth	r4, r4
 80248f2:	fb00 6603 	mla	r6, r0, r3, r6
 80248f6:	fb05 2303 	mla	r3, r5, r3, r2
 80248fa:	b29a      	uxth	r2, r3
 80248fc:	1c63      	adds	r3, r4, #1
 80248fe:	b2b0      	uxth	r0, r6
 8024900:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024904:	1c53      	adds	r3, r2, #1
 8024906:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802490a:	1c42      	adds	r2, r0, #1
 802490c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024910:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024914:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024918:	0940      	lsrs	r0, r0, #5
 802491a:	4323      	orrs	r3, r4
 802491c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024920:	4303      	orrs	r3, r0
 8024922:	800b      	strh	r3, [r1, #0]
 8024924:	e7b5      	b.n	8024892 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024926:	bf00      	nop
 8024928:	2000ef2c 	.word	0x2000ef2c
 802492c:	00fff800 	.word	0x00fff800

08024930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024934:	b097      	sub	sp, #92	; 0x5c
 8024936:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802493a:	9214      	str	r2, [sp, #80]	; 0x50
 802493c:	9309      	str	r3, [sp, #36]	; 0x24
 802493e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024940:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8024944:	910d      	str	r1, [sp, #52]	; 0x34
 8024946:	930f      	str	r3, [sp, #60]	; 0x3c
 8024948:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802494c:	9015      	str	r0, [sp, #84]	; 0x54
 802494e:	6850      	ldr	r0, [r2, #4]
 8024950:	6812      	ldr	r2, [r2, #0]
 8024952:	fb00 1303 	mla	r3, r0, r3, r1
 8024956:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802495a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802495c:	689b      	ldr	r3, [r3, #8]
 802495e:	3301      	adds	r3, #1
 8024960:	f023 0301 	bic.w	r3, r3, #1
 8024964:	930a      	str	r3, [sp, #40]	; 0x28
 8024966:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024968:	681f      	ldr	r7, [r3, #0]
 802496a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802496c:	2b00      	cmp	r3, #0
 802496e:	dc03      	bgt.n	8024978 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024970:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024972:	2b00      	cmp	r3, #0
 8024974:	f340 8287 	ble.w	8024e86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024978:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802497a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802497e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024982:	1e48      	subs	r0, r1, #1
 8024984:	f102 3cff 	add.w	ip, r2, #4294967295
 8024988:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802498a:	2b00      	cmp	r3, #0
 802498c:	f340 80c4 	ble.w	8024b18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024990:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024994:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024998:	d406      	bmi.n	80249a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802499a:	4586      	cmp	lr, r0
 802499c:	da04      	bge.n	80249a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802499e:	2b00      	cmp	r3, #0
 80249a0:	db02      	blt.n	80249a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80249a2:	4563      	cmp	r3, ip
 80249a4:	f2c0 80b9 	blt.w	8024b1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80249a8:	f11e 0e01 	adds.w	lr, lr, #1
 80249ac:	f100 80aa 	bmi.w	8024b04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80249b0:	4571      	cmp	r1, lr
 80249b2:	f2c0 80a7 	blt.w	8024b04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80249b6:	3301      	adds	r3, #1
 80249b8:	f100 80a4 	bmi.w	8024b04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80249bc:	429a      	cmp	r2, r3
 80249be:	f2c0 80a1 	blt.w	8024b04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80249c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80249c4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80249c8:	930e      	str	r3, [sp, #56]	; 0x38
 80249ca:	46c8      	mov	r8, r9
 80249cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80249ce:	2b00      	cmp	r3, #0
 80249d0:	f340 80c3 	ble.w	8024b5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80249d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80249d6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80249da:	1423      	asrs	r3, r4, #16
 80249dc:	ea4f 4026 	mov.w	r0, r6, asr #16
 80249e0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80249e4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80249e8:	f100 814d 	bmi.w	8024c86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80249ec:	f10c 3bff 	add.w	fp, ip, #4294967295
 80249f0:	455b      	cmp	r3, fp
 80249f2:	f280 8148 	bge.w	8024c86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80249f6:	2800      	cmp	r0, #0
 80249f8:	f2c0 8145 	blt.w	8024c86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80249fc:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024a00:	4558      	cmp	r0, fp
 8024a02:	f280 8140 	bge.w	8024c86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024a06:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024a08:	fb00 3305 	mla	r3, r0, r5, r3
 8024a0c:	0858      	lsrs	r0, r3, #1
 8024a0e:	07dd      	lsls	r5, r3, #31
 8024a10:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024a14:	bf54      	ite	pl
 8024a16:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024a1a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024a1e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024a22:	fa5f fc8c 	uxtb.w	ip, ip
 8024a26:	2a00      	cmp	r2, #0
 8024a28:	f000 80db 	beq.w	8024be2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8024a2c:	1c58      	adds	r0, r3, #1
 8024a2e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024a32:	07c0      	lsls	r0, r0, #31
 8024a34:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024a38:	bf54      	ite	pl
 8024a3a:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024a3e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024a42:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024a46:	fa5f f08e 	uxtb.w	r0, lr
 8024a4a:	9010      	str	r0, [sp, #64]	; 0x40
 8024a4c:	b1c9      	cbz	r1, 8024a82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024a4e:	4453      	add	r3, sl
 8024a50:	0858      	lsrs	r0, r3, #1
 8024a52:	07dd      	lsls	r5, r3, #31
 8024a54:	5c38      	ldrb	r0, [r7, r0]
 8024a56:	bf54      	ite	pl
 8024a58:	f000 000f 	andpl.w	r0, r0, #15
 8024a5c:	1100      	asrmi	r0, r0, #4
 8024a5e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024a62:	3301      	adds	r3, #1
 8024a64:	b2c0      	uxtb	r0, r0
 8024a66:	900b      	str	r0, [sp, #44]	; 0x2c
 8024a68:	0858      	lsrs	r0, r3, #1
 8024a6a:	07dd      	lsls	r5, r3, #31
 8024a6c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024a70:	bf54      	ite	pl
 8024a72:	f00e 030f 	andpl.w	r3, lr, #15
 8024a76:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8024a7a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024a7e:	b2db      	uxtb	r3, r3
 8024a80:	9311      	str	r3, [sp, #68]	; 0x44
 8024a82:	b292      	uxth	r2, r2
 8024a84:	b289      	uxth	r1, r1
 8024a86:	fb02 f301 	mul.w	r3, r2, r1
 8024a8a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024a8e:	0112      	lsls	r2, r2, #4
 8024a90:	b289      	uxth	r1, r1
 8024a92:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024a96:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024a98:	1ad2      	subs	r2, r2, r3
 8024a9a:	1a40      	subs	r0, r0, r1
 8024a9c:	b292      	uxth	r2, r2
 8024a9e:	436a      	muls	r2, r5
 8024aa0:	b280      	uxth	r0, r0
 8024aa2:	fb0c 2c00 	mla	ip, ip, r0, r2
 8024aa6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024aa8:	fb01 c102 	mla	r1, r1, r2, ip
 8024aac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024aae:	fb03 1302 	mla	r3, r3, r2, r1
 8024ab2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024ab6:	b1db      	cbz	r3, 8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024ab8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024aba:	4353      	muls	r3, r2
 8024abc:	1c5a      	adds	r2, r3, #1
 8024abe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024ac2:	4ac6      	ldr	r2, [pc, #792]	; (8024ddc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024ac4:	121b      	asrs	r3, r3, #8
 8024ac6:	6812      	ldr	r2, [r2, #0]
 8024ac8:	2bff      	cmp	r3, #255	; 0xff
 8024aca:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024ace:	f040 8099 	bne.w	8024c04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024ad2:	0953      	lsrs	r3, r2, #5
 8024ad4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024ad8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024adc:	f02c 0c07 	bic.w	ip, ip, #7
 8024ae0:	ea43 0c0c 	orr.w	ip, r3, ip
 8024ae4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024ae8:	ea4c 0202 	orr.w	r2, ip, r2
 8024aec:	f8a8 2000 	strh.w	r2, [r8]
 8024af0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024af2:	441c      	add	r4, r3
 8024af4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024af6:	441e      	add	r6, r3
 8024af8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024afa:	3b01      	subs	r3, #1
 8024afc:	f108 0802 	add.w	r8, r8, #2
 8024b00:	930e      	str	r3, [sp, #56]	; 0x38
 8024b02:	e763      	b.n	80249cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024b04:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024b06:	441c      	add	r4, r3
 8024b08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024b0a:	441e      	add	r6, r3
 8024b0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024b0e:	3b01      	subs	r3, #1
 8024b10:	9309      	str	r3, [sp, #36]	; 0x24
 8024b12:	f109 0902 	add.w	r9, r9, #2
 8024b16:	e737      	b.n	8024988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024b18:	d024      	beq.n	8024b64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8024b1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024b1c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8024b1e:	3b01      	subs	r3, #1
 8024b20:	fb00 4003 	mla	r0, r0, r3, r4
 8024b24:	1400      	asrs	r0, r0, #16
 8024b26:	f53f af4c 	bmi.w	80249c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024b2a:	3901      	subs	r1, #1
 8024b2c:	4288      	cmp	r0, r1
 8024b2e:	f6bf af48 	bge.w	80249c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024b32:	9924      	ldr	r1, [sp, #144]	; 0x90
 8024b34:	fb01 6303 	mla	r3, r1, r3, r6
 8024b38:	141b      	asrs	r3, r3, #16
 8024b3a:	f53f af42 	bmi.w	80249c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024b3e:	3a01      	subs	r2, #1
 8024b40:	4293      	cmp	r3, r2
 8024b42:	f6bf af3e 	bge.w	80249c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024b46:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8024b4a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024b4e:	930e      	str	r3, [sp, #56]	; 0x38
 8024b50:	46c8      	mov	r8, r9
 8024b52:	f1bb 0f00 	cmp.w	fp, #0
 8024b56:	f300 80b7 	bgt.w	8024cc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8024b5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024b5c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024b60:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024b64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024b66:	2b00      	cmp	r3, #0
 8024b68:	f340 818d 	ble.w	8024e86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024b6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024b70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024b74:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024b78:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024b7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024b7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024b82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024b86:	eef0 6a62 	vmov.f32	s13, s5
 8024b8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024b8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024b92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024b96:	ee16 4a90 	vmov	r4, s13
 8024b9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024b9e:	eef0 6a43 	vmov.f32	s13, s6
 8024ba2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024ba6:	ee12 2a90 	vmov	r2, s5
 8024baa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024bae:	fb92 f3f3 	sdiv	r3, r2, r3
 8024bb2:	ee13 2a10 	vmov	r2, s6
 8024bb6:	9323      	str	r3, [sp, #140]	; 0x8c
 8024bb8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024bba:	fb92 f3f3 	sdiv	r3, r2, r3
 8024bbe:	9324      	str	r3, [sp, #144]	; 0x90
 8024bc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024bc2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024bc4:	3b01      	subs	r3, #1
 8024bc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024bca:	930d      	str	r3, [sp, #52]	; 0x34
 8024bcc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024bce:	bf08      	it	eq
 8024bd0:	4613      	moveq	r3, r2
 8024bd2:	ee16 6a90 	vmov	r6, s13
 8024bd6:	9309      	str	r3, [sp, #36]	; 0x24
 8024bd8:	eeb0 3a67 	vmov.f32	s6, s15
 8024bdc:	eef0 2a47 	vmov.f32	s5, s14
 8024be0:	e6c3      	b.n	802496a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024be2:	2900      	cmp	r1, #0
 8024be4:	f43f af4d 	beq.w	8024a82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024be8:	eb0a 0003 	add.w	r0, sl, r3
 8024bec:	0843      	lsrs	r3, r0, #1
 8024bee:	07c0      	lsls	r0, r0, #31
 8024bf0:	5cfb      	ldrb	r3, [r7, r3]
 8024bf2:	bf54      	ite	pl
 8024bf4:	f003 030f 	andpl.w	r3, r3, #15
 8024bf8:	111b      	asrmi	r3, r3, #4
 8024bfa:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024bfe:	b2db      	uxtb	r3, r3
 8024c00:	930b      	str	r3, [sp, #44]	; 0x2c
 8024c02:	e73e      	b.n	8024a82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024c04:	f8b8 e000 	ldrh.w	lr, [r8]
 8024c08:	fa1f fb83 	uxth.w	fp, r3
 8024c0c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024c10:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024c14:	43db      	mvns	r3, r3
 8024c16:	b2db      	uxtb	r3, r3
 8024c18:	fb11 f10b 	smulbb	r1, r1, fp
 8024c1c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024c20:	fb00 1003 	mla	r0, r0, r3, r1
 8024c24:	fa5f fc8c 	uxtb.w	ip, ip
 8024c28:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024c2c:	b2d2      	uxtb	r2, r2
 8024c2e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024c32:	b280      	uxth	r0, r0
 8024c34:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024c38:	fb1c fc0b 	smulbb	ip, ip, fp
 8024c3c:	fa5f fe8e 	uxtb.w	lr, lr
 8024c40:	fb12 fb0b 	smulbb	fp, r2, fp
 8024c44:	fb01 cc03 	mla	ip, r1, r3, ip
 8024c48:	fb0e bb03 	mla	fp, lr, r3, fp
 8024c4c:	1c43      	adds	r3, r0, #1
 8024c4e:	fa1f fc8c 	uxth.w	ip, ip
 8024c52:	fa1f fb8b 	uxth.w	fp, fp
 8024c56:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024c5a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8024c5e:	f10c 0101 	add.w	r1, ip, #1
 8024c62:	f10b 0001 	add.w	r0, fp, #1
 8024c66:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8024c6a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024c6e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024c72:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024c76:	4318      	orrs	r0, r3
 8024c78:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024c7c:	ea40 000c 	orr.w	r0, r0, ip
 8024c80:	f8a8 0000 	strh.w	r0, [r8]
 8024c84:	e734      	b.n	8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024c86:	f113 0b01 	adds.w	fp, r3, #1
 8024c8a:	f53f af31 	bmi.w	8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024c8e:	45dc      	cmp	ip, fp
 8024c90:	f6ff af2e 	blt.w	8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024c94:	f110 0b01 	adds.w	fp, r0, #1
 8024c98:	f53f af2a 	bmi.w	8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024c9c:	45de      	cmp	lr, fp
 8024c9e:	f6ff af27 	blt.w	8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024ca2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024ca4:	9302      	str	r3, [sp, #8]
 8024ca6:	fa0f f38e 	sxth.w	r3, lr
 8024caa:	9301      	str	r3, [sp, #4]
 8024cac:	fa0f f38c 	sxth.w	r3, ip
 8024cb0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024cb4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8024cb8:	9300      	str	r3, [sp, #0]
 8024cba:	463a      	mov	r2, r7
 8024cbc:	4653      	mov	r3, sl
 8024cbe:	4641      	mov	r1, r8
 8024cc0:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024cc2:	f7ff fd4d 	bl	8024760 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8024cc6:	e713      	b.n	8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024cc8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024cca:	1422      	asrs	r2, r4, #16
 8024ccc:	1433      	asrs	r3, r6, #16
 8024cce:	fb05 2303 	mla	r3, r5, r3, r2
 8024cd2:	085a      	lsrs	r2, r3, #1
 8024cd4:	07dd      	lsls	r5, r3, #31
 8024cd6:	5cba      	ldrb	r2, [r7, r2]
 8024cd8:	bf54      	ite	pl
 8024cda:	f002 020f 	andpl.w	r2, r2, #15
 8024cde:	1112      	asrmi	r2, r2, #4
 8024ce0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024ce4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024ce8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024cec:	b2d2      	uxtb	r2, r2
 8024cee:	2900      	cmp	r1, #0
 8024cf0:	d076      	beq.n	8024de0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024cf2:	f103 0e01 	add.w	lr, r3, #1
 8024cf6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8024cfa:	f01e 0f01 	tst.w	lr, #1
 8024cfe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024d02:	bf0c      	ite	eq
 8024d04:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024d08:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8024d0c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024d10:	fa5f f58c 	uxtb.w	r5, ip
 8024d14:	9512      	str	r5, [sp, #72]	; 0x48
 8024d16:	b300      	cbz	r0, 8024d5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024d18:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024d1a:	442b      	add	r3, r5
 8024d1c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024d20:	07dd      	lsls	r5, r3, #31
 8024d22:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024d26:	bf54      	ite	pl
 8024d28:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024d2c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024d30:	3301      	adds	r3, #1
 8024d32:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024d36:	fa5f f58c 	uxtb.w	r5, ip
 8024d3a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024d3e:	950c      	str	r5, [sp, #48]	; 0x30
 8024d40:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024d44:	07dd      	lsls	r5, r3, #31
 8024d46:	bf54      	ite	pl
 8024d48:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024d4c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024d50:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024d54:	fa5f f38c 	uxtb.w	r3, ip
 8024d58:	9313      	str	r3, [sp, #76]	; 0x4c
 8024d5a:	b289      	uxth	r1, r1
 8024d5c:	b280      	uxth	r0, r0
 8024d5e:	fb01 f300 	mul.w	r3, r1, r0
 8024d62:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024d66:	0109      	lsls	r1, r1, #4
 8024d68:	b280      	uxth	r0, r0
 8024d6a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8024d6e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024d70:	1ac9      	subs	r1, r1, r3
 8024d72:	ebac 0c00 	sub.w	ip, ip, r0
 8024d76:	b289      	uxth	r1, r1
 8024d78:	4369      	muls	r1, r5
 8024d7a:	fa1f fc8c 	uxth.w	ip, ip
 8024d7e:	fb02 120c 	mla	r2, r2, ip, r1
 8024d82:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024d84:	fb00 2001 	mla	r0, r0, r1, r2
 8024d88:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024d8a:	fb03 0302 	mla	r3, r3, r2, r0
 8024d8e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024d92:	b1d3      	cbz	r3, 8024dca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024d94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024d96:	4353      	muls	r3, r2
 8024d98:	1c5a      	adds	r2, r3, #1
 8024d9a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024d9e:	4a0f      	ldr	r2, [pc, #60]	; (8024ddc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024da0:	121b      	asrs	r3, r3, #8
 8024da2:	6812      	ldr	r2, [r2, #0]
 8024da4:	2bff      	cmp	r3, #255	; 0xff
 8024da6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024daa:	d12d      	bne.n	8024e08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8024dac:	0953      	lsrs	r3, r2, #5
 8024dae:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024db2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024db6:	f02c 0c07 	bic.w	ip, ip, #7
 8024dba:	ea43 0c0c 	orr.w	ip, r3, ip
 8024dbe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024dc2:	ea4c 0202 	orr.w	r2, ip, r2
 8024dc6:	f8a8 2000 	strh.w	r2, [r8]
 8024dca:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024dcc:	441c      	add	r4, r3
 8024dce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024dd0:	f108 0802 	add.w	r8, r8, #2
 8024dd4:	441e      	add	r6, r3
 8024dd6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024dda:	e6ba      	b.n	8024b52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024ddc:	2000ef2c 	.word	0x2000ef2c
 8024de0:	2800      	cmp	r0, #0
 8024de2:	d0ba      	beq.n	8024d5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024de4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024de6:	442b      	add	r3, r5
 8024de8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024dec:	07db      	lsls	r3, r3, #31
 8024dee:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024df2:	bf54      	ite	pl
 8024df4:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024df8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024dfc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024e00:	fa5f f38c 	uxtb.w	r3, ip
 8024e04:	930c      	str	r3, [sp, #48]	; 0x30
 8024e06:	e7a8      	b.n	8024d5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024e08:	f8b8 e000 	ldrh.w	lr, [r8]
 8024e0c:	fa1f fa83 	uxth.w	sl, r3
 8024e10:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024e14:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024e18:	43db      	mvns	r3, r3
 8024e1a:	b2db      	uxtb	r3, r3
 8024e1c:	fb11 f10a 	smulbb	r1, r1, sl
 8024e20:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024e24:	fb00 1003 	mla	r0, r0, r3, r1
 8024e28:	b2d2      	uxtb	r2, r2
 8024e2a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024e2e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024e32:	fa5f fe8e 	uxtb.w	lr, lr
 8024e36:	fb12 f20a 	smulbb	r2, r2, sl
 8024e3a:	fb0e 2203 	mla	r2, lr, r3, r2
 8024e3e:	fa5f fc8c 	uxtb.w	ip, ip
 8024e42:	b280      	uxth	r0, r0
 8024e44:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024e48:	b292      	uxth	r2, r2
 8024e4a:	fb1c fc0a 	smulbb	ip, ip, sl
 8024e4e:	fb01 cc03 	mla	ip, r1, r3, ip
 8024e52:	1c43      	adds	r3, r0, #1
 8024e54:	1c51      	adds	r1, r2, #1
 8024e56:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024e5a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024e5e:	fa1f fc8c 	uxth.w	ip, ip
 8024e62:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024e66:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024e6a:	4308      	orrs	r0, r1
 8024e6c:	f10c 0101 	add.w	r1, ip, #1
 8024e70:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024e74:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024e78:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024e7c:	ea40 000c 	orr.w	r0, r0, ip
 8024e80:	f8a8 0000 	strh.w	r0, [r8]
 8024e84:	e7a1      	b.n	8024dca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024e86:	b017      	add	sp, #92	; 0x5c
 8024e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024e8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024e8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024e90:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024e94:	2d00      	cmp	r5, #0
 8024e96:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024e9a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024e9e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024ea2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024ea6:	fb05 0e03 	mla	lr, r5, r3, r0
 8024eaa:	f2c0 80b0 	blt.w	802500e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024eae:	45a9      	cmp	r9, r5
 8024eb0:	f340 80ad 	ble.w	802500e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024eb4:	2800      	cmp	r0, #0
 8024eb6:	f2c0 80a8 	blt.w	802500a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024eba:	4580      	cmp	r8, r0
 8024ebc:	f340 80a5 	ble.w	802500a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024ec0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024ec4:	f01e 0f01 	tst.w	lr, #1
 8024ec8:	5d16      	ldrb	r6, [r2, r4]
 8024eca:	bf0c      	ite	eq
 8024ecc:	f006 060f 	andeq.w	r6, r6, #15
 8024ed0:	1136      	asrne	r6, r6, #4
 8024ed2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024ed6:	b2f6      	uxtb	r6, r6
 8024ed8:	1c44      	adds	r4, r0, #1
 8024eda:	f100 809b 	bmi.w	8025014 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024ede:	45a0      	cmp	r8, r4
 8024ee0:	f340 8098 	ble.w	8025014 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024ee4:	2f00      	cmp	r7, #0
 8024ee6:	f000 8097 	beq.w	8025018 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024eea:	f10e 0a01 	add.w	sl, lr, #1
 8024eee:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024ef2:	f01a 0f01 	tst.w	sl, #1
 8024ef6:	5d14      	ldrb	r4, [r2, r4]
 8024ef8:	bf0c      	ite	eq
 8024efa:	f004 040f 	andeq.w	r4, r4, #15
 8024efe:	1124      	asrne	r4, r4, #4
 8024f00:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024f04:	b2e4      	uxtb	r4, r4
 8024f06:	3501      	adds	r5, #1
 8024f08:	f100 808a 	bmi.w	8025020 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024f0c:	45a9      	cmp	r9, r5
 8024f0e:	f340 8087 	ble.w	8025020 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024f12:	f1bc 0f00 	cmp.w	ip, #0
 8024f16:	f000 8086 	beq.w	8025026 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8024f1a:	2800      	cmp	r0, #0
 8024f1c:	db7e      	blt.n	802501c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024f1e:	4580      	cmp	r8, r0
 8024f20:	dd7c      	ble.n	802501c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024f22:	eb03 090e 	add.w	r9, r3, lr
 8024f26:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024f2a:	f019 0f01 	tst.w	r9, #1
 8024f2e:	5d55      	ldrb	r5, [r2, r5]
 8024f30:	bf0c      	ite	eq
 8024f32:	f005 050f 	andeq.w	r5, r5, #15
 8024f36:	112d      	asrne	r5, r5, #4
 8024f38:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024f3c:	b2ed      	uxtb	r5, r5
 8024f3e:	3001      	adds	r0, #1
 8024f40:	d474      	bmi.n	802502c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024f42:	4580      	cmp	r8, r0
 8024f44:	dd72      	ble.n	802502c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024f46:	2f00      	cmp	r7, #0
 8024f48:	d072      	beq.n	8025030 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024f4a:	3301      	adds	r3, #1
 8024f4c:	449e      	add	lr, r3
 8024f4e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024f52:	f01e 0f01 	tst.w	lr, #1
 8024f56:	5cd0      	ldrb	r0, [r2, r3]
 8024f58:	bf0c      	ite	eq
 8024f5a:	f000 000f 	andeq.w	r0, r0, #15
 8024f5e:	1100      	asrne	r0, r0, #4
 8024f60:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024f64:	b2c3      	uxtb	r3, r0
 8024f66:	b2ba      	uxth	r2, r7
 8024f68:	fa1f fc8c 	uxth.w	ip, ip
 8024f6c:	fb02 f00c 	mul.w	r0, r2, ip
 8024f70:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024f74:	0112      	lsls	r2, r2, #4
 8024f76:	fa1f fc8c 	uxth.w	ip, ip
 8024f7a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024f7e:	1a12      	subs	r2, r2, r0
 8024f80:	eba7 070c 	sub.w	r7, r7, ip
 8024f84:	b292      	uxth	r2, r2
 8024f86:	b2bf      	uxth	r7, r7
 8024f88:	4362      	muls	r2, r4
 8024f8a:	fb06 2207 	mla	r2, r6, r7, r2
 8024f8e:	fb0c 2505 	mla	r5, ip, r5, r2
 8024f92:	fb00 5303 	mla	r3, r0, r3, r5
 8024f96:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024f9a:	b3a3      	cbz	r3, 8025006 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024f9c:	4a25      	ldr	r2, [pc, #148]	; (8025034 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024f9e:	880e      	ldrh	r6, [r1, #0]
 8024fa0:	6815      	ldr	r5, [r2, #0]
 8024fa2:	1234      	asrs	r4, r6, #8
 8024fa4:	b29a      	uxth	r2, r3
 8024fa6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024faa:	43db      	mvns	r3, r3
 8024fac:	b2db      	uxtb	r3, r3
 8024fae:	fb10 f002 	smulbb	r0, r0, r2
 8024fb2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024fb6:	fb04 0403 	mla	r4, r4, r3, r0
 8024fba:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024fbe:	10f0      	asrs	r0, r6, #3
 8024fc0:	b2ed      	uxtb	r5, r5
 8024fc2:	00f6      	lsls	r6, r6, #3
 8024fc4:	fb17 f702 	smulbb	r7, r7, r2
 8024fc8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024fcc:	fb15 f202 	smulbb	r2, r5, r2
 8024fd0:	b2f6      	uxtb	r6, r6
 8024fd2:	b2a4      	uxth	r4, r4
 8024fd4:	fb00 7003 	mla	r0, r0, r3, r7
 8024fd8:	fb06 2303 	mla	r3, r6, r3, r2
 8024fdc:	b29a      	uxth	r2, r3
 8024fde:	1c63      	adds	r3, r4, #1
 8024fe0:	b280      	uxth	r0, r0
 8024fe2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024fe6:	1c53      	adds	r3, r2, #1
 8024fe8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024fec:	1c42      	adds	r2, r0, #1
 8024fee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024ff2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024ff6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024ffa:	0940      	lsrs	r0, r0, #5
 8024ffc:	4323      	orrs	r3, r4
 8024ffe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025002:	4303      	orrs	r3, r0
 8025004:	800b      	strh	r3, [r1, #0]
 8025006:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802500a:	2600      	movs	r6, #0
 802500c:	e764      	b.n	8024ed8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802500e:	2400      	movs	r4, #0
 8025010:	4626      	mov	r6, r4
 8025012:	e778      	b.n	8024f06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025014:	2400      	movs	r4, #0
 8025016:	e776      	b.n	8024f06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025018:	463c      	mov	r4, r7
 802501a:	e774      	b.n	8024f06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802501c:	2500      	movs	r5, #0
 802501e:	e78e      	b.n	8024f3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8025020:	2300      	movs	r3, #0
 8025022:	461d      	mov	r5, r3
 8025024:	e79f      	b.n	8024f66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025026:	4663      	mov	r3, ip
 8025028:	4665      	mov	r5, ip
 802502a:	e79c      	b.n	8024f66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802502c:	2300      	movs	r3, #0
 802502e:	e79a      	b.n	8024f66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025030:	463b      	mov	r3, r7
 8025032:	e798      	b.n	8024f66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025034:	2000ef2c 	.word	0x2000ef2c

08025038 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802503c:	b093      	sub	sp, #76	; 0x4c
 802503e:	461d      	mov	r5, r3
 8025040:	920c      	str	r2, [sp, #48]	; 0x30
 8025042:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025044:	9107      	str	r1, [sp, #28]
 8025046:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802504a:	9011      	str	r0, [sp, #68]	; 0x44
 802504c:	6850      	ldr	r0, [r2, #4]
 802504e:	6812      	ldr	r2, [r2, #0]
 8025050:	fb00 1303 	mla	r3, r0, r3, r1
 8025054:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025058:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802505a:	689b      	ldr	r3, [r3, #8]
 802505c:	3301      	adds	r3, #1
 802505e:	f023 0301 	bic.w	r3, r3, #1
 8025062:	9306      	str	r3, [sp, #24]
 8025064:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025066:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802506a:	681f      	ldr	r7, [r3, #0]
 802506c:	9b07      	ldr	r3, [sp, #28]
 802506e:	2b00      	cmp	r3, #0
 8025070:	dc03      	bgt.n	802507a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025072:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025074:	2b00      	cmp	r3, #0
 8025076:	f340 8267 	ble.w	8025548 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802507a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802507c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025080:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025084:	1e48      	subs	r0, r1, #1
 8025086:	f102 3cff 	add.w	ip, r2, #4294967295
 802508a:	2d00      	cmp	r5, #0
 802508c:	f340 80b8 	ble.w	8025200 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025090:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025094:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025098:	d406      	bmi.n	80250a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802509a:	4586      	cmp	lr, r0
 802509c:	da04      	bge.n	80250a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802509e:	2b00      	cmp	r3, #0
 80250a0:	db02      	blt.n	80250a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80250a2:	4563      	cmp	r3, ip
 80250a4:	f2c0 80ad 	blt.w	8025202 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80250a8:	f11e 0e01 	adds.w	lr, lr, #1
 80250ac:	f100 80a0 	bmi.w	80251f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80250b0:	4571      	cmp	r1, lr
 80250b2:	f2c0 809d 	blt.w	80251f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80250b6:	3301      	adds	r3, #1
 80250b8:	f100 809a 	bmi.w	80251f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80250bc:	429a      	cmp	r2, r3
 80250be:	f2c0 8097 	blt.w	80251f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80250c2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80250c6:	9509      	str	r5, [sp, #36]	; 0x24
 80250c8:	46c8      	mov	r8, r9
 80250ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80250cc:	2b00      	cmp	r3, #0
 80250ce:	f340 80b6 	ble.w	802523e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80250d2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80250d6:	9308      	str	r3, [sp, #32]
 80250d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80250da:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80250de:	1423      	asrs	r3, r4, #16
 80250e0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80250e4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80250e8:	f100 813e 	bmi.w	8025368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80250ec:	f10c 3bff 	add.w	fp, ip, #4294967295
 80250f0:	455b      	cmp	r3, fp
 80250f2:	f280 8139 	bge.w	8025368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80250f6:	2800      	cmp	r0, #0
 80250f8:	f2c0 8136 	blt.w	8025368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80250fc:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025100:	4558      	cmp	r0, fp
 8025102:	f280 8131 	bge.w	8025368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025106:	9a06      	ldr	r2, [sp, #24]
 8025108:	fb00 3302 	mla	r3, r0, r2, r3
 802510c:	0858      	lsrs	r0, r3, #1
 802510e:	07da      	lsls	r2, r3, #31
 8025110:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025114:	9a08      	ldr	r2, [sp, #32]
 8025116:	bf54      	ite	pl
 8025118:	f00c 0c0f 	andpl.w	ip, ip, #15
 802511c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025120:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025124:	fa5f fc8c 	uxtb.w	ip, ip
 8025128:	2a00      	cmp	r2, #0
 802512a:	f000 80cb 	beq.w	80252c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802512e:	1c58      	adds	r0, r3, #1
 8025130:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025134:	07c0      	lsls	r0, r0, #31
 8025136:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802513a:	bf54      	ite	pl
 802513c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025140:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025144:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025148:	fa5f fe8e 	uxtb.w	lr, lr
 802514c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025150:	b1b9      	cbz	r1, 8025182 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025152:	4453      	add	r3, sl
 8025154:	0858      	lsrs	r0, r3, #1
 8025156:	07da      	lsls	r2, r3, #31
 8025158:	5c38      	ldrb	r0, [r7, r0]
 802515a:	bf54      	ite	pl
 802515c:	f000 000f 	andpl.w	r0, r0, #15
 8025160:	1100      	asrmi	r0, r0, #4
 8025162:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025166:	b2c0      	uxtb	r0, r0
 8025168:	900a      	str	r0, [sp, #40]	; 0x28
 802516a:	1c58      	adds	r0, r3, #1
 802516c:	0843      	lsrs	r3, r0, #1
 802516e:	07c2      	lsls	r2, r0, #31
 8025170:	5cfb      	ldrb	r3, [r7, r3]
 8025172:	bf54      	ite	pl
 8025174:	f003 030f 	andpl.w	r3, r3, #15
 8025178:	111b      	asrmi	r3, r3, #4
 802517a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802517e:	b2db      	uxtb	r3, r3
 8025180:	930e      	str	r3, [sp, #56]	; 0x38
 8025182:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8025186:	b289      	uxth	r1, r1
 8025188:	fb02 f301 	mul.w	r3, r2, r1
 802518c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025190:	0112      	lsls	r2, r2, #4
 8025192:	b289      	uxth	r1, r1
 8025194:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8025198:	1a40      	subs	r0, r0, r1
 802519a:	fa1f fe80 	uxth.w	lr, r0
 802519e:	1ad2      	subs	r2, r2, r3
 80251a0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80251a2:	b292      	uxth	r2, r2
 80251a4:	4342      	muls	r2, r0
 80251a6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80251aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80251ac:	fb01 c102 	mla	r1, r1, r2, ip
 80251b0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80251b2:	fb03 1302 	mla	r3, r3, r2, r1
 80251b6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80251ba:	2bff      	cmp	r3, #255	; 0xff
 80251bc:	f040 8093 	bne.w	80252e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80251c0:	4bbe      	ldr	r3, [pc, #760]	; (80254bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80251c2:	681a      	ldr	r2, [r3, #0]
 80251c4:	4bbe      	ldr	r3, [pc, #760]	; (80254c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80251c6:	0951      	lsrs	r1, r2, #5
 80251c8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80251cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80251d0:	430b      	orrs	r3, r1
 80251d2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80251d6:	4313      	orrs	r3, r2
 80251d8:	f8a8 3000 	strh.w	r3, [r8]
 80251dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80251de:	441c      	add	r4, r3
 80251e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80251e2:	441e      	add	r6, r3
 80251e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80251e6:	3b01      	subs	r3, #1
 80251e8:	f108 0802 	add.w	r8, r8, #2
 80251ec:	9309      	str	r3, [sp, #36]	; 0x24
 80251ee:	e76c      	b.n	80250ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80251f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80251f2:	441c      	add	r4, r3
 80251f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80251f6:	3d01      	subs	r5, #1
 80251f8:	441e      	add	r6, r3
 80251fa:	f109 0902 	add.w	r9, r9, #2
 80251fe:	e744      	b.n	802508a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8025200:	d021      	beq.n	8025246 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8025202:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8025204:	1e6b      	subs	r3, r5, #1
 8025206:	fb00 4003 	mla	r0, r0, r3, r4
 802520a:	1400      	asrs	r0, r0, #16
 802520c:	f53f af59 	bmi.w	80250c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025210:	3901      	subs	r1, #1
 8025212:	4288      	cmp	r0, r1
 8025214:	f6bf af55 	bge.w	80250c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025218:	9920      	ldr	r1, [sp, #128]	; 0x80
 802521a:	fb01 6303 	mla	r3, r1, r3, r6
 802521e:	141b      	asrs	r3, r3, #16
 8025220:	f53f af4f 	bmi.w	80250c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025224:	3a01      	subs	r2, #1
 8025226:	4293      	cmp	r3, r2
 8025228:	f6bf af4b 	bge.w	80250c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802522c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8025230:	9308      	str	r3, [sp, #32]
 8025232:	46a8      	mov	r8, r5
 8025234:	46ce      	mov	lr, r9
 8025236:	f1b8 0f00 	cmp.w	r8, #0
 802523a:	f300 80b5 	bgt.w	80253a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802523e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025242:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8025246:	9b07      	ldr	r3, [sp, #28]
 8025248:	2b00      	cmp	r3, #0
 802524a:	f340 817d 	ble.w	8025548 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802524e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025252:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025256:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802525a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802525c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025260:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025264:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025268:	eef0 6a62 	vmov.f32	s13, s5
 802526c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025270:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025274:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025278:	ee16 4a90 	vmov	r4, s13
 802527c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025280:	eef0 6a43 	vmov.f32	s13, s6
 8025284:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025288:	ee12 2a90 	vmov	r2, s5
 802528c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025290:	fb92 f3f3 	sdiv	r3, r2, r3
 8025294:	ee13 2a10 	vmov	r2, s6
 8025298:	931f      	str	r3, [sp, #124]	; 0x7c
 802529a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802529c:	fb92 f3f3 	sdiv	r3, r2, r3
 80252a0:	9320      	str	r3, [sp, #128]	; 0x80
 80252a2:	9b07      	ldr	r3, [sp, #28]
 80252a4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80252a6:	3b01      	subs	r3, #1
 80252a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80252ac:	9307      	str	r3, [sp, #28]
 80252ae:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80252b0:	ee16 6a90 	vmov	r6, s13
 80252b4:	bf14      	ite	ne
 80252b6:	461d      	movne	r5, r3
 80252b8:	4615      	moveq	r5, r2
 80252ba:	eeb0 3a67 	vmov.f32	s6, s15
 80252be:	eef0 2a47 	vmov.f32	s5, s14
 80252c2:	e6d3      	b.n	802506c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80252c4:	2900      	cmp	r1, #0
 80252c6:	f43f af5c 	beq.w	8025182 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80252ca:	eb0a 0003 	add.w	r0, sl, r3
 80252ce:	0843      	lsrs	r3, r0, #1
 80252d0:	07c0      	lsls	r0, r0, #31
 80252d2:	5cfb      	ldrb	r3, [r7, r3]
 80252d4:	bf54      	ite	pl
 80252d6:	f003 030f 	andpl.w	r3, r3, #15
 80252da:	111b      	asrmi	r3, r3, #4
 80252dc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80252e0:	b2db      	uxtb	r3, r3
 80252e2:	930a      	str	r3, [sp, #40]	; 0x28
 80252e4:	e74d      	b.n	8025182 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80252e6:	2b00      	cmp	r3, #0
 80252e8:	f43f af78 	beq.w	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80252ec:	4a73      	ldr	r2, [pc, #460]	; (80254bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80252ee:	f8b8 c000 	ldrh.w	ip, [r8]
 80252f2:	6810      	ldr	r0, [r2, #0]
 80252f4:	fa1f fe83 	uxth.w	lr, r3
 80252f8:	ea4f 212c 	mov.w	r1, ip, asr #8
 80252fc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025300:	43db      	mvns	r3, r3
 8025302:	b2db      	uxtb	r3, r3
 8025304:	fb12 f20e 	smulbb	r2, r2, lr
 8025308:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802530c:	fb01 2103 	mla	r1, r1, r3, r2
 8025310:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025314:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025318:	b2c0      	uxtb	r0, r0
 802531a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802531e:	fb1b fb0e 	smulbb	fp, fp, lr
 8025322:	b289      	uxth	r1, r1
 8025324:	fb10 fe0e 	smulbb	lr, r0, lr
 8025328:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802532c:	fa5f fc8c 	uxtb.w	ip, ip
 8025330:	fb02 b203 	mla	r2, r2, r3, fp
 8025334:	1c48      	adds	r0, r1, #1
 8025336:	fb0c e303 	mla	r3, ip, r3, lr
 802533a:	b292      	uxth	r2, r2
 802533c:	b29b      	uxth	r3, r3
 802533e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8025342:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8025346:	f102 0b01 	add.w	fp, r2, #1
 802534a:	1c59      	adds	r1, r3, #1
 802534c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025350:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8025354:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025358:	0952      	lsrs	r2, r2, #5
 802535a:	4301      	orrs	r1, r0
 802535c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025360:	4311      	orrs	r1, r2
 8025362:	f8a8 1000 	strh.w	r1, [r8]
 8025366:	e739      	b.n	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025368:	f113 0b01 	adds.w	fp, r3, #1
 802536c:	f53f af36 	bmi.w	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025370:	45dc      	cmp	ip, fp
 8025372:	f6ff af33 	blt.w	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025376:	f110 0b01 	adds.w	fp, r0, #1
 802537a:	f53f af2f 	bmi.w	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802537e:	45de      	cmp	lr, fp
 8025380:	f6ff af2c 	blt.w	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025384:	9a08      	ldr	r2, [sp, #32]
 8025386:	9302      	str	r3, [sp, #8]
 8025388:	fa0f f38e 	sxth.w	r3, lr
 802538c:	9301      	str	r3, [sp, #4]
 802538e:	fa0f f38c 	sxth.w	r3, ip
 8025392:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025396:	9105      	str	r1, [sp, #20]
 8025398:	9300      	str	r3, [sp, #0]
 802539a:	463a      	mov	r2, r7
 802539c:	4653      	mov	r3, sl
 802539e:	4641      	mov	r1, r8
 80253a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80253a2:	f7ff fd73 	bl	8024e8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80253a6:	e719      	b.n	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80253a8:	9906      	ldr	r1, [sp, #24]
 80253aa:	1422      	asrs	r2, r4, #16
 80253ac:	1433      	asrs	r3, r6, #16
 80253ae:	fb01 2303 	mla	r3, r1, r3, r2
 80253b2:	085a      	lsrs	r2, r3, #1
 80253b4:	07d9      	lsls	r1, r3, #31
 80253b6:	5cba      	ldrb	r2, [r7, r2]
 80253b8:	bf54      	ite	pl
 80253ba:	f002 020f 	andpl.w	r2, r2, #15
 80253be:	1112      	asrmi	r2, r2, #4
 80253c0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80253c4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80253c8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80253cc:	b2d2      	uxtb	r2, r2
 80253ce:	2800      	cmp	r0, #0
 80253d0:	d062      	beq.n	8025498 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80253d2:	f103 0a01 	add.w	sl, r3, #1
 80253d6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80253da:	f01a 0f01 	tst.w	sl, #1
 80253de:	5c79      	ldrb	r1, [r7, r1]
 80253e0:	bf0c      	ite	eq
 80253e2:	f001 010f 	andeq.w	r1, r1, #15
 80253e6:	1109      	asrne	r1, r1, #4
 80253e8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80253ec:	b2c9      	uxtb	r1, r1
 80253ee:	910f      	str	r1, [sp, #60]	; 0x3c
 80253f0:	f1bc 0f00 	cmp.w	ip, #0
 80253f4:	d019      	beq.n	802542a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80253f6:	9908      	ldr	r1, [sp, #32]
 80253f8:	440b      	add	r3, r1
 80253fa:	0859      	lsrs	r1, r3, #1
 80253fc:	f013 0f01 	tst.w	r3, #1
 8025400:	5c79      	ldrb	r1, [r7, r1]
 8025402:	bf0c      	ite	eq
 8025404:	f001 010f 	andeq.w	r1, r1, #15
 8025408:	1109      	asrne	r1, r1, #4
 802540a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802540e:	b2c9      	uxtb	r1, r1
 8025410:	3301      	adds	r3, #1
 8025412:	910b      	str	r1, [sp, #44]	; 0x2c
 8025414:	0859      	lsrs	r1, r3, #1
 8025416:	07db      	lsls	r3, r3, #31
 8025418:	5c79      	ldrb	r1, [r7, r1]
 802541a:	bf54      	ite	pl
 802541c:	f001 010f 	andpl.w	r1, r1, #15
 8025420:	1109      	asrmi	r1, r1, #4
 8025422:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025426:	b2c9      	uxtb	r1, r1
 8025428:	9110      	str	r1, [sp, #64]	; 0x40
 802542a:	b280      	uxth	r0, r0
 802542c:	fa1f fc8c 	uxth.w	ip, ip
 8025430:	fb00 f30c 	mul.w	r3, r0, ip
 8025434:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8025438:	0100      	lsls	r0, r0, #4
 802543a:	fa1f fc8c 	uxth.w	ip, ip
 802543e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8025442:	eba1 010c 	sub.w	r1, r1, ip
 8025446:	fa1f fa81 	uxth.w	sl, r1
 802544a:	1ac0      	subs	r0, r0, r3
 802544c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802544e:	b280      	uxth	r0, r0
 8025450:	4348      	muls	r0, r1
 8025452:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8025454:	fb02 020a 	mla	r2, r2, sl, r0
 8025458:	fb0c 2c01 	mla	ip, ip, r1, r2
 802545c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802545e:	fb03 c302 	mla	r3, r3, r2, ip
 8025462:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025466:	2bff      	cmp	r3, #255	; 0xff
 8025468:	d12c      	bne.n	80254c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802546a:	4b14      	ldr	r3, [pc, #80]	; (80254bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802546c:	681a      	ldr	r2, [r3, #0]
 802546e:	4b14      	ldr	r3, [pc, #80]	; (80254c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025470:	0951      	lsrs	r1, r2, #5
 8025472:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025476:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802547a:	430b      	orrs	r3, r1
 802547c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025480:	4313      	orrs	r3, r2
 8025482:	f8ae 3000 	strh.w	r3, [lr]
 8025486:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025488:	441c      	add	r4, r3
 802548a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802548c:	f10e 0e02 	add.w	lr, lr, #2
 8025490:	441e      	add	r6, r3
 8025492:	f108 38ff 	add.w	r8, r8, #4294967295
 8025496:	e6ce      	b.n	8025236 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8025498:	f1bc 0f00 	cmp.w	ip, #0
 802549c:	d0c5      	beq.n	802542a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802549e:	9908      	ldr	r1, [sp, #32]
 80254a0:	440b      	add	r3, r1
 80254a2:	0859      	lsrs	r1, r3, #1
 80254a4:	07db      	lsls	r3, r3, #31
 80254a6:	5c79      	ldrb	r1, [r7, r1]
 80254a8:	bf54      	ite	pl
 80254aa:	f001 010f 	andpl.w	r1, r1, #15
 80254ae:	1109      	asrmi	r1, r1, #4
 80254b0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80254b4:	b2c9      	uxtb	r1, r1
 80254b6:	910b      	str	r1, [sp, #44]	; 0x2c
 80254b8:	e7b7      	b.n	802542a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80254ba:	bf00      	nop
 80254bc:	2000ef2c 	.word	0x2000ef2c
 80254c0:	fffff800 	.word	0xfffff800
 80254c4:	2b00      	cmp	r3, #0
 80254c6:	d0de      	beq.n	8025486 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80254c8:	4a21      	ldr	r2, [pc, #132]	; (8025550 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80254ca:	f8be c000 	ldrh.w	ip, [lr]
 80254ce:	6810      	ldr	r0, [r2, #0]
 80254d0:	fa1f fa83 	uxth.w	sl, r3
 80254d4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80254d8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80254dc:	43db      	mvns	r3, r3
 80254de:	b2db      	uxtb	r3, r3
 80254e0:	fb12 f20a 	smulbb	r2, r2, sl
 80254e4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80254e8:	fb01 2103 	mla	r1, r1, r3, r2
 80254ec:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80254f0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80254f4:	b2c0      	uxtb	r0, r0
 80254f6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80254fa:	fa5f fc8c 	uxtb.w	ip, ip
 80254fe:	fb10 f00a 	smulbb	r0, r0, sl
 8025502:	fb0c 0003 	mla	r0, ip, r3, r0
 8025506:	b289      	uxth	r1, r1
 8025508:	fb1b fb0a 	smulbb	fp, fp, sl
 802550c:	b280      	uxth	r0, r0
 802550e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025512:	fb02 b203 	mla	r2, r2, r3, fp
 8025516:	1c4b      	adds	r3, r1, #1
 8025518:	f100 0b01 	add.w	fp, r0, #1
 802551c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025520:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8025524:	b292      	uxth	r2, r2
 8025526:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802552a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802552e:	ea4b 0101 	orr.w	r1, fp, r1
 8025532:	f102 0b01 	add.w	fp, r2, #1
 8025536:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802553a:	0952      	lsrs	r2, r2, #5
 802553c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025540:	4311      	orrs	r1, r2
 8025542:	f8ae 1000 	strh.w	r1, [lr]
 8025546:	e79e      	b.n	8025486 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025548:	b013      	add	sp, #76	; 0x4c
 802554a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802554e:	bf00      	nop
 8025550:	2000ef2c 	.word	0x2000ef2c

08025554 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8025554:	b570      	push	{r4, r5, r6, lr}
 8025556:	1208      	asrs	r0, r1, #8
 8025558:	b29e      	uxth	r6, r3
 802555a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802555e:	1213      	asrs	r3, r2, #8
 8025560:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025564:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025568:	fb13 f305 	smulbb	r3, r3, r5
 802556c:	fb10 f006 	smulbb	r0, r0, r6
 8025570:	4418      	add	r0, r3
 8025572:	10cc      	asrs	r4, r1, #3
 8025574:	10d3      	asrs	r3, r2, #3
 8025576:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802557a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802557e:	fb13 f305 	smulbb	r3, r3, r5
 8025582:	fb14 f406 	smulbb	r4, r4, r6
 8025586:	00c9      	lsls	r1, r1, #3
 8025588:	00d2      	lsls	r2, r2, #3
 802558a:	441c      	add	r4, r3
 802558c:	b2d2      	uxtb	r2, r2
 802558e:	b2cb      	uxtb	r3, r1
 8025590:	fb12 f205 	smulbb	r2, r2, r5
 8025594:	b280      	uxth	r0, r0
 8025596:	fb13 f306 	smulbb	r3, r3, r6
 802559a:	4413      	add	r3, r2
 802559c:	1c42      	adds	r2, r0, #1
 802559e:	b29b      	uxth	r3, r3
 80255a0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80255a4:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80255a8:	1c58      	adds	r0, r3, #1
 80255aa:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80255ae:	b2a4      	uxth	r4, r4
 80255b0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80255b4:	4310      	orrs	r0, r2
 80255b6:	1c62      	adds	r2, r4, #1
 80255b8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80255bc:	0964      	lsrs	r4, r4, #5
 80255be:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80255c2:	4320      	orrs	r0, r4
 80255c4:	bd70      	pop	{r4, r5, r6, pc}
	...

080255c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80255c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80255cc:	b08f      	sub	sp, #60	; 0x3c
 80255ce:	461c      	mov	r4, r3
 80255d0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80255d4:	9004      	str	r0, [sp, #16]
 80255d6:	460d      	mov	r5, r1
 80255d8:	4616      	mov	r6, r2
 80255da:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80255dc:	2f00      	cmp	r7, #0
 80255de:	f000 80f6 	beq.w	80257ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80255e2:	6820      	ldr	r0, [r4, #0]
 80255e4:	6861      	ldr	r1, [r4, #4]
 80255e6:	aa0a      	add	r2, sp, #40	; 0x28
 80255e8:	c203      	stmia	r2!, {r0, r1}
 80255ea:	6818      	ldr	r0, [r3, #0]
 80255ec:	6859      	ldr	r1, [r3, #4]
 80255ee:	aa0c      	add	r2, sp, #48	; 0x30
 80255f0:	c203      	stmia	r2!, {r0, r1}
 80255f2:	a80a      	add	r0, sp, #40	; 0x28
 80255f4:	f7ef fa9c 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80255f8:	4621      	mov	r1, r4
 80255fa:	a80c      	add	r0, sp, #48	; 0x30
 80255fc:	f7ef fadc 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025600:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025604:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025608:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 802560c:	f002 0301 	and.w	r3, r2, #1
 8025610:	9306      	str	r3, [sp, #24]
 8025612:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025616:	f003 0101 	and.w	r1, r3, #1
 802561a:	9105      	str	r1, [sp, #20]
 802561c:	9805      	ldr	r0, [sp, #20]
 802561e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025622:	4403      	add	r3, r0
 8025624:	fb01 2303 	mla	r3, r1, r3, r2
 8025628:	f04f 0802 	mov.w	r8, #2
 802562c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025630:	441d      	add	r5, r3
 8025632:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025636:	441a      	add	r2, r3
 8025638:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802563c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025640:	4419      	add	r1, r3
 8025642:	4b64      	ldr	r3, [pc, #400]	; (80257d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025644:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025648:	6818      	ldr	r0, [r3, #0]
 802564a:	6803      	ldr	r3, [r0, #0]
 802564c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802564e:	4798      	blx	r3
 8025650:	4a61      	ldr	r2, [pc, #388]	; (80257d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8025652:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025656:	8813      	ldrh	r3, [r2, #0]
 8025658:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 802565c:	2fff      	cmp	r7, #255	; 0xff
 802565e:	fb03 a404 	mla	r4, r3, r4, sl
 8025662:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025666:	f106 0604 	add.w	r6, r6, #4
 802566a:	4611      	mov	r1, r2
 802566c:	fb03 fb0b 	mul.w	fp, r3, fp
 8025670:	d06b      	beq.n	802574a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8025672:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8025676:	9303      	str	r3, [sp, #12]
 8025678:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802567c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025680:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025684:	9b07      	ldr	r3, [sp, #28]
 8025686:	42a3      	cmp	r3, r4
 8025688:	f240 809c 	bls.w	80257c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802568c:	9b06      	ldr	r3, [sp, #24]
 802568e:	2b00      	cmp	r3, #0
 8025690:	d039      	beq.n	8025706 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8025692:	782b      	ldrb	r3, [r5, #0]
 8025694:	8822      	ldrh	r2, [r4, #0]
 8025696:	9804      	ldr	r0, [sp, #16]
 8025698:	f003 030f 	and.w	r3, r3, #15
 802569c:	f105 0801 	add.w	r8, r5, #1
 80256a0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80256a4:	9b03      	ldr	r3, [sp, #12]
 80256a6:	9300      	str	r3, [sp, #0]
 80256a8:	463b      	mov	r3, r7
 80256aa:	f7ff ff53 	bl	8025554 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80256ae:	f824 0b02 	strh.w	r0, [r4], #2
 80256b2:	f109 3bff 	add.w	fp, r9, #4294967295
 80256b6:	f1bb 0f01 	cmp.w	fp, #1
 80256ba:	46a2      	mov	sl, r4
 80256bc:	f104 0404 	add.w	r4, r4, #4
 80256c0:	dd24      	ble.n	802570c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80256c2:	f898 3000 	ldrb.w	r3, [r8]
 80256c6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80256ca:	9804      	ldr	r0, [sp, #16]
 80256cc:	091b      	lsrs	r3, r3, #4
 80256ce:	f1ab 0b02 	sub.w	fp, fp, #2
 80256d2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80256d6:	9b03      	ldr	r3, [sp, #12]
 80256d8:	9300      	str	r3, [sp, #0]
 80256da:	463b      	mov	r3, r7
 80256dc:	f7ff ff3a 	bl	8025554 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80256e0:	f824 0c04 	strh.w	r0, [r4, #-4]
 80256e4:	f818 3b01 	ldrb.w	r3, [r8], #1
 80256e8:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80256ec:	9804      	ldr	r0, [sp, #16]
 80256ee:	f003 030f 	and.w	r3, r3, #15
 80256f2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80256f6:	9b03      	ldr	r3, [sp, #12]
 80256f8:	9300      	str	r3, [sp, #0]
 80256fa:	463b      	mov	r3, r7
 80256fc:	f7ff ff2a 	bl	8025554 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025700:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025704:	e7d7      	b.n	80256b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025706:	46a8      	mov	r8, r5
 8025708:	46cb      	mov	fp, r9
 802570a:	e7d4      	b.n	80256b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802570c:	d10e      	bne.n	802572c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802570e:	f898 3000 	ldrb.w	r3, [r8]
 8025712:	f8ba 2000 	ldrh.w	r2, [sl]
 8025716:	9804      	ldr	r0, [sp, #16]
 8025718:	091b      	lsrs	r3, r3, #4
 802571a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802571e:	9b03      	ldr	r3, [sp, #12]
 8025720:	9300      	str	r3, [sp, #0]
 8025722:	463b      	mov	r3, r7
 8025724:	f7ff ff16 	bl	8025554 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025728:	f82a 0b02 	strh.w	r0, [sl], #2
 802572c:	9b08      	ldr	r3, [sp, #32]
 802572e:	9a05      	ldr	r2, [sp, #20]
 8025730:	881c      	ldrh	r4, [r3, #0]
 8025732:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025736:	eba4 0409 	sub.w	r4, r4, r9
 802573a:	4413      	add	r3, r2
 802573c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025740:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025742:	fb93 f3f2 	sdiv	r3, r3, r2
 8025746:	441d      	add	r5, r3
 8025748:	e79c      	b.n	8025684 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802574a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802574e:	45a3      	cmp	fp, r4
 8025750:	d938      	bls.n	80257c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025752:	9b06      	ldr	r3, [sp, #24]
 8025754:	b1f3      	cbz	r3, 8025794 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8025756:	782b      	ldrb	r3, [r5, #0]
 8025758:	f003 030f 	and.w	r3, r3, #15
 802575c:	1c6a      	adds	r2, r5, #1
 802575e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025762:	8023      	strh	r3, [r4, #0]
 8025764:	f109 30ff 	add.w	r0, r9, #4294967295
 8025768:	3402      	adds	r4, #2
 802576a:	2801      	cmp	r0, #1
 802576c:	4623      	mov	r3, r4
 802576e:	f104 0404 	add.w	r4, r4, #4
 8025772:	dd12      	ble.n	802579a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8025774:	7813      	ldrb	r3, [r2, #0]
 8025776:	091b      	lsrs	r3, r3, #4
 8025778:	3802      	subs	r0, #2
 802577a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802577e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8025782:	f812 3b01 	ldrb.w	r3, [r2], #1
 8025786:	f003 030f 	and.w	r3, r3, #15
 802578a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802578e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8025792:	e7ea      	b.n	802576a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025794:	462a      	mov	r2, r5
 8025796:	4648      	mov	r0, r9
 8025798:	e7e7      	b.n	802576a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802579a:	d106      	bne.n	80257aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 802579c:	7812      	ldrb	r2, [r2, #0]
 802579e:	0912      	lsrs	r2, r2, #4
 80257a0:	3302      	adds	r3, #2
 80257a2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80257a6:	f823 2c02 	strh.w	r2, [r3, #-2]
 80257aa:	880c      	ldrh	r4, [r1, #0]
 80257ac:	9a05      	ldr	r2, [sp, #20]
 80257ae:	eba4 0409 	sub.w	r4, r4, r9
 80257b2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80257b6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80257ba:	4413      	add	r3, r2
 80257bc:	fb93 f3f8 	sdiv	r3, r3, r8
 80257c0:	441d      	add	r5, r3
 80257c2:	e7c4      	b.n	802574e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80257c4:	4b03      	ldr	r3, [pc, #12]	; (80257d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80257c6:	6818      	ldr	r0, [r3, #0]
 80257c8:	6803      	ldr	r3, [r0, #0]
 80257ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80257cc:	4798      	blx	r3
 80257ce:	b00f      	add	sp, #60	; 0x3c
 80257d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80257d4:	2000ef1c 	.word	0x2000ef1c
 80257d8:	2000ef16 	.word	0x2000ef16

080257dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80257dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80257de:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80257e2:	2dff      	cmp	r5, #255	; 0xff
 80257e4:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80257e8:	d10c      	bne.n	8025804 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80257ea:	2bff      	cmp	r3, #255	; 0xff
 80257ec:	d10a      	bne.n	8025804 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80257ee:	4b25      	ldr	r3, [pc, #148]	; (8025884 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80257f0:	0948      	lsrs	r0, r1, #5
 80257f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80257f6:	403b      	ands	r3, r7
 80257f8:	4318      	orrs	r0, r3
 80257fa:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80257fe:	4308      	orrs	r0, r1
 8025800:	b280      	uxth	r0, r0
 8025802:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025804:	fb15 f503 	smulbb	r5, r5, r3
 8025808:	b2ab      	uxth	r3, r5
 802580a:	1c5d      	adds	r5, r3, #1
 802580c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025810:	1214      	asrs	r4, r2, #8
 8025812:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025816:	fa1f fc85 	uxth.w	ip, r5
 802581a:	10d6      	asrs	r6, r2, #3
 802581c:	00d0      	lsls	r0, r2, #3
 802581e:	43ed      	mvns	r5, r5
 8025820:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025824:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025828:	b2eb      	uxtb	r3, r5
 802582a:	b2c0      	uxtb	r0, r0
 802582c:	fb12 f20c 	smulbb	r2, r2, ip
 8025830:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025834:	fb04 2403 	mla	r4, r4, r3, r2
 8025838:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802583c:	b2c8      	uxtb	r0, r1
 802583e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8025842:	b2fd      	uxtb	r5, r7
 8025844:	fb10 f00c 	smulbb	r0, r0, ip
 8025848:	b2a4      	uxth	r4, r4
 802584a:	fb02 0003 	mla	r0, r2, r3, r0
 802584e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025852:	fb15 f50c 	smulbb	r5, r5, ip
 8025856:	fb06 5503 	mla	r5, r6, r3, r5
 802585a:	b283      	uxth	r3, r0
 802585c:	1c60      	adds	r0, r4, #1
 802585e:	b2ad      	uxth	r5, r5
 8025860:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025864:	1c58      	adds	r0, r3, #1
 8025866:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802586a:	1c6b      	adds	r3, r5, #1
 802586c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025870:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025874:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025878:	096d      	lsrs	r5, r5, #5
 802587a:	4320      	orrs	r0, r4
 802587c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025880:	4328      	orrs	r0, r5
 8025882:	e7be      	b.n	8025802 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025884:	00fff800 	.word	0x00fff800

08025888 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025888:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802588c:	461c      	mov	r4, r3
 802588e:	b08d      	sub	sp, #52	; 0x34
 8025890:	460d      	mov	r5, r1
 8025892:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025894:	6861      	ldr	r1, [r4, #4]
 8025896:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802589a:	4680      	mov	r8, r0
 802589c:	6820      	ldr	r0, [r4, #0]
 802589e:	4616      	mov	r6, r2
 80258a0:	aa08      	add	r2, sp, #32
 80258a2:	c203      	stmia	r2!, {r0, r1}
 80258a4:	6818      	ldr	r0, [r3, #0]
 80258a6:	6859      	ldr	r1, [r3, #4]
 80258a8:	aa0a      	add	r2, sp, #40	; 0x28
 80258aa:	c203      	stmia	r2!, {r0, r1}
 80258ac:	a808      	add	r0, sp, #32
 80258ae:	f7ef f93f 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80258b2:	4621      	mov	r1, r4
 80258b4:	a80a      	add	r0, sp, #40	; 0x28
 80258b6:	f7ef f97f 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80258ba:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80258be:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80258c2:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80258c6:	f002 0301 	and.w	r3, r2, #1
 80258ca:	9303      	str	r3, [sp, #12]
 80258cc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80258d0:	f003 0101 	and.w	r1, r3, #1
 80258d4:	9102      	str	r1, [sp, #8]
 80258d6:	9802      	ldr	r0, [sp, #8]
 80258d8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80258dc:	4403      	add	r3, r0
 80258de:	fb01 2303 	mla	r3, r1, r3, r2
 80258e2:	f04f 0a02 	mov.w	sl, #2
 80258e6:	fb93 f3fa 	sdiv	r3, r3, sl
 80258ea:	441d      	add	r5, r3
 80258ec:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80258f0:	441a      	add	r2, r3
 80258f2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80258f6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80258fa:	4a3f      	ldr	r2, [pc, #252]	; (80259f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80258fc:	9205      	str	r2, [sp, #20]
 80258fe:	4419      	add	r1, r3
 8025900:	6810      	ldr	r0, [r2, #0]
 8025902:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8025906:	6803      	ldr	r3, [r0, #0]
 8025908:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802590a:	4798      	blx	r3
 802590c:	4b3b      	ldr	r3, [pc, #236]	; (80259fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802590e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8025912:	8819      	ldrh	r1, [r3, #0]
 8025914:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8025918:	fb01 c404 	mla	r4, r1, r4, ip
 802591c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025920:	434f      	muls	r7, r1
 8025922:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025926:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802592a:	3604      	adds	r6, #4
 802592c:	9204      	str	r2, [sp, #16]
 802592e:	9b04      	ldr	r3, [sp, #16]
 8025930:	429c      	cmp	r4, r3
 8025932:	d258      	bcs.n	80259e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025934:	9b03      	ldr	r3, [sp, #12]
 8025936:	2b00      	cmp	r3, #0
 8025938:	d034      	beq.n	80259a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802593a:	782b      	ldrb	r3, [r5, #0]
 802593c:	f003 030f 	and.w	r3, r3, #15
 8025940:	1c6f      	adds	r7, r5, #1
 8025942:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025946:	0e0b      	lsrs	r3, r1, #24
 8025948:	d006      	beq.n	8025958 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802594a:	8822      	ldrh	r2, [r4, #0]
 802594c:	9300      	str	r3, [sp, #0]
 802594e:	4640      	mov	r0, r8
 8025950:	464b      	mov	r3, r9
 8025952:	f7ff ff43 	bl	80257dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025956:	8020      	strh	r0, [r4, #0]
 8025958:	3402      	adds	r4, #2
 802595a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802595e:	f1ba 0f01 	cmp.w	sl, #1
 8025962:	dd22      	ble.n	80259aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025964:	783b      	ldrb	r3, [r7, #0]
 8025966:	091b      	lsrs	r3, r3, #4
 8025968:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802596c:	0e0b      	lsrs	r3, r1, #24
 802596e:	d006      	beq.n	802597e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025970:	8822      	ldrh	r2, [r4, #0]
 8025972:	9300      	str	r3, [sp, #0]
 8025974:	4640      	mov	r0, r8
 8025976:	464b      	mov	r3, r9
 8025978:	f7ff ff30 	bl	80257dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802597c:	8020      	strh	r0, [r4, #0]
 802597e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025982:	f003 030f 	and.w	r3, r3, #15
 8025986:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802598a:	0e0b      	lsrs	r3, r1, #24
 802598c:	d006      	beq.n	802599c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802598e:	8862      	ldrh	r2, [r4, #2]
 8025990:	9300      	str	r3, [sp, #0]
 8025992:	4640      	mov	r0, r8
 8025994:	464b      	mov	r3, r9
 8025996:	f7ff ff21 	bl	80257dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802599a:	8060      	strh	r0, [r4, #2]
 802599c:	3404      	adds	r4, #4
 802599e:	f1aa 0a02 	sub.w	sl, sl, #2
 80259a2:	e7dc      	b.n	802595e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80259a4:	462f      	mov	r7, r5
 80259a6:	46da      	mov	sl, fp
 80259a8:	e7d9      	b.n	802595e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80259aa:	d10d      	bne.n	80259c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80259ac:	783b      	ldrb	r3, [r7, #0]
 80259ae:	091b      	lsrs	r3, r3, #4
 80259b0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80259b4:	0e0b      	lsrs	r3, r1, #24
 80259b6:	d006      	beq.n	80259c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80259b8:	8822      	ldrh	r2, [r4, #0]
 80259ba:	9300      	str	r3, [sp, #0]
 80259bc:	4640      	mov	r0, r8
 80259be:	464b      	mov	r3, r9
 80259c0:	f7ff ff0c 	bl	80257dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80259c4:	8020      	strh	r0, [r4, #0]
 80259c6:	3402      	adds	r4, #2
 80259c8:	9b06      	ldr	r3, [sp, #24]
 80259ca:	9a02      	ldr	r2, [sp, #8]
 80259cc:	881b      	ldrh	r3, [r3, #0]
 80259ce:	eba3 030b 	sub.w	r3, r3, fp
 80259d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80259d6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80259da:	4413      	add	r3, r2
 80259dc:	9a07      	ldr	r2, [sp, #28]
 80259de:	fb93 f3f2 	sdiv	r3, r3, r2
 80259e2:	441d      	add	r5, r3
 80259e4:	e7a3      	b.n	802592e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80259e6:	9b05      	ldr	r3, [sp, #20]
 80259e8:	6818      	ldr	r0, [r3, #0]
 80259ea:	6803      	ldr	r3, [r0, #0]
 80259ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80259ee:	4798      	blx	r3
 80259f0:	b00d      	add	sp, #52	; 0x34
 80259f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80259f6:	bf00      	nop
 80259f8:	2000ef1c 	.word	0x2000ef1c
 80259fc:	2000ef16 	.word	0x2000ef16

08025a00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025a00:	b570      	push	{r4, r5, r6, lr}
 8025a02:	1214      	asrs	r4, r2, #8
 8025a04:	788d      	ldrb	r5, [r1, #2]
 8025a06:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8025a0a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025a0e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025a12:	fb15 f503 	smulbb	r5, r5, r3
 8025a16:	fb04 5506 	mla	r5, r4, r6, r5
 8025a1a:	10d0      	asrs	r0, r2, #3
 8025a1c:	784c      	ldrb	r4, [r1, #1]
 8025a1e:	7809      	ldrb	r1, [r1, #0]
 8025a20:	00d2      	lsls	r2, r2, #3
 8025a22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025a26:	b2d2      	uxtb	r2, r2
 8025a28:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8025a2c:	fb14 f403 	smulbb	r4, r4, r3
 8025a30:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025a34:	fb11 f303 	smulbb	r3, r1, r3
 8025a38:	fb00 4406 	mla	r4, r0, r6, r4
 8025a3c:	fb02 3306 	mla	r3, r2, r6, r3
 8025a40:	b2ad      	uxth	r5, r5
 8025a42:	b29b      	uxth	r3, r3
 8025a44:	b2a4      	uxth	r4, r4
 8025a46:	1c68      	adds	r0, r5, #1
 8025a48:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8025a4c:	1c62      	adds	r2, r4, #1
 8025a4e:	1c58      	adds	r0, r3, #1
 8025a50:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025a54:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025a58:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025a5c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025a60:	0964      	lsrs	r4, r4, #5
 8025a62:	4328      	orrs	r0, r5
 8025a64:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025a68:	4320      	orrs	r0, r4
 8025a6a:	bd70      	pop	{r4, r5, r6, pc}

08025a6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025a70:	b08f      	sub	sp, #60	; 0x3c
 8025a72:	461c      	mov	r4, r3
 8025a74:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025a78:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025a7a:	4682      	mov	sl, r0
 8025a7c:	460e      	mov	r6, r1
 8025a7e:	4615      	mov	r5, r2
 8025a80:	2f00      	cmp	r7, #0
 8025a82:	f000 8142 	beq.w	8025d0a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8025a86:	6820      	ldr	r0, [r4, #0]
 8025a88:	6861      	ldr	r1, [r4, #4]
 8025a8a:	aa0a      	add	r2, sp, #40	; 0x28
 8025a8c:	c203      	stmia	r2!, {r0, r1}
 8025a8e:	6818      	ldr	r0, [r3, #0]
 8025a90:	6859      	ldr	r1, [r3, #4]
 8025a92:	aa0c      	add	r2, sp, #48	; 0x30
 8025a94:	c203      	stmia	r2!, {r0, r1}
 8025a96:	a80a      	add	r0, sp, #40	; 0x28
 8025a98:	f7ef f84a 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025a9c:	4621      	mov	r1, r4
 8025a9e:	a80c      	add	r0, sp, #48	; 0x30
 8025aa0:	f7ef f88a 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025aa4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025aa8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025aac:	f002 0301 	and.w	r3, r2, #1
 8025ab0:	9306      	str	r3, [sp, #24]
 8025ab2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025ab6:	f003 0101 	and.w	r1, r3, #1
 8025aba:	9105      	str	r1, [sp, #20]
 8025abc:	9805      	ldr	r0, [sp, #20]
 8025abe:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025ac2:	4403      	add	r3, r0
 8025ac4:	fb01 2303 	mla	r3, r1, r3, r2
 8025ac8:	f04f 0802 	mov.w	r8, #2
 8025acc:	fb93 f3f8 	sdiv	r3, r3, r8
 8025ad0:	441e      	add	r6, r3
 8025ad2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025ad6:	441a      	add	r2, r3
 8025ad8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025adc:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025ae0:	4419      	add	r1, r3
 8025ae2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8025ae6:	9303      	str	r3, [sp, #12]
 8025ae8:	4b89      	ldr	r3, [pc, #548]	; (8025d10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025aea:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025aee:	6818      	ldr	r0, [r3, #0]
 8025af0:	6803      	ldr	r3, [r0, #0]
 8025af2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025af4:	4798      	blx	r3
 8025af6:	4a87      	ldr	r2, [pc, #540]	; (8025d14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8025af8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025afc:	8813      	ldrh	r3, [r2, #0]
 8025afe:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8025b02:	2fff      	cmp	r7, #255	; 0xff
 8025b04:	fb03 9404 	mla	r4, r3, r4, r9
 8025b08:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025b0c:	f105 0504 	add.w	r5, r5, #4
 8025b10:	4694      	mov	ip, r2
 8025b12:	fb03 f30b 	mul.w	r3, r3, fp
 8025b16:	d071      	beq.n	8025bfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8025b18:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025b1c:	43f9      	mvns	r1, r7
 8025b1e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025b22:	b2c9      	uxtb	r1, r1
 8025b24:	9104      	str	r1, [sp, #16]
 8025b26:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025b2a:	9b07      	ldr	r3, [sp, #28]
 8025b2c:	42a3      	cmp	r3, r4
 8025b2e:	f240 80e7 	bls.w	8025d00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025b32:	9b06      	ldr	r3, [sp, #24]
 8025b34:	2b00      	cmp	r3, #0
 8025b36:	d03d      	beq.n	8025bb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8025b38:	7831      	ldrb	r1, [r6, #0]
 8025b3a:	9b04      	ldr	r3, [sp, #16]
 8025b3c:	8822      	ldrh	r2, [r4, #0]
 8025b3e:	9300      	str	r3, [sp, #0]
 8025b40:	f001 010f 	and.w	r1, r1, #15
 8025b44:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025b48:	463b      	mov	r3, r7
 8025b4a:	4429      	add	r1, r5
 8025b4c:	4650      	mov	r0, sl
 8025b4e:	f7ff ff57 	bl	8025a00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025b52:	9b03      	ldr	r3, [sp, #12]
 8025b54:	f824 0b02 	strh.w	r0, [r4], #2
 8025b58:	f106 0801 	add.w	r8, r6, #1
 8025b5c:	f103 3bff 	add.w	fp, r3, #4294967295
 8025b60:	f1bb 0f01 	cmp.w	fp, #1
 8025b64:	46a1      	mov	r9, r4
 8025b66:	f104 0404 	add.w	r4, r4, #4
 8025b6a:	dd27      	ble.n	8025bbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8025b6c:	f898 1000 	ldrb.w	r1, [r8]
 8025b70:	9b04      	ldr	r3, [sp, #16]
 8025b72:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025b76:	9300      	str	r3, [sp, #0]
 8025b78:	0909      	lsrs	r1, r1, #4
 8025b7a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025b7e:	463b      	mov	r3, r7
 8025b80:	4429      	add	r1, r5
 8025b82:	4650      	mov	r0, sl
 8025b84:	f7ff ff3c 	bl	8025a00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025b88:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025b8c:	f818 1b01 	ldrb.w	r1, [r8], #1
 8025b90:	9b04      	ldr	r3, [sp, #16]
 8025b92:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025b96:	9300      	str	r3, [sp, #0]
 8025b98:	f001 010f 	and.w	r1, r1, #15
 8025b9c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025ba0:	463b      	mov	r3, r7
 8025ba2:	4429      	add	r1, r5
 8025ba4:	4650      	mov	r0, sl
 8025ba6:	f7ff ff2b 	bl	8025a00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025baa:	f1ab 0b02 	sub.w	fp, fp, #2
 8025bae:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025bb2:	e7d5      	b.n	8025b60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025bb4:	46b0      	mov	r8, r6
 8025bb6:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8025bba:	e7d1      	b.n	8025b60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025bbc:	d10f      	bne.n	8025bde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8025bbe:	f898 1000 	ldrb.w	r1, [r8]
 8025bc2:	9b04      	ldr	r3, [sp, #16]
 8025bc4:	f8b9 2000 	ldrh.w	r2, [r9]
 8025bc8:	9300      	str	r3, [sp, #0]
 8025bca:	0909      	lsrs	r1, r1, #4
 8025bcc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025bd0:	463b      	mov	r3, r7
 8025bd2:	4429      	add	r1, r5
 8025bd4:	4650      	mov	r0, sl
 8025bd6:	f7ff ff13 	bl	8025a00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025bda:	f829 0b02 	strh.w	r0, [r9], #2
 8025bde:	9b08      	ldr	r3, [sp, #32]
 8025be0:	9a05      	ldr	r2, [sp, #20]
 8025be2:	881c      	ldrh	r4, [r3, #0]
 8025be4:	9b03      	ldr	r3, [sp, #12]
 8025be6:	1ae4      	subs	r4, r4, r3
 8025be8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025bec:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025bf0:	4413      	add	r3, r2
 8025bf2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025bf4:	fb93 f3f2 	sdiv	r3, r3, r2
 8025bf8:	441e      	add	r6, r3
 8025bfa:	e796      	b.n	8025b2a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8025bfc:	4f46      	ldr	r7, [pc, #280]	; (8025d18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8025bfe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025c02:	42a3      	cmp	r3, r4
 8025c04:	d97c      	bls.n	8025d00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025c06:	9a06      	ldr	r2, [sp, #24]
 8025c08:	2a00      	cmp	r2, #0
 8025c0a:	d054      	beq.n	8025cb6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8025c0c:	7830      	ldrb	r0, [r6, #0]
 8025c0e:	f000 000f 	and.w	r0, r0, #15
 8025c12:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025c16:	eb05 0e00 	add.w	lr, r5, r0
 8025c1a:	5c28      	ldrb	r0, [r5, r0]
 8025c1c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025c20:	f89e e001 	ldrb.w	lr, [lr, #1]
 8025c24:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025c28:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025c2c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025c30:	ea42 020e 	orr.w	r2, r2, lr
 8025c34:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8025c38:	f824 2b02 	strh.w	r2, [r4], #2
 8025c3c:	9a03      	ldr	r2, [sp, #12]
 8025c3e:	1c71      	adds	r1, r6, #1
 8025c40:	f102 3eff 	add.w	lr, r2, #4294967295
 8025c44:	f1be 0f01 	cmp.w	lr, #1
 8025c48:	4620      	mov	r0, r4
 8025c4a:	f104 0404 	add.w	r4, r4, #4
 8025c4e:	dd36      	ble.n	8025cbe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8025c50:	7808      	ldrb	r0, [r1, #0]
 8025c52:	0900      	lsrs	r0, r0, #4
 8025c54:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025c58:	eb05 0a00 	add.w	sl, r5, r0
 8025c5c:	f1ae 0e02 	sub.w	lr, lr, #2
 8025c60:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025c64:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025c68:	00d2      	lsls	r2, r2, #3
 8025c6a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025c6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025c72:	ea49 0202 	orr.w	r2, r9, r2
 8025c76:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025c7a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025c7e:	f824 2c04 	strh.w	r2, [r4, #-4]
 8025c82:	f811 0b01 	ldrb.w	r0, [r1], #1
 8025c86:	f000 000f 	and.w	r0, r0, #15
 8025c8a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025c8e:	eb05 0a00 	add.w	sl, r5, r0
 8025c92:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025c96:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025c9a:	00d2      	lsls	r2, r2, #3
 8025c9c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025ca0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025ca4:	ea49 0202 	orr.w	r2, r9, r2
 8025ca8:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025cac:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025cb0:	f824 2c02 	strh.w	r2, [r4, #-2]
 8025cb4:	e7c6      	b.n	8025c44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025cb6:	4631      	mov	r1, r6
 8025cb8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8025cbc:	e7c2      	b.n	8025c44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025cbe:	d111      	bne.n	8025ce4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8025cc0:	7809      	ldrb	r1, [r1, #0]
 8025cc2:	0909      	lsrs	r1, r1, #4
 8025cc4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025cc8:	186c      	adds	r4, r5, r1
 8025cca:	5c69      	ldrb	r1, [r5, r1]
 8025ccc:	78a2      	ldrb	r2, [r4, #2]
 8025cce:	7864      	ldrb	r4, [r4, #1]
 8025cd0:	00e4      	lsls	r4, r4, #3
 8025cd2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025cd6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025cda:	4322      	orrs	r2, r4
 8025cdc:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025ce0:	f820 2b02 	strh.w	r2, [r0], #2
 8025ce4:	9a03      	ldr	r2, [sp, #12]
 8025ce6:	f8bc 4000 	ldrh.w	r4, [ip]
 8025cea:	9905      	ldr	r1, [sp, #20]
 8025cec:	1aa4      	subs	r4, r4, r2
 8025cee:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8025cf2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025cf6:	440a      	add	r2, r1
 8025cf8:	fb92 f2f8 	sdiv	r2, r2, r8
 8025cfc:	4416      	add	r6, r2
 8025cfe:	e780      	b.n	8025c02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8025d00:	4b03      	ldr	r3, [pc, #12]	; (8025d10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025d02:	6818      	ldr	r0, [r3, #0]
 8025d04:	6803      	ldr	r3, [r0, #0]
 8025d06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025d08:	4798      	blx	r3
 8025d0a:	b00f      	add	sp, #60	; 0x3c
 8025d0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d10:	2000ef1c 	.word	0x2000ef1c
 8025d14:	2000ef16 	.word	0x2000ef16
 8025d18:	fffff800 	.word	0xfffff800

08025d1c <CRC_Lock>:
 8025d1c:	b530      	push	{r4, r5, lr}
 8025d1e:	4a20      	ldr	r2, [pc, #128]	; (8025da0 <CRC_Lock+0x84>)
 8025d20:	6813      	ldr	r3, [r2, #0]
 8025d22:	f023 0301 	bic.w	r3, r3, #1
 8025d26:	6013      	str	r3, [r2, #0]
 8025d28:	4b1e      	ldr	r3, [pc, #120]	; (8025da4 <CRC_Lock+0x88>)
 8025d2a:	681a      	ldr	r2, [r3, #0]
 8025d2c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025d30:	4022      	ands	r2, r4
 8025d32:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025d36:	42aa      	cmp	r2, r5
 8025d38:	d005      	beq.n	8025d46 <CRC_Lock+0x2a>
 8025d3a:	681b      	ldr	r3, [r3, #0]
 8025d3c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025d40:	4023      	ands	r3, r4
 8025d42:	4293      	cmp	r3, r2
 8025d44:	d124      	bne.n	8025d90 <CRC_Lock+0x74>
 8025d46:	4b18      	ldr	r3, [pc, #96]	; (8025da8 <CRC_Lock+0x8c>)
 8025d48:	681b      	ldr	r3, [r3, #0]
 8025d4a:	bb0b      	cbnz	r3, 8025d90 <CRC_Lock+0x74>
 8025d4c:	4b17      	ldr	r3, [pc, #92]	; (8025dac <CRC_Lock+0x90>)
 8025d4e:	681a      	ldr	r2, [r3, #0]
 8025d50:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025d54:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025d58:	d00d      	beq.n	8025d76 <CRC_Lock+0x5a>
 8025d5a:	681a      	ldr	r2, [r3, #0]
 8025d5c:	f240 4483 	movw	r4, #1155	; 0x483
 8025d60:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025d64:	42a2      	cmp	r2, r4
 8025d66:	d006      	beq.n	8025d76 <CRC_Lock+0x5a>
 8025d68:	681b      	ldr	r3, [r3, #0]
 8025d6a:	f240 4285 	movw	r2, #1157	; 0x485
 8025d6e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025d72:	4293      	cmp	r3, r2
 8025d74:	d10c      	bne.n	8025d90 <CRC_Lock+0x74>
 8025d76:	4b0e      	ldr	r3, [pc, #56]	; (8025db0 <CRC_Lock+0x94>)
 8025d78:	2201      	movs	r2, #1
 8025d7a:	601a      	str	r2, [r3, #0]
 8025d7c:	681a      	ldr	r2, [r3, #0]
 8025d7e:	2a00      	cmp	r2, #0
 8025d80:	d1fc      	bne.n	8025d7c <CRC_Lock+0x60>
 8025d82:	4b0c      	ldr	r3, [pc, #48]	; (8025db4 <CRC_Lock+0x98>)
 8025d84:	6018      	str	r0, [r3, #0]
 8025d86:	6818      	ldr	r0, [r3, #0]
 8025d88:	1a43      	subs	r3, r0, r1
 8025d8a:	4258      	negs	r0, r3
 8025d8c:	4158      	adcs	r0, r3
 8025d8e:	bd30      	pop	{r4, r5, pc}
 8025d90:	4b09      	ldr	r3, [pc, #36]	; (8025db8 <CRC_Lock+0x9c>)
 8025d92:	2201      	movs	r2, #1
 8025d94:	601a      	str	r2, [r3, #0]
 8025d96:	681a      	ldr	r2, [r3, #0]
 8025d98:	2a00      	cmp	r2, #0
 8025d9a:	d1fc      	bne.n	8025d96 <CRC_Lock+0x7a>
 8025d9c:	4b07      	ldr	r3, [pc, #28]	; (8025dbc <CRC_Lock+0xa0>)
 8025d9e:	e7f1      	b.n	8025d84 <CRC_Lock+0x68>
 8025da0:	e0002000 	.word	0xe0002000
 8025da4:	e000ed00 	.word	0xe000ed00
 8025da8:	e0042000 	.word	0xe0042000
 8025dac:	5c001000 	.word	0x5c001000
 8025db0:	58024c08 	.word	0x58024c08
 8025db4:	58024c00 	.word	0x58024c00
 8025db8:	40023008 	.word	0x40023008
 8025dbc:	40023000 	.word	0x40023000

08025dc0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025dc0:	6101      	str	r1, [r0, #16]
 8025dc2:	4770      	bx	lr

08025dc4 <_ZN8touchgfx8Gestures4tickEv>:
 8025dc4:	7b83      	ldrb	r3, [r0, #14]
 8025dc6:	b14b      	cbz	r3, 8025ddc <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025dc8:	8903      	ldrh	r3, [r0, #8]
 8025dca:	3301      	adds	r3, #1
 8025dcc:	b29b      	uxth	r3, r3
 8025dce:	2b07      	cmp	r3, #7
 8025dd0:	8103      	strh	r3, [r0, #8]
 8025dd2:	bf81      	itttt	hi
 8025dd4:	2300      	movhi	r3, #0
 8025dd6:	8143      	strhhi	r3, [r0, #10]
 8025dd8:	8183      	strhhi	r3, [r0, #12]
 8025dda:	7383      	strbhi	r3, [r0, #14]
 8025ddc:	4770      	bx	lr
	...

08025de0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025de0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025de4:	4698      	mov	r8, r3
 8025de6:	8883      	ldrh	r3, [r0, #4]
 8025de8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025dec:	eba8 0303 	sub.w	r3, r8, r3
 8025df0:	b21b      	sxth	r3, r3
 8025df2:	4604      	mov	r4, r0
 8025df4:	2b00      	cmp	r3, #0
 8025df6:	4617      	mov	r7, r2
 8025df8:	4a18      	ldr	r2, [pc, #96]	; (8025e5c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8025dfa:	9200      	str	r2, [sp, #0]
 8025dfc:	bfb8      	it	lt
 8025dfe:	425b      	neglt	r3, r3
 8025e00:	8aa2      	ldrh	r2, [r4, #20]
 8025e02:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8025e06:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025e0a:	b21b      	sxth	r3, r3
 8025e0c:	460e      	mov	r6, r1
 8025e0e:	4293      	cmp	r3, r2
 8025e10:	88c1      	ldrh	r1, [r0, #6]
 8025e12:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025e16:	f04f 0000 	mov.w	r0, #0
 8025e1a:	f88d 0004 	strb.w	r0, [sp, #4]
 8025e1e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025e22:	dc07      	bgt.n	8025e34 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025e24:	1a69      	subs	r1, r5, r1
 8025e26:	b209      	sxth	r1, r1
 8025e28:	2900      	cmp	r1, #0
 8025e2a:	bfb8      	it	lt
 8025e2c:	4249      	neglt	r1, r1
 8025e2e:	b209      	sxth	r1, r1
 8025e30:	428a      	cmp	r2, r1
 8025e32:	da10      	bge.n	8025e56 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025e34:	6920      	ldr	r0, [r4, #16]
 8025e36:	6803      	ldr	r3, [r0, #0]
 8025e38:	4669      	mov	r1, sp
 8025e3a:	685b      	ldr	r3, [r3, #4]
 8025e3c:	4798      	blx	r3
 8025e3e:	eba8 0606 	sub.w	r6, r8, r6
 8025e42:	2300      	movs	r3, #0
 8025e44:	1bef      	subs	r7, r5, r7
 8025e46:	2001      	movs	r0, #1
 8025e48:	8123      	strh	r3, [r4, #8]
 8025e4a:	8166      	strh	r6, [r4, #10]
 8025e4c:	81a7      	strh	r7, [r4, #12]
 8025e4e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025e52:	80e5      	strh	r5, [r4, #6]
 8025e54:	73a0      	strb	r0, [r4, #14]
 8025e56:	b004      	add	sp, #16
 8025e58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025e5c:	0802a6ec 	.word	0x0802a6ec

08025e60 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025e60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025e62:	461e      	mov	r6, r3
 8025e64:	1e4b      	subs	r3, r1, #1
 8025e66:	2b01      	cmp	r3, #1
 8025e68:	b085      	sub	sp, #20
 8025e6a:	4604      	mov	r4, r0
 8025e6c:	460d      	mov	r5, r1
 8025e6e:	4617      	mov	r7, r2
 8025e70:	d84b      	bhi.n	8025f0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025e72:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025e76:	1cd3      	adds	r3, r2, #3
 8025e78:	b29b      	uxth	r3, r3
 8025e7a:	2b06      	cmp	r3, #6
 8025e7c:	d916      	bls.n	8025eac <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025e7e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025f20 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025e82:	f8cd c004 	str.w	ip, [sp, #4]
 8025e86:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025e8a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025e8e:	6900      	ldr	r0, [r0, #16]
 8025e90:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025e94:	f04f 0c00 	mov.w	ip, #0
 8025e98:	f88d c008 	strb.w	ip, [sp, #8]
 8025e9c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025ea0:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025ea4:	6803      	ldr	r3, [r0, #0]
 8025ea6:	a901      	add	r1, sp, #4
 8025ea8:	689b      	ldr	r3, [r3, #8]
 8025eaa:	4798      	blx	r3
 8025eac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025eb0:	1cd3      	adds	r3, r2, #3
 8025eb2:	b29b      	uxth	r3, r3
 8025eb4:	2b06      	cmp	r3, #6
 8025eb6:	d916      	bls.n	8025ee6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025eb8:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025f20 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025ebc:	f8cd c004 	str.w	ip, [sp, #4]
 8025ec0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025ec4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025ec8:	6920      	ldr	r0, [r4, #16]
 8025eca:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025ece:	f04f 0c01 	mov.w	ip, #1
 8025ed2:	f88d c008 	strb.w	ip, [sp, #8]
 8025ed6:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025eda:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025ede:	6803      	ldr	r3, [r0, #0]
 8025ee0:	a901      	add	r1, sp, #4
 8025ee2:	689b      	ldr	r3, [r3, #8]
 8025ee4:	4798      	blx	r3
 8025ee6:	4b0d      	ldr	r3, [pc, #52]	; (8025f1c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025ee8:	9301      	str	r3, [sp, #4]
 8025eea:	6920      	ldr	r0, [r4, #16]
 8025eec:	f88d 5008 	strb.w	r5, [sp, #8]
 8025ef0:	2300      	movs	r3, #0
 8025ef2:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025ef6:	f8ad 600c 	strh.w	r6, [sp, #12]
 8025efa:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025efe:	6803      	ldr	r3, [r0, #0]
 8025f00:	a901      	add	r1, sp, #4
 8025f02:	681b      	ldr	r3, [r3, #0]
 8025f04:	4798      	blx	r3
 8025f06:	b005      	add	sp, #20
 8025f08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025f0a:	2900      	cmp	r1, #0
 8025f0c:	d1eb      	bne.n	8025ee6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025f0e:	80a2      	strh	r2, [r4, #4]
 8025f10:	80c6      	strh	r6, [r0, #6]
 8025f12:	60a1      	str	r1, [r4, #8]
 8025f14:	81a1      	strh	r1, [r4, #12]
 8025f16:	73a1      	strb	r1, [r4, #14]
 8025f18:	e7e5      	b.n	8025ee6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025f1a:	bf00      	nop
 8025f1c:	0802a6d8 	.word	0x0802a6d8
 8025f20:	0802a700 	.word	0x0802a700

08025f24 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8025f24:	10c9      	asrs	r1, r1, #3
 8025f26:	2900      	cmp	r1, #0
 8025f28:	bfb8      	it	lt
 8025f2a:	4249      	neglt	r1, r1
 8025f2c:	2801      	cmp	r0, #1
 8025f2e:	d108      	bne.n	8025f42 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025f30:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8025f34:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8025f38:	4601      	mov	r1, r0
 8025f3a:	dd02      	ble.n	8025f42 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025f3c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8025f40:	4770      	bx	lr
 8025f42:	29ff      	cmp	r1, #255	; 0xff
 8025f44:	bfa8      	it	ge
 8025f46:	21ff      	movge	r1, #255	; 0xff
 8025f48:	4608      	mov	r0, r1
 8025f4a:	4770      	bx	lr

08025f4c <_ZN8touchgfx10Rasterizer6lineToEii>:
 8025f4c:	b410      	push	{r4}
 8025f4e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8025f52:	429c      	cmp	r4, r3
 8025f54:	d803      	bhi.n	8025f5e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8025f56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025f5a:	f7ed b8ef 	b.w	801313c <_ZN8touchgfx7Outline6lineToEii>
 8025f5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025f62:	4770      	bx	lr

08025f64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8025f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025f68:	b08b      	sub	sp, #44	; 0x2c
 8025f6a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8025f6e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8025f72:	9308      	str	r3, [sp, #32]
 8025f74:	4606      	mov	r6, r0
 8025f76:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8025f7a:	9309      	str	r3, [sp, #36]	; 0x24
 8025f7c:	468a      	mov	sl, r1
 8025f7e:	f7ed fa4a 	bl	8013416 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8025f82:	68b5      	ldr	r5, [r6, #8]
 8025f84:	4604      	mov	r4, r0
 8025f86:	2d00      	cmp	r5, #0
 8025f88:	d044      	beq.n	8026014 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025f8a:	6873      	ldr	r3, [r6, #4]
 8025f8c:	42ab      	cmp	r3, r5
 8025f8e:	d33d      	bcc.n	802600c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8025f90:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8025f94:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8025f98:	eb02 0b03 	add.w	fp, r2, r3
 8025f9c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8025fa0:	fb02 1203 	mla	r2, r2, r3, r1
 8025fa4:	9205      	str	r2, [sp, #20]
 8025fa6:	1e6a      	subs	r2, r5, #1
 8025fa8:	9204      	str	r2, [sp, #16]
 8025faa:	f04f 0800 	mov.w	r8, #0
 8025fae:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8025fb2:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025fb6:	454b      	cmp	r3, r9
 8025fb8:	463a      	mov	r2, r7
 8025fba:	d008      	beq.n	8025fce <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8025fbc:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8025fc0:	eb03 0b09 	add.w	fp, r3, r9
 8025fc4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8025fc8:	fb03 1309 	mla	r3, r3, r9, r1
 8025fcc:	9305      	str	r3, [sp, #20]
 8025fce:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8025fd2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8025fd6:	4498      	add	r8, r3
 8025fd8:	9b04      	ldr	r3, [sp, #16]
 8025fda:	3b01      	subs	r3, #1
 8025fdc:	9304      	str	r3, [sp, #16]
 8025fde:	9b04      	ldr	r3, [sp, #16]
 8025fe0:	3301      	adds	r3, #1
 8025fe2:	d015      	beq.n	8026010 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8025fe4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8025fe8:	42bb      	cmp	r3, r7
 8025fea:	d117      	bne.n	802601c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8025fec:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8025ff0:	9b04      	ldr	r3, [sp, #16]
 8025ff2:	4548      	cmp	r0, r9
 8025ff4:	f103 33ff 	add.w	r3, r3, #4294967295
 8025ff8:	d17f      	bne.n	80260fa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8025ffa:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8025ffe:	4401      	add	r1, r0
 8026000:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8026004:	4480      	add	r8, r0
 8026006:	e7e9      	b.n	8025fdc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8026008:	461f      	mov	r7, r3
 802600a:	e044      	b.n	8026096 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802600c:	2000      	movs	r0, #0
 802600e:	e002      	b.n	8026016 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8026010:	2900      	cmp	r1, #0
 8026012:	d16f      	bne.n	80260f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8026014:	2001      	movs	r0, #1
 8026016:	b00b      	add	sp, #44	; 0x2c
 8026018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802601c:	2900      	cmp	r1, #0
 802601e:	d030      	beq.n	8026082 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026020:	2f00      	cmp	r7, #0
 8026022:	db29      	blt.n	8026078 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026024:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026028:	42bb      	cmp	r3, r7
 802602a:	dd25      	ble.n	8026078 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802602c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026030:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026034:	f7ff ff76 	bl	8025f24 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026038:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802603a:	fb10 f003 	smulbb	r0, r0, r3
 802603e:	b280      	uxth	r0, r0
 8026040:	1c41      	adds	r1, r0, #1
 8026042:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026046:	1209      	asrs	r1, r1, #8
 8026048:	f011 0fff 	tst.w	r1, #255	; 0xff
 802604c:	d014      	beq.n	8026078 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802604e:	9808      	ldr	r0, [sp, #32]
 8026050:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026052:	b2c9      	uxtb	r1, r1
 8026054:	b2ba      	uxth	r2, r7
 8026056:	9102      	str	r1, [sp, #8]
 8026058:	2101      	movs	r1, #1
 802605a:	4413      	add	r3, r2
 802605c:	9101      	str	r1, [sp, #4]
 802605e:	4402      	add	r2, r0
 8026060:	fa0f f18b 	sxth.w	r1, fp
 8026064:	f8da 0000 	ldr.w	r0, [sl]
 8026068:	9100      	str	r1, [sp, #0]
 802606a:	6941      	ldr	r1, [r0, #20]
 802606c:	b21b      	sxth	r3, r3
 802606e:	460d      	mov	r5, r1
 8026070:	b212      	sxth	r2, r2
 8026072:	9905      	ldr	r1, [sp, #20]
 8026074:	4650      	mov	r0, sl
 8026076:	47a8      	blx	r5
 8026078:	9b04      	ldr	r3, [sp, #16]
 802607a:	3301      	adds	r3, #1
 802607c:	f107 0201 	add.w	r2, r7, #1
 8026080:	d0c8      	beq.n	8026014 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026082:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026086:	1abb      	subs	r3, r7, r2
 8026088:	2b00      	cmp	r3, #0
 802608a:	dd31      	ble.n	80260f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802608c:	2a00      	cmp	r2, #0
 802608e:	dabb      	bge.n	8026008 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026090:	2f00      	cmp	r7, #0
 8026092:	dd2d      	ble.n	80260f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026094:	2200      	movs	r2, #0
 8026096:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802609a:	19d1      	adds	r1, r2, r7
 802609c:	4299      	cmp	r1, r3
 802609e:	db02      	blt.n	80260a6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80260a0:	1a9f      	subs	r7, r3, r2
 80260a2:	2f00      	cmp	r7, #0
 80260a4:	dd24      	ble.n	80260f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80260a6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80260aa:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80260ae:	f7ff ff39 	bl	8025f24 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80260b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80260b4:	fb10 f003 	smulbb	r0, r0, r3
 80260b8:	b280      	uxth	r0, r0
 80260ba:	1c41      	adds	r1, r0, #1
 80260bc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80260c0:	1209      	asrs	r1, r1, #8
 80260c2:	f011 0fff 	tst.w	r1, #255	; 0xff
 80260c6:	d013      	beq.n	80260f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80260c8:	9808      	ldr	r0, [sp, #32]
 80260ca:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80260cc:	b292      	uxth	r2, r2
 80260ce:	b2c9      	uxtb	r1, r1
 80260d0:	4413      	add	r3, r2
 80260d2:	9102      	str	r1, [sp, #8]
 80260d4:	4402      	add	r2, r0
 80260d6:	b23f      	sxth	r7, r7
 80260d8:	f8da 0000 	ldr.w	r0, [sl]
 80260dc:	9701      	str	r7, [sp, #4]
 80260de:	fa0f f18b 	sxth.w	r1, fp
 80260e2:	9100      	str	r1, [sp, #0]
 80260e4:	6947      	ldr	r7, [r0, #20]
 80260e6:	9905      	ldr	r1, [sp, #20]
 80260e8:	b21b      	sxth	r3, r3
 80260ea:	b212      	sxth	r2, r2
 80260ec:	4650      	mov	r0, sl
 80260ee:	47b8      	blx	r7
 80260f0:	464b      	mov	r3, r9
 80260f2:	e75c      	b.n	8025fae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80260f4:	2f00      	cmp	r7, #0
 80260f6:	da95      	bge.n	8026024 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80260f8:	e78c      	b.n	8026014 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80260fa:	2900      	cmp	r1, #0
 80260fc:	d0f8      	beq.n	80260f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80260fe:	e78f      	b.n	8026020 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08026100 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8026100:	4b4b      	ldr	r3, [pc, #300]	; (8026230 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8026102:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8026106:	2500      	movs	r5, #0
 8026108:	f100 0620 	add.w	r6, r0, #32
 802610c:	4604      	mov	r4, r0
 802610e:	e9c0 3100 	strd	r3, r1, [r0]
 8026112:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8026116:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802611a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802611e:	f100 0718 	add.w	r7, r0, #24
 8026122:	4630      	mov	r0, r6
 8026124:	4690      	mov	r8, r2
 8026126:	f7ec fb41 	bl	80127ac <_ZN8touchgfx7OutlineC1Ev>
 802612a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802612e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8026132:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8026136:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802613a:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802613e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8026142:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8026146:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802614a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 802614e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8026152:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8026156:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802615a:	9500      	str	r5, [sp, #0]
 802615c:	4410      	add	r0, r2
 802615e:	b280      	uxth	r0, r0
 8026160:	fa0f fa80 	sxth.w	sl, r0
 8026164:	45aa      	cmp	sl, r5
 8026166:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802616a:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 802616e:	dd5c      	ble.n	802622a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026170:	4591      	cmp	r9, r2
 8026172:	dd5a      	ble.n	802622a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026174:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8026178:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 802617c:	440b      	add	r3, r1
 802617e:	b29b      	uxth	r3, r3
 8026180:	b21d      	sxth	r5, r3
 8026182:	2d00      	cmp	r5, #0
 8026184:	dd51      	ble.n	802622a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026186:	458e      	cmp	lr, r1
 8026188:	dd4f      	ble.n	802622a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802618a:	45d1      	cmp	r9, sl
 802618c:	bfb8      	it	lt
 802618e:	fa1f f089 	uxthlt.w	r0, r9
 8026192:	45ae      	cmp	lr, r5
 8026194:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8026198:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 802619c:	bfb8      	it	lt
 802619e:	fa1f f38e 	uxthlt.w	r3, lr
 80261a2:	1a80      	subs	r0, r0, r2
 80261a4:	1a5b      	subs	r3, r3, r1
 80261a6:	f8ad 0004 	strh.w	r0, [sp, #4]
 80261aa:	f8ad 3006 	strh.w	r3, [sp, #6]
 80261ae:	f8ad 2000 	strh.w	r2, [sp]
 80261b2:	f8ad 1002 	strh.w	r1, [sp, #2]
 80261b6:	466d      	mov	r5, sp
 80261b8:	e895 0003 	ldmia.w	r5, {r0, r1}
 80261bc:	e887 0003 	stmia.w	r7, {r0, r1}
 80261c0:	f8dc 3000 	ldr.w	r3, [ip]
 80261c4:	4660      	mov	r0, ip
 80261c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80261c8:	4639      	mov	r1, r7
 80261ca:	4798      	blx	r3
 80261cc:	6861      	ldr	r1, [r4, #4]
 80261ce:	4628      	mov	r0, r5
 80261d0:	3104      	adds	r1, #4
 80261d2:	f7ee fcf1 	bl	8014bb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80261d6:	4638      	mov	r0, r7
 80261d8:	f7ee fcaa 	bl	8014b30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80261dc:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80261e0:	f8bd 2000 	ldrh.w	r2, [sp]
 80261e4:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80261e8:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 80261ec:	4630      	mov	r0, r6
 80261ee:	f7ec fac1 	bl	8012774 <_ZN8touchgfx7Outline5resetEv>
 80261f2:	f9bd 3000 	ldrsh.w	r3, [sp]
 80261f6:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 80261fa:	015b      	lsls	r3, r3, #5
 80261fc:	60a3      	str	r3, [r4, #8]
 80261fe:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026202:	015b      	lsls	r3, r3, #5
 8026204:	60e3      	str	r3, [r4, #12]
 8026206:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802620a:	015b      	lsls	r3, r3, #5
 802620c:	6123      	str	r3, [r4, #16]
 802620e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8026212:	015b      	lsls	r3, r3, #5
 8026214:	6163      	str	r3, [r4, #20]
 8026216:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802621a:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 802621e:	4620      	mov	r0, r4
 8026220:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8026224:	b002      	add	sp, #8
 8026226:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802622a:	2300      	movs	r3, #0
 802622c:	9301      	str	r3, [sp, #4]
 802622e:	e7c2      	b.n	80261b6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8026230:	0802aa24 	.word	0x0802aa24

08026234 <_ZN8touchgfx6Canvas5closeEv>:
 8026234:	b538      	push	{r3, r4, r5, lr}
 8026236:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802623a:	4604      	mov	r4, r0
 802623c:	b193      	cbz	r3, 8026264 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802623e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8026242:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8026246:	4213      	tst	r3, r2
 8026248:	d10c      	bne.n	8026264 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802624a:	f100 0520 	add.w	r5, r0, #32
 802624e:	b123      	cbz	r3, 802625a <_ZN8touchgfx6Canvas5closeEv+0x26>
 8026250:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8026254:	4628      	mov	r0, r5
 8026256:	f7ff fe79 	bl	8025f4c <_ZN8touchgfx10Rasterizer6lineToEii>
 802625a:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 802625e:	4628      	mov	r0, r5
 8026260:	f7ff fe74 	bl	8025f4c <_ZN8touchgfx10Rasterizer6lineToEii>
 8026264:	2300      	movs	r3, #0
 8026266:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802626a:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 802626e:	4298      	cmp	r0, r3
 8026270:	bf34      	ite	cc
 8026272:	2000      	movcc	r0, #0
 8026274:	2001      	movcs	r0, #1
 8026276:	bd38      	pop	{r3, r4, r5, pc}

08026278 <_ZN8touchgfx6Canvas6renderEh>:
 8026278:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802627c:	4604      	mov	r4, r0
 802627e:	6840      	ldr	r0, [r0, #4]
 8026280:	6803      	ldr	r3, [r0, #0]
 8026282:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8026284:	460d      	mov	r5, r1
 8026286:	4798      	blx	r3
 8026288:	fb10 f105 	smulbb	r1, r0, r5
 802628c:	b289      	uxth	r1, r1
 802628e:	1c4d      	adds	r5, r1, #1
 8026290:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026294:	122d      	asrs	r5, r5, #8
 8026296:	f000 809d 	beq.w	80263d4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802629a:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 802629e:	2b00      	cmp	r3, #0
 80262a0:	f000 8098 	beq.w	80263d4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80262a4:	4620      	mov	r0, r4
 80262a6:	f7ff ffc5 	bl	8026234 <_ZN8touchgfx6Canvas5closeEv>
 80262aa:	4607      	mov	r7, r0
 80262ac:	2800      	cmp	r0, #0
 80262ae:	d048      	beq.n	8026342 <_ZN8touchgfx6Canvas6renderEh+0xca>
 80262b0:	6863      	ldr	r3, [r4, #4]
 80262b2:	4e49      	ldr	r6, [pc, #292]	; (80263d8 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 80262b4:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80262b6:	6837      	ldr	r7, [r6, #0]
 80262b8:	6803      	ldr	r3, [r0, #0]
 80262ba:	689b      	ldr	r3, [r3, #8]
 80262bc:	4798      	blx	r3
 80262be:	4601      	mov	r1, r0
 80262c0:	4638      	mov	r0, r7
 80262c2:	f7ea fad9 	bl	8010878 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80262c6:	4607      	mov	r7, r0
 80262c8:	f7de f9e8 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 80262cc:	6803      	ldr	r3, [r0, #0]
 80262ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80262d0:	4798      	blx	r3
 80262d2:	4680      	mov	r8, r0
 80262d4:	f7de f9e2 	bl	800469c <_ZN8touchgfx3HAL3lcdEv>
 80262d8:	6803      	ldr	r3, [r0, #0]
 80262da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80262dc:	4798      	blx	r3
 80262de:	280b      	cmp	r0, #11
 80262e0:	d85d      	bhi.n	802639e <_ZN8touchgfx6Canvas6renderEh+0x126>
 80262e2:	e8df f000 	tbb	[pc, r0]
 80262e6:	5e53      	.short	0x5e53
 80262e8:	325c066e 	.word	0x325c066e
 80262ec:	67676742 	.word	0x67676742
 80262f0:	6767      	.short	0x6767
 80262f2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80262f6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80262fa:	2208      	movs	r2, #8
 80262fc:	fb91 f2f2 	sdiv	r2, r1, r2
 8026300:	fb08 2303 	mla	r3, r8, r3, r2
 8026304:	441f      	add	r7, r3
 8026306:	424b      	negs	r3, r1
 8026308:	f003 0307 	and.w	r3, r3, #7
 802630c:	f001 0107 	and.w	r1, r1, #7
 8026310:	bf58      	it	pl
 8026312:	4259      	negpl	r1, r3
 8026314:	b2c9      	uxtb	r1, r1
 8026316:	b2ed      	uxtb	r5, r5
 8026318:	e9cd 1500 	strd	r1, r5, [sp]
 802631c:	6860      	ldr	r0, [r4, #4]
 802631e:	463a      	mov	r2, r7
 8026320:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8026322:	fa0f f388 	sxth.w	r3, r8
 8026326:	f104 0020 	add.w	r0, r4, #32
 802632a:	f7ff fe1b 	bl	8025f64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802632e:	6863      	ldr	r3, [r4, #4]
 8026330:	4607      	mov	r7, r0
 8026332:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8026334:	6803      	ldr	r3, [r0, #0]
 8026336:	691b      	ldr	r3, [r3, #16]
 8026338:	4798      	blx	r3
 802633a:	6830      	ldr	r0, [r6, #0]
 802633c:	6803      	ldr	r3, [r0, #0]
 802633e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026340:	4798      	blx	r3
 8026342:	4638      	mov	r0, r7
 8026344:	b002      	add	sp, #8
 8026346:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802634a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802634e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026352:	2204      	movs	r2, #4
 8026354:	fb91 f2f2 	sdiv	r2, r1, r2
 8026358:	fb08 2303 	mla	r3, r8, r3, r2
 802635c:	441f      	add	r7, r3
 802635e:	424b      	negs	r3, r1
 8026360:	f003 0303 	and.w	r3, r3, #3
 8026364:	f001 0103 	and.w	r1, r1, #3
 8026368:	e7d2      	b.n	8026310 <_ZN8touchgfx6Canvas6renderEh+0x98>
 802636a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802636e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026372:	2900      	cmp	r1, #0
 8026374:	f04f 0202 	mov.w	r2, #2
 8026378:	fb91 f2f2 	sdiv	r2, r1, r2
 802637c:	f001 0101 	and.w	r1, r1, #1
 8026380:	fb08 2303 	mla	r3, r8, r3, r2
 8026384:	441f      	add	r7, r3
 8026386:	bfb8      	it	lt
 8026388:	4249      	neglt	r1, r1
 802638a:	e7c3      	b.n	8026314 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 802638c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026390:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8026394:	fb08 f303 	mul.w	r3, r8, r3
 8026398:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802639c:	441f      	add	r7, r3
 802639e:	2100      	movs	r1, #0
 80263a0:	e7b9      	b.n	8026316 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80263a2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80263a6:	fb08 f203 	mul.w	r2, r8, r3
 80263aa:	8b23      	ldrh	r3, [r4, #24]
 80263ac:	2103      	movs	r1, #3
 80263ae:	fb13 2301 	smlabb	r3, r3, r1, r2
 80263b2:	e7f3      	b.n	802639c <_ZN8touchgfx6Canvas6renderEh+0x124>
 80263b4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80263b8:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80263bc:	fb08 2303 	mla	r3, r8, r3, r2
 80263c0:	e7ec      	b.n	802639c <_ZN8touchgfx6Canvas6renderEh+0x124>
 80263c2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80263c6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80263ca:	fb08 f303 	mul.w	r3, r8, r3
 80263ce:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80263d2:	e7e3      	b.n	802639c <_ZN8touchgfx6Canvas6renderEh+0x124>
 80263d4:	2701      	movs	r7, #1
 80263d6:	e7b4      	b.n	8026342 <_ZN8touchgfx6Canvas6renderEh+0xca>
 80263d8:	2000ef1c 	.word	0x2000ef1c

080263dc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80263dc:	b510      	push	{r4, lr}
 80263de:	4b07      	ldr	r3, [pc, #28]	; (80263fc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80263e0:	781b      	ldrb	r3, [r3, #0]
 80263e2:	2b01      	cmp	r3, #1
 80263e4:	d108      	bne.n	80263f8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80263e6:	6843      	ldr	r3, [r0, #4]
 80263e8:	6814      	ldr	r4, [r2, #0]
 80263ea:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80263ee:	680b      	ldr	r3, [r1, #0]
 80263f0:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80263f4:	6013      	str	r3, [r2, #0]
 80263f6:	600c      	str	r4, [r1, #0]
 80263f8:	bd10      	pop	{r4, pc}
 80263fa:	bf00      	nop
 80263fc:	2000ef14 	.word	0x2000ef14

08026400 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8026400:	b513      	push	{r0, r1, r4, lr}
 8026402:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8026406:	4604      	mov	r4, r0
 8026408:	e9cd 2100 	strd	r2, r1, [sp]
 802640c:	b9a3      	cbnz	r3, 8026438 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802640e:	466a      	mov	r2, sp
 8026410:	a901      	add	r1, sp, #4
 8026412:	4620      	mov	r0, r4
 8026414:	f7ff ffe2 	bl	80263dc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026418:	68a3      	ldr	r3, [r4, #8]
 802641a:	9901      	ldr	r1, [sp, #4]
 802641c:	9a00      	ldr	r2, [sp, #0]
 802641e:	1ac9      	subs	r1, r1, r3
 8026420:	68e3      	ldr	r3, [r4, #12]
 8026422:	9101      	str	r1, [sp, #4]
 8026424:	1ad2      	subs	r2, r2, r3
 8026426:	2a00      	cmp	r2, #0
 8026428:	9200      	str	r2, [sp, #0]
 802642a:	da0b      	bge.n	8026444 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802642c:	2301      	movs	r3, #1
 802642e:	2900      	cmp	r1, #0
 8026430:	da0e      	bge.n	8026450 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8026432:	f043 0304 	orr.w	r3, r3, #4
 8026436:	e013      	b.n	8026460 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8026438:	f7ff fefc 	bl	8026234 <_ZN8touchgfx6Canvas5closeEv>
 802643c:	2800      	cmp	r0, #0
 802643e:	d1e6      	bne.n	802640e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8026440:	b002      	add	sp, #8
 8026442:	bd10      	pop	{r4, pc}
 8026444:	6963      	ldr	r3, [r4, #20]
 8026446:	429a      	cmp	r2, r3
 8026448:	bfac      	ite	ge
 802644a:	2302      	movge	r3, #2
 802644c:	2300      	movlt	r3, #0
 802644e:	e7ee      	b.n	802642e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8026450:	6920      	ldr	r0, [r4, #16]
 8026452:	4281      	cmp	r1, r0
 8026454:	bfac      	ite	ge
 8026456:	2008      	movge	r0, #8
 8026458:	2000      	movlt	r0, #0
 802645a:	4318      	orrs	r0, r3
 802645c:	b2c3      	uxtb	r3, r0
 802645e:	b158      	cbz	r0, 8026478 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8026460:	2200      	movs	r2, #0
 8026462:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8026466:	9901      	ldr	r1, [sp, #4]
 8026468:	9a00      	ldr	r2, [sp, #0]
 802646a:	66a1      	str	r1, [r4, #104]	; 0x68
 802646c:	66e2      	str	r2, [r4, #108]	; 0x6c
 802646e:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8026472:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8026476:	e7e3      	b.n	8026440 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8026478:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802647c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026480:	4298      	cmp	r0, r3
 8026482:	d803      	bhi.n	802648c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8026484:	f104 0020 	add.w	r0, r4, #32
 8026488:	f7ec fe72 	bl	8013170 <_ZN8touchgfx7Outline6moveToEii>
 802648c:	2301      	movs	r3, #1
 802648e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026492:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8026496:	2300      	movs	r3, #0
 8026498:	e7e5      	b.n	8026466 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802649a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802649c:	ab02      	add	r3, sp, #8
 802649e:	4604      	mov	r4, r0
 80264a0:	f843 2d08 	str.w	r2, [r3, #-8]!
 80264a4:	9101      	str	r1, [sp, #4]
 80264a6:	461a      	mov	r2, r3
 80264a8:	a901      	add	r1, sp, #4
 80264aa:	f7ff ff97 	bl	80263dc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80264ae:	68a3      	ldr	r3, [r4, #8]
 80264b0:	9901      	ldr	r1, [sp, #4]
 80264b2:	9a00      	ldr	r2, [sp, #0]
 80264b4:	1ac9      	subs	r1, r1, r3
 80264b6:	68e3      	ldr	r3, [r4, #12]
 80264b8:	9101      	str	r1, [sp, #4]
 80264ba:	1ad2      	subs	r2, r2, r3
 80264bc:	2a00      	cmp	r2, #0
 80264be:	9200      	str	r2, [sp, #0]
 80264c0:	db1c      	blt.n	80264fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80264c2:	6963      	ldr	r3, [r4, #20]
 80264c4:	429a      	cmp	r2, r3
 80264c6:	bfac      	ite	ge
 80264c8:	2002      	movge	r0, #2
 80264ca:	2000      	movlt	r0, #0
 80264cc:	2900      	cmp	r1, #0
 80264ce:	db17      	blt.n	8026500 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80264d0:	6923      	ldr	r3, [r4, #16]
 80264d2:	4299      	cmp	r1, r3
 80264d4:	bfac      	ite	ge
 80264d6:	2308      	movge	r3, #8
 80264d8:	2300      	movlt	r3, #0
 80264da:	4303      	orrs	r3, r0
 80264dc:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80264e0:	b2dd      	uxtb	r5, r3
 80264e2:	b978      	cbnz	r0, 8026504 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80264e4:	f104 0020 	add.w	r0, r4, #32
 80264e8:	f7ff fd30 	bl	8025f4c <_ZN8touchgfx10Rasterizer6lineToEii>
 80264ec:	9b01      	ldr	r3, [sp, #4]
 80264ee:	65e3      	str	r3, [r4, #92]	; 0x5c
 80264f0:	9b00      	ldr	r3, [sp, #0]
 80264f2:	6623      	str	r3, [r4, #96]	; 0x60
 80264f4:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80264f8:	b002      	add	sp, #8
 80264fa:	bd70      	pop	{r4, r5, r6, pc}
 80264fc:	2001      	movs	r0, #1
 80264fe:	e7e5      	b.n	80264cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8026500:	2304      	movs	r3, #4
 8026502:	e7ea      	b.n	80264da <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8026504:	b113      	cbz	r3, 802650c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8026506:	ea10 0305 	ands.w	r3, r0, r5
 802650a:	d11c      	bne.n	8026546 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802650c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8026510:	f104 0620 	add.w	r6, r4, #32
 8026514:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8026518:	b98b      	cbnz	r3, 802653e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802651a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802651e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026522:	4298      	cmp	r0, r3
 8026524:	d802      	bhi.n	802652c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8026526:	4630      	mov	r0, r6
 8026528:	f7ec fe22 	bl	8013170 <_ZN8touchgfx7Outline6moveToEii>
 802652c:	2301      	movs	r3, #1
 802652e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026532:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8026536:	e9dd 2100 	ldrd	r2, r1, [sp]
 802653a:	4630      	mov	r0, r6
 802653c:	e7d4      	b.n	80264e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802653e:	4630      	mov	r0, r6
 8026540:	f7ff fd04 	bl	8025f4c <_ZN8touchgfx10Rasterizer6lineToEii>
 8026544:	e7f7      	b.n	8026536 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8026546:	461d      	mov	r5, r3
 8026548:	e7d0      	b.n	80264ec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802654c <_ZN8touchgfx6CanvasD1Ev>:
 802654c:	b510      	push	{r4, lr}
 802654e:	4b04      	ldr	r3, [pc, #16]	; (8026560 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8026550:	4604      	mov	r4, r0
 8026552:	f840 3b20 	str.w	r3, [r0], #32
 8026556:	f7ec f905 	bl	8012764 <_ZN8touchgfx7OutlineD1Ev>
 802655a:	4620      	mov	r0, r4
 802655c:	bd10      	pop	{r4, pc}
 802655e:	bf00      	nop
 8026560:	0802aa24 	.word	0x0802aa24

08026564 <_ZN8touchgfx6CanvasD0Ev>:
 8026564:	b510      	push	{r4, lr}
 8026566:	4604      	mov	r4, r0
 8026568:	f7ff fff0 	bl	802654c <_ZN8touchgfx6CanvasD1Ev>
 802656c:	4620      	mov	r0, r4
 802656e:	2170      	movs	r1, #112	; 0x70
 8026570:	f000 f826 	bl	80265c0 <_ZdlPvj>
 8026574:	4620      	mov	r0, r4
 8026576:	bd10      	pop	{r4, pc}

08026578 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8026578:	b570      	push	{r4, r5, r6, lr}
 802657a:	790b      	ldrb	r3, [r1, #4]
 802657c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8026580:	2b00      	cmp	r3, #0
 8026582:	bf0c      	ite	eq
 8026584:	2301      	moveq	r3, #1
 8026586:	2300      	movne	r3, #0
 8026588:	4604      	mov	r4, r0
 802658a:	460e      	mov	r6, r1
 802658c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8026590:	d109      	bne.n	80265a6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8026592:	b14d      	cbz	r5, 80265a8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8026594:	7933      	ldrb	r3, [r6, #4]
 8026596:	2b01      	cmp	r3, #1
 8026598:	d10c      	bne.n	80265b4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802659a:	6823      	ldr	r3, [r4, #0]
 802659c:	4620      	mov	r0, r4
 802659e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80265a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80265a4:	4718      	bx	r3
 80265a6:	b12d      	cbz	r5, 80265b4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80265a8:	6823      	ldr	r3, [r4, #0]
 80265aa:	4620      	mov	r0, r4
 80265ac:	695b      	ldr	r3, [r3, #20]
 80265ae:	4798      	blx	r3
 80265b0:	2d00      	cmp	r5, #0
 80265b2:	d1ef      	bne.n	8026594 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80265b4:	bd70      	pop	{r4, r5, r6, pc}

080265b6 <__aeabi_atexit>:
 80265b6:	460b      	mov	r3, r1
 80265b8:	4601      	mov	r1, r0
 80265ba:	4618      	mov	r0, r3
 80265bc:	f000 b852 	b.w	8026664 <__cxa_atexit>

080265c0 <_ZdlPvj>:
 80265c0:	f000 b812 	b.w	80265e8 <_ZdlPv>

080265c4 <__cxa_guard_acquire>:
 80265c4:	6803      	ldr	r3, [r0, #0]
 80265c6:	07db      	lsls	r3, r3, #31
 80265c8:	d406      	bmi.n	80265d8 <__cxa_guard_acquire+0x14>
 80265ca:	7843      	ldrb	r3, [r0, #1]
 80265cc:	b103      	cbz	r3, 80265d0 <__cxa_guard_acquire+0xc>
 80265ce:	deff      	udf	#255	; 0xff
 80265d0:	2301      	movs	r3, #1
 80265d2:	7043      	strb	r3, [r0, #1]
 80265d4:	4618      	mov	r0, r3
 80265d6:	4770      	bx	lr
 80265d8:	2000      	movs	r0, #0
 80265da:	4770      	bx	lr

080265dc <__cxa_guard_release>:
 80265dc:	2301      	movs	r3, #1
 80265de:	6003      	str	r3, [r0, #0]
 80265e0:	4770      	bx	lr

080265e2 <__cxa_pure_virtual>:
 80265e2:	b508      	push	{r3, lr}
 80265e4:	f000 f80e 	bl	8026604 <_ZSt9terminatev>

080265e8 <_ZdlPv>:
 80265e8:	f000 b88e 	b.w	8026708 <free>

080265ec <_ZN10__cxxabiv111__terminateEPFvvE>:
 80265ec:	b508      	push	{r3, lr}
 80265ee:	4780      	blx	r0
 80265f0:	f000 f80d 	bl	802660e <abort>

080265f4 <_ZSt13get_terminatev>:
 80265f4:	4b02      	ldr	r3, [pc, #8]	; (8026600 <_ZSt13get_terminatev+0xc>)
 80265f6:	6818      	ldr	r0, [r3, #0]
 80265f8:	f3bf 8f5b 	dmb	ish
 80265fc:	4770      	bx	lr
 80265fe:	bf00      	nop
 8026600:	200000dc 	.word	0x200000dc

08026604 <_ZSt9terminatev>:
 8026604:	b508      	push	{r3, lr}
 8026606:	f7ff fff5 	bl	80265f4 <_ZSt13get_terminatev>
 802660a:	f7ff ffef 	bl	80265ec <_ZN10__cxxabiv111__terminateEPFvvE>

0802660e <abort>:
 802660e:	b508      	push	{r3, lr}
 8026610:	2006      	movs	r0, #6
 8026612:	f000 fc9d 	bl	8026f50 <raise>
 8026616:	2001      	movs	r0, #1
 8026618:	f7dc f9d8 	bl	80029cc <_exit>

0802661c <__assert_func>:
 802661c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802661e:	4614      	mov	r4, r2
 8026620:	461a      	mov	r2, r3
 8026622:	4b09      	ldr	r3, [pc, #36]	; (8026648 <__assert_func+0x2c>)
 8026624:	681b      	ldr	r3, [r3, #0]
 8026626:	4605      	mov	r5, r0
 8026628:	68d8      	ldr	r0, [r3, #12]
 802662a:	b14c      	cbz	r4, 8026640 <__assert_func+0x24>
 802662c:	4b07      	ldr	r3, [pc, #28]	; (802664c <__assert_func+0x30>)
 802662e:	9100      	str	r1, [sp, #0]
 8026630:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8026634:	4906      	ldr	r1, [pc, #24]	; (8026650 <__assert_func+0x34>)
 8026636:	462b      	mov	r3, r5
 8026638:	f000 f828 	bl	802668c <fiprintf>
 802663c:	f7ff ffe7 	bl	802660e <abort>
 8026640:	4b04      	ldr	r3, [pc, #16]	; (8026654 <__assert_func+0x38>)
 8026642:	461c      	mov	r4, r3
 8026644:	e7f3      	b.n	802662e <__assert_func+0x12>
 8026646:	bf00      	nop
 8026648:	200000e0 	.word	0x200000e0
 802664c:	0802aa30 	.word	0x0802aa30
 8026650:	0802aa3d 	.word	0x0802aa3d
 8026654:	0802aa6b 	.word	0x0802aa6b

08026658 <atexit>:
 8026658:	2300      	movs	r3, #0
 802665a:	4601      	mov	r1, r0
 802665c:	461a      	mov	r2, r3
 802665e:	4618      	mov	r0, r3
 8026660:	f000 bd66 	b.w	8027130 <__register_exitproc>

08026664 <__cxa_atexit>:
 8026664:	b510      	push	{r4, lr}
 8026666:	4c05      	ldr	r4, [pc, #20]	; (802667c <__cxa_atexit+0x18>)
 8026668:	4613      	mov	r3, r2
 802666a:	b12c      	cbz	r4, 8026678 <__cxa_atexit+0x14>
 802666c:	460a      	mov	r2, r1
 802666e:	4601      	mov	r1, r0
 8026670:	2002      	movs	r0, #2
 8026672:	f000 fd5d 	bl	8027130 <__register_exitproc>
 8026676:	bd10      	pop	{r4, pc}
 8026678:	4620      	mov	r0, r4
 802667a:	e7fc      	b.n	8026676 <__cxa_atexit+0x12>
 802667c:	08027131 	.word	0x08027131

08026680 <__errno>:
 8026680:	4b01      	ldr	r3, [pc, #4]	; (8026688 <__errno+0x8>)
 8026682:	6818      	ldr	r0, [r3, #0]
 8026684:	4770      	bx	lr
 8026686:	bf00      	nop
 8026688:	200000e0 	.word	0x200000e0

0802668c <fiprintf>:
 802668c:	b40e      	push	{r1, r2, r3}
 802668e:	b503      	push	{r0, r1, lr}
 8026690:	4601      	mov	r1, r0
 8026692:	ab03      	add	r3, sp, #12
 8026694:	4805      	ldr	r0, [pc, #20]	; (80266ac <fiprintf+0x20>)
 8026696:	f853 2b04 	ldr.w	r2, [r3], #4
 802669a:	6800      	ldr	r0, [r0, #0]
 802669c:	9301      	str	r3, [sp, #4]
 802669e:	f000 f95b 	bl	8026958 <_vfiprintf_r>
 80266a2:	b002      	add	sp, #8
 80266a4:	f85d eb04 	ldr.w	lr, [sp], #4
 80266a8:	b003      	add	sp, #12
 80266aa:	4770      	bx	lr
 80266ac:	200000e0 	.word	0x200000e0

080266b0 <__libc_init_array>:
 80266b0:	b570      	push	{r4, r5, r6, lr}
 80266b2:	4d0d      	ldr	r5, [pc, #52]	; (80266e8 <__libc_init_array+0x38>)
 80266b4:	4c0d      	ldr	r4, [pc, #52]	; (80266ec <__libc_init_array+0x3c>)
 80266b6:	1b64      	subs	r4, r4, r5
 80266b8:	10a4      	asrs	r4, r4, #2
 80266ba:	2600      	movs	r6, #0
 80266bc:	42a6      	cmp	r6, r4
 80266be:	d109      	bne.n	80266d4 <__libc_init_array+0x24>
 80266c0:	4d0b      	ldr	r5, [pc, #44]	; (80266f0 <__libc_init_array+0x40>)
 80266c2:	4c0c      	ldr	r4, [pc, #48]	; (80266f4 <__libc_init_array+0x44>)
 80266c4:	f001 f86e 	bl	80277a4 <_init>
 80266c8:	1b64      	subs	r4, r4, r5
 80266ca:	10a4      	asrs	r4, r4, #2
 80266cc:	2600      	movs	r6, #0
 80266ce:	42a6      	cmp	r6, r4
 80266d0:	d105      	bne.n	80266de <__libc_init_array+0x2e>
 80266d2:	bd70      	pop	{r4, r5, r6, pc}
 80266d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80266d8:	4798      	blx	r3
 80266da:	3601      	adds	r6, #1
 80266dc:	e7ee      	b.n	80266bc <__libc_init_array+0xc>
 80266de:	f855 3b04 	ldr.w	r3, [r5], #4
 80266e2:	4798      	blx	r3
 80266e4:	3601      	adds	r6, #1
 80266e6:	e7f2      	b.n	80266ce <__libc_init_array+0x1e>
 80266e8:	0802b17c 	.word	0x0802b17c
 80266ec:	0802b17c 	.word	0x0802b17c
 80266f0:	0802b17c 	.word	0x0802b17c
 80266f4:	0802b194 	.word	0x0802b194

080266f8 <malloc>:
 80266f8:	4b02      	ldr	r3, [pc, #8]	; (8026704 <malloc+0xc>)
 80266fa:	4601      	mov	r1, r0
 80266fc:	6818      	ldr	r0, [r3, #0]
 80266fe:	f000 b88d 	b.w	802681c <_malloc_r>
 8026702:	bf00      	nop
 8026704:	200000e0 	.word	0x200000e0

08026708 <free>:
 8026708:	4b02      	ldr	r3, [pc, #8]	; (8026714 <free+0xc>)
 802670a:	4601      	mov	r1, r0
 802670c:	6818      	ldr	r0, [r3, #0]
 802670e:	f000 b819 	b.w	8026744 <_free_r>
 8026712:	bf00      	nop
 8026714:	200000e0 	.word	0x200000e0

08026718 <memcpy>:
 8026718:	440a      	add	r2, r1
 802671a:	4291      	cmp	r1, r2
 802671c:	f100 33ff 	add.w	r3, r0, #4294967295
 8026720:	d100      	bne.n	8026724 <memcpy+0xc>
 8026722:	4770      	bx	lr
 8026724:	b510      	push	{r4, lr}
 8026726:	f811 4b01 	ldrb.w	r4, [r1], #1
 802672a:	f803 4f01 	strb.w	r4, [r3, #1]!
 802672e:	4291      	cmp	r1, r2
 8026730:	d1f9      	bne.n	8026726 <memcpy+0xe>
 8026732:	bd10      	pop	{r4, pc}

08026734 <memset>:
 8026734:	4402      	add	r2, r0
 8026736:	4603      	mov	r3, r0
 8026738:	4293      	cmp	r3, r2
 802673a:	d100      	bne.n	802673e <memset+0xa>
 802673c:	4770      	bx	lr
 802673e:	f803 1b01 	strb.w	r1, [r3], #1
 8026742:	e7f9      	b.n	8026738 <memset+0x4>

08026744 <_free_r>:
 8026744:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8026746:	2900      	cmp	r1, #0
 8026748:	d044      	beq.n	80267d4 <_free_r+0x90>
 802674a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802674e:	9001      	str	r0, [sp, #4]
 8026750:	2b00      	cmp	r3, #0
 8026752:	f1a1 0404 	sub.w	r4, r1, #4
 8026756:	bfb8      	it	lt
 8026758:	18e4      	addlt	r4, r4, r3
 802675a:	f000 ff6b 	bl	8027634 <__malloc_lock>
 802675e:	4a1e      	ldr	r2, [pc, #120]	; (80267d8 <_free_r+0x94>)
 8026760:	9801      	ldr	r0, [sp, #4]
 8026762:	6813      	ldr	r3, [r2, #0]
 8026764:	b933      	cbnz	r3, 8026774 <_free_r+0x30>
 8026766:	6063      	str	r3, [r4, #4]
 8026768:	6014      	str	r4, [r2, #0]
 802676a:	b003      	add	sp, #12
 802676c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8026770:	f000 bf66 	b.w	8027640 <__malloc_unlock>
 8026774:	42a3      	cmp	r3, r4
 8026776:	d908      	bls.n	802678a <_free_r+0x46>
 8026778:	6825      	ldr	r5, [r4, #0]
 802677a:	1961      	adds	r1, r4, r5
 802677c:	428b      	cmp	r3, r1
 802677e:	bf01      	itttt	eq
 8026780:	6819      	ldreq	r1, [r3, #0]
 8026782:	685b      	ldreq	r3, [r3, #4]
 8026784:	1949      	addeq	r1, r1, r5
 8026786:	6021      	streq	r1, [r4, #0]
 8026788:	e7ed      	b.n	8026766 <_free_r+0x22>
 802678a:	461a      	mov	r2, r3
 802678c:	685b      	ldr	r3, [r3, #4]
 802678e:	b10b      	cbz	r3, 8026794 <_free_r+0x50>
 8026790:	42a3      	cmp	r3, r4
 8026792:	d9fa      	bls.n	802678a <_free_r+0x46>
 8026794:	6811      	ldr	r1, [r2, #0]
 8026796:	1855      	adds	r5, r2, r1
 8026798:	42a5      	cmp	r5, r4
 802679a:	d10b      	bne.n	80267b4 <_free_r+0x70>
 802679c:	6824      	ldr	r4, [r4, #0]
 802679e:	4421      	add	r1, r4
 80267a0:	1854      	adds	r4, r2, r1
 80267a2:	42a3      	cmp	r3, r4
 80267a4:	6011      	str	r1, [r2, #0]
 80267a6:	d1e0      	bne.n	802676a <_free_r+0x26>
 80267a8:	681c      	ldr	r4, [r3, #0]
 80267aa:	685b      	ldr	r3, [r3, #4]
 80267ac:	6053      	str	r3, [r2, #4]
 80267ae:	4421      	add	r1, r4
 80267b0:	6011      	str	r1, [r2, #0]
 80267b2:	e7da      	b.n	802676a <_free_r+0x26>
 80267b4:	d902      	bls.n	80267bc <_free_r+0x78>
 80267b6:	230c      	movs	r3, #12
 80267b8:	6003      	str	r3, [r0, #0]
 80267ba:	e7d6      	b.n	802676a <_free_r+0x26>
 80267bc:	6825      	ldr	r5, [r4, #0]
 80267be:	1961      	adds	r1, r4, r5
 80267c0:	428b      	cmp	r3, r1
 80267c2:	bf04      	itt	eq
 80267c4:	6819      	ldreq	r1, [r3, #0]
 80267c6:	685b      	ldreq	r3, [r3, #4]
 80267c8:	6063      	str	r3, [r4, #4]
 80267ca:	bf04      	itt	eq
 80267cc:	1949      	addeq	r1, r1, r5
 80267ce:	6021      	streq	r1, [r4, #0]
 80267d0:	6054      	str	r4, [r2, #4]
 80267d2:	e7ca      	b.n	802676a <_free_r+0x26>
 80267d4:	b003      	add	sp, #12
 80267d6:	bd30      	pop	{r4, r5, pc}
 80267d8:	2000f870 	.word	0x2000f870

080267dc <sbrk_aligned>:
 80267dc:	b570      	push	{r4, r5, r6, lr}
 80267de:	4e0e      	ldr	r6, [pc, #56]	; (8026818 <sbrk_aligned+0x3c>)
 80267e0:	460c      	mov	r4, r1
 80267e2:	6831      	ldr	r1, [r6, #0]
 80267e4:	4605      	mov	r5, r0
 80267e6:	b911      	cbnz	r1, 80267ee <sbrk_aligned+0x12>
 80267e8:	f000 fb7a 	bl	8026ee0 <_sbrk_r>
 80267ec:	6030      	str	r0, [r6, #0]
 80267ee:	4621      	mov	r1, r4
 80267f0:	4628      	mov	r0, r5
 80267f2:	f000 fb75 	bl	8026ee0 <_sbrk_r>
 80267f6:	1c43      	adds	r3, r0, #1
 80267f8:	d00a      	beq.n	8026810 <sbrk_aligned+0x34>
 80267fa:	1cc4      	adds	r4, r0, #3
 80267fc:	f024 0403 	bic.w	r4, r4, #3
 8026800:	42a0      	cmp	r0, r4
 8026802:	d007      	beq.n	8026814 <sbrk_aligned+0x38>
 8026804:	1a21      	subs	r1, r4, r0
 8026806:	4628      	mov	r0, r5
 8026808:	f000 fb6a 	bl	8026ee0 <_sbrk_r>
 802680c:	3001      	adds	r0, #1
 802680e:	d101      	bne.n	8026814 <sbrk_aligned+0x38>
 8026810:	f04f 34ff 	mov.w	r4, #4294967295
 8026814:	4620      	mov	r0, r4
 8026816:	bd70      	pop	{r4, r5, r6, pc}
 8026818:	2000f874 	.word	0x2000f874

0802681c <_malloc_r>:
 802681c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026820:	1ccd      	adds	r5, r1, #3
 8026822:	f025 0503 	bic.w	r5, r5, #3
 8026826:	3508      	adds	r5, #8
 8026828:	2d0c      	cmp	r5, #12
 802682a:	bf38      	it	cc
 802682c:	250c      	movcc	r5, #12
 802682e:	2d00      	cmp	r5, #0
 8026830:	4607      	mov	r7, r0
 8026832:	db01      	blt.n	8026838 <_malloc_r+0x1c>
 8026834:	42a9      	cmp	r1, r5
 8026836:	d905      	bls.n	8026844 <_malloc_r+0x28>
 8026838:	230c      	movs	r3, #12
 802683a:	603b      	str	r3, [r7, #0]
 802683c:	2600      	movs	r6, #0
 802683e:	4630      	mov	r0, r6
 8026840:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026844:	4e2e      	ldr	r6, [pc, #184]	; (8026900 <_malloc_r+0xe4>)
 8026846:	f000 fef5 	bl	8027634 <__malloc_lock>
 802684a:	6833      	ldr	r3, [r6, #0]
 802684c:	461c      	mov	r4, r3
 802684e:	bb34      	cbnz	r4, 802689e <_malloc_r+0x82>
 8026850:	4629      	mov	r1, r5
 8026852:	4638      	mov	r0, r7
 8026854:	f7ff ffc2 	bl	80267dc <sbrk_aligned>
 8026858:	1c43      	adds	r3, r0, #1
 802685a:	4604      	mov	r4, r0
 802685c:	d14d      	bne.n	80268fa <_malloc_r+0xde>
 802685e:	6834      	ldr	r4, [r6, #0]
 8026860:	4626      	mov	r6, r4
 8026862:	2e00      	cmp	r6, #0
 8026864:	d140      	bne.n	80268e8 <_malloc_r+0xcc>
 8026866:	6823      	ldr	r3, [r4, #0]
 8026868:	4631      	mov	r1, r6
 802686a:	4638      	mov	r0, r7
 802686c:	eb04 0803 	add.w	r8, r4, r3
 8026870:	f000 fb36 	bl	8026ee0 <_sbrk_r>
 8026874:	4580      	cmp	r8, r0
 8026876:	d13a      	bne.n	80268ee <_malloc_r+0xd2>
 8026878:	6821      	ldr	r1, [r4, #0]
 802687a:	3503      	adds	r5, #3
 802687c:	1a6d      	subs	r5, r5, r1
 802687e:	f025 0503 	bic.w	r5, r5, #3
 8026882:	3508      	adds	r5, #8
 8026884:	2d0c      	cmp	r5, #12
 8026886:	bf38      	it	cc
 8026888:	250c      	movcc	r5, #12
 802688a:	4629      	mov	r1, r5
 802688c:	4638      	mov	r0, r7
 802688e:	f7ff ffa5 	bl	80267dc <sbrk_aligned>
 8026892:	3001      	adds	r0, #1
 8026894:	d02b      	beq.n	80268ee <_malloc_r+0xd2>
 8026896:	6823      	ldr	r3, [r4, #0]
 8026898:	442b      	add	r3, r5
 802689a:	6023      	str	r3, [r4, #0]
 802689c:	e00e      	b.n	80268bc <_malloc_r+0xa0>
 802689e:	6822      	ldr	r2, [r4, #0]
 80268a0:	1b52      	subs	r2, r2, r5
 80268a2:	d41e      	bmi.n	80268e2 <_malloc_r+0xc6>
 80268a4:	2a0b      	cmp	r2, #11
 80268a6:	d916      	bls.n	80268d6 <_malloc_r+0xba>
 80268a8:	1961      	adds	r1, r4, r5
 80268aa:	42a3      	cmp	r3, r4
 80268ac:	6025      	str	r5, [r4, #0]
 80268ae:	bf18      	it	ne
 80268b0:	6059      	strne	r1, [r3, #4]
 80268b2:	6863      	ldr	r3, [r4, #4]
 80268b4:	bf08      	it	eq
 80268b6:	6031      	streq	r1, [r6, #0]
 80268b8:	5162      	str	r2, [r4, r5]
 80268ba:	604b      	str	r3, [r1, #4]
 80268bc:	4638      	mov	r0, r7
 80268be:	f104 060b 	add.w	r6, r4, #11
 80268c2:	f000 febd 	bl	8027640 <__malloc_unlock>
 80268c6:	f026 0607 	bic.w	r6, r6, #7
 80268ca:	1d23      	adds	r3, r4, #4
 80268cc:	1af2      	subs	r2, r6, r3
 80268ce:	d0b6      	beq.n	802683e <_malloc_r+0x22>
 80268d0:	1b9b      	subs	r3, r3, r6
 80268d2:	50a3      	str	r3, [r4, r2]
 80268d4:	e7b3      	b.n	802683e <_malloc_r+0x22>
 80268d6:	6862      	ldr	r2, [r4, #4]
 80268d8:	42a3      	cmp	r3, r4
 80268da:	bf0c      	ite	eq
 80268dc:	6032      	streq	r2, [r6, #0]
 80268de:	605a      	strne	r2, [r3, #4]
 80268e0:	e7ec      	b.n	80268bc <_malloc_r+0xa0>
 80268e2:	4623      	mov	r3, r4
 80268e4:	6864      	ldr	r4, [r4, #4]
 80268e6:	e7b2      	b.n	802684e <_malloc_r+0x32>
 80268e8:	4634      	mov	r4, r6
 80268ea:	6876      	ldr	r6, [r6, #4]
 80268ec:	e7b9      	b.n	8026862 <_malloc_r+0x46>
 80268ee:	230c      	movs	r3, #12
 80268f0:	603b      	str	r3, [r7, #0]
 80268f2:	4638      	mov	r0, r7
 80268f4:	f000 fea4 	bl	8027640 <__malloc_unlock>
 80268f8:	e7a1      	b.n	802683e <_malloc_r+0x22>
 80268fa:	6025      	str	r5, [r4, #0]
 80268fc:	e7de      	b.n	80268bc <_malloc_r+0xa0>
 80268fe:	bf00      	nop
 8026900:	2000f870 	.word	0x2000f870

08026904 <__sfputc_r>:
 8026904:	6893      	ldr	r3, [r2, #8]
 8026906:	3b01      	subs	r3, #1
 8026908:	2b00      	cmp	r3, #0
 802690a:	b410      	push	{r4}
 802690c:	6093      	str	r3, [r2, #8]
 802690e:	da08      	bge.n	8026922 <__sfputc_r+0x1e>
 8026910:	6994      	ldr	r4, [r2, #24]
 8026912:	42a3      	cmp	r3, r4
 8026914:	db01      	blt.n	802691a <__sfputc_r+0x16>
 8026916:	290a      	cmp	r1, #10
 8026918:	d103      	bne.n	8026922 <__sfputc_r+0x1e>
 802691a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802691e:	f000 bb47 	b.w	8026fb0 <__swbuf_r>
 8026922:	6813      	ldr	r3, [r2, #0]
 8026924:	1c58      	adds	r0, r3, #1
 8026926:	6010      	str	r0, [r2, #0]
 8026928:	7019      	strb	r1, [r3, #0]
 802692a:	4608      	mov	r0, r1
 802692c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026930:	4770      	bx	lr

08026932 <__sfputs_r>:
 8026932:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026934:	4606      	mov	r6, r0
 8026936:	460f      	mov	r7, r1
 8026938:	4614      	mov	r4, r2
 802693a:	18d5      	adds	r5, r2, r3
 802693c:	42ac      	cmp	r4, r5
 802693e:	d101      	bne.n	8026944 <__sfputs_r+0x12>
 8026940:	2000      	movs	r0, #0
 8026942:	e007      	b.n	8026954 <__sfputs_r+0x22>
 8026944:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026948:	463a      	mov	r2, r7
 802694a:	4630      	mov	r0, r6
 802694c:	f7ff ffda 	bl	8026904 <__sfputc_r>
 8026950:	1c43      	adds	r3, r0, #1
 8026952:	d1f3      	bne.n	802693c <__sfputs_r+0xa>
 8026954:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08026958 <_vfiprintf_r>:
 8026958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802695c:	460d      	mov	r5, r1
 802695e:	b09d      	sub	sp, #116	; 0x74
 8026960:	4614      	mov	r4, r2
 8026962:	4698      	mov	r8, r3
 8026964:	4606      	mov	r6, r0
 8026966:	b118      	cbz	r0, 8026970 <_vfiprintf_r+0x18>
 8026968:	6983      	ldr	r3, [r0, #24]
 802696a:	b90b      	cbnz	r3, 8026970 <_vfiprintf_r+0x18>
 802696c:	f000 fd5c 	bl	8027428 <__sinit>
 8026970:	4b89      	ldr	r3, [pc, #548]	; (8026b98 <_vfiprintf_r+0x240>)
 8026972:	429d      	cmp	r5, r3
 8026974:	d11b      	bne.n	80269ae <_vfiprintf_r+0x56>
 8026976:	6875      	ldr	r5, [r6, #4]
 8026978:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802697a:	07d9      	lsls	r1, r3, #31
 802697c:	d405      	bmi.n	802698a <_vfiprintf_r+0x32>
 802697e:	89ab      	ldrh	r3, [r5, #12]
 8026980:	059a      	lsls	r2, r3, #22
 8026982:	d402      	bmi.n	802698a <_vfiprintf_r+0x32>
 8026984:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8026986:	f000 fded 	bl	8027564 <__retarget_lock_acquire_recursive>
 802698a:	89ab      	ldrh	r3, [r5, #12]
 802698c:	071b      	lsls	r3, r3, #28
 802698e:	d501      	bpl.n	8026994 <_vfiprintf_r+0x3c>
 8026990:	692b      	ldr	r3, [r5, #16]
 8026992:	b9eb      	cbnz	r3, 80269d0 <_vfiprintf_r+0x78>
 8026994:	4629      	mov	r1, r5
 8026996:	4630      	mov	r0, r6
 8026998:	f000 fb5c 	bl	8027054 <__swsetup_r>
 802699c:	b1c0      	cbz	r0, 80269d0 <_vfiprintf_r+0x78>
 802699e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80269a0:	07dc      	lsls	r4, r3, #31
 80269a2:	d50e      	bpl.n	80269c2 <_vfiprintf_r+0x6a>
 80269a4:	f04f 30ff 	mov.w	r0, #4294967295
 80269a8:	b01d      	add	sp, #116	; 0x74
 80269aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80269ae:	4b7b      	ldr	r3, [pc, #492]	; (8026b9c <_vfiprintf_r+0x244>)
 80269b0:	429d      	cmp	r5, r3
 80269b2:	d101      	bne.n	80269b8 <_vfiprintf_r+0x60>
 80269b4:	68b5      	ldr	r5, [r6, #8]
 80269b6:	e7df      	b.n	8026978 <_vfiprintf_r+0x20>
 80269b8:	4b79      	ldr	r3, [pc, #484]	; (8026ba0 <_vfiprintf_r+0x248>)
 80269ba:	429d      	cmp	r5, r3
 80269bc:	bf08      	it	eq
 80269be:	68f5      	ldreq	r5, [r6, #12]
 80269c0:	e7da      	b.n	8026978 <_vfiprintf_r+0x20>
 80269c2:	89ab      	ldrh	r3, [r5, #12]
 80269c4:	0598      	lsls	r0, r3, #22
 80269c6:	d4ed      	bmi.n	80269a4 <_vfiprintf_r+0x4c>
 80269c8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80269ca:	f000 fdcd 	bl	8027568 <__retarget_lock_release_recursive>
 80269ce:	e7e9      	b.n	80269a4 <_vfiprintf_r+0x4c>
 80269d0:	2300      	movs	r3, #0
 80269d2:	9309      	str	r3, [sp, #36]	; 0x24
 80269d4:	2320      	movs	r3, #32
 80269d6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80269da:	f8cd 800c 	str.w	r8, [sp, #12]
 80269de:	2330      	movs	r3, #48	; 0x30
 80269e0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8026ba4 <_vfiprintf_r+0x24c>
 80269e4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80269e8:	f04f 0901 	mov.w	r9, #1
 80269ec:	4623      	mov	r3, r4
 80269ee:	469a      	mov	sl, r3
 80269f0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80269f4:	b10a      	cbz	r2, 80269fa <_vfiprintf_r+0xa2>
 80269f6:	2a25      	cmp	r2, #37	; 0x25
 80269f8:	d1f9      	bne.n	80269ee <_vfiprintf_r+0x96>
 80269fa:	ebba 0b04 	subs.w	fp, sl, r4
 80269fe:	d00b      	beq.n	8026a18 <_vfiprintf_r+0xc0>
 8026a00:	465b      	mov	r3, fp
 8026a02:	4622      	mov	r2, r4
 8026a04:	4629      	mov	r1, r5
 8026a06:	4630      	mov	r0, r6
 8026a08:	f7ff ff93 	bl	8026932 <__sfputs_r>
 8026a0c:	3001      	adds	r0, #1
 8026a0e:	f000 80aa 	beq.w	8026b66 <_vfiprintf_r+0x20e>
 8026a12:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026a14:	445a      	add	r2, fp
 8026a16:	9209      	str	r2, [sp, #36]	; 0x24
 8026a18:	f89a 3000 	ldrb.w	r3, [sl]
 8026a1c:	2b00      	cmp	r3, #0
 8026a1e:	f000 80a2 	beq.w	8026b66 <_vfiprintf_r+0x20e>
 8026a22:	2300      	movs	r3, #0
 8026a24:	f04f 32ff 	mov.w	r2, #4294967295
 8026a28:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8026a2c:	f10a 0a01 	add.w	sl, sl, #1
 8026a30:	9304      	str	r3, [sp, #16]
 8026a32:	9307      	str	r3, [sp, #28]
 8026a34:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8026a38:	931a      	str	r3, [sp, #104]	; 0x68
 8026a3a:	4654      	mov	r4, sl
 8026a3c:	2205      	movs	r2, #5
 8026a3e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026a42:	4858      	ldr	r0, [pc, #352]	; (8026ba4 <_vfiprintf_r+0x24c>)
 8026a44:	f7d9 fbdc 	bl	8000200 <memchr>
 8026a48:	9a04      	ldr	r2, [sp, #16]
 8026a4a:	b9d8      	cbnz	r0, 8026a84 <_vfiprintf_r+0x12c>
 8026a4c:	06d1      	lsls	r1, r2, #27
 8026a4e:	bf44      	itt	mi
 8026a50:	2320      	movmi	r3, #32
 8026a52:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8026a56:	0713      	lsls	r3, r2, #28
 8026a58:	bf44      	itt	mi
 8026a5a:	232b      	movmi	r3, #43	; 0x2b
 8026a5c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8026a60:	f89a 3000 	ldrb.w	r3, [sl]
 8026a64:	2b2a      	cmp	r3, #42	; 0x2a
 8026a66:	d015      	beq.n	8026a94 <_vfiprintf_r+0x13c>
 8026a68:	9a07      	ldr	r2, [sp, #28]
 8026a6a:	4654      	mov	r4, sl
 8026a6c:	2000      	movs	r0, #0
 8026a6e:	f04f 0c0a 	mov.w	ip, #10
 8026a72:	4621      	mov	r1, r4
 8026a74:	f811 3b01 	ldrb.w	r3, [r1], #1
 8026a78:	3b30      	subs	r3, #48	; 0x30
 8026a7a:	2b09      	cmp	r3, #9
 8026a7c:	d94e      	bls.n	8026b1c <_vfiprintf_r+0x1c4>
 8026a7e:	b1b0      	cbz	r0, 8026aae <_vfiprintf_r+0x156>
 8026a80:	9207      	str	r2, [sp, #28]
 8026a82:	e014      	b.n	8026aae <_vfiprintf_r+0x156>
 8026a84:	eba0 0308 	sub.w	r3, r0, r8
 8026a88:	fa09 f303 	lsl.w	r3, r9, r3
 8026a8c:	4313      	orrs	r3, r2
 8026a8e:	9304      	str	r3, [sp, #16]
 8026a90:	46a2      	mov	sl, r4
 8026a92:	e7d2      	b.n	8026a3a <_vfiprintf_r+0xe2>
 8026a94:	9b03      	ldr	r3, [sp, #12]
 8026a96:	1d19      	adds	r1, r3, #4
 8026a98:	681b      	ldr	r3, [r3, #0]
 8026a9a:	9103      	str	r1, [sp, #12]
 8026a9c:	2b00      	cmp	r3, #0
 8026a9e:	bfbb      	ittet	lt
 8026aa0:	425b      	neglt	r3, r3
 8026aa2:	f042 0202 	orrlt.w	r2, r2, #2
 8026aa6:	9307      	strge	r3, [sp, #28]
 8026aa8:	9307      	strlt	r3, [sp, #28]
 8026aaa:	bfb8      	it	lt
 8026aac:	9204      	strlt	r2, [sp, #16]
 8026aae:	7823      	ldrb	r3, [r4, #0]
 8026ab0:	2b2e      	cmp	r3, #46	; 0x2e
 8026ab2:	d10c      	bne.n	8026ace <_vfiprintf_r+0x176>
 8026ab4:	7863      	ldrb	r3, [r4, #1]
 8026ab6:	2b2a      	cmp	r3, #42	; 0x2a
 8026ab8:	d135      	bne.n	8026b26 <_vfiprintf_r+0x1ce>
 8026aba:	9b03      	ldr	r3, [sp, #12]
 8026abc:	1d1a      	adds	r2, r3, #4
 8026abe:	681b      	ldr	r3, [r3, #0]
 8026ac0:	9203      	str	r2, [sp, #12]
 8026ac2:	2b00      	cmp	r3, #0
 8026ac4:	bfb8      	it	lt
 8026ac6:	f04f 33ff 	movlt.w	r3, #4294967295
 8026aca:	3402      	adds	r4, #2
 8026acc:	9305      	str	r3, [sp, #20]
 8026ace:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8026bb4 <_vfiprintf_r+0x25c>
 8026ad2:	7821      	ldrb	r1, [r4, #0]
 8026ad4:	2203      	movs	r2, #3
 8026ad6:	4650      	mov	r0, sl
 8026ad8:	f7d9 fb92 	bl	8000200 <memchr>
 8026adc:	b140      	cbz	r0, 8026af0 <_vfiprintf_r+0x198>
 8026ade:	2340      	movs	r3, #64	; 0x40
 8026ae0:	eba0 000a 	sub.w	r0, r0, sl
 8026ae4:	fa03 f000 	lsl.w	r0, r3, r0
 8026ae8:	9b04      	ldr	r3, [sp, #16]
 8026aea:	4303      	orrs	r3, r0
 8026aec:	3401      	adds	r4, #1
 8026aee:	9304      	str	r3, [sp, #16]
 8026af0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026af4:	482c      	ldr	r0, [pc, #176]	; (8026ba8 <_vfiprintf_r+0x250>)
 8026af6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8026afa:	2206      	movs	r2, #6
 8026afc:	f7d9 fb80 	bl	8000200 <memchr>
 8026b00:	2800      	cmp	r0, #0
 8026b02:	d03f      	beq.n	8026b84 <_vfiprintf_r+0x22c>
 8026b04:	4b29      	ldr	r3, [pc, #164]	; (8026bac <_vfiprintf_r+0x254>)
 8026b06:	bb1b      	cbnz	r3, 8026b50 <_vfiprintf_r+0x1f8>
 8026b08:	9b03      	ldr	r3, [sp, #12]
 8026b0a:	3307      	adds	r3, #7
 8026b0c:	f023 0307 	bic.w	r3, r3, #7
 8026b10:	3308      	adds	r3, #8
 8026b12:	9303      	str	r3, [sp, #12]
 8026b14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026b16:	443b      	add	r3, r7
 8026b18:	9309      	str	r3, [sp, #36]	; 0x24
 8026b1a:	e767      	b.n	80269ec <_vfiprintf_r+0x94>
 8026b1c:	fb0c 3202 	mla	r2, ip, r2, r3
 8026b20:	460c      	mov	r4, r1
 8026b22:	2001      	movs	r0, #1
 8026b24:	e7a5      	b.n	8026a72 <_vfiprintf_r+0x11a>
 8026b26:	2300      	movs	r3, #0
 8026b28:	3401      	adds	r4, #1
 8026b2a:	9305      	str	r3, [sp, #20]
 8026b2c:	4619      	mov	r1, r3
 8026b2e:	f04f 0c0a 	mov.w	ip, #10
 8026b32:	4620      	mov	r0, r4
 8026b34:	f810 2b01 	ldrb.w	r2, [r0], #1
 8026b38:	3a30      	subs	r2, #48	; 0x30
 8026b3a:	2a09      	cmp	r2, #9
 8026b3c:	d903      	bls.n	8026b46 <_vfiprintf_r+0x1ee>
 8026b3e:	2b00      	cmp	r3, #0
 8026b40:	d0c5      	beq.n	8026ace <_vfiprintf_r+0x176>
 8026b42:	9105      	str	r1, [sp, #20]
 8026b44:	e7c3      	b.n	8026ace <_vfiprintf_r+0x176>
 8026b46:	fb0c 2101 	mla	r1, ip, r1, r2
 8026b4a:	4604      	mov	r4, r0
 8026b4c:	2301      	movs	r3, #1
 8026b4e:	e7f0      	b.n	8026b32 <_vfiprintf_r+0x1da>
 8026b50:	ab03      	add	r3, sp, #12
 8026b52:	9300      	str	r3, [sp, #0]
 8026b54:	462a      	mov	r2, r5
 8026b56:	4b16      	ldr	r3, [pc, #88]	; (8026bb0 <_vfiprintf_r+0x258>)
 8026b58:	a904      	add	r1, sp, #16
 8026b5a:	4630      	mov	r0, r6
 8026b5c:	f3af 8000 	nop.w
 8026b60:	4607      	mov	r7, r0
 8026b62:	1c78      	adds	r0, r7, #1
 8026b64:	d1d6      	bne.n	8026b14 <_vfiprintf_r+0x1bc>
 8026b66:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8026b68:	07d9      	lsls	r1, r3, #31
 8026b6a:	d405      	bmi.n	8026b78 <_vfiprintf_r+0x220>
 8026b6c:	89ab      	ldrh	r3, [r5, #12]
 8026b6e:	059a      	lsls	r2, r3, #22
 8026b70:	d402      	bmi.n	8026b78 <_vfiprintf_r+0x220>
 8026b72:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8026b74:	f000 fcf8 	bl	8027568 <__retarget_lock_release_recursive>
 8026b78:	89ab      	ldrh	r3, [r5, #12]
 8026b7a:	065b      	lsls	r3, r3, #25
 8026b7c:	f53f af12 	bmi.w	80269a4 <_vfiprintf_r+0x4c>
 8026b80:	9809      	ldr	r0, [sp, #36]	; 0x24
 8026b82:	e711      	b.n	80269a8 <_vfiprintf_r+0x50>
 8026b84:	ab03      	add	r3, sp, #12
 8026b86:	9300      	str	r3, [sp, #0]
 8026b88:	462a      	mov	r2, r5
 8026b8a:	4b09      	ldr	r3, [pc, #36]	; (8026bb0 <_vfiprintf_r+0x258>)
 8026b8c:	a904      	add	r1, sp, #16
 8026b8e:	4630      	mov	r0, r6
 8026b90:	f000 f880 	bl	8026c94 <_printf_i>
 8026b94:	e7e4      	b.n	8026b60 <_vfiprintf_r+0x208>
 8026b96:	bf00      	nop
 8026b98:	0802aac8 	.word	0x0802aac8
 8026b9c:	0802aae8 	.word	0x0802aae8
 8026ba0:	0802aaa8 	.word	0x0802aaa8
 8026ba4:	0802aa70 	.word	0x0802aa70
 8026ba8:	0802aa7a 	.word	0x0802aa7a
 8026bac:	00000000 	.word	0x00000000
 8026bb0:	08026933 	.word	0x08026933
 8026bb4:	0802aa76 	.word	0x0802aa76

08026bb8 <_printf_common>:
 8026bb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026bbc:	4616      	mov	r6, r2
 8026bbe:	4699      	mov	r9, r3
 8026bc0:	688a      	ldr	r2, [r1, #8]
 8026bc2:	690b      	ldr	r3, [r1, #16]
 8026bc4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8026bc8:	4293      	cmp	r3, r2
 8026bca:	bfb8      	it	lt
 8026bcc:	4613      	movlt	r3, r2
 8026bce:	6033      	str	r3, [r6, #0]
 8026bd0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8026bd4:	4607      	mov	r7, r0
 8026bd6:	460c      	mov	r4, r1
 8026bd8:	b10a      	cbz	r2, 8026bde <_printf_common+0x26>
 8026bda:	3301      	adds	r3, #1
 8026bdc:	6033      	str	r3, [r6, #0]
 8026bde:	6823      	ldr	r3, [r4, #0]
 8026be0:	0699      	lsls	r1, r3, #26
 8026be2:	bf42      	ittt	mi
 8026be4:	6833      	ldrmi	r3, [r6, #0]
 8026be6:	3302      	addmi	r3, #2
 8026be8:	6033      	strmi	r3, [r6, #0]
 8026bea:	6825      	ldr	r5, [r4, #0]
 8026bec:	f015 0506 	ands.w	r5, r5, #6
 8026bf0:	d106      	bne.n	8026c00 <_printf_common+0x48>
 8026bf2:	f104 0a19 	add.w	sl, r4, #25
 8026bf6:	68e3      	ldr	r3, [r4, #12]
 8026bf8:	6832      	ldr	r2, [r6, #0]
 8026bfa:	1a9b      	subs	r3, r3, r2
 8026bfc:	42ab      	cmp	r3, r5
 8026bfe:	dc26      	bgt.n	8026c4e <_printf_common+0x96>
 8026c00:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8026c04:	1e13      	subs	r3, r2, #0
 8026c06:	6822      	ldr	r2, [r4, #0]
 8026c08:	bf18      	it	ne
 8026c0a:	2301      	movne	r3, #1
 8026c0c:	0692      	lsls	r2, r2, #26
 8026c0e:	d42b      	bmi.n	8026c68 <_printf_common+0xb0>
 8026c10:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8026c14:	4649      	mov	r1, r9
 8026c16:	4638      	mov	r0, r7
 8026c18:	47c0      	blx	r8
 8026c1a:	3001      	adds	r0, #1
 8026c1c:	d01e      	beq.n	8026c5c <_printf_common+0xa4>
 8026c1e:	6823      	ldr	r3, [r4, #0]
 8026c20:	68e5      	ldr	r5, [r4, #12]
 8026c22:	6832      	ldr	r2, [r6, #0]
 8026c24:	f003 0306 	and.w	r3, r3, #6
 8026c28:	2b04      	cmp	r3, #4
 8026c2a:	bf08      	it	eq
 8026c2c:	1aad      	subeq	r5, r5, r2
 8026c2e:	68a3      	ldr	r3, [r4, #8]
 8026c30:	6922      	ldr	r2, [r4, #16]
 8026c32:	bf0c      	ite	eq
 8026c34:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8026c38:	2500      	movne	r5, #0
 8026c3a:	4293      	cmp	r3, r2
 8026c3c:	bfc4      	itt	gt
 8026c3e:	1a9b      	subgt	r3, r3, r2
 8026c40:	18ed      	addgt	r5, r5, r3
 8026c42:	2600      	movs	r6, #0
 8026c44:	341a      	adds	r4, #26
 8026c46:	42b5      	cmp	r5, r6
 8026c48:	d11a      	bne.n	8026c80 <_printf_common+0xc8>
 8026c4a:	2000      	movs	r0, #0
 8026c4c:	e008      	b.n	8026c60 <_printf_common+0xa8>
 8026c4e:	2301      	movs	r3, #1
 8026c50:	4652      	mov	r2, sl
 8026c52:	4649      	mov	r1, r9
 8026c54:	4638      	mov	r0, r7
 8026c56:	47c0      	blx	r8
 8026c58:	3001      	adds	r0, #1
 8026c5a:	d103      	bne.n	8026c64 <_printf_common+0xac>
 8026c5c:	f04f 30ff 	mov.w	r0, #4294967295
 8026c60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026c64:	3501      	adds	r5, #1
 8026c66:	e7c6      	b.n	8026bf6 <_printf_common+0x3e>
 8026c68:	18e1      	adds	r1, r4, r3
 8026c6a:	1c5a      	adds	r2, r3, #1
 8026c6c:	2030      	movs	r0, #48	; 0x30
 8026c6e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8026c72:	4422      	add	r2, r4
 8026c74:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8026c78:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8026c7c:	3302      	adds	r3, #2
 8026c7e:	e7c7      	b.n	8026c10 <_printf_common+0x58>
 8026c80:	2301      	movs	r3, #1
 8026c82:	4622      	mov	r2, r4
 8026c84:	4649      	mov	r1, r9
 8026c86:	4638      	mov	r0, r7
 8026c88:	47c0      	blx	r8
 8026c8a:	3001      	adds	r0, #1
 8026c8c:	d0e6      	beq.n	8026c5c <_printf_common+0xa4>
 8026c8e:	3601      	adds	r6, #1
 8026c90:	e7d9      	b.n	8026c46 <_printf_common+0x8e>
	...

08026c94 <_printf_i>:
 8026c94:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8026c98:	7e0f      	ldrb	r7, [r1, #24]
 8026c9a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8026c9c:	2f78      	cmp	r7, #120	; 0x78
 8026c9e:	4691      	mov	r9, r2
 8026ca0:	4680      	mov	r8, r0
 8026ca2:	460c      	mov	r4, r1
 8026ca4:	469a      	mov	sl, r3
 8026ca6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8026caa:	d807      	bhi.n	8026cbc <_printf_i+0x28>
 8026cac:	2f62      	cmp	r7, #98	; 0x62
 8026cae:	d80a      	bhi.n	8026cc6 <_printf_i+0x32>
 8026cb0:	2f00      	cmp	r7, #0
 8026cb2:	f000 80d8 	beq.w	8026e66 <_printf_i+0x1d2>
 8026cb6:	2f58      	cmp	r7, #88	; 0x58
 8026cb8:	f000 80a3 	beq.w	8026e02 <_printf_i+0x16e>
 8026cbc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8026cc0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8026cc4:	e03a      	b.n	8026d3c <_printf_i+0xa8>
 8026cc6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8026cca:	2b15      	cmp	r3, #21
 8026ccc:	d8f6      	bhi.n	8026cbc <_printf_i+0x28>
 8026cce:	a101      	add	r1, pc, #4	; (adr r1, 8026cd4 <_printf_i+0x40>)
 8026cd0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8026cd4:	08026d2d 	.word	0x08026d2d
 8026cd8:	08026d41 	.word	0x08026d41
 8026cdc:	08026cbd 	.word	0x08026cbd
 8026ce0:	08026cbd 	.word	0x08026cbd
 8026ce4:	08026cbd 	.word	0x08026cbd
 8026ce8:	08026cbd 	.word	0x08026cbd
 8026cec:	08026d41 	.word	0x08026d41
 8026cf0:	08026cbd 	.word	0x08026cbd
 8026cf4:	08026cbd 	.word	0x08026cbd
 8026cf8:	08026cbd 	.word	0x08026cbd
 8026cfc:	08026cbd 	.word	0x08026cbd
 8026d00:	08026e4d 	.word	0x08026e4d
 8026d04:	08026d71 	.word	0x08026d71
 8026d08:	08026e2f 	.word	0x08026e2f
 8026d0c:	08026cbd 	.word	0x08026cbd
 8026d10:	08026cbd 	.word	0x08026cbd
 8026d14:	08026e6f 	.word	0x08026e6f
 8026d18:	08026cbd 	.word	0x08026cbd
 8026d1c:	08026d71 	.word	0x08026d71
 8026d20:	08026cbd 	.word	0x08026cbd
 8026d24:	08026cbd 	.word	0x08026cbd
 8026d28:	08026e37 	.word	0x08026e37
 8026d2c:	682b      	ldr	r3, [r5, #0]
 8026d2e:	1d1a      	adds	r2, r3, #4
 8026d30:	681b      	ldr	r3, [r3, #0]
 8026d32:	602a      	str	r2, [r5, #0]
 8026d34:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8026d38:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8026d3c:	2301      	movs	r3, #1
 8026d3e:	e0a3      	b.n	8026e88 <_printf_i+0x1f4>
 8026d40:	6820      	ldr	r0, [r4, #0]
 8026d42:	6829      	ldr	r1, [r5, #0]
 8026d44:	0606      	lsls	r6, r0, #24
 8026d46:	f101 0304 	add.w	r3, r1, #4
 8026d4a:	d50a      	bpl.n	8026d62 <_printf_i+0xce>
 8026d4c:	680e      	ldr	r6, [r1, #0]
 8026d4e:	602b      	str	r3, [r5, #0]
 8026d50:	2e00      	cmp	r6, #0
 8026d52:	da03      	bge.n	8026d5c <_printf_i+0xc8>
 8026d54:	232d      	movs	r3, #45	; 0x2d
 8026d56:	4276      	negs	r6, r6
 8026d58:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026d5c:	485e      	ldr	r0, [pc, #376]	; (8026ed8 <_printf_i+0x244>)
 8026d5e:	230a      	movs	r3, #10
 8026d60:	e019      	b.n	8026d96 <_printf_i+0x102>
 8026d62:	680e      	ldr	r6, [r1, #0]
 8026d64:	602b      	str	r3, [r5, #0]
 8026d66:	f010 0f40 	tst.w	r0, #64	; 0x40
 8026d6a:	bf18      	it	ne
 8026d6c:	b236      	sxthne	r6, r6
 8026d6e:	e7ef      	b.n	8026d50 <_printf_i+0xbc>
 8026d70:	682b      	ldr	r3, [r5, #0]
 8026d72:	6820      	ldr	r0, [r4, #0]
 8026d74:	1d19      	adds	r1, r3, #4
 8026d76:	6029      	str	r1, [r5, #0]
 8026d78:	0601      	lsls	r1, r0, #24
 8026d7a:	d501      	bpl.n	8026d80 <_printf_i+0xec>
 8026d7c:	681e      	ldr	r6, [r3, #0]
 8026d7e:	e002      	b.n	8026d86 <_printf_i+0xf2>
 8026d80:	0646      	lsls	r6, r0, #25
 8026d82:	d5fb      	bpl.n	8026d7c <_printf_i+0xe8>
 8026d84:	881e      	ldrh	r6, [r3, #0]
 8026d86:	4854      	ldr	r0, [pc, #336]	; (8026ed8 <_printf_i+0x244>)
 8026d88:	2f6f      	cmp	r7, #111	; 0x6f
 8026d8a:	bf0c      	ite	eq
 8026d8c:	2308      	moveq	r3, #8
 8026d8e:	230a      	movne	r3, #10
 8026d90:	2100      	movs	r1, #0
 8026d92:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8026d96:	6865      	ldr	r5, [r4, #4]
 8026d98:	60a5      	str	r5, [r4, #8]
 8026d9a:	2d00      	cmp	r5, #0
 8026d9c:	bfa2      	ittt	ge
 8026d9e:	6821      	ldrge	r1, [r4, #0]
 8026da0:	f021 0104 	bicge.w	r1, r1, #4
 8026da4:	6021      	strge	r1, [r4, #0]
 8026da6:	b90e      	cbnz	r6, 8026dac <_printf_i+0x118>
 8026da8:	2d00      	cmp	r5, #0
 8026daa:	d04d      	beq.n	8026e48 <_printf_i+0x1b4>
 8026dac:	4615      	mov	r5, r2
 8026dae:	fbb6 f1f3 	udiv	r1, r6, r3
 8026db2:	fb03 6711 	mls	r7, r3, r1, r6
 8026db6:	5dc7      	ldrb	r7, [r0, r7]
 8026db8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8026dbc:	4637      	mov	r7, r6
 8026dbe:	42bb      	cmp	r3, r7
 8026dc0:	460e      	mov	r6, r1
 8026dc2:	d9f4      	bls.n	8026dae <_printf_i+0x11a>
 8026dc4:	2b08      	cmp	r3, #8
 8026dc6:	d10b      	bne.n	8026de0 <_printf_i+0x14c>
 8026dc8:	6823      	ldr	r3, [r4, #0]
 8026dca:	07de      	lsls	r6, r3, #31
 8026dcc:	d508      	bpl.n	8026de0 <_printf_i+0x14c>
 8026dce:	6923      	ldr	r3, [r4, #16]
 8026dd0:	6861      	ldr	r1, [r4, #4]
 8026dd2:	4299      	cmp	r1, r3
 8026dd4:	bfde      	ittt	le
 8026dd6:	2330      	movle	r3, #48	; 0x30
 8026dd8:	f805 3c01 	strble.w	r3, [r5, #-1]
 8026ddc:	f105 35ff 	addle.w	r5, r5, #4294967295
 8026de0:	1b52      	subs	r2, r2, r5
 8026de2:	6122      	str	r2, [r4, #16]
 8026de4:	f8cd a000 	str.w	sl, [sp]
 8026de8:	464b      	mov	r3, r9
 8026dea:	aa03      	add	r2, sp, #12
 8026dec:	4621      	mov	r1, r4
 8026dee:	4640      	mov	r0, r8
 8026df0:	f7ff fee2 	bl	8026bb8 <_printf_common>
 8026df4:	3001      	adds	r0, #1
 8026df6:	d14c      	bne.n	8026e92 <_printf_i+0x1fe>
 8026df8:	f04f 30ff 	mov.w	r0, #4294967295
 8026dfc:	b004      	add	sp, #16
 8026dfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026e02:	4835      	ldr	r0, [pc, #212]	; (8026ed8 <_printf_i+0x244>)
 8026e04:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8026e08:	6829      	ldr	r1, [r5, #0]
 8026e0a:	6823      	ldr	r3, [r4, #0]
 8026e0c:	f851 6b04 	ldr.w	r6, [r1], #4
 8026e10:	6029      	str	r1, [r5, #0]
 8026e12:	061d      	lsls	r5, r3, #24
 8026e14:	d514      	bpl.n	8026e40 <_printf_i+0x1ac>
 8026e16:	07df      	lsls	r7, r3, #31
 8026e18:	bf44      	itt	mi
 8026e1a:	f043 0320 	orrmi.w	r3, r3, #32
 8026e1e:	6023      	strmi	r3, [r4, #0]
 8026e20:	b91e      	cbnz	r6, 8026e2a <_printf_i+0x196>
 8026e22:	6823      	ldr	r3, [r4, #0]
 8026e24:	f023 0320 	bic.w	r3, r3, #32
 8026e28:	6023      	str	r3, [r4, #0]
 8026e2a:	2310      	movs	r3, #16
 8026e2c:	e7b0      	b.n	8026d90 <_printf_i+0xfc>
 8026e2e:	6823      	ldr	r3, [r4, #0]
 8026e30:	f043 0320 	orr.w	r3, r3, #32
 8026e34:	6023      	str	r3, [r4, #0]
 8026e36:	2378      	movs	r3, #120	; 0x78
 8026e38:	4828      	ldr	r0, [pc, #160]	; (8026edc <_printf_i+0x248>)
 8026e3a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8026e3e:	e7e3      	b.n	8026e08 <_printf_i+0x174>
 8026e40:	0659      	lsls	r1, r3, #25
 8026e42:	bf48      	it	mi
 8026e44:	b2b6      	uxthmi	r6, r6
 8026e46:	e7e6      	b.n	8026e16 <_printf_i+0x182>
 8026e48:	4615      	mov	r5, r2
 8026e4a:	e7bb      	b.n	8026dc4 <_printf_i+0x130>
 8026e4c:	682b      	ldr	r3, [r5, #0]
 8026e4e:	6826      	ldr	r6, [r4, #0]
 8026e50:	6961      	ldr	r1, [r4, #20]
 8026e52:	1d18      	adds	r0, r3, #4
 8026e54:	6028      	str	r0, [r5, #0]
 8026e56:	0635      	lsls	r5, r6, #24
 8026e58:	681b      	ldr	r3, [r3, #0]
 8026e5a:	d501      	bpl.n	8026e60 <_printf_i+0x1cc>
 8026e5c:	6019      	str	r1, [r3, #0]
 8026e5e:	e002      	b.n	8026e66 <_printf_i+0x1d2>
 8026e60:	0670      	lsls	r0, r6, #25
 8026e62:	d5fb      	bpl.n	8026e5c <_printf_i+0x1c8>
 8026e64:	8019      	strh	r1, [r3, #0]
 8026e66:	2300      	movs	r3, #0
 8026e68:	6123      	str	r3, [r4, #16]
 8026e6a:	4615      	mov	r5, r2
 8026e6c:	e7ba      	b.n	8026de4 <_printf_i+0x150>
 8026e6e:	682b      	ldr	r3, [r5, #0]
 8026e70:	1d1a      	adds	r2, r3, #4
 8026e72:	602a      	str	r2, [r5, #0]
 8026e74:	681d      	ldr	r5, [r3, #0]
 8026e76:	6862      	ldr	r2, [r4, #4]
 8026e78:	2100      	movs	r1, #0
 8026e7a:	4628      	mov	r0, r5
 8026e7c:	f7d9 f9c0 	bl	8000200 <memchr>
 8026e80:	b108      	cbz	r0, 8026e86 <_printf_i+0x1f2>
 8026e82:	1b40      	subs	r0, r0, r5
 8026e84:	6060      	str	r0, [r4, #4]
 8026e86:	6863      	ldr	r3, [r4, #4]
 8026e88:	6123      	str	r3, [r4, #16]
 8026e8a:	2300      	movs	r3, #0
 8026e8c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026e90:	e7a8      	b.n	8026de4 <_printf_i+0x150>
 8026e92:	6923      	ldr	r3, [r4, #16]
 8026e94:	462a      	mov	r2, r5
 8026e96:	4649      	mov	r1, r9
 8026e98:	4640      	mov	r0, r8
 8026e9a:	47d0      	blx	sl
 8026e9c:	3001      	adds	r0, #1
 8026e9e:	d0ab      	beq.n	8026df8 <_printf_i+0x164>
 8026ea0:	6823      	ldr	r3, [r4, #0]
 8026ea2:	079b      	lsls	r3, r3, #30
 8026ea4:	d413      	bmi.n	8026ece <_printf_i+0x23a>
 8026ea6:	68e0      	ldr	r0, [r4, #12]
 8026ea8:	9b03      	ldr	r3, [sp, #12]
 8026eaa:	4298      	cmp	r0, r3
 8026eac:	bfb8      	it	lt
 8026eae:	4618      	movlt	r0, r3
 8026eb0:	e7a4      	b.n	8026dfc <_printf_i+0x168>
 8026eb2:	2301      	movs	r3, #1
 8026eb4:	4632      	mov	r2, r6
 8026eb6:	4649      	mov	r1, r9
 8026eb8:	4640      	mov	r0, r8
 8026eba:	47d0      	blx	sl
 8026ebc:	3001      	adds	r0, #1
 8026ebe:	d09b      	beq.n	8026df8 <_printf_i+0x164>
 8026ec0:	3501      	adds	r5, #1
 8026ec2:	68e3      	ldr	r3, [r4, #12]
 8026ec4:	9903      	ldr	r1, [sp, #12]
 8026ec6:	1a5b      	subs	r3, r3, r1
 8026ec8:	42ab      	cmp	r3, r5
 8026eca:	dcf2      	bgt.n	8026eb2 <_printf_i+0x21e>
 8026ecc:	e7eb      	b.n	8026ea6 <_printf_i+0x212>
 8026ece:	2500      	movs	r5, #0
 8026ed0:	f104 0619 	add.w	r6, r4, #25
 8026ed4:	e7f5      	b.n	8026ec2 <_printf_i+0x22e>
 8026ed6:	bf00      	nop
 8026ed8:	0802aa81 	.word	0x0802aa81
 8026edc:	0802aa92 	.word	0x0802aa92

08026ee0 <_sbrk_r>:
 8026ee0:	b538      	push	{r3, r4, r5, lr}
 8026ee2:	4d06      	ldr	r5, [pc, #24]	; (8026efc <_sbrk_r+0x1c>)
 8026ee4:	2300      	movs	r3, #0
 8026ee6:	4604      	mov	r4, r0
 8026ee8:	4608      	mov	r0, r1
 8026eea:	602b      	str	r3, [r5, #0]
 8026eec:	f7db fd9c 	bl	8002a28 <_sbrk>
 8026ef0:	1c43      	adds	r3, r0, #1
 8026ef2:	d102      	bne.n	8026efa <_sbrk_r+0x1a>
 8026ef4:	682b      	ldr	r3, [r5, #0]
 8026ef6:	b103      	cbz	r3, 8026efa <_sbrk_r+0x1a>
 8026ef8:	6023      	str	r3, [r4, #0]
 8026efa:	bd38      	pop	{r3, r4, r5, pc}
 8026efc:	2000fa14 	.word	0x2000fa14

08026f00 <_raise_r>:
 8026f00:	291f      	cmp	r1, #31
 8026f02:	b538      	push	{r3, r4, r5, lr}
 8026f04:	4604      	mov	r4, r0
 8026f06:	460d      	mov	r5, r1
 8026f08:	d904      	bls.n	8026f14 <_raise_r+0x14>
 8026f0a:	2316      	movs	r3, #22
 8026f0c:	6003      	str	r3, [r0, #0]
 8026f0e:	f04f 30ff 	mov.w	r0, #4294967295
 8026f12:	bd38      	pop	{r3, r4, r5, pc}
 8026f14:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8026f16:	b112      	cbz	r2, 8026f1e <_raise_r+0x1e>
 8026f18:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8026f1c:	b94b      	cbnz	r3, 8026f32 <_raise_r+0x32>
 8026f1e:	4620      	mov	r0, r4
 8026f20:	f000 f830 	bl	8026f84 <_getpid_r>
 8026f24:	462a      	mov	r2, r5
 8026f26:	4601      	mov	r1, r0
 8026f28:	4620      	mov	r0, r4
 8026f2a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8026f2e:	f000 b817 	b.w	8026f60 <_kill_r>
 8026f32:	2b01      	cmp	r3, #1
 8026f34:	d00a      	beq.n	8026f4c <_raise_r+0x4c>
 8026f36:	1c59      	adds	r1, r3, #1
 8026f38:	d103      	bne.n	8026f42 <_raise_r+0x42>
 8026f3a:	2316      	movs	r3, #22
 8026f3c:	6003      	str	r3, [r0, #0]
 8026f3e:	2001      	movs	r0, #1
 8026f40:	e7e7      	b.n	8026f12 <_raise_r+0x12>
 8026f42:	2400      	movs	r4, #0
 8026f44:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8026f48:	4628      	mov	r0, r5
 8026f4a:	4798      	blx	r3
 8026f4c:	2000      	movs	r0, #0
 8026f4e:	e7e0      	b.n	8026f12 <_raise_r+0x12>

08026f50 <raise>:
 8026f50:	4b02      	ldr	r3, [pc, #8]	; (8026f5c <raise+0xc>)
 8026f52:	4601      	mov	r1, r0
 8026f54:	6818      	ldr	r0, [r3, #0]
 8026f56:	f7ff bfd3 	b.w	8026f00 <_raise_r>
 8026f5a:	bf00      	nop
 8026f5c:	200000e0 	.word	0x200000e0

08026f60 <_kill_r>:
 8026f60:	b538      	push	{r3, r4, r5, lr}
 8026f62:	4d07      	ldr	r5, [pc, #28]	; (8026f80 <_kill_r+0x20>)
 8026f64:	2300      	movs	r3, #0
 8026f66:	4604      	mov	r4, r0
 8026f68:	4608      	mov	r0, r1
 8026f6a:	4611      	mov	r1, r2
 8026f6c:	602b      	str	r3, [r5, #0]
 8026f6e:	f7db fd25 	bl	80029bc <_kill>
 8026f72:	1c43      	adds	r3, r0, #1
 8026f74:	d102      	bne.n	8026f7c <_kill_r+0x1c>
 8026f76:	682b      	ldr	r3, [r5, #0]
 8026f78:	b103      	cbz	r3, 8026f7c <_kill_r+0x1c>
 8026f7a:	6023      	str	r3, [r4, #0]
 8026f7c:	bd38      	pop	{r3, r4, r5, pc}
 8026f7e:	bf00      	nop
 8026f80:	2000fa14 	.word	0x2000fa14

08026f84 <_getpid_r>:
 8026f84:	f7db bd18 	b.w	80029b8 <_getpid>

08026f88 <strncpy>:
 8026f88:	b510      	push	{r4, lr}
 8026f8a:	3901      	subs	r1, #1
 8026f8c:	4603      	mov	r3, r0
 8026f8e:	b132      	cbz	r2, 8026f9e <strncpy+0x16>
 8026f90:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8026f94:	f803 4b01 	strb.w	r4, [r3], #1
 8026f98:	3a01      	subs	r2, #1
 8026f9a:	2c00      	cmp	r4, #0
 8026f9c:	d1f7      	bne.n	8026f8e <strncpy+0x6>
 8026f9e:	441a      	add	r2, r3
 8026fa0:	2100      	movs	r1, #0
 8026fa2:	4293      	cmp	r3, r2
 8026fa4:	d100      	bne.n	8026fa8 <strncpy+0x20>
 8026fa6:	bd10      	pop	{r4, pc}
 8026fa8:	f803 1b01 	strb.w	r1, [r3], #1
 8026fac:	e7f9      	b.n	8026fa2 <strncpy+0x1a>
	...

08026fb0 <__swbuf_r>:
 8026fb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026fb2:	460e      	mov	r6, r1
 8026fb4:	4614      	mov	r4, r2
 8026fb6:	4605      	mov	r5, r0
 8026fb8:	b118      	cbz	r0, 8026fc2 <__swbuf_r+0x12>
 8026fba:	6983      	ldr	r3, [r0, #24]
 8026fbc:	b90b      	cbnz	r3, 8026fc2 <__swbuf_r+0x12>
 8026fbe:	f000 fa33 	bl	8027428 <__sinit>
 8026fc2:	4b21      	ldr	r3, [pc, #132]	; (8027048 <__swbuf_r+0x98>)
 8026fc4:	429c      	cmp	r4, r3
 8026fc6:	d12b      	bne.n	8027020 <__swbuf_r+0x70>
 8026fc8:	686c      	ldr	r4, [r5, #4]
 8026fca:	69a3      	ldr	r3, [r4, #24]
 8026fcc:	60a3      	str	r3, [r4, #8]
 8026fce:	89a3      	ldrh	r3, [r4, #12]
 8026fd0:	071a      	lsls	r2, r3, #28
 8026fd2:	d52f      	bpl.n	8027034 <__swbuf_r+0x84>
 8026fd4:	6923      	ldr	r3, [r4, #16]
 8026fd6:	b36b      	cbz	r3, 8027034 <__swbuf_r+0x84>
 8026fd8:	6923      	ldr	r3, [r4, #16]
 8026fda:	6820      	ldr	r0, [r4, #0]
 8026fdc:	1ac0      	subs	r0, r0, r3
 8026fde:	6963      	ldr	r3, [r4, #20]
 8026fe0:	b2f6      	uxtb	r6, r6
 8026fe2:	4283      	cmp	r3, r0
 8026fe4:	4637      	mov	r7, r6
 8026fe6:	dc04      	bgt.n	8026ff2 <__swbuf_r+0x42>
 8026fe8:	4621      	mov	r1, r4
 8026fea:	4628      	mov	r0, r5
 8026fec:	f000 f988 	bl	8027300 <_fflush_r>
 8026ff0:	bb30      	cbnz	r0, 8027040 <__swbuf_r+0x90>
 8026ff2:	68a3      	ldr	r3, [r4, #8]
 8026ff4:	3b01      	subs	r3, #1
 8026ff6:	60a3      	str	r3, [r4, #8]
 8026ff8:	6823      	ldr	r3, [r4, #0]
 8026ffa:	1c5a      	adds	r2, r3, #1
 8026ffc:	6022      	str	r2, [r4, #0]
 8026ffe:	701e      	strb	r6, [r3, #0]
 8027000:	6963      	ldr	r3, [r4, #20]
 8027002:	3001      	adds	r0, #1
 8027004:	4283      	cmp	r3, r0
 8027006:	d004      	beq.n	8027012 <__swbuf_r+0x62>
 8027008:	89a3      	ldrh	r3, [r4, #12]
 802700a:	07db      	lsls	r3, r3, #31
 802700c:	d506      	bpl.n	802701c <__swbuf_r+0x6c>
 802700e:	2e0a      	cmp	r6, #10
 8027010:	d104      	bne.n	802701c <__swbuf_r+0x6c>
 8027012:	4621      	mov	r1, r4
 8027014:	4628      	mov	r0, r5
 8027016:	f000 f973 	bl	8027300 <_fflush_r>
 802701a:	b988      	cbnz	r0, 8027040 <__swbuf_r+0x90>
 802701c:	4638      	mov	r0, r7
 802701e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8027020:	4b0a      	ldr	r3, [pc, #40]	; (802704c <__swbuf_r+0x9c>)
 8027022:	429c      	cmp	r4, r3
 8027024:	d101      	bne.n	802702a <__swbuf_r+0x7a>
 8027026:	68ac      	ldr	r4, [r5, #8]
 8027028:	e7cf      	b.n	8026fca <__swbuf_r+0x1a>
 802702a:	4b09      	ldr	r3, [pc, #36]	; (8027050 <__swbuf_r+0xa0>)
 802702c:	429c      	cmp	r4, r3
 802702e:	bf08      	it	eq
 8027030:	68ec      	ldreq	r4, [r5, #12]
 8027032:	e7ca      	b.n	8026fca <__swbuf_r+0x1a>
 8027034:	4621      	mov	r1, r4
 8027036:	4628      	mov	r0, r5
 8027038:	f000 f80c 	bl	8027054 <__swsetup_r>
 802703c:	2800      	cmp	r0, #0
 802703e:	d0cb      	beq.n	8026fd8 <__swbuf_r+0x28>
 8027040:	f04f 37ff 	mov.w	r7, #4294967295
 8027044:	e7ea      	b.n	802701c <__swbuf_r+0x6c>
 8027046:	bf00      	nop
 8027048:	0802aac8 	.word	0x0802aac8
 802704c:	0802aae8 	.word	0x0802aae8
 8027050:	0802aaa8 	.word	0x0802aaa8

08027054 <__swsetup_r>:
 8027054:	4b32      	ldr	r3, [pc, #200]	; (8027120 <__swsetup_r+0xcc>)
 8027056:	b570      	push	{r4, r5, r6, lr}
 8027058:	681d      	ldr	r5, [r3, #0]
 802705a:	4606      	mov	r6, r0
 802705c:	460c      	mov	r4, r1
 802705e:	b125      	cbz	r5, 802706a <__swsetup_r+0x16>
 8027060:	69ab      	ldr	r3, [r5, #24]
 8027062:	b913      	cbnz	r3, 802706a <__swsetup_r+0x16>
 8027064:	4628      	mov	r0, r5
 8027066:	f000 f9df 	bl	8027428 <__sinit>
 802706a:	4b2e      	ldr	r3, [pc, #184]	; (8027124 <__swsetup_r+0xd0>)
 802706c:	429c      	cmp	r4, r3
 802706e:	d10f      	bne.n	8027090 <__swsetup_r+0x3c>
 8027070:	686c      	ldr	r4, [r5, #4]
 8027072:	89a3      	ldrh	r3, [r4, #12]
 8027074:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8027078:	0719      	lsls	r1, r3, #28
 802707a:	d42c      	bmi.n	80270d6 <__swsetup_r+0x82>
 802707c:	06dd      	lsls	r5, r3, #27
 802707e:	d411      	bmi.n	80270a4 <__swsetup_r+0x50>
 8027080:	2309      	movs	r3, #9
 8027082:	6033      	str	r3, [r6, #0]
 8027084:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8027088:	81a3      	strh	r3, [r4, #12]
 802708a:	f04f 30ff 	mov.w	r0, #4294967295
 802708e:	e03e      	b.n	802710e <__swsetup_r+0xba>
 8027090:	4b25      	ldr	r3, [pc, #148]	; (8027128 <__swsetup_r+0xd4>)
 8027092:	429c      	cmp	r4, r3
 8027094:	d101      	bne.n	802709a <__swsetup_r+0x46>
 8027096:	68ac      	ldr	r4, [r5, #8]
 8027098:	e7eb      	b.n	8027072 <__swsetup_r+0x1e>
 802709a:	4b24      	ldr	r3, [pc, #144]	; (802712c <__swsetup_r+0xd8>)
 802709c:	429c      	cmp	r4, r3
 802709e:	bf08      	it	eq
 80270a0:	68ec      	ldreq	r4, [r5, #12]
 80270a2:	e7e6      	b.n	8027072 <__swsetup_r+0x1e>
 80270a4:	0758      	lsls	r0, r3, #29
 80270a6:	d512      	bpl.n	80270ce <__swsetup_r+0x7a>
 80270a8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80270aa:	b141      	cbz	r1, 80270be <__swsetup_r+0x6a>
 80270ac:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80270b0:	4299      	cmp	r1, r3
 80270b2:	d002      	beq.n	80270ba <__swsetup_r+0x66>
 80270b4:	4630      	mov	r0, r6
 80270b6:	f7ff fb45 	bl	8026744 <_free_r>
 80270ba:	2300      	movs	r3, #0
 80270bc:	6363      	str	r3, [r4, #52]	; 0x34
 80270be:	89a3      	ldrh	r3, [r4, #12]
 80270c0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80270c4:	81a3      	strh	r3, [r4, #12]
 80270c6:	2300      	movs	r3, #0
 80270c8:	6063      	str	r3, [r4, #4]
 80270ca:	6923      	ldr	r3, [r4, #16]
 80270cc:	6023      	str	r3, [r4, #0]
 80270ce:	89a3      	ldrh	r3, [r4, #12]
 80270d0:	f043 0308 	orr.w	r3, r3, #8
 80270d4:	81a3      	strh	r3, [r4, #12]
 80270d6:	6923      	ldr	r3, [r4, #16]
 80270d8:	b94b      	cbnz	r3, 80270ee <__swsetup_r+0x9a>
 80270da:	89a3      	ldrh	r3, [r4, #12]
 80270dc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80270e0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80270e4:	d003      	beq.n	80270ee <__swsetup_r+0x9a>
 80270e6:	4621      	mov	r1, r4
 80270e8:	4630      	mov	r0, r6
 80270ea:	f000 fa63 	bl	80275b4 <__smakebuf_r>
 80270ee:	89a0      	ldrh	r0, [r4, #12]
 80270f0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80270f4:	f010 0301 	ands.w	r3, r0, #1
 80270f8:	d00a      	beq.n	8027110 <__swsetup_r+0xbc>
 80270fa:	2300      	movs	r3, #0
 80270fc:	60a3      	str	r3, [r4, #8]
 80270fe:	6963      	ldr	r3, [r4, #20]
 8027100:	425b      	negs	r3, r3
 8027102:	61a3      	str	r3, [r4, #24]
 8027104:	6923      	ldr	r3, [r4, #16]
 8027106:	b943      	cbnz	r3, 802711a <__swsetup_r+0xc6>
 8027108:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802710c:	d1ba      	bne.n	8027084 <__swsetup_r+0x30>
 802710e:	bd70      	pop	{r4, r5, r6, pc}
 8027110:	0781      	lsls	r1, r0, #30
 8027112:	bf58      	it	pl
 8027114:	6963      	ldrpl	r3, [r4, #20]
 8027116:	60a3      	str	r3, [r4, #8]
 8027118:	e7f4      	b.n	8027104 <__swsetup_r+0xb0>
 802711a:	2000      	movs	r0, #0
 802711c:	e7f7      	b.n	802710e <__swsetup_r+0xba>
 802711e:	bf00      	nop
 8027120:	200000e0 	.word	0x200000e0
 8027124:	0802aac8 	.word	0x0802aac8
 8027128:	0802aae8 	.word	0x0802aae8
 802712c:	0802aaa8 	.word	0x0802aaa8

08027130 <__register_exitproc>:
 8027130:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027134:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 80271f0 <__register_exitproc+0xc0>
 8027138:	4606      	mov	r6, r0
 802713a:	f8d8 0000 	ldr.w	r0, [r8]
 802713e:	461f      	mov	r7, r3
 8027140:	460d      	mov	r5, r1
 8027142:	4691      	mov	r9, r2
 8027144:	f000 fa0e 	bl	8027564 <__retarget_lock_acquire_recursive>
 8027148:	4b25      	ldr	r3, [pc, #148]	; (80271e0 <__register_exitproc+0xb0>)
 802714a:	681c      	ldr	r4, [r3, #0]
 802714c:	b934      	cbnz	r4, 802715c <__register_exitproc+0x2c>
 802714e:	4c25      	ldr	r4, [pc, #148]	; (80271e4 <__register_exitproc+0xb4>)
 8027150:	601c      	str	r4, [r3, #0]
 8027152:	4b25      	ldr	r3, [pc, #148]	; (80271e8 <__register_exitproc+0xb8>)
 8027154:	b113      	cbz	r3, 802715c <__register_exitproc+0x2c>
 8027156:	681b      	ldr	r3, [r3, #0]
 8027158:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802715c:	6863      	ldr	r3, [r4, #4]
 802715e:	2b1f      	cmp	r3, #31
 8027160:	dd07      	ble.n	8027172 <__register_exitproc+0x42>
 8027162:	f8d8 0000 	ldr.w	r0, [r8]
 8027166:	f000 f9ff 	bl	8027568 <__retarget_lock_release_recursive>
 802716a:	f04f 30ff 	mov.w	r0, #4294967295
 802716e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027172:	b34e      	cbz	r6, 80271c8 <__register_exitproc+0x98>
 8027174:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8027178:	b988      	cbnz	r0, 802719e <__register_exitproc+0x6e>
 802717a:	4b1c      	ldr	r3, [pc, #112]	; (80271ec <__register_exitproc+0xbc>)
 802717c:	b923      	cbnz	r3, 8027188 <__register_exitproc+0x58>
 802717e:	f8d8 0000 	ldr.w	r0, [r8]
 8027182:	f000 f9f0 	bl	8027566 <__retarget_lock_release>
 8027186:	e7f0      	b.n	802716a <__register_exitproc+0x3a>
 8027188:	f44f 7084 	mov.w	r0, #264	; 0x108
 802718c:	f7ff fab4 	bl	80266f8 <malloc>
 8027190:	2800      	cmp	r0, #0
 8027192:	d0f4      	beq.n	802717e <__register_exitproc+0x4e>
 8027194:	2300      	movs	r3, #0
 8027196:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802719a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802719e:	6863      	ldr	r3, [r4, #4]
 80271a0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80271a4:	2201      	movs	r2, #1
 80271a6:	409a      	lsls	r2, r3
 80271a8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80271ac:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80271b0:	4313      	orrs	r3, r2
 80271b2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80271b6:	2e02      	cmp	r6, #2
 80271b8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80271bc:	bf02      	ittt	eq
 80271be:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 80271c2:	4313      	orreq	r3, r2
 80271c4:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 80271c8:	6863      	ldr	r3, [r4, #4]
 80271ca:	f8d8 0000 	ldr.w	r0, [r8]
 80271ce:	1c5a      	adds	r2, r3, #1
 80271d0:	3302      	adds	r3, #2
 80271d2:	6062      	str	r2, [r4, #4]
 80271d4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80271d8:	f000 f9c6 	bl	8027568 <__retarget_lock_release_recursive>
 80271dc:	2000      	movs	r0, #0
 80271de:	e7c6      	b.n	802716e <__register_exitproc+0x3e>
 80271e0:	2000fa0c 	.word	0x2000fa0c
 80271e4:	2000f980 	.word	0x2000f980
 80271e8:	0802aaa4 	.word	0x0802aaa4
 80271ec:	080266f9 	.word	0x080266f9
 80271f0:	20000144 	.word	0x20000144

080271f4 <__sflush_r>:
 80271f4:	898a      	ldrh	r2, [r1, #12]
 80271f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80271fa:	4605      	mov	r5, r0
 80271fc:	0710      	lsls	r0, r2, #28
 80271fe:	460c      	mov	r4, r1
 8027200:	d458      	bmi.n	80272b4 <__sflush_r+0xc0>
 8027202:	684b      	ldr	r3, [r1, #4]
 8027204:	2b00      	cmp	r3, #0
 8027206:	dc05      	bgt.n	8027214 <__sflush_r+0x20>
 8027208:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802720a:	2b00      	cmp	r3, #0
 802720c:	dc02      	bgt.n	8027214 <__sflush_r+0x20>
 802720e:	2000      	movs	r0, #0
 8027210:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027214:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8027216:	2e00      	cmp	r6, #0
 8027218:	d0f9      	beq.n	802720e <__sflush_r+0x1a>
 802721a:	2300      	movs	r3, #0
 802721c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8027220:	682f      	ldr	r7, [r5, #0]
 8027222:	602b      	str	r3, [r5, #0]
 8027224:	d032      	beq.n	802728c <__sflush_r+0x98>
 8027226:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8027228:	89a3      	ldrh	r3, [r4, #12]
 802722a:	075a      	lsls	r2, r3, #29
 802722c:	d505      	bpl.n	802723a <__sflush_r+0x46>
 802722e:	6863      	ldr	r3, [r4, #4]
 8027230:	1ac0      	subs	r0, r0, r3
 8027232:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8027234:	b10b      	cbz	r3, 802723a <__sflush_r+0x46>
 8027236:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027238:	1ac0      	subs	r0, r0, r3
 802723a:	2300      	movs	r3, #0
 802723c:	4602      	mov	r2, r0
 802723e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8027240:	6a21      	ldr	r1, [r4, #32]
 8027242:	4628      	mov	r0, r5
 8027244:	47b0      	blx	r6
 8027246:	1c43      	adds	r3, r0, #1
 8027248:	89a3      	ldrh	r3, [r4, #12]
 802724a:	d106      	bne.n	802725a <__sflush_r+0x66>
 802724c:	6829      	ldr	r1, [r5, #0]
 802724e:	291d      	cmp	r1, #29
 8027250:	d82c      	bhi.n	80272ac <__sflush_r+0xb8>
 8027252:	4a2a      	ldr	r2, [pc, #168]	; (80272fc <__sflush_r+0x108>)
 8027254:	40ca      	lsrs	r2, r1
 8027256:	07d6      	lsls	r6, r2, #31
 8027258:	d528      	bpl.n	80272ac <__sflush_r+0xb8>
 802725a:	2200      	movs	r2, #0
 802725c:	6062      	str	r2, [r4, #4]
 802725e:	04d9      	lsls	r1, r3, #19
 8027260:	6922      	ldr	r2, [r4, #16]
 8027262:	6022      	str	r2, [r4, #0]
 8027264:	d504      	bpl.n	8027270 <__sflush_r+0x7c>
 8027266:	1c42      	adds	r2, r0, #1
 8027268:	d101      	bne.n	802726e <__sflush_r+0x7a>
 802726a:	682b      	ldr	r3, [r5, #0]
 802726c:	b903      	cbnz	r3, 8027270 <__sflush_r+0x7c>
 802726e:	6560      	str	r0, [r4, #84]	; 0x54
 8027270:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8027272:	602f      	str	r7, [r5, #0]
 8027274:	2900      	cmp	r1, #0
 8027276:	d0ca      	beq.n	802720e <__sflush_r+0x1a>
 8027278:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802727c:	4299      	cmp	r1, r3
 802727e:	d002      	beq.n	8027286 <__sflush_r+0x92>
 8027280:	4628      	mov	r0, r5
 8027282:	f7ff fa5f 	bl	8026744 <_free_r>
 8027286:	2000      	movs	r0, #0
 8027288:	6360      	str	r0, [r4, #52]	; 0x34
 802728a:	e7c1      	b.n	8027210 <__sflush_r+0x1c>
 802728c:	6a21      	ldr	r1, [r4, #32]
 802728e:	2301      	movs	r3, #1
 8027290:	4628      	mov	r0, r5
 8027292:	47b0      	blx	r6
 8027294:	1c41      	adds	r1, r0, #1
 8027296:	d1c7      	bne.n	8027228 <__sflush_r+0x34>
 8027298:	682b      	ldr	r3, [r5, #0]
 802729a:	2b00      	cmp	r3, #0
 802729c:	d0c4      	beq.n	8027228 <__sflush_r+0x34>
 802729e:	2b1d      	cmp	r3, #29
 80272a0:	d001      	beq.n	80272a6 <__sflush_r+0xb2>
 80272a2:	2b16      	cmp	r3, #22
 80272a4:	d101      	bne.n	80272aa <__sflush_r+0xb6>
 80272a6:	602f      	str	r7, [r5, #0]
 80272a8:	e7b1      	b.n	802720e <__sflush_r+0x1a>
 80272aa:	89a3      	ldrh	r3, [r4, #12]
 80272ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80272b0:	81a3      	strh	r3, [r4, #12]
 80272b2:	e7ad      	b.n	8027210 <__sflush_r+0x1c>
 80272b4:	690f      	ldr	r7, [r1, #16]
 80272b6:	2f00      	cmp	r7, #0
 80272b8:	d0a9      	beq.n	802720e <__sflush_r+0x1a>
 80272ba:	0793      	lsls	r3, r2, #30
 80272bc:	680e      	ldr	r6, [r1, #0]
 80272be:	bf08      	it	eq
 80272c0:	694b      	ldreq	r3, [r1, #20]
 80272c2:	600f      	str	r7, [r1, #0]
 80272c4:	bf18      	it	ne
 80272c6:	2300      	movne	r3, #0
 80272c8:	eba6 0807 	sub.w	r8, r6, r7
 80272cc:	608b      	str	r3, [r1, #8]
 80272ce:	f1b8 0f00 	cmp.w	r8, #0
 80272d2:	dd9c      	ble.n	802720e <__sflush_r+0x1a>
 80272d4:	6a21      	ldr	r1, [r4, #32]
 80272d6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80272d8:	4643      	mov	r3, r8
 80272da:	463a      	mov	r2, r7
 80272dc:	4628      	mov	r0, r5
 80272de:	47b0      	blx	r6
 80272e0:	2800      	cmp	r0, #0
 80272e2:	dc06      	bgt.n	80272f2 <__sflush_r+0xfe>
 80272e4:	89a3      	ldrh	r3, [r4, #12]
 80272e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80272ea:	81a3      	strh	r3, [r4, #12]
 80272ec:	f04f 30ff 	mov.w	r0, #4294967295
 80272f0:	e78e      	b.n	8027210 <__sflush_r+0x1c>
 80272f2:	4407      	add	r7, r0
 80272f4:	eba8 0800 	sub.w	r8, r8, r0
 80272f8:	e7e9      	b.n	80272ce <__sflush_r+0xda>
 80272fa:	bf00      	nop
 80272fc:	20400001 	.word	0x20400001

08027300 <_fflush_r>:
 8027300:	b538      	push	{r3, r4, r5, lr}
 8027302:	690b      	ldr	r3, [r1, #16]
 8027304:	4605      	mov	r5, r0
 8027306:	460c      	mov	r4, r1
 8027308:	b913      	cbnz	r3, 8027310 <_fflush_r+0x10>
 802730a:	2500      	movs	r5, #0
 802730c:	4628      	mov	r0, r5
 802730e:	bd38      	pop	{r3, r4, r5, pc}
 8027310:	b118      	cbz	r0, 802731a <_fflush_r+0x1a>
 8027312:	6983      	ldr	r3, [r0, #24]
 8027314:	b90b      	cbnz	r3, 802731a <_fflush_r+0x1a>
 8027316:	f000 f887 	bl	8027428 <__sinit>
 802731a:	4b14      	ldr	r3, [pc, #80]	; (802736c <_fflush_r+0x6c>)
 802731c:	429c      	cmp	r4, r3
 802731e:	d11b      	bne.n	8027358 <_fflush_r+0x58>
 8027320:	686c      	ldr	r4, [r5, #4]
 8027322:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8027326:	2b00      	cmp	r3, #0
 8027328:	d0ef      	beq.n	802730a <_fflush_r+0xa>
 802732a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802732c:	07d0      	lsls	r0, r2, #31
 802732e:	d404      	bmi.n	802733a <_fflush_r+0x3a>
 8027330:	0599      	lsls	r1, r3, #22
 8027332:	d402      	bmi.n	802733a <_fflush_r+0x3a>
 8027334:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8027336:	f000 f915 	bl	8027564 <__retarget_lock_acquire_recursive>
 802733a:	4628      	mov	r0, r5
 802733c:	4621      	mov	r1, r4
 802733e:	f7ff ff59 	bl	80271f4 <__sflush_r>
 8027342:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8027344:	07da      	lsls	r2, r3, #31
 8027346:	4605      	mov	r5, r0
 8027348:	d4e0      	bmi.n	802730c <_fflush_r+0xc>
 802734a:	89a3      	ldrh	r3, [r4, #12]
 802734c:	059b      	lsls	r3, r3, #22
 802734e:	d4dd      	bmi.n	802730c <_fflush_r+0xc>
 8027350:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8027352:	f000 f909 	bl	8027568 <__retarget_lock_release_recursive>
 8027356:	e7d9      	b.n	802730c <_fflush_r+0xc>
 8027358:	4b05      	ldr	r3, [pc, #20]	; (8027370 <_fflush_r+0x70>)
 802735a:	429c      	cmp	r4, r3
 802735c:	d101      	bne.n	8027362 <_fflush_r+0x62>
 802735e:	68ac      	ldr	r4, [r5, #8]
 8027360:	e7df      	b.n	8027322 <_fflush_r+0x22>
 8027362:	4b04      	ldr	r3, [pc, #16]	; (8027374 <_fflush_r+0x74>)
 8027364:	429c      	cmp	r4, r3
 8027366:	bf08      	it	eq
 8027368:	68ec      	ldreq	r4, [r5, #12]
 802736a:	e7da      	b.n	8027322 <_fflush_r+0x22>
 802736c:	0802aac8 	.word	0x0802aac8
 8027370:	0802aae8 	.word	0x0802aae8
 8027374:	0802aaa8 	.word	0x0802aaa8

08027378 <std>:
 8027378:	2300      	movs	r3, #0
 802737a:	b510      	push	{r4, lr}
 802737c:	4604      	mov	r4, r0
 802737e:	e9c0 3300 	strd	r3, r3, [r0]
 8027382:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8027386:	6083      	str	r3, [r0, #8]
 8027388:	8181      	strh	r1, [r0, #12]
 802738a:	6643      	str	r3, [r0, #100]	; 0x64
 802738c:	81c2      	strh	r2, [r0, #14]
 802738e:	6183      	str	r3, [r0, #24]
 8027390:	4619      	mov	r1, r3
 8027392:	2208      	movs	r2, #8
 8027394:	305c      	adds	r0, #92	; 0x5c
 8027396:	f7ff f9cd 	bl	8026734 <memset>
 802739a:	4b05      	ldr	r3, [pc, #20]	; (80273b0 <std+0x38>)
 802739c:	6263      	str	r3, [r4, #36]	; 0x24
 802739e:	4b05      	ldr	r3, [pc, #20]	; (80273b4 <std+0x3c>)
 80273a0:	62a3      	str	r3, [r4, #40]	; 0x28
 80273a2:	4b05      	ldr	r3, [pc, #20]	; (80273b8 <std+0x40>)
 80273a4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80273a6:	4b05      	ldr	r3, [pc, #20]	; (80273bc <std+0x44>)
 80273a8:	6224      	str	r4, [r4, #32]
 80273aa:	6323      	str	r3, [r4, #48]	; 0x30
 80273ac:	bd10      	pop	{r4, pc}
 80273ae:	bf00      	nop
 80273b0:	0802764d 	.word	0x0802764d
 80273b4:	0802766f 	.word	0x0802766f
 80273b8:	080276a7 	.word	0x080276a7
 80273bc:	080276cb 	.word	0x080276cb

080273c0 <_cleanup_r>:
 80273c0:	4901      	ldr	r1, [pc, #4]	; (80273c8 <_cleanup_r+0x8>)
 80273c2:	f000 b8af 	b.w	8027524 <_fwalk_reent>
 80273c6:	bf00      	nop
 80273c8:	08027301 	.word	0x08027301

080273cc <__sfmoreglue>:
 80273cc:	b570      	push	{r4, r5, r6, lr}
 80273ce:	2268      	movs	r2, #104	; 0x68
 80273d0:	1e4d      	subs	r5, r1, #1
 80273d2:	4355      	muls	r5, r2
 80273d4:	460e      	mov	r6, r1
 80273d6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80273da:	f7ff fa1f 	bl	802681c <_malloc_r>
 80273de:	4604      	mov	r4, r0
 80273e0:	b140      	cbz	r0, 80273f4 <__sfmoreglue+0x28>
 80273e2:	2100      	movs	r1, #0
 80273e4:	e9c0 1600 	strd	r1, r6, [r0]
 80273e8:	300c      	adds	r0, #12
 80273ea:	60a0      	str	r0, [r4, #8]
 80273ec:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80273f0:	f7ff f9a0 	bl	8026734 <memset>
 80273f4:	4620      	mov	r0, r4
 80273f6:	bd70      	pop	{r4, r5, r6, pc}

080273f8 <__sfp_lock_acquire>:
 80273f8:	4801      	ldr	r0, [pc, #4]	; (8027400 <__sfp_lock_acquire+0x8>)
 80273fa:	f000 b8b3 	b.w	8027564 <__retarget_lock_acquire_recursive>
 80273fe:	bf00      	nop
 8027400:	2000fa12 	.word	0x2000fa12

08027404 <__sfp_lock_release>:
 8027404:	4801      	ldr	r0, [pc, #4]	; (802740c <__sfp_lock_release+0x8>)
 8027406:	f000 b8af 	b.w	8027568 <__retarget_lock_release_recursive>
 802740a:	bf00      	nop
 802740c:	2000fa12 	.word	0x2000fa12

08027410 <__sinit_lock_acquire>:
 8027410:	4801      	ldr	r0, [pc, #4]	; (8027418 <__sinit_lock_acquire+0x8>)
 8027412:	f000 b8a7 	b.w	8027564 <__retarget_lock_acquire_recursive>
 8027416:	bf00      	nop
 8027418:	2000fa13 	.word	0x2000fa13

0802741c <__sinit_lock_release>:
 802741c:	4801      	ldr	r0, [pc, #4]	; (8027424 <__sinit_lock_release+0x8>)
 802741e:	f000 b8a3 	b.w	8027568 <__retarget_lock_release_recursive>
 8027422:	bf00      	nop
 8027424:	2000fa13 	.word	0x2000fa13

08027428 <__sinit>:
 8027428:	b510      	push	{r4, lr}
 802742a:	4604      	mov	r4, r0
 802742c:	f7ff fff0 	bl	8027410 <__sinit_lock_acquire>
 8027430:	69a3      	ldr	r3, [r4, #24]
 8027432:	b11b      	cbz	r3, 802743c <__sinit+0x14>
 8027434:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027438:	f7ff bff0 	b.w	802741c <__sinit_lock_release>
 802743c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8027440:	6523      	str	r3, [r4, #80]	; 0x50
 8027442:	4b13      	ldr	r3, [pc, #76]	; (8027490 <__sinit+0x68>)
 8027444:	4a13      	ldr	r2, [pc, #76]	; (8027494 <__sinit+0x6c>)
 8027446:	681b      	ldr	r3, [r3, #0]
 8027448:	62a2      	str	r2, [r4, #40]	; 0x28
 802744a:	42a3      	cmp	r3, r4
 802744c:	bf04      	itt	eq
 802744e:	2301      	moveq	r3, #1
 8027450:	61a3      	streq	r3, [r4, #24]
 8027452:	4620      	mov	r0, r4
 8027454:	f000 f820 	bl	8027498 <__sfp>
 8027458:	6060      	str	r0, [r4, #4]
 802745a:	4620      	mov	r0, r4
 802745c:	f000 f81c 	bl	8027498 <__sfp>
 8027460:	60a0      	str	r0, [r4, #8]
 8027462:	4620      	mov	r0, r4
 8027464:	f000 f818 	bl	8027498 <__sfp>
 8027468:	2200      	movs	r2, #0
 802746a:	60e0      	str	r0, [r4, #12]
 802746c:	2104      	movs	r1, #4
 802746e:	6860      	ldr	r0, [r4, #4]
 8027470:	f7ff ff82 	bl	8027378 <std>
 8027474:	68a0      	ldr	r0, [r4, #8]
 8027476:	2201      	movs	r2, #1
 8027478:	2109      	movs	r1, #9
 802747a:	f7ff ff7d 	bl	8027378 <std>
 802747e:	68e0      	ldr	r0, [r4, #12]
 8027480:	2202      	movs	r2, #2
 8027482:	2112      	movs	r1, #18
 8027484:	f7ff ff78 	bl	8027378 <std>
 8027488:	2301      	movs	r3, #1
 802748a:	61a3      	str	r3, [r4, #24]
 802748c:	e7d2      	b.n	8027434 <__sinit+0xc>
 802748e:	bf00      	nop
 8027490:	0802aa6c 	.word	0x0802aa6c
 8027494:	080273c1 	.word	0x080273c1

08027498 <__sfp>:
 8027498:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802749a:	4607      	mov	r7, r0
 802749c:	f7ff ffac 	bl	80273f8 <__sfp_lock_acquire>
 80274a0:	4b1e      	ldr	r3, [pc, #120]	; (802751c <__sfp+0x84>)
 80274a2:	681e      	ldr	r6, [r3, #0]
 80274a4:	69b3      	ldr	r3, [r6, #24]
 80274a6:	b913      	cbnz	r3, 80274ae <__sfp+0x16>
 80274a8:	4630      	mov	r0, r6
 80274aa:	f7ff ffbd 	bl	8027428 <__sinit>
 80274ae:	3648      	adds	r6, #72	; 0x48
 80274b0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80274b4:	3b01      	subs	r3, #1
 80274b6:	d503      	bpl.n	80274c0 <__sfp+0x28>
 80274b8:	6833      	ldr	r3, [r6, #0]
 80274ba:	b30b      	cbz	r3, 8027500 <__sfp+0x68>
 80274bc:	6836      	ldr	r6, [r6, #0]
 80274be:	e7f7      	b.n	80274b0 <__sfp+0x18>
 80274c0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80274c4:	b9d5      	cbnz	r5, 80274fc <__sfp+0x64>
 80274c6:	4b16      	ldr	r3, [pc, #88]	; (8027520 <__sfp+0x88>)
 80274c8:	60e3      	str	r3, [r4, #12]
 80274ca:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80274ce:	6665      	str	r5, [r4, #100]	; 0x64
 80274d0:	f000 f847 	bl	8027562 <__retarget_lock_init_recursive>
 80274d4:	f7ff ff96 	bl	8027404 <__sfp_lock_release>
 80274d8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80274dc:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80274e0:	6025      	str	r5, [r4, #0]
 80274e2:	61a5      	str	r5, [r4, #24]
 80274e4:	2208      	movs	r2, #8
 80274e6:	4629      	mov	r1, r5
 80274e8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80274ec:	f7ff f922 	bl	8026734 <memset>
 80274f0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80274f4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80274f8:	4620      	mov	r0, r4
 80274fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80274fc:	3468      	adds	r4, #104	; 0x68
 80274fe:	e7d9      	b.n	80274b4 <__sfp+0x1c>
 8027500:	2104      	movs	r1, #4
 8027502:	4638      	mov	r0, r7
 8027504:	f7ff ff62 	bl	80273cc <__sfmoreglue>
 8027508:	4604      	mov	r4, r0
 802750a:	6030      	str	r0, [r6, #0]
 802750c:	2800      	cmp	r0, #0
 802750e:	d1d5      	bne.n	80274bc <__sfp+0x24>
 8027510:	f7ff ff78 	bl	8027404 <__sfp_lock_release>
 8027514:	230c      	movs	r3, #12
 8027516:	603b      	str	r3, [r7, #0]
 8027518:	e7ee      	b.n	80274f8 <__sfp+0x60>
 802751a:	bf00      	nop
 802751c:	0802aa6c 	.word	0x0802aa6c
 8027520:	ffff0001 	.word	0xffff0001

08027524 <_fwalk_reent>:
 8027524:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027528:	4606      	mov	r6, r0
 802752a:	4688      	mov	r8, r1
 802752c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8027530:	2700      	movs	r7, #0
 8027532:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8027536:	f1b9 0901 	subs.w	r9, r9, #1
 802753a:	d505      	bpl.n	8027548 <_fwalk_reent+0x24>
 802753c:	6824      	ldr	r4, [r4, #0]
 802753e:	2c00      	cmp	r4, #0
 8027540:	d1f7      	bne.n	8027532 <_fwalk_reent+0xe>
 8027542:	4638      	mov	r0, r7
 8027544:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027548:	89ab      	ldrh	r3, [r5, #12]
 802754a:	2b01      	cmp	r3, #1
 802754c:	d907      	bls.n	802755e <_fwalk_reent+0x3a>
 802754e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8027552:	3301      	adds	r3, #1
 8027554:	d003      	beq.n	802755e <_fwalk_reent+0x3a>
 8027556:	4629      	mov	r1, r5
 8027558:	4630      	mov	r0, r6
 802755a:	47c0      	blx	r8
 802755c:	4307      	orrs	r7, r0
 802755e:	3568      	adds	r5, #104	; 0x68
 8027560:	e7e9      	b.n	8027536 <_fwalk_reent+0x12>

08027562 <__retarget_lock_init_recursive>:
 8027562:	4770      	bx	lr

08027564 <__retarget_lock_acquire_recursive>:
 8027564:	4770      	bx	lr

08027566 <__retarget_lock_release>:
 8027566:	4770      	bx	lr

08027568 <__retarget_lock_release_recursive>:
 8027568:	4770      	bx	lr

0802756a <__swhatbuf_r>:
 802756a:	b570      	push	{r4, r5, r6, lr}
 802756c:	460e      	mov	r6, r1
 802756e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027572:	2900      	cmp	r1, #0
 8027574:	b096      	sub	sp, #88	; 0x58
 8027576:	4614      	mov	r4, r2
 8027578:	461d      	mov	r5, r3
 802757a:	da08      	bge.n	802758e <__swhatbuf_r+0x24>
 802757c:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8027580:	2200      	movs	r2, #0
 8027582:	602a      	str	r2, [r5, #0]
 8027584:	061a      	lsls	r2, r3, #24
 8027586:	d410      	bmi.n	80275aa <__swhatbuf_r+0x40>
 8027588:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802758c:	e00e      	b.n	80275ac <__swhatbuf_r+0x42>
 802758e:	466a      	mov	r2, sp
 8027590:	f000 f8c2 	bl	8027718 <_fstat_r>
 8027594:	2800      	cmp	r0, #0
 8027596:	dbf1      	blt.n	802757c <__swhatbuf_r+0x12>
 8027598:	9a01      	ldr	r2, [sp, #4]
 802759a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 802759e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80275a2:	425a      	negs	r2, r3
 80275a4:	415a      	adcs	r2, r3
 80275a6:	602a      	str	r2, [r5, #0]
 80275a8:	e7ee      	b.n	8027588 <__swhatbuf_r+0x1e>
 80275aa:	2340      	movs	r3, #64	; 0x40
 80275ac:	2000      	movs	r0, #0
 80275ae:	6023      	str	r3, [r4, #0]
 80275b0:	b016      	add	sp, #88	; 0x58
 80275b2:	bd70      	pop	{r4, r5, r6, pc}

080275b4 <__smakebuf_r>:
 80275b4:	898b      	ldrh	r3, [r1, #12]
 80275b6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80275b8:	079d      	lsls	r5, r3, #30
 80275ba:	4606      	mov	r6, r0
 80275bc:	460c      	mov	r4, r1
 80275be:	d507      	bpl.n	80275d0 <__smakebuf_r+0x1c>
 80275c0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80275c4:	6023      	str	r3, [r4, #0]
 80275c6:	6123      	str	r3, [r4, #16]
 80275c8:	2301      	movs	r3, #1
 80275ca:	6163      	str	r3, [r4, #20]
 80275cc:	b002      	add	sp, #8
 80275ce:	bd70      	pop	{r4, r5, r6, pc}
 80275d0:	ab01      	add	r3, sp, #4
 80275d2:	466a      	mov	r2, sp
 80275d4:	f7ff ffc9 	bl	802756a <__swhatbuf_r>
 80275d8:	9900      	ldr	r1, [sp, #0]
 80275da:	4605      	mov	r5, r0
 80275dc:	4630      	mov	r0, r6
 80275de:	f7ff f91d 	bl	802681c <_malloc_r>
 80275e2:	b948      	cbnz	r0, 80275f8 <__smakebuf_r+0x44>
 80275e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80275e8:	059a      	lsls	r2, r3, #22
 80275ea:	d4ef      	bmi.n	80275cc <__smakebuf_r+0x18>
 80275ec:	f023 0303 	bic.w	r3, r3, #3
 80275f0:	f043 0302 	orr.w	r3, r3, #2
 80275f4:	81a3      	strh	r3, [r4, #12]
 80275f6:	e7e3      	b.n	80275c0 <__smakebuf_r+0xc>
 80275f8:	4b0d      	ldr	r3, [pc, #52]	; (8027630 <__smakebuf_r+0x7c>)
 80275fa:	62b3      	str	r3, [r6, #40]	; 0x28
 80275fc:	89a3      	ldrh	r3, [r4, #12]
 80275fe:	6020      	str	r0, [r4, #0]
 8027600:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8027604:	81a3      	strh	r3, [r4, #12]
 8027606:	9b00      	ldr	r3, [sp, #0]
 8027608:	6163      	str	r3, [r4, #20]
 802760a:	9b01      	ldr	r3, [sp, #4]
 802760c:	6120      	str	r0, [r4, #16]
 802760e:	b15b      	cbz	r3, 8027628 <__smakebuf_r+0x74>
 8027610:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8027614:	4630      	mov	r0, r6
 8027616:	f000 f891 	bl	802773c <_isatty_r>
 802761a:	b128      	cbz	r0, 8027628 <__smakebuf_r+0x74>
 802761c:	89a3      	ldrh	r3, [r4, #12]
 802761e:	f023 0303 	bic.w	r3, r3, #3
 8027622:	f043 0301 	orr.w	r3, r3, #1
 8027626:	81a3      	strh	r3, [r4, #12]
 8027628:	89a0      	ldrh	r0, [r4, #12]
 802762a:	4305      	orrs	r5, r0
 802762c:	81a5      	strh	r5, [r4, #12]
 802762e:	e7cd      	b.n	80275cc <__smakebuf_r+0x18>
 8027630:	080273c1 	.word	0x080273c1

08027634 <__malloc_lock>:
 8027634:	4801      	ldr	r0, [pc, #4]	; (802763c <__malloc_lock+0x8>)
 8027636:	f7ff bf95 	b.w	8027564 <__retarget_lock_acquire_recursive>
 802763a:	bf00      	nop
 802763c:	2000fa11 	.word	0x2000fa11

08027640 <__malloc_unlock>:
 8027640:	4801      	ldr	r0, [pc, #4]	; (8027648 <__malloc_unlock+0x8>)
 8027642:	f7ff bf91 	b.w	8027568 <__retarget_lock_release_recursive>
 8027646:	bf00      	nop
 8027648:	2000fa11 	.word	0x2000fa11

0802764c <__sread>:
 802764c:	b510      	push	{r4, lr}
 802764e:	460c      	mov	r4, r1
 8027650:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027654:	f000 f894 	bl	8027780 <_read_r>
 8027658:	2800      	cmp	r0, #0
 802765a:	bfab      	itete	ge
 802765c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802765e:	89a3      	ldrhlt	r3, [r4, #12]
 8027660:	181b      	addge	r3, r3, r0
 8027662:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8027666:	bfac      	ite	ge
 8027668:	6563      	strge	r3, [r4, #84]	; 0x54
 802766a:	81a3      	strhlt	r3, [r4, #12]
 802766c:	bd10      	pop	{r4, pc}

0802766e <__swrite>:
 802766e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027672:	461f      	mov	r7, r3
 8027674:	898b      	ldrh	r3, [r1, #12]
 8027676:	05db      	lsls	r3, r3, #23
 8027678:	4605      	mov	r5, r0
 802767a:	460c      	mov	r4, r1
 802767c:	4616      	mov	r6, r2
 802767e:	d505      	bpl.n	802768c <__swrite+0x1e>
 8027680:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027684:	2302      	movs	r3, #2
 8027686:	2200      	movs	r2, #0
 8027688:	f000 f868 	bl	802775c <_lseek_r>
 802768c:	89a3      	ldrh	r3, [r4, #12]
 802768e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8027692:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8027696:	81a3      	strh	r3, [r4, #12]
 8027698:	4632      	mov	r2, r6
 802769a:	463b      	mov	r3, r7
 802769c:	4628      	mov	r0, r5
 802769e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80276a2:	f000 b817 	b.w	80276d4 <_write_r>

080276a6 <__sseek>:
 80276a6:	b510      	push	{r4, lr}
 80276a8:	460c      	mov	r4, r1
 80276aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80276ae:	f000 f855 	bl	802775c <_lseek_r>
 80276b2:	1c43      	adds	r3, r0, #1
 80276b4:	89a3      	ldrh	r3, [r4, #12]
 80276b6:	bf15      	itete	ne
 80276b8:	6560      	strne	r0, [r4, #84]	; 0x54
 80276ba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80276be:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80276c2:	81a3      	strheq	r3, [r4, #12]
 80276c4:	bf18      	it	ne
 80276c6:	81a3      	strhne	r3, [r4, #12]
 80276c8:	bd10      	pop	{r4, pc}

080276ca <__sclose>:
 80276ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80276ce:	f000 b813 	b.w	80276f8 <_close_r>
	...

080276d4 <_write_r>:
 80276d4:	b538      	push	{r3, r4, r5, lr}
 80276d6:	4d07      	ldr	r5, [pc, #28]	; (80276f4 <_write_r+0x20>)
 80276d8:	4604      	mov	r4, r0
 80276da:	4608      	mov	r0, r1
 80276dc:	4611      	mov	r1, r2
 80276de:	2200      	movs	r2, #0
 80276e0:	602a      	str	r2, [r5, #0]
 80276e2:	461a      	mov	r2, r3
 80276e4:	f7db f986 	bl	80029f4 <_write>
 80276e8:	1c43      	adds	r3, r0, #1
 80276ea:	d102      	bne.n	80276f2 <_write_r+0x1e>
 80276ec:	682b      	ldr	r3, [r5, #0]
 80276ee:	b103      	cbz	r3, 80276f2 <_write_r+0x1e>
 80276f0:	6023      	str	r3, [r4, #0]
 80276f2:	bd38      	pop	{r3, r4, r5, pc}
 80276f4:	2000fa14 	.word	0x2000fa14

080276f8 <_close_r>:
 80276f8:	b538      	push	{r3, r4, r5, lr}
 80276fa:	4d06      	ldr	r5, [pc, #24]	; (8027714 <_close_r+0x1c>)
 80276fc:	2300      	movs	r3, #0
 80276fe:	4604      	mov	r4, r0
 8027700:	4608      	mov	r0, r1
 8027702:	602b      	str	r3, [r5, #0]
 8027704:	f7db f984 	bl	8002a10 <_close>
 8027708:	1c43      	adds	r3, r0, #1
 802770a:	d102      	bne.n	8027712 <_close_r+0x1a>
 802770c:	682b      	ldr	r3, [r5, #0]
 802770e:	b103      	cbz	r3, 8027712 <_close_r+0x1a>
 8027710:	6023      	str	r3, [r4, #0]
 8027712:	bd38      	pop	{r3, r4, r5, pc}
 8027714:	2000fa14 	.word	0x2000fa14

08027718 <_fstat_r>:
 8027718:	b538      	push	{r3, r4, r5, lr}
 802771a:	4d07      	ldr	r5, [pc, #28]	; (8027738 <_fstat_r+0x20>)
 802771c:	2300      	movs	r3, #0
 802771e:	4604      	mov	r4, r0
 8027720:	4608      	mov	r0, r1
 8027722:	4611      	mov	r1, r2
 8027724:	602b      	str	r3, [r5, #0]
 8027726:	f7db f976 	bl	8002a16 <_fstat>
 802772a:	1c43      	adds	r3, r0, #1
 802772c:	d102      	bne.n	8027734 <_fstat_r+0x1c>
 802772e:	682b      	ldr	r3, [r5, #0]
 8027730:	b103      	cbz	r3, 8027734 <_fstat_r+0x1c>
 8027732:	6023      	str	r3, [r4, #0]
 8027734:	bd38      	pop	{r3, r4, r5, pc}
 8027736:	bf00      	nop
 8027738:	2000fa14 	.word	0x2000fa14

0802773c <_isatty_r>:
 802773c:	b538      	push	{r3, r4, r5, lr}
 802773e:	4d06      	ldr	r5, [pc, #24]	; (8027758 <_isatty_r+0x1c>)
 8027740:	2300      	movs	r3, #0
 8027742:	4604      	mov	r4, r0
 8027744:	4608      	mov	r0, r1
 8027746:	602b      	str	r3, [r5, #0]
 8027748:	f7db f96a 	bl	8002a20 <_isatty>
 802774c:	1c43      	adds	r3, r0, #1
 802774e:	d102      	bne.n	8027756 <_isatty_r+0x1a>
 8027750:	682b      	ldr	r3, [r5, #0]
 8027752:	b103      	cbz	r3, 8027756 <_isatty_r+0x1a>
 8027754:	6023      	str	r3, [r4, #0]
 8027756:	bd38      	pop	{r3, r4, r5, pc}
 8027758:	2000fa14 	.word	0x2000fa14

0802775c <_lseek_r>:
 802775c:	b538      	push	{r3, r4, r5, lr}
 802775e:	4d07      	ldr	r5, [pc, #28]	; (802777c <_lseek_r+0x20>)
 8027760:	4604      	mov	r4, r0
 8027762:	4608      	mov	r0, r1
 8027764:	4611      	mov	r1, r2
 8027766:	2200      	movs	r2, #0
 8027768:	602a      	str	r2, [r5, #0]
 802776a:	461a      	mov	r2, r3
 802776c:	f7db f95a 	bl	8002a24 <_lseek>
 8027770:	1c43      	adds	r3, r0, #1
 8027772:	d102      	bne.n	802777a <_lseek_r+0x1e>
 8027774:	682b      	ldr	r3, [r5, #0]
 8027776:	b103      	cbz	r3, 802777a <_lseek_r+0x1e>
 8027778:	6023      	str	r3, [r4, #0]
 802777a:	bd38      	pop	{r3, r4, r5, pc}
 802777c:	2000fa14 	.word	0x2000fa14

08027780 <_read_r>:
 8027780:	b538      	push	{r3, r4, r5, lr}
 8027782:	4d07      	ldr	r5, [pc, #28]	; (80277a0 <_read_r+0x20>)
 8027784:	4604      	mov	r4, r0
 8027786:	4608      	mov	r0, r1
 8027788:	4611      	mov	r1, r2
 802778a:	2200      	movs	r2, #0
 802778c:	602a      	str	r2, [r5, #0]
 802778e:	461a      	mov	r2, r3
 8027790:	f7db f922 	bl	80029d8 <_read>
 8027794:	1c43      	adds	r3, r0, #1
 8027796:	d102      	bne.n	802779e <_read_r+0x1e>
 8027798:	682b      	ldr	r3, [r5, #0]
 802779a:	b103      	cbz	r3, 802779e <_read_r+0x1e>
 802779c:	6023      	str	r3, [r4, #0]
 802779e:	bd38      	pop	{r3, r4, r5, pc}
 80277a0:	2000fa14 	.word	0x2000fa14

080277a4 <_init>:
 80277a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80277a6:	bf00      	nop
 80277a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80277aa:	bc08      	pop	{r3}
 80277ac:	469e      	mov	lr, r3
 80277ae:	4770      	bx	lr

080277b0 <_fini>:
 80277b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80277b2:	bf00      	nop
 80277b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80277b6:	bc08      	pop	{r3}
 80277b8:	469e      	mov	lr, r3
 80277ba:	4770      	bx	lr
